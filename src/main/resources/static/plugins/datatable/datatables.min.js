/*
 * This combined file was created by the DataTables downloader builder:
 *   https://datatables.net/download
 *
 * To rebuild or modify this file with the latest versions of the included
 * software please visit:
 *   https://datatables.net/download/#dt/jszip-2.5.0/pdfmake-0.1.32/dt-1.10.16/af-2.2.2/b-1.5.1/b-colvis-1.5.1/b-flash-1.5.1/b-html5-1.5.1/b-print-1.5.1/cr-1.4.1/fc-3.2.4/fh-3.1.3/kt-2.3.2/r-2.2.1/rg-1.0.2/rr-1.2.3/sc-1.4.4/sl-1.2.5
 *
 * Included libraries:
 *   JSZip 2.5.0, pdfmake 0.1.32, DataTables 1.10.16, AutoFill 2.2.2, Buttons 1.5.1, Column visibility 1.5.1, Flash export 1.5.1, HTML5 export 1.5.1, Print view 1.5.1, ColReorder 1.4.1, FixedColumns 3.2.4, FixedHeader 3.1.3, KeyTable 2.3.2, Responsive 2.2.1, RowGroup 1.0.2, RowReorder 1.2.3, Scroller 1.4.4, Select 1.2.5
 */

/*!

 JSZip - A Javascript class for generating and reading zip files
 <http://stuartk.com/jszip>

 (c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>
 Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.

 JSZip uses the library pako released under the MIT license :
 https://github.com/nodeca/pako/blob/master/LICENSE
 */
!function (a) {
    if ("object" == typeof exports && "undefined" != typeof module)module.exports = a(); else if ("function" == typeof define && define.amd)define([], a); else {
        var b;
        "undefined" != typeof window ? b = window : "undefined" != typeof global ? b = global : "undefined" != typeof self && (b = self), b.JSZip = a()
    }
}(function () {
    return function a(b, c, d) {
        function e(g, h) {
            if (!c[g]) {
                if (!b[g]) {
                    var i = "function" == typeof require && require;
                    if (!h && i)return i(g, !0);
                    if (f)return f(g, !0);
                    throw new Error("Cannot find module '" + g + "'")
                }
                var j = c[g] = {exports: {}};
                b[g][0].call(j.exports, function (a) {
                    var c = b[g][1][a];
                    return e(c ? c : a)
                }, j, j.exports, a, b, c, d)
            }
            return c[g].exports
        }

        for (var f = "function" == typeof require && require, g = 0; g < d.length; g++)e(d[g]);
        return e
    }({
        1: [function (a, b, c) {
            "use strict";
            var d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            c.encode = function (a) {
                for (var b, c, e, f, g, h, i, j = "", k = 0; k < a.length;)b = a.charCodeAt(k++), c = a.charCodeAt(k++), e = a.charCodeAt(k++), f = b >> 2, g = (3 & b) << 4 | c >> 4, h = (15 & c) << 2 | e >> 6, i = 63 & e, isNaN(c) ? h = i = 64 : isNaN(e) && (i = 64), j = j + d.charAt(f) + d.charAt(g) + d.charAt(h) + d.charAt(i);
                return j
            }, c.decode = function (a) {
                var b, c, e, f, g, h, i, j = "", k = 0;
                for (a = a.replace(/[^A-Za-z0-9\+\/\=]/g, ""); k < a.length;)f = d.indexOf(a.charAt(k++)), g = d.indexOf(a.charAt(k++)), h = d.indexOf(a.charAt(k++)), i = d.indexOf(a.charAt(k++)), b = f << 2 | g >> 4, c = (15 & g) << 4 | h >> 2, e = (3 & h) << 6 | i, j += String.fromCharCode(b), 64 != h && (j += String.fromCharCode(c)), 64 != i && (j += String.fromCharCode(e));
                return j
            }
        }, {}],
        2: [function (a, b) {
            "use strict";
            function c() {
                this.compressedSize = 0, this.uncompressedSize = 0, this.crc32 = 0, this.compressionMethod = null, this.compressedContent = null
            }

            c.prototype = {
                getContent: function () {
                    return null
                }, getCompressedContent: function () {
                    return null
                }
            }, b.exports = c
        }, {}],
        3: [function (a, b, c) {
            "use strict";
            c.STORE = {
                magic: "\x00\x00", compress: function (a) {
                    return a
                }, uncompress: function (a) {
                    return a
                }, compressInputType: null, uncompressInputType: null
            }, c.DEFLATE = a("./flate")
        }, {"./flate": 8}],
        4: [function (a, b) {
            "use strict";
            var c = a("./utils"), d = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117];
            b.exports = function (a, b) {
                if ("undefined" == typeof a || !a.length)return 0;
                var e = "string" !== c.getTypeOf(a);
                "undefined" == typeof b && (b = 0);
                var f = 0, g = 0, h = 0;
                b = -1 ^ b;
                for (var i = 0, j = a.length; j > i; i++)h = e ? a[i] : a.charCodeAt(i), g = 255 & (b ^ h), f = d[g], b = b >>> 8 ^ f;
                return -1 ^ b
            }
        }, {"./utils": 21}],
        5: [function (a, b) {
            "use strict";
            function c() {
                this.data = null, this.length = 0, this.index = 0
            }

            var d = a("./utils");
            c.prototype = {
                checkOffset: function (a) {
                    this.checkIndex(this.index + a)
                }, checkIndex: function (a) {
                    if (this.length < a || 0 > a)throw new Error("End of data reached (data length = " + this.length + ", asked index = " + a + "). Corrupted zip ?")
                }, setIndex: function (a) {
                    this.checkIndex(a), this.index = a
                }, skip: function (a) {
                    this.setIndex(this.index + a)
                }, byteAt: function () {
                }, readInt: function (a) {
                    var b, c = 0;
                    for (this.checkOffset(a), b = this.index + a - 1; b >= this.index; b--)c = (c << 8) + this.byteAt(b);
                    return this.index += a, c
                }, readString: function (a) {
                    return d.transformTo("string", this.readData(a))
                }, readData: function () {
                }, lastIndexOfSignature: function () {
                }, readDate: function () {
                    var a = this.readInt(4);
                    return new Date((a >> 25 & 127) + 1980, (a >> 21 & 15) - 1, a >> 16 & 31, a >> 11 & 31, a >> 5 & 63, (31 & a) << 1)
                }
            }, b.exports = c
        }, {"./utils": 21}],
        6: [function (a, b, c) {
            "use strict";
            c.base64 = !1, c.binary = !1, c.dir = !1, c.createFolders = !1, c.date = null, c.compression = null, c.compressionOptions = null, c.comment = null, c.unixPermissions = null, c.dosPermissions = null
        }, {}],
        7: [function (a, b, c) {
            "use strict";
            var d = a("./utils");
            c.string2binary = function (a) {
                return d.string2binary(a)
            }, c.string2Uint8Array = function (a) {
                return d.transformTo("uint8array", a)
            }, c.uint8Array2String = function (a) {
                return d.transformTo("string", a)
            }, c.string2Blob = function (a) {
                var b = d.transformTo("arraybuffer", a);
                return d.arrayBuffer2Blob(b)
            }, c.arrayBuffer2Blob = function (a) {
                return d.arrayBuffer2Blob(a)
            }, c.transformTo = function (a, b) {
                return d.transformTo(a, b)
            }, c.getTypeOf = function (a) {
                return d.getTypeOf(a)
            }, c.checkSupport = function (a) {
                return d.checkSupport(a)
            }, c.MAX_VALUE_16BITS = d.MAX_VALUE_16BITS, c.MAX_VALUE_32BITS = d.MAX_VALUE_32BITS, c.pretty = function (a) {
                return d.pretty(a)
            }, c.findCompression = function (a) {
                return d.findCompression(a)
            }, c.isRegExp = function (a) {
                return d.isRegExp(a)
            }
        }, {"./utils": 21}],
        8: [function (a, b, c) {
            "use strict";
            var d = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array, e = a("pako");
            c.uncompressInputType = d ? "uint8array" : "array", c.compressInputType = d ? "uint8array" : "array", c.magic = "\b\x00", c.compress = function (a, b) {
                return e.deflateRaw(a, {level: b.level || -1})
            }, c.uncompress = function (a) {
                return e.inflateRaw(a)
            }
        }, {pako: 24}],
        9: [function (a, b) {
            "use strict";
            function c(a, b) {
                return this instanceof c ? (this.files = {}, this.comment = null, this.root = "", a && this.load(a, b), void(this.clone = function () {
                    var a = new c;
                    for (var b in this)"function" != typeof this[b] && (a[b] = this[b]);
                    return a
                })) : new c(a, b)
            }

            var d = a("./base64");
            c.prototype = a("./object"), c.prototype.load = a("./load"), c.support = a("./support"), c.defaults = a("./defaults"), c.utils = a("./deprecatedPublicUtils"), c.base64 = {
                encode: function (a) {
                    return d.encode(a)
                }, decode: function (a) {
                    return d.decode(a)
                }
            }, c.compressions = a("./compressions"), b.exports = c
        }, {
            "./base64": 1,
            "./compressions": 3,
            "./defaults": 6,
            "./deprecatedPublicUtils": 7,
            "./load": 10,
            "./object": 13,
            "./support": 17
        }],
        10: [function (a, b) {
            "use strict";
            var c = a("./base64"), d = a("./zipEntries");
            b.exports = function (a, b) {
                var e, f, g, h;
                for (b = b || {}, b.base64 && (a = c.decode(a)), f = new d(a, b), e = f.files, g = 0; g < e.length; g++)h = e[g], this.file(h.fileName, h.decompressed, {
                    binary: !0,
                    optimizedBinaryString: !0,
                    date: h.date,
                    dir: h.dir,
                    comment: h.fileComment.length ? h.fileComment : null,
                    unixPermissions: h.unixPermissions,
                    dosPermissions: h.dosPermissions,
                    createFolders: b.createFolders
                });
                return f.zipComment.length && (this.comment = f.zipComment), this
            }
        }, {"./base64": 1, "./zipEntries": 22}],
        11: [function (a, b) {
            (function (a) {
                "use strict";
                b.exports = function (b, c) {
                    return new a(b, c)
                }, b.exports.test = function (b) {
                    return a.isBuffer(b)
                }
            }).call(this, "undefined" != typeof Buffer ? Buffer : void 0)
        }, {}],
        12: [function (a, b) {
            "use strict";
            function c(a) {
                this.data = a, this.length = this.data.length, this.index = 0
            }

            var d = a("./uint8ArrayReader");
            c.prototype = new d, c.prototype.readData = function (a) {
                this.checkOffset(a);
                var b = this.data.slice(this.index, this.index + a);
                return this.index += a, b
            }, b.exports = c
        }, {"./uint8ArrayReader": 18}],
        13: [function (a, b) {
            "use strict";
            var c = a("./support"), d = a("./utils"), e = a("./crc32"), f = a("./signature"), g = a("./defaults"), h = a("./base64"), i = a("./compressions"), j = a("./compressedObject"), k = a("./nodeBuffer"), l = a("./utf8"), m = a("./stringWriter"), n = a("./uint8ArrayWriter"), o = function (a) {
                if (a._data instanceof j && (a._data = a._data.getContent(), a.options.binary = !0, a.options.base64 = !1, "uint8array" === d.getTypeOf(a._data))) {
                    var b = a._data;
                    a._data = new Uint8Array(b.length), 0 !== b.length && a._data.set(b, 0)
                }
                return a._data
            }, p = function (a) {
                var b = o(a), e = d.getTypeOf(b);
                return "string" === e ? !a.options.binary && c.nodebuffer ? k(b, "utf-8") : a.asBinary() : b
            }, q = function (a) {
                var b = o(this);
                return null === b || "undefined" == typeof b ? "" : (this.options.base64 && (b = h.decode(b)), b = a && this.options.binary ? D.utf8decode(b) : d.transformTo("string", b), a || this.options.binary || (b = d.transformTo("string", D.utf8encode(b))), b)
            }, r = function (a, b, c) {
                this.name = a, this.dir = c.dir, this.date = c.date, this.comment = c.comment, this.unixPermissions = c.unixPermissions, this.dosPermissions = c.dosPermissions, this._data = b, this.options = c, this._initialMetadata = {
                    dir: c.dir,
                    date: c.date
                }
            };
            r.prototype = {
                asText: function () {
                    return q.call(this, !0)
                }, asBinary: function () {
                    return q.call(this, !1)
                }, asNodeBuffer: function () {
                    var a = p(this);
                    return d.transformTo("nodebuffer", a)
                }, asUint8Array: function () {
                    var a = p(this);
                    return d.transformTo("uint8array", a)
                }, asArrayBuffer: function () {
                    return this.asUint8Array().buffer
                }
            };
            var s = function (a, b) {
                var c, d = "";
                for (c = 0; b > c; c++)d += String.fromCharCode(255 & a), a >>>= 8;
                return d
            }, t = function () {
                var a, b, c = {};
                for (a = 0; a < arguments.length; a++)for (b in arguments[a])arguments[a].hasOwnProperty(b) && "undefined" == typeof c[b] && (c[b] = arguments[a][b]);
                return c
            }, u = function (a) {
                return a = a || {}, a.base64 !== !0 || null !== a.binary && void 0 !== a.binary || (a.binary = !0), a = t(a, g), a.date = a.date || new Date, null !== a.compression && (a.compression = a.compression.toUpperCase()), a
            }, v = function (a, b, c) {
                var e, f = d.getTypeOf(b);
                if (c = u(c), "string" == typeof c.unixPermissions && (c.unixPermissions = parseInt(c.unixPermissions, 8)), c.unixPermissions && 16384 & c.unixPermissions && (c.dir = !0), c.dosPermissions && 16 & c.dosPermissions && (c.dir = !0), c.dir && (a = x(a)), c.createFolders && (e = w(a)) && y.call(this, e, !0), c.dir || null === b || "undefined" == typeof b)c.base64 = !1, c.binary = !1, b = null, f = null; else if ("string" === f)c.binary && !c.base64 && c.optimizedBinaryString !== !0 && (b = d.string2binary(b)); else {
                    if (c.base64 = !1, c.binary = !0, !(f || b instanceof j))throw new Error("The data of '" + a + "' is in an unsupported format !");
                    "arraybuffer" === f && (b = d.transformTo("uint8array", b))
                }
                var g = new r(a, b, c);
                return this.files[a] = g, g
            }, w = function (a) {
                "/" == a.slice(-1) && (a = a.substring(0, a.length - 1));
                var b = a.lastIndexOf("/");
                return b > 0 ? a.substring(0, b) : ""
            }, x = function (a) {
                return "/" != a.slice(-1) && (a += "/"), a
            }, y = function (a, b) {
                return b = "undefined" != typeof b ? b : !1, a = x(a), this.files[a] || v.call(this, a, null, {
                    dir: !0,
                    createFolders: b
                }), this.files[a]
            }, z = function (a, b, c) {
                var f, g = new j;
                return a._data instanceof j ? (g.uncompressedSize = a._data.uncompressedSize, g.crc32 = a._data.crc32, 0 === g.uncompressedSize || a.dir ? (b = i.STORE, g.compressedContent = "", g.crc32 = 0) : a._data.compressionMethod === b.magic ? g.compressedContent = a._data.getCompressedContent() : (f = a._data.getContent(), g.compressedContent = b.compress(d.transformTo(b.compressInputType, f), c))) : (f = p(a), (!f || 0 === f.length || a.dir) && (b = i.STORE, f = ""), g.uncompressedSize = f.length, g.crc32 = e(f), g.compressedContent = b.compress(d.transformTo(b.compressInputType, f), c)), g.compressedSize = g.compressedContent.length, g.compressionMethod = b.magic, g
            }, A = function (a, b) {
                var c = a;
                return a || (c = b ? 16893 : 33204), (65535 & c) << 16
            }, B = function (a) {
                return 63 & (a || 0)
            }, C = function (a, b, c, g, h) {
                var i, j, k, m, n = (c.compressedContent, d.transformTo("string", l.utf8encode(b.name))), o = b.comment || "", p = d.transformTo("string", l.utf8encode(o)), q = n.length !== b.name.length, r = p.length !== o.length, t = b.options, u = "", v = "", w = "";
                k = b._initialMetadata.dir !== b.dir ? b.dir : t.dir, m = b._initialMetadata.date !== b.date ? b.date : t.date;
                var x = 0, y = 0;
                k && (x |= 16), "UNIX" === h ? (y = 798, x |= A(b.unixPermissions, k)) : (y = 20, x |= B(b.dosPermissions, k)), i = m.getHours(), i <<= 6, i |= m.getMinutes(), i <<= 5, i |= m.getSeconds() / 2, j = m.getFullYear() - 1980, j <<= 4, j |= m.getMonth() + 1, j <<= 5, j |= m.getDate(), q && (v = s(1, 1) + s(e(n), 4) + n, u += "up" + s(v.length, 2) + v), r && (w = s(1, 1) + s(this.crc32(p), 4) + p, u += "uc" + s(w.length, 2) + w);
                var z = "";
                z += "\n\x00", z += q || r ? "\x00\b" : "\x00\x00", z += c.compressionMethod, z += s(i, 2), z += s(j, 2), z += s(c.crc32, 4), z += s(c.compressedSize, 4), z += s(c.uncompressedSize, 4), z += s(n.length, 2), z += s(u.length, 2);
                var C = f.LOCAL_FILE_HEADER + z + n + u, D = f.CENTRAL_FILE_HEADER + s(y, 2) + z + s(p.length, 2) + "\x00\x00\x00\x00" + s(x, 4) + s(g, 4) + n + u + p;
                return {fileRecord: C, dirRecord: D, compressedObject: c}
            }, D = {
                load: function () {
                    throw new Error("Load method is not defined. Is the file jszip-load.js included ?")
                }, filter: function (a) {
                    var b, c, d, e, f = [];
                    for (b in this.files)this.files.hasOwnProperty(b) && (d = this.files[b], e = new r(d.name, d._data, t(d.options)), c = b.slice(this.root.length, b.length), b.slice(0, this.root.length) === this.root && a(c, e) && f.push(e));
                    return f
                }, file: function (a, b, c) {
                    if (1 === arguments.length) {
                        if (d.isRegExp(a)) {
                            var e = a;
                            return this.filter(function (a, b) {
                                return !b.dir && e.test(a)
                            })
                        }
                        return this.filter(function (b, c) {
                                return !c.dir && b === a
                            })[0] || null
                    }
                    return a = this.root + a, v.call(this, a, b, c), this
                }, folder: function (a) {
                    if (!a)return this;
                    if (d.isRegExp(a))return this.filter(function (b, c) {
                        return c.dir && a.test(b)
                    });
                    var b = this.root + a, c = y.call(this, b), e = this.clone();
                    return e.root = c.name, e
                }, remove: function (a) {
                    a = this.root + a;
                    var b = this.files[a];
                    if (b || ("/" != a.slice(-1) && (a += "/"), b = this.files[a]), b && !b.dir)delete this.files[a]; else for (var c = this.filter(function (b, c) {
                        return c.name.slice(0, a.length) === a
                    }), d = 0; d < c.length; d++)delete this.files[c[d].name];
                    return this
                }, generate: function (a) {
                    a = t(a || {}, {
                        base64: !0,
                        compression: "STORE",
                        compressionOptions: null,
                        type: "base64",
                        platform: "DOS",
                        comment: null,
                        mimeType: "application/zip"
                    }), d.checkSupport(a.type), ("darwin" === a.platform || "freebsd" === a.platform || "linux" === a.platform || "sunos" === a.platform) && (a.platform = "UNIX"), "win32" === a.platform && (a.platform = "DOS");
                    var b, c, e = [], g = 0, j = 0, k = d.transformTo("string", this.utf8encode(a.comment || this.comment || ""));
                    for (var l in this.files)if (this.files.hasOwnProperty(l)) {
                        var o = this.files[l], p = o.options.compression || a.compression.toUpperCase(), q = i[p];
                        if (!q)throw new Error(p + " is not a valid compression method !");
                        var r = o.options.compressionOptions || a.compressionOptions || {}, u = z.call(this, o, q, r), v = C.call(this, l, o, u, g, a.platform);
                        g += v.fileRecord.length + u.compressedSize, j += v.dirRecord.length, e.push(v)
                    }
                    var w = "";
                    w = f.CENTRAL_DIRECTORY_END + "\x00\x00\x00\x00" + s(e.length, 2) + s(e.length, 2) + s(j, 4) + s(g, 4) + s(k.length, 2) + k;
                    var x = a.type.toLowerCase();
                    for (b = "uint8array" === x || "arraybuffer" === x || "blob" === x || "nodebuffer" === x ? new n(g + j + w.length) : new m(g + j + w.length), c = 0; c < e.length; c++)b.append(e[c].fileRecord), b.append(e[c].compressedObject.compressedContent);
                    for (c = 0; c < e.length; c++)b.append(e[c].dirRecord);
                    b.append(w);
                    var y = b.finalize();
                    switch (a.type.toLowerCase()) {
                        case"uint8array":
                        case"arraybuffer":
                        case"nodebuffer":
                            return d.transformTo(a.type.toLowerCase(), y);
                        case"blob":
                            return d.arrayBuffer2Blob(d.transformTo("arraybuffer", y), a.mimeType);
                        case"base64":
                            return a.base64 ? h.encode(y) : y;
                        default:
                            return y
                    }
                }, crc32: function (a, b) {
                    return e(a, b)
                }, utf8encode: function (a) {
                    return d.transformTo("string", l.utf8encode(a))
                }, utf8decode: function (a) {
                    return l.utf8decode(a)
                }
            };
            b.exports = D
        }, {
            "./base64": 1,
            "./compressedObject": 2,
            "./compressions": 3,
            "./crc32": 4,
            "./defaults": 6,
            "./nodeBuffer": 11,
            "./signature": 14,
            "./stringWriter": 16,
            "./support": 17,
            "./uint8ArrayWriter": 19,
            "./utf8": 20,
            "./utils": 21
        }],
        14: [function (a, b, c) {
            "use strict";
            c.LOCAL_FILE_HEADER = "PK", c.CENTRAL_FILE_HEADER = "PK", c.CENTRAL_DIRECTORY_END = "PK", c.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK", c.ZIP64_CENTRAL_DIRECTORY_END = "PK", c.DATA_DESCRIPTOR = "PK\b"
        }, {}],
        15: [function (a, b) {
            "use strict";
            function c(a, b) {
                this.data = a, b || (this.data = e.string2binary(this.data)), this.length = this.data.length, this.index = 0
            }

            var d = a("./dataReader"), e = a("./utils");
            c.prototype = new d, c.prototype.byteAt = function (a) {
                return this.data.charCodeAt(a)
            }, c.prototype.lastIndexOfSignature = function (a) {
                return this.data.lastIndexOf(a)
            }, c.prototype.readData = function (a) {
                this.checkOffset(a);
                var b = this.data.slice(this.index, this.index + a);
                return this.index += a, b
            }, b.exports = c
        }, {"./dataReader": 5, "./utils": 21}],
        16: [function (a, b) {
            "use strict";
            var c = a("./utils"), d = function () {
                this.data = []
            };
            d.prototype = {
                append: function (a) {
                    a = c.transformTo("string", a), this.data.push(a)
                }, finalize: function () {
                    return this.data.join("")
                }
            }, b.exports = d
        }, {"./utils": 21}],
        17: [function (a, b, c) {
            (function (a) {
                "use strict";
                if (c.base64 = !0, c.array = !0, c.string = !0, c.arraybuffer = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array, c.nodebuffer = "undefined" != typeof a, c.uint8array = "undefined" != typeof Uint8Array, "undefined" == typeof ArrayBuffer)c.blob = !1; else {
                    var b = new ArrayBuffer(0);
                    try {
                        c.blob = 0 === new Blob([b], {type: "application/zip"}).size
                    } catch (d) {
                        try {
                            var e = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, f = new e;
                            f.append(b), c.blob = 0 === f.getBlob("application/zip").size
                        } catch (d) {
                            c.blob = !1
                        }
                    }
                }
            }).call(this, "undefined" != typeof Buffer ? Buffer : void 0)
        }, {}],
        18: [function (a, b) {
            "use strict";
            function c(a) {
                a && (this.data = a, this.length = this.data.length, this.index = 0)
            }

            var d = a("./dataReader");
            c.prototype = new d, c.prototype.byteAt = function (a) {
                return this.data[a]
            }, c.prototype.lastIndexOfSignature = function (a) {
                for (var b = a.charCodeAt(0), c = a.charCodeAt(1), d = a.charCodeAt(2), e = a.charCodeAt(3), f = this.length - 4; f >= 0; --f)if (this.data[f] === b && this.data[f + 1] === c && this.data[f + 2] === d && this.data[f + 3] === e)return f;
                return -1
            }, c.prototype.readData = function (a) {
                if (this.checkOffset(a), 0 === a)return new Uint8Array(0);
                var b = this.data.subarray(this.index, this.index + a);
                return this.index += a, b
            }, b.exports = c
        }, {"./dataReader": 5}],
        19: [function (a, b) {
            "use strict";
            var c = a("./utils"), d = function (a) {
                this.data = new Uint8Array(a), this.index = 0
            };
            d.prototype = {
                append: function (a) {
                    0 !== a.length && (a = c.transformTo("uint8array", a), this.data.set(a, this.index), this.index += a.length)
                }, finalize: function () {
                    return this.data
                }
            }, b.exports = d
        }, {"./utils": 21}],
        20: [function (a, b, c) {
            "use strict";
            for (var d = a("./utils"), e = a("./support"), f = a("./nodeBuffer"), g = new Array(256), h = 0; 256 > h; h++)g[h] = h >= 252 ? 6 : h >= 248 ? 5 : h >= 240 ? 4 : h >= 224 ? 3 : h >= 192 ? 2 : 1;
            g[254] = g[254] = 1;
            var i = function (a) {
                var b, c, d, f, g, h = a.length, i = 0;
                for (f = 0; h > f; f++)c = a.charCodeAt(f), 55296 === (64512 & c) && h > f + 1 && (d = a.charCodeAt(f + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), f++)), i += 128 > c ? 1 : 2048 > c ? 2 : 65536 > c ? 3 : 4;
                for (b = e.uint8array ? new Uint8Array(i) : new Array(i), g = 0, f = 0; i > g; f++)c = a.charCodeAt(f), 55296 === (64512 & c) && h > f + 1 && (d = a.charCodeAt(f + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), f++)), 128 > c ? b[g++] = c : 2048 > c ? (b[g++] = 192 | c >>> 6, b[g++] = 128 | 63 & c) : 65536 > c ? (b[g++] = 224 | c >>> 12, b[g++] = 128 | c >>> 6 & 63, b[g++] = 128 | 63 & c) : (b[g++] = 240 | c >>> 18, b[g++] = 128 | c >>> 12 & 63, b[g++] = 128 | c >>> 6 & 63, b[g++] = 128 | 63 & c);
                return b
            }, j = function (a, b) {
                var c;
                for (b = b || a.length, b > a.length && (b = a.length), c = b - 1; c >= 0 && 128 === (192 & a[c]);)c--;
                return 0 > c ? b : 0 === c ? b : c + g[a[c]] > b ? c : b
            }, k = function (a) {
                var b, c, e, f, h = a.length, i = new Array(2 * h);
                for (c = 0, b = 0; h > b;)if (e = a[b++], 128 > e)i[c++] = e; else if (f = g[e], f > 4)i[c++] = 65533, b += f - 1; else {
                    for (e &= 2 === f ? 31 : 3 === f ? 15 : 7; f > 1 && h > b;)e = e << 6 | 63 & a[b++], f--;
                    f > 1 ? i[c++] = 65533 : 65536 > e ? i[c++] = e : (e -= 65536, i[c++] = 55296 | e >> 10 & 1023, i[c++] = 56320 | 1023 & e)
                }
                return i.length !== c && (i.subarray ? i = i.subarray(0, c) : i.length = c), d.applyFromCharCode(i)
            };
            c.utf8encode = function (a) {
                return e.nodebuffer ? f(a, "utf-8") : i(a)
            }, c.utf8decode = function (a) {
                if (e.nodebuffer)return d.transformTo("nodebuffer", a).toString("utf-8");
                a = d.transformTo(e.uint8array ? "uint8array" : "array", a);
                for (var b = [], c = 0, f = a.length, g = 65536; f > c;) {
                    var h = j(a, Math.min(c + g, f));
                    b.push(e.uint8array ? k(a.subarray(c, h)) : k(a.slice(c, h))), c = h
                }
                return b.join("")
            }
        }, {"./nodeBuffer": 11, "./support": 17, "./utils": 21}],
        21: [function (a, b, c) {
            "use strict";
            function d(a) {
                return a
            }

            function e(a, b) {
                for (var c = 0; c < a.length; ++c)b[c] = 255 & a.charCodeAt(c);
                return b
            }

            function f(a) {
                var b = 65536, d = [], e = a.length, f = c.getTypeOf(a), g = 0, h = !0;
                try {
                    switch (f) {
                        case"uint8array":
                            String.fromCharCode.apply(null, new Uint8Array(0));
                            break;
                        case"nodebuffer":
                            String.fromCharCode.apply(null, j(0))
                    }
                } catch (i) {
                    h = !1
                }
                if (!h) {
                    for (var k = "", l = 0; l < a.length; l++)k += String.fromCharCode(a[l]);
                    return k
                }
                for (; e > g && b > 1;)try {
                    d.push("array" === f || "nodebuffer" === f ? String.fromCharCode.apply(null, a.slice(g, Math.min(g + b, e))) : String.fromCharCode.apply(null, a.subarray(g, Math.min(g + b, e)))), g += b
                } catch (i) {
                    b = Math.floor(b / 2)
                }
                return d.join("")
            }

            function g(a, b) {
                for (var c = 0; c < a.length; c++)b[c] = a[c];
                return b
            }

            var h = a("./support"), i = a("./compressions"), j = a("./nodeBuffer");
            c.string2binary = function (a) {
                for (var b = "", c = 0; c < a.length; c++)b += String.fromCharCode(255 & a.charCodeAt(c));
                return b
            }, c.arrayBuffer2Blob = function (a, b) {
                c.checkSupport("blob"), b = b || "application/zip";
                try {
                    return new Blob([a], {type: b})
                } catch (d) {
                    try {
                        var e = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, f = new e;
                        return f.append(a), f.getBlob(b)
                    } catch (d) {
                        throw new Error("Bug : can't construct the Blob.")
                    }
                }
            }, c.applyFromCharCode = f;
            var k = {};
            k.string = {
                string: d, array: function (a) {
                    return e(a, new Array(a.length))
                }, arraybuffer: function (a) {
                    return k.string.uint8array(a).buffer
                }, uint8array: function (a) {
                    return e(a, new Uint8Array(a.length))
                }, nodebuffer: function (a) {
                    return e(a, j(a.length))
                }
            }, k.array = {
                string: f, array: d, arraybuffer: function (a) {
                    return new Uint8Array(a).buffer
                }, uint8array: function (a) {
                    return new Uint8Array(a)
                }, nodebuffer: function (a) {
                    return j(a)
                }
            }, k.arraybuffer = {
                string: function (a) {
                    return f(new Uint8Array(a))
                }, array: function (a) {
                    return g(new Uint8Array(a), new Array(a.byteLength))
                }, arraybuffer: d, uint8array: function (a) {
                    return new Uint8Array(a)
                }, nodebuffer: function (a) {
                    return j(new Uint8Array(a))
                }
            }, k.uint8array = {
                string: f, array: function (a) {
                    return g(a, new Array(a.length))
                }, arraybuffer: function (a) {
                    return a.buffer
                }, uint8array: d, nodebuffer: function (a) {
                    return j(a)
                }
            }, k.nodebuffer = {
                string: f, array: function (a) {
                    return g(a, new Array(a.length))
                }, arraybuffer: function (a) {
                    return k.nodebuffer.uint8array(a).buffer
                }, uint8array: function (a) {
                    return g(a, new Uint8Array(a.length))
                }, nodebuffer: d
            }, c.transformTo = function (a, b) {
                if (b || (b = ""), !a)return b;
                c.checkSupport(a);
                var d = c.getTypeOf(b), e = k[d][a](b);
                return e
            }, c.getTypeOf = function (a) {
                return "string" == typeof a ? "string" : "[object Array]" === Object.prototype.toString.call(a) ? "array" : h.nodebuffer && j.test(a) ? "nodebuffer" : h.uint8array && a instanceof Uint8Array ? "uint8array" : h.arraybuffer && a instanceof ArrayBuffer ? "arraybuffer" : void 0
            }, c.checkSupport = function (a) {
                var b = h[a.toLowerCase()];
                if (!b)throw new Error(a + " is not supported by this browser")
            }, c.MAX_VALUE_16BITS = 65535, c.MAX_VALUE_32BITS = -1, c.pretty = function (a) {
                var b, c, d = "";
                for (c = 0; c < (a || "").length; c++)b = a.charCodeAt(c), d += "\\x" + (16 > b ? "0" : "") + b.toString(16).toUpperCase();
                return d
            }, c.findCompression = function (a) {
                for (var b in i)if (i.hasOwnProperty(b) && i[b].magic === a)return i[b];
                return null
            }, c.isRegExp = function (a) {
                return "[object RegExp]" === Object.prototype.toString.call(a)
            }
        }, {"./compressions": 3, "./nodeBuffer": 11, "./support": 17}],
        22: [function (a, b) {
            "use strict";
            function c(a, b) {
                this.files = [], this.loadOptions = b, a && this.load(a)
            }

            var d = a("./stringReader"), e = a("./nodeBufferReader"), f = a("./uint8ArrayReader"), g = a("./utils"), h = a("./signature"), i = a("./zipEntry"), j = a("./support"), k = a("./object");
            c.prototype = {
                checkSignature: function (a) {
                    var b = this.reader.readString(4);
                    if (b !== a)throw new Error("Corrupted zip or bug : unexpected signature (" + g.pretty(b) + ", expected " + g.pretty(a) + ")")
                }, readBlockEndOfCentral: function () {
                    this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2), this.zipComment = this.reader.readString(this.zipCommentLength), this.zipComment = k.utf8decode(this.zipComment)
                }, readBlockZip64EndOfCentral: function () {
                    this.zip64EndOfCentralSize = this.reader.readInt(8), this.versionMadeBy = this.reader.readString(2), this.versionNeeded = this.reader.readInt(2), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
                    for (var a, b, c, d = this.zip64EndOfCentralSize - 44, e = 0; d > e;)a = this.reader.readInt(2), b = this.reader.readInt(4), c = this.reader.readString(b), this.zip64ExtensibleData[a] = {
                        id: a,
                        length: b,
                        value: c
                    }
                }, readBlockZip64EndOfCentralLocator: function () {
                    if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), this.disksCount > 1)throw new Error("Multi-volumes zip are not supported")
                }, readLocalFiles: function () {
                    var a, b;
                    for (a = 0; a < this.files.length; a++)b = this.files[a], this.reader.setIndex(b.localHeaderOffset), this.checkSignature(h.LOCAL_FILE_HEADER), b.readLocalPart(this.reader), b.handleUTF8(), b.processAttributes()
                }, readCentralDir: function () {
                    var a;
                    for (this.reader.setIndex(this.centralDirOffset); this.reader.readString(4) === h.CENTRAL_FILE_HEADER;)a = new i({zip64: this.zip64}, this.loadOptions), a.readCentralPart(this.reader), this.files.push(a)
                }, readEndOfCentral: function () {
                    var a = this.reader.lastIndexOfSignature(h.CENTRAL_DIRECTORY_END);
                    if (-1 === a) {
                        var b = !0;
                        try {
                            this.reader.setIndex(0), this.checkSignature(h.LOCAL_FILE_HEADER), b = !1
                        } catch (c) {
                        }
                        throw new Error(b ? "Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html" : "Corrupted zip : can't find end of central directory")
                    }
                    if (this.reader.setIndex(a), this.checkSignature(h.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === g.MAX_VALUE_16BITS || this.diskWithCentralDirStart === g.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === g.MAX_VALUE_16BITS || this.centralDirRecords === g.MAX_VALUE_16BITS || this.centralDirSize === g.MAX_VALUE_32BITS || this.centralDirOffset === g.MAX_VALUE_32BITS) {
                        if (this.zip64 = !0, a = this.reader.lastIndexOfSignature(h.ZIP64_CENTRAL_DIRECTORY_LOCATOR), -1 === a)throw new Error("Corrupted zip : can't find the ZIP64 end of central directory locator");
                        this.reader.setIndex(a), this.checkSignature(h.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(h.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral()
                    }
                }, prepareReader: function (a) {
                    var b = g.getTypeOf(a);
                    this.reader = "string" !== b || j.uint8array ? "nodebuffer" === b ? new e(a) : new f(g.transformTo("uint8array", a)) : new d(a, this.loadOptions.optimizedBinaryString)
                }, load: function (a) {
                    this.prepareReader(a), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles()
                }
            }, b.exports = c
        }, {
            "./nodeBufferReader": 12,
            "./object": 13,
            "./signature": 14,
            "./stringReader": 15,
            "./support": 17,
            "./uint8ArrayReader": 18,
            "./utils": 21,
            "./zipEntry": 23
        }],
        23: [function (a, b) {
            "use strict";
            function c(a, b) {
                this.options = a, this.loadOptions = b
            }

            var d = a("./stringReader"), e = a("./utils"), f = a("./compressedObject"), g = a("./object"), h = 0, i = 3;
            c.prototype = {
                isEncrypted: function () {
                    return 1 === (1 & this.bitFlag)
                }, useUTF8: function () {
                    return 2048 === (2048 & this.bitFlag)
                }, prepareCompressedContent: function (a, b, c) {
                    return function () {
                        var d = a.index;
                        a.setIndex(b);
                        var e = a.readData(c);
                        return a.setIndex(d), e
                    }
                }, prepareContent: function (a, b, c, d, f) {
                    return function () {
                        var a = e.transformTo(d.uncompressInputType, this.getCompressedContent()), b = d.uncompress(a);
                        if (b.length !== f)throw new Error("Bug : uncompressed data size mismatch");
                        return b
                    }
                }, readLocalPart: function (a) {
                    var b, c;
                    if (a.skip(22), this.fileNameLength = a.readInt(2), c = a.readInt(2), this.fileName = a.readString(this.fileNameLength), a.skip(c), -1 == this.compressedSize || -1 == this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)");
                    if (b = e.findCompression(this.compressionMethod), null === b)throw new Error("Corrupted zip : compression " + e.pretty(this.compressionMethod) + " unknown (inner file : " + this.fileName + ")");
                    if (this.decompressed = new f, this.decompressed.compressedSize = this.compressedSize, this.decompressed.uncompressedSize = this.uncompressedSize, this.decompressed.crc32 = this.crc32, this.decompressed.compressionMethod = this.compressionMethod, this.decompressed.getCompressedContent = this.prepareCompressedContent(a, a.index, this.compressedSize, b), this.decompressed.getContent = this.prepareContent(a, a.index, this.compressedSize, b, this.uncompressedSize), this.loadOptions.checkCRC32 && (this.decompressed = e.transformTo("string", this.decompressed.getContent()), g.crc32(this.decompressed) !== this.crc32))throw new Error("Corrupted zip : CRC32 mismatch")
                }, readCentralPart: function (a) {
                    if (this.versionMadeBy = a.readInt(2), this.versionNeeded = a.readInt(2), this.bitFlag = a.readInt(2), this.compressionMethod = a.readString(2), this.date = a.readDate(), this.crc32 = a.readInt(4), this.compressedSize = a.readInt(4), this.uncompressedSize = a.readInt(4), this.fileNameLength = a.readInt(2), this.extraFieldsLength = a.readInt(2), this.fileCommentLength = a.readInt(2), this.diskNumberStart = a.readInt(2), this.internalFileAttributes = a.readInt(2), this.externalFileAttributes = a.readInt(4), this.localHeaderOffset = a.readInt(4), this.isEncrypted())throw new Error("Encrypted zip are not supported");
                    this.fileName = a.readString(this.fileNameLength), this.readExtraFields(a), this.parseZIP64ExtraField(a), this.fileComment = a.readString(this.fileCommentLength)
                }, processAttributes: function () {
                    this.unixPermissions = null, this.dosPermissions = null;
                    var a = this.versionMadeBy >> 8;
                    this.dir = 16 & this.externalFileAttributes ? !0 : !1, a === h && (this.dosPermissions = 63 & this.externalFileAttributes), a === i && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || "/" !== this.fileName.slice(-1) || (this.dir = !0)
                }, parseZIP64ExtraField: function () {
                    if (this.extraFields[1]) {
                        var a = new d(this.extraFields[1].value);
                        this.uncompressedSize === e.MAX_VALUE_32BITS && (this.uncompressedSize = a.readInt(8)), this.compressedSize === e.MAX_VALUE_32BITS && (this.compressedSize = a.readInt(8)), this.localHeaderOffset === e.MAX_VALUE_32BITS && (this.localHeaderOffset = a.readInt(8)), this.diskNumberStart === e.MAX_VALUE_32BITS && (this.diskNumberStart = a.readInt(4))
                    }
                }, readExtraFields: function (a) {
                    var b, c, d, e = a.index;
                    for (this.extraFields = this.extraFields || {}; a.index < e + this.extraFieldsLength;)b = a.readInt(2), c = a.readInt(2), d = a.readString(c), this.extraFields[b] = {
                        id: b,
                        length: c,
                        value: d
                    }
                }, handleUTF8: function () {
                    if (this.useUTF8())this.fileName = g.utf8decode(this.fileName), this.fileComment = g.utf8decode(this.fileComment); else {
                        var a = this.findExtraFieldUnicodePath();
                        null !== a && (this.fileName = a);
                        var b = this.findExtraFieldUnicodeComment();
                        null !== b && (this.fileComment = b)
                    }
                }, findExtraFieldUnicodePath: function () {
                    var a = this.extraFields[28789];
                    if (a) {
                        var b = new d(a.value);
                        return 1 !== b.readInt(1) ? null : g.crc32(this.fileName) !== b.readInt(4) ? null : g.utf8decode(b.readString(a.length - 5))
                    }
                    return null
                }, findExtraFieldUnicodeComment: function () {
                    var a = this.extraFields[25461];
                    if (a) {
                        var b = new d(a.value);
                        return 1 !== b.readInt(1) ? null : g.crc32(this.fileComment) !== b.readInt(4) ? null : g.utf8decode(b.readString(a.length - 5))
                    }
                    return null
                }
            }, b.exports = c
        }, {"./compressedObject": 2, "./object": 13, "./stringReader": 15, "./utils": 21}],
        24: [function (a, b) {
            "use strict";
            var c = a("./lib/utils/common").assign, d = a("./lib/deflate"), e = a("./lib/inflate"), f = a("./lib/zlib/constants"), g = {};
            c(g, d, e, f), b.exports = g
        }, {"./lib/deflate": 25, "./lib/inflate": 26, "./lib/utils/common": 27, "./lib/zlib/constants": 30}],
        25: [function (a, b, c) {
            "use strict";
            function d(a, b) {
                var c = new s(b);
                if (c.push(a, !0), c.err)throw c.msg;
                return c.result
            }

            function e(a, b) {
                return b = b || {}, b.raw = !0, d(a, b)
            }

            function f(a, b) {
                return b = b || {}, b.gzip = !0, d(a, b)
            }

            var g = a("./zlib/deflate.js"), h = a("./utils/common"), i = a("./utils/strings"), j = a("./zlib/messages"), k = a("./zlib/zstream"), l = 0, m = 4, n = 0, o = 1, p = -1, q = 0, r = 8, s = function (a) {
                this.options = h.assign({
                    level: p,
                    method: r,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: q,
                    to: ""
                }, a || {});
                var b = this.options;
                b.raw && b.windowBits > 0 ? b.windowBits = -b.windowBits : b.gzip && b.windowBits > 0 && b.windowBits < 16 && (b.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new k, this.strm.avail_out = 0;
                var c = g.deflateInit2(this.strm, b.level, b.method, b.windowBits, b.memLevel, b.strategy);
                if (c !== n)throw new Error(j[c]);
                b.header && g.deflateSetHeader(this.strm, b.header)
            };
            s.prototype.push = function (a, b) {
                var c, d, e = this.strm, f = this.options.chunkSize;
                if (this.ended)return !1;
                d = b === ~~b ? b : b === !0 ? m : l, e.input = "string" == typeof a ? i.string2buf(a) : a, e.next_in = 0, e.avail_in = e.input.length;
                do {
                    if (0 === e.avail_out && (e.output = new h.Buf8(f), e.next_out = 0, e.avail_out = f), c = g.deflate(e, d), c !== o && c !== n)return this.onEnd(c), this.ended = !0, !1;
                    (0 === e.avail_out || 0 === e.avail_in && d === m) && this.onData("string" === this.options.to ? i.buf2binstring(h.shrinkBuf(e.output, e.next_out)) : h.shrinkBuf(e.output, e.next_out))
                } while ((e.avail_in > 0 || 0 === e.avail_out) && c !== o);
                return d === m ? (c = g.deflateEnd(this.strm), this.onEnd(c), this.ended = !0, c === n) : !0
            }, s.prototype.onData = function (a) {
                this.chunks.push(a)
            }, s.prototype.onEnd = function (a) {
                a === n && (this.result = "string" === this.options.to ? this.chunks.join("") : h.flattenChunks(this.chunks)), this.chunks = [], this.err = a, this.msg = this.strm.msg
            }, c.Deflate = s, c.deflate = d, c.deflateRaw = e, c.gzip = f
        }, {
            "./utils/common": 27,
            "./utils/strings": 28,
            "./zlib/deflate.js": 32,
            "./zlib/messages": 37,
            "./zlib/zstream": 39
        }],
        26: [function (a, b, c) {
            "use strict";
            function d(a, b) {
                var c = new m(b);
                if (c.push(a, !0), c.err)throw c.msg;
                return c.result
            }

            function e(a, b) {
                return b = b || {}, b.raw = !0, d(a, b)
            }

            var f = a("./zlib/inflate.js"), g = a("./utils/common"), h = a("./utils/strings"), i = a("./zlib/constants"), j = a("./zlib/messages"), k = a("./zlib/zstream"), l = a("./zlib/gzheader"), m = function (a) {
                this.options = g.assign({chunkSize: 16384, windowBits: 0, to: ""}, a || {});
                var b = this.options;
                b.raw && b.windowBits >= 0 && b.windowBits < 16 && (b.windowBits = -b.windowBits, 0 === b.windowBits && (b.windowBits = -15)), !(b.windowBits >= 0 && b.windowBits < 16) || a && a.windowBits || (b.windowBits += 32), b.windowBits > 15 && b.windowBits < 48 && 0 === (15 & b.windowBits) && (b.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new k, this.strm.avail_out = 0;
                var c = f.inflateInit2(this.strm, b.windowBits);
                if (c !== i.Z_OK)throw new Error(j[c]);
                this.header = new l, f.inflateGetHeader(this.strm, this.header)
            };
            m.prototype.push = function (a, b) {
                var c, d, e, j, k, l = this.strm, m = this.options.chunkSize;
                if (this.ended)return !1;
                d = b === ~~b ? b : b === !0 ? i.Z_FINISH : i.Z_NO_FLUSH, l.input = "string" == typeof a ? h.binstring2buf(a) : a, l.next_in = 0, l.avail_in = l.input.length;
                do {
                    if (0 === l.avail_out && (l.output = new g.Buf8(m), l.next_out = 0, l.avail_out = m), c = f.inflate(l, i.Z_NO_FLUSH), c !== i.Z_STREAM_END && c !== i.Z_OK)return this.onEnd(c), this.ended = !0, !1;
                    l.next_out && (0 === l.avail_out || c === i.Z_STREAM_END || 0 === l.avail_in && d === i.Z_FINISH) && ("string" === this.options.to ? (e = h.utf8border(l.output, l.next_out), j = l.next_out - e, k = h.buf2string(l.output, e), l.next_out = j, l.avail_out = m - j, j && g.arraySet(l.output, l.output, e, j, 0), this.onData(k)) : this.onData(g.shrinkBuf(l.output, l.next_out)))
                } while (l.avail_in > 0 && c !== i.Z_STREAM_END);
                return c === i.Z_STREAM_END && (d = i.Z_FINISH), d === i.Z_FINISH ? (c = f.inflateEnd(this.strm), this.onEnd(c), this.ended = !0, c === i.Z_OK) : !0
            }, m.prototype.onData = function (a) {
                this.chunks.push(a)
            }, m.prototype.onEnd = function (a) {
                a === i.Z_OK && (this.result = "string" === this.options.to ? this.chunks.join("") : g.flattenChunks(this.chunks)), this.chunks = [], this.err = a, this.msg = this.strm.msg
            }, c.Inflate = m, c.inflate = d, c.inflateRaw = e, c.ungzip = d
        }, {
            "./utils/common": 27,
            "./utils/strings": 28,
            "./zlib/constants": 30,
            "./zlib/gzheader": 33,
            "./zlib/inflate.js": 35,
            "./zlib/messages": 37,
            "./zlib/zstream": 39
        }],
        27: [function (a, b, c) {
            "use strict";
            var d = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            c.assign = function (a) {
                for (var b = Array.prototype.slice.call(arguments, 1); b.length;) {
                    var c = b.shift();
                    if (c) {
                        if ("object" != typeof c)throw new TypeError(c + "must be non-object");
                        for (var d in c)c.hasOwnProperty(d) && (a[d] = c[d])
                    }
                }
                return a
            }, c.shrinkBuf = function (a, b) {
                return a.length === b ? a : a.subarray ? a.subarray(0, b) : (a.length = b, a)
            };
            var e = {
                arraySet: function (a, b, c, d, e) {
                    if (b.subarray && a.subarray)return void a.set(b.subarray(c, c + d), e);
                    for (var f = 0; d > f; f++)a[e + f] = b[c + f]
                }, flattenChunks: function (a) {
                    var b, c, d, e, f, g;
                    for (d = 0, b = 0, c = a.length; c > b; b++)d += a[b].length;
                    for (g = new Uint8Array(d), e = 0, b = 0, c = a.length; c > b; b++)f = a[b], g.set(f, e), e += f.length;
                    return g
                }
            }, f = {
                arraySet: function (a, b, c, d, e) {
                    for (var f = 0; d > f; f++)a[e + f] = b[c + f]
                }, flattenChunks: function (a) {
                    return [].concat.apply([], a)
                }
            };
            c.setTyped = function (a) {
                a ? (c.Buf8 = Uint8Array, c.Buf16 = Uint16Array, c.Buf32 = Int32Array, c.assign(c, e)) : (c.Buf8 = Array, c.Buf16 = Array, c.Buf32 = Array, c.assign(c, f))
            }, c.setTyped(d)
        }, {}],
        28: [function (a, b, c) {
            "use strict";
            function d(a, b) {
                if (65537 > b && (a.subarray && g || !a.subarray && f))return String.fromCharCode.apply(null, e.shrinkBuf(a, b));
                for (var c = "", d = 0; b > d; d++)c += String.fromCharCode(a[d]);
                return c
            }

            var e = a("./common"), f = !0, g = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (h) {
                f = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (h) {
                g = !1
            }
            for (var i = new e.Buf8(256), j = 0; 256 > j; j++)i[j] = j >= 252 ? 6 : j >= 248 ? 5 : j >= 240 ? 4 : j >= 224 ? 3 : j >= 192 ? 2 : 1;
            i[254] = i[254] = 1, c.string2buf = function (a) {
                var b, c, d, f, g, h = a.length, i = 0;
                for (f = 0; h > f; f++)c = a.charCodeAt(f), 55296 === (64512 & c) && h > f + 1 && (d = a.charCodeAt(f + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), f++)), i += 128 > c ? 1 : 2048 > c ? 2 : 65536 > c ? 3 : 4;
                for (b = new e.Buf8(i), g = 0, f = 0; i > g; f++)c = a.charCodeAt(f), 55296 === (64512 & c) && h > f + 1 && (d = a.charCodeAt(f + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), f++)), 128 > c ? b[g++] = c : 2048 > c ? (b[g++] = 192 | c >>> 6, b[g++] = 128 | 63 & c) : 65536 > c ? (b[g++] = 224 | c >>> 12, b[g++] = 128 | c >>> 6 & 63, b[g++] = 128 | 63 & c) : (b[g++] = 240 | c >>> 18, b[g++] = 128 | c >>> 12 & 63, b[g++] = 128 | c >>> 6 & 63, b[g++] = 128 | 63 & c);
                return b
            }, c.buf2binstring = function (a) {
                return d(a, a.length)
            }, c.binstring2buf = function (a) {
                for (var b = new e.Buf8(a.length), c = 0, d = b.length; d > c; c++)b[c] = a.charCodeAt(c);
                return b
            }, c.buf2string = function (a, b) {
                var c, e, f, g, h = b || a.length, j = new Array(2 * h);
                for (e = 0, c = 0; h > c;)if (f = a[c++], 128 > f)j[e++] = f; else if (g = i[f], g > 4)j[e++] = 65533, c += g - 1; else {
                    for (f &= 2 === g ? 31 : 3 === g ? 15 : 7; g > 1 && h > c;)f = f << 6 | 63 & a[c++], g--;
                    g > 1 ? j[e++] = 65533 : 65536 > f ? j[e++] = f : (f -= 65536, j[e++] = 55296 | f >> 10 & 1023, j[e++] = 56320 | 1023 & f)
                }
                return d(j, e)
            }, c.utf8border = function (a, b) {
                var c;
                for (b = b || a.length, b > a.length && (b = a.length), c = b - 1; c >= 0 && 128 === (192 & a[c]);)c--;
                return 0 > c ? b : 0 === c ? b : c + i[a[c]] > b ? c : b
            }
        }, {"./common": 27}],
        29: [function (a, b) {
            "use strict";
            function c(a, b, c, d) {
                for (var e = 65535 & a | 0, f = a >>> 16 & 65535 | 0, g = 0; 0 !== c;) {
                    g = c > 2e3 ? 2e3 : c, c -= g;
                    do e = e + b[d++] | 0, f = f + e | 0; while (--g);
                    e %= 65521, f %= 65521
                }
                return e | f << 16 | 0
            }

            b.exports = c
        }, {}],
        30: [function (a, b) {
            b.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
            }
        }, {}],
        31: [function (a, b) {
            "use strict";
            function c() {
                for (var a, b = [], c = 0; 256 > c; c++) {
                    a = c;
                    for (var d = 0; 8 > d; d++)a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
                    b[c] = a
                }
                return b
            }

            function d(a, b, c, d) {
                var f = e, g = d + c;
                a = -1 ^ a;
                for (var h = d; g > h; h++)a = a >>> 8 ^ f[255 & (a ^ b[h])];
                return -1 ^ a
            }

            var e = c();
            b.exports = d
        }, {}],
        32: [function (a, b, c) {
            "use strict";
            function d(a, b) {
                return a.msg = G[b], b
            }

            function e(a) {
                return (a << 1) - (a > 4 ? 9 : 0)
            }

            function f(a) {
                for (var b = a.length; --b >= 0;)a[b] = 0
            }

            function g(a) {
                var b = a.state, c = b.pending;
                c > a.avail_out && (c = a.avail_out), 0 !== c && (C.arraySet(a.output, b.pending_buf, b.pending_out, c, a.next_out), a.next_out += c, b.pending_out += c, a.total_out += c, a.avail_out -= c, b.pending -= c, 0 === b.pending && (b.pending_out = 0))
            }

            function h(a, b) {
                D._tr_flush_block(a, a.block_start >= 0 ? a.block_start : -1, a.strstart - a.block_start, b), a.block_start = a.strstart, g(a.strm)
            }

            function i(a, b) {
                a.pending_buf[a.pending++] = b
            }

            function j(a, b) {
                a.pending_buf[a.pending++] = b >>> 8 & 255, a.pending_buf[a.pending++] = 255 & b
            }

            function k(a, b, c, d) {
                var e = a.avail_in;
                return e > d && (e = d), 0 === e ? 0 : (a.avail_in -= e, C.arraySet(b, a.input, a.next_in, e, c), 1 === a.state.wrap ? a.adler = E(a.adler, b, e, c) : 2 === a.state.wrap && (a.adler = F(a.adler, b, e, c)), a.next_in += e, a.total_in += e, e)
            }

            function l(a, b) {
                var c, d, e = a.max_chain_length, f = a.strstart, g = a.prev_length, h = a.nice_match, i = a.strstart > a.w_size - jb ? a.strstart - (a.w_size - jb) : 0, j = a.window, k = a.w_mask, l = a.prev, m = a.strstart + ib, n = j[f + g - 1], o = j[f + g];
                a.prev_length >= a.good_match && (e >>= 2), h > a.lookahead && (h = a.lookahead);
                do if (c = b, j[c + g] === o && j[c + g - 1] === n && j[c] === j[f] && j[++c] === j[f + 1]) {
                    f += 2, c++;
                    do; while (j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && m > f);
                    if (d = ib - (m - f), f = m - ib, d > g) {
                        if (a.match_start = b, g = d, d >= h)break;
                        n = j[f + g - 1], o = j[f + g]
                    }
                } while ((b = l[b & k]) > i && 0 !== --e);
                return g <= a.lookahead ? g : a.lookahead
            }

            function m(a) {
                var b, c, d, e, f, g = a.w_size;
                do {
                    if (e = a.window_size - a.lookahead - a.strstart, a.strstart >= g + (g - jb)) {
                        C.arraySet(a.window, a.window, g, g, 0), a.match_start -= g, a.strstart -= g, a.block_start -= g, c = a.hash_size, b = c;
                        do d = a.head[--b], a.head[b] = d >= g ? d - g : 0; while (--c);
                        c = g, b = c;
                        do d = a.prev[--b], a.prev[b] = d >= g ? d - g : 0; while (--c);
                        e += g
                    }
                    if (0 === a.strm.avail_in)break;
                    if (c = k(a.strm, a.window, a.strstart + a.lookahead, e), a.lookahead += c, a.lookahead + a.insert >= hb)for (f = a.strstart - a.insert, a.ins_h = a.window[f], a.ins_h = (a.ins_h << a.hash_shift ^ a.window[f + 1]) & a.hash_mask; a.insert && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[f + hb - 1]) & a.hash_mask, a.prev[f & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = f, f++, a.insert--, !(a.lookahead + a.insert < hb)););
                } while (a.lookahead < jb && 0 !== a.strm.avail_in)
            }

            function n(a, b) {
                var c = 65535;
                for (c > a.pending_buf_size - 5 && (c = a.pending_buf_size - 5); ;) {
                    if (a.lookahead <= 1) {
                        if (m(a), 0 === a.lookahead && b === H)return sb;
                        if (0 === a.lookahead)break
                    }
                    a.strstart += a.lookahead, a.lookahead = 0;
                    var d = a.block_start + c;
                    if ((0 === a.strstart || a.strstart >= d) && (a.lookahead = a.strstart - d, a.strstart = d, h(a, !1), 0 === a.strm.avail_out))return sb;
                    if (a.strstart - a.block_start >= a.w_size - jb && (h(a, !1), 0 === a.strm.avail_out))return sb
                }
                return a.insert = 0, b === K ? (h(a, !0), 0 === a.strm.avail_out ? ub : vb) : a.strstart > a.block_start && (h(a, !1), 0 === a.strm.avail_out) ? sb : sb
            }

            function o(a, b) {
                for (var c, d; ;) {
                    if (a.lookahead < jb) {
                        if (m(a), a.lookahead < jb && b === H)return sb;
                        if (0 === a.lookahead)break
                    }
                    if (c = 0, a.lookahead >= hb && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + hb - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart), 0 !== c && a.strstart - c <= a.w_size - jb && (a.match_length = l(a, c)), a.match_length >= hb)if (d = D._tr_tally(a, a.strstart - a.match_start, a.match_length - hb), a.lookahead -= a.match_length, a.match_length <= a.max_lazy_match && a.lookahead >= hb) {
                        a.match_length--;
                        do a.strstart++, a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + hb - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart; while (0 !== --a.match_length);
                        a.strstart++
                    } else a.strstart += a.match_length, a.match_length = 0, a.ins_h = a.window[a.strstart], a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + 1]) & a.hash_mask; else d = D._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++;
                    if (d && (h(a, !1), 0 === a.strm.avail_out))return sb
                }
                return a.insert = a.strstart < hb - 1 ? a.strstart : hb - 1, b === K ? (h(a, !0), 0 === a.strm.avail_out ? ub : vb) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? sb : tb
            }

            function p(a, b) {
                for (var c, d, e; ;) {
                    if (a.lookahead < jb) {
                        if (m(a), a.lookahead < jb && b === H)return sb;
                        if (0 === a.lookahead)break
                    }
                    if (c = 0, a.lookahead >= hb && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + hb - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart), a.prev_length = a.match_length, a.prev_match = a.match_start, a.match_length = hb - 1, 0 !== c && a.prev_length < a.max_lazy_match && a.strstart - c <= a.w_size - jb && (a.match_length = l(a, c), a.match_length <= 5 && (a.strategy === S || a.match_length === hb && a.strstart - a.match_start > 4096) && (a.match_length = hb - 1)), a.prev_length >= hb && a.match_length <= a.prev_length) {
                        e = a.strstart + a.lookahead - hb, d = D._tr_tally(a, a.strstart - 1 - a.prev_match, a.prev_length - hb), a.lookahead -= a.prev_length - 1, a.prev_length -= 2;
                        do++a.strstart <= e && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + hb - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart); while (0 !== --a.prev_length);
                        if (a.match_available = 0, a.match_length = hb - 1, a.strstart++, d && (h(a, !1), 0 === a.strm.avail_out))return sb
                    } else if (a.match_available) {
                        if (d = D._tr_tally(a, 0, a.window[a.strstart - 1]), d && h(a, !1), a.strstart++, a.lookahead--, 0 === a.strm.avail_out)return sb
                    } else a.match_available = 1, a.strstart++, a.lookahead--
                }
                return a.match_available && (d = D._tr_tally(a, 0, a.window[a.strstart - 1]), a.match_available = 0), a.insert = a.strstart < hb - 1 ? a.strstart : hb - 1, b === K ? (h(a, !0), 0 === a.strm.avail_out ? ub : vb) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? sb : tb
            }

            function q(a, b) {
                for (var c, d, e, f, g = a.window; ;) {
                    if (a.lookahead <= ib) {
                        if (m(a), a.lookahead <= ib && b === H)return sb;
                        if (0 === a.lookahead)break
                    }
                    if (a.match_length = 0, a.lookahead >= hb && a.strstart > 0 && (e = a.strstart - 1, d = g[e], d === g[++e] && d === g[++e] && d === g[++e])) {
                        f = a.strstart + ib;
                        do; while (d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && f > e);
                        a.match_length = ib - (f - e), a.match_length > a.lookahead && (a.match_length = a.lookahead)
                    }
                    if (a.match_length >= hb ? (c = D._tr_tally(a, 1, a.match_length - hb), a.lookahead -= a.match_length, a.strstart += a.match_length, a.match_length = 0) : (c = D._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++), c && (h(a, !1), 0 === a.strm.avail_out))return sb
                }
                return a.insert = 0, b === K ? (h(a, !0), 0 === a.strm.avail_out ? ub : vb) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? sb : tb
            }

            function r(a, b) {
                for (var c; ;) {
                    if (0 === a.lookahead && (m(a), 0 === a.lookahead)) {
                        if (b === H)return sb;
                        break
                    }
                    if (a.match_length = 0, c = D._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++, c && (h(a, !1), 0 === a.strm.avail_out))return sb
                }
                return a.insert = 0, b === K ? (h(a, !0), 0 === a.strm.avail_out ? ub : vb) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? sb : tb
            }

            function s(a) {
                a.window_size = 2 * a.w_size, f(a.head), a.max_lazy_match = B[a.level].max_lazy, a.good_match = B[a.level].good_length, a.nice_match = B[a.level].nice_length, a.max_chain_length = B[a.level].max_chain, a.strstart = 0, a.block_start = 0, a.lookahead = 0, a.insert = 0, a.match_length = a.prev_length = hb - 1, a.match_available = 0, a.ins_h = 0
            }

            function t() {
                this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = Y, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new C.Buf16(2 * fb), this.dyn_dtree = new C.Buf16(2 * (2 * db + 1)), this.bl_tree = new C.Buf16(2 * (2 * eb + 1)), f(this.dyn_ltree), f(this.dyn_dtree), f(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new C.Buf16(gb + 1), this.heap = new C.Buf16(2 * cb + 1), f(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new C.Buf16(2 * cb + 1), f(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0
            }

            function u(a) {
                var b;
                return a && a.state ? (a.total_in = a.total_out = 0, a.data_type = X, b = a.state, b.pending = 0, b.pending_out = 0, b.wrap < 0 && (b.wrap = -b.wrap), b.status = b.wrap ? lb : qb, a.adler = 2 === b.wrap ? 0 : 1, b.last_flush = H, D._tr_init(b), M) : d(a, O)
            }

            function v(a) {
                var b = u(a);
                return b === M && s(a.state), b
            }

            function w(a, b) {
                return a && a.state ? 2 !== a.state.wrap ? O : (a.state.gzhead = b, M) : O
            }

            function x(a, b, c, e, f, g) {
                if (!a)return O;
                var h = 1;
                if (b === R && (b = 6), 0 > e ? (h = 0, e = -e) : e > 15 && (h = 2, e -= 16), 1 > f || f > Z || c !== Y || 8 > e || e > 15 || 0 > b || b > 9 || 0 > g || g > V)return d(a, O);
                8 === e && (e = 9);
                var i = new t;
                return a.state = i, i.strm = a, i.wrap = h, i.gzhead = null, i.w_bits = e, i.w_size = 1 << i.w_bits, i.w_mask = i.w_size - 1, i.hash_bits = f + 7, i.hash_size = 1 << i.hash_bits, i.hash_mask = i.hash_size - 1, i.hash_shift = ~~((i.hash_bits + hb - 1) / hb), i.window = new C.Buf8(2 * i.w_size), i.head = new C.Buf16(i.hash_size), i.prev = new C.Buf16(i.w_size), i.lit_bufsize = 1 << f + 6, i.pending_buf_size = 4 * i.lit_bufsize, i.pending_buf = new C.Buf8(i.pending_buf_size), i.d_buf = i.lit_bufsize >> 1, i.l_buf = 3 * i.lit_bufsize, i.level = b, i.strategy = g, i.method = c, v(a)
            }

            function y(a, b) {
                return x(a, b, Y, $, _, W)
            }

            function z(a, b) {
                var c, h, k, l;
                if (!a || !a.state || b > L || 0 > b)return a ? d(a, O) : O;
                if (h = a.state, !a.output || !a.input && 0 !== a.avail_in || h.status === rb && b !== K)return d(a, 0 === a.avail_out ? Q : O);
                if (h.strm = a, c = h.last_flush, h.last_flush = b, h.status === lb)if (2 === h.wrap)a.adler = 0, i(h, 31), i(h, 139), i(h, 8), h.gzhead ? (i(h, (h.gzhead.text ? 1 : 0) + (h.gzhead.hcrc ? 2 : 0) + (h.gzhead.extra ? 4 : 0) + (h.gzhead.name ? 8 : 0) + (h.gzhead.comment ? 16 : 0)), i(h, 255 & h.gzhead.time), i(h, h.gzhead.time >> 8 & 255), i(h, h.gzhead.time >> 16 & 255), i(h, h.gzhead.time >> 24 & 255), i(h, 9 === h.level ? 2 : h.strategy >= T || h.level < 2 ? 4 : 0), i(h, 255 & h.gzhead.os), h.gzhead.extra && h.gzhead.extra.length && (i(h, 255 & h.gzhead.extra.length), i(h, h.gzhead.extra.length >> 8 & 255)), h.gzhead.hcrc && (a.adler = F(a.adler, h.pending_buf, h.pending, 0)), h.gzindex = 0, h.status = mb) : (i(h, 0), i(h, 0), i(h, 0), i(h, 0), i(h, 0), i(h, 9 === h.level ? 2 : h.strategy >= T || h.level < 2 ? 4 : 0), i(h, wb), h.status = qb); else {
                    var m = Y + (h.w_bits - 8 << 4) << 8, n = -1;
                    n = h.strategy >= T || h.level < 2 ? 0 : h.level < 6 ? 1 : 6 === h.level ? 2 : 3, m |= n << 6, 0 !== h.strstart && (m |= kb), m += 31 - m % 31, h.status = qb, j(h, m), 0 !== h.strstart && (j(h, a.adler >>> 16), j(h, 65535 & a.adler)), a.adler = 1
                }
                if (h.status === mb)if (h.gzhead.extra) {
                    for (k = h.pending; h.gzindex < (65535 & h.gzhead.extra.length) && (h.pending !== h.pending_buf_size || (h.gzhead.hcrc && h.pending > k && (a.adler = F(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending !== h.pending_buf_size));)i(h, 255 & h.gzhead.extra[h.gzindex]), h.gzindex++;
                    h.gzhead.hcrc && h.pending > k && (a.adler = F(a.adler, h.pending_buf, h.pending - k, k)), h.gzindex === h.gzhead.extra.length && (h.gzindex = 0, h.status = nb)
                } else h.status = nb;
                if (h.status === nb)if (h.gzhead.name) {
                    k = h.pending;
                    do {
                        if (h.pending === h.pending_buf_size && (h.gzhead.hcrc && h.pending > k && (a.adler = F(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending === h.pending_buf_size)) {
                            l = 1;
                            break
                        }
                        l = h.gzindex < h.gzhead.name.length ? 255 & h.gzhead.name.charCodeAt(h.gzindex++) : 0, i(h, l)
                    } while (0 !== l);
                    h.gzhead.hcrc && h.pending > k && (a.adler = F(a.adler, h.pending_buf, h.pending - k, k)), 0 === l && (h.gzindex = 0, h.status = ob)
                } else h.status = ob;
                if (h.status === ob)if (h.gzhead.comment) {
                    k = h.pending;
                    do {
                        if (h.pending === h.pending_buf_size && (h.gzhead.hcrc && h.pending > k && (a.adler = F(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending === h.pending_buf_size)) {
                            l = 1;
                            break
                        }
                        l = h.gzindex < h.gzhead.comment.length ? 255 & h.gzhead.comment.charCodeAt(h.gzindex++) : 0, i(h, l)
                    } while (0 !== l);
                    h.gzhead.hcrc && h.pending > k && (a.adler = F(a.adler, h.pending_buf, h.pending - k, k)), 0 === l && (h.status = pb)
                } else h.status = pb;
                if (h.status === pb && (h.gzhead.hcrc ? (h.pending + 2 > h.pending_buf_size && g(a), h.pending + 2 <= h.pending_buf_size && (i(h, 255 & a.adler), i(h, a.adler >> 8 & 255), a.adler = 0, h.status = qb)) : h.status = qb), 0 !== h.pending) {
                    if (g(a), 0 === a.avail_out)return h.last_flush = -1, M
                } else if (0 === a.avail_in && e(b) <= e(c) && b !== K)return d(a, Q);
                if (h.status === rb && 0 !== a.avail_in)return d(a, Q);
                if (0 !== a.avail_in || 0 !== h.lookahead || b !== H && h.status !== rb) {
                    var o = h.strategy === T ? r(h, b) : h.strategy === U ? q(h, b) : B[h.level].func(h, b);
                    if ((o === ub || o === vb) && (h.status = rb), o === sb || o === ub)return 0 === a.avail_out && (h.last_flush = -1), M;
                    if (o === tb && (b === I ? D._tr_align(h) : b !== L && (D._tr_stored_block(h, 0, 0, !1), b === J && (f(h.head), 0 === h.lookahead && (h.strstart = 0, h.block_start = 0, h.insert = 0))), g(a), 0 === a.avail_out))return h.last_flush = -1, M
                }
                return b !== K ? M : h.wrap <= 0 ? N : (2 === h.wrap ? (i(h, 255 & a.adler), i(h, a.adler >> 8 & 255), i(h, a.adler >> 16 & 255), i(h, a.adler >> 24 & 255), i(h, 255 & a.total_in), i(h, a.total_in >> 8 & 255), i(h, a.total_in >> 16 & 255), i(h, a.total_in >> 24 & 255)) : (j(h, a.adler >>> 16), j(h, 65535 & a.adler)), g(a), h.wrap > 0 && (h.wrap = -h.wrap), 0 !== h.pending ? M : N)
            }

            function A(a) {
                var b;
                return a && a.state ? (b = a.state.status, b !== lb && b !== mb && b !== nb && b !== ob && b !== pb && b !== qb && b !== rb ? d(a, O) : (a.state = null, b === qb ? d(a, P) : M)) : O
            }

            var B, C = a("../utils/common"), D = a("./trees"), E = a("./adler32"), F = a("./crc32"), G = a("./messages"), H = 0, I = 1, J = 3, K = 4, L = 5, M = 0, N = 1, O = -2, P = -3, Q = -5, R = -1, S = 1, T = 2, U = 3, V = 4, W = 0, X = 2, Y = 8, Z = 9, $ = 15, _ = 8, ab = 29, bb = 256, cb = bb + 1 + ab, db = 30, eb = 19, fb = 2 * cb + 1, gb = 15, hb = 3, ib = 258, jb = ib + hb + 1, kb = 32, lb = 42, mb = 69, nb = 73, ob = 91, pb = 103, qb = 113, rb = 666, sb = 1, tb = 2, ub = 3, vb = 4, wb = 3, xb = function (a, b, c, d, e) {
                this.good_length = a, this.max_lazy = b, this.nice_length = c, this.max_chain = d, this.func = e
            };
            B = [new xb(0, 0, 0, 0, n), new xb(4, 4, 8, 4, o), new xb(4, 5, 16, 8, o), new xb(4, 6, 32, 32, o), new xb(4, 4, 16, 16, p), new xb(8, 16, 32, 32, p), new xb(8, 16, 128, 128, p), new xb(8, 32, 128, 256, p), new xb(32, 128, 258, 1024, p), new xb(32, 258, 258, 4096, p)], c.deflateInit = y, c.deflateInit2 = x, c.deflateReset = v, c.deflateResetKeep = u, c.deflateSetHeader = w, c.deflate = z, c.deflateEnd = A, c.deflateInfo = "pako deflate (from Nodeca project)"
        }, {"../utils/common": 27, "./adler32": 29, "./crc32": 31, "./messages": 37, "./trees": 38}],
        33: [function (a, b) {
            "use strict";
            function c() {
                this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1
            }

            b.exports = c
        }, {}],
        34: [function (a, b) {
            "use strict";
            var c = 30, d = 12;
            b.exports = function (a, b) {
                var e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C;
                e = a.state, f = a.next_in, B = a.input, g = f + (a.avail_in - 5), h = a.next_out, C = a.output, i = h - (b - a.avail_out), j = h + (a.avail_out - 257), k = e.dmax, l = e.wsize, m = e.whave, n = e.wnext, o = e.window, p = e.hold, q = e.bits, r = e.lencode, s = e.distcode, t = (1 << e.lenbits) - 1, u = (1 << e.distbits) - 1;
                a:do {
                    15 > q && (p += B[f++] << q, q += 8, p += B[f++] << q, q += 8), v = r[p & t];
                    b:for (; ;) {
                        if (w = v >>> 24, p >>>= w, q -= w, w = v >>> 16 & 255, 0 === w)C[h++] = 65535 & v; else {
                            if (!(16 & w)) {
                                if (0 === (64 & w)) {
                                    v = r[(65535 & v) + (p & (1 << w) - 1)];
                                    continue b
                                }
                                if (32 & w) {
                                    e.mode = d;
                                    break a
                                }
                                a.msg = "invalid literal/length code", e.mode = c;
                                break a
                            }
                            x = 65535 & v, w &= 15, w && (w > q && (p += B[f++] << q, q += 8), x += p & (1 << w) - 1, p >>>= w, q -= w), 15 > q && (p += B[f++] << q, q += 8, p += B[f++] << q, q += 8), v = s[p & u];
                            c:for (; ;) {
                                if (w = v >>> 24, p >>>= w, q -= w, w = v >>> 16 & 255, !(16 & w)) {
                                    if (0 === (64 & w)) {
                                        v = s[(65535 & v) + (p & (1 << w) - 1)];
                                        continue c
                                    }
                                    a.msg = "invalid distance code", e.mode = c;
                                    break a
                                }
                                if (y = 65535 & v, w &= 15, w > q && (p += B[f++] << q, q += 8, w > q && (p += B[f++] << q, q += 8)), y += p & (1 << w) - 1, y > k) {
                                    a.msg = "invalid distance too far back", e.mode = c;
                                    break a
                                }
                                if (p >>>= w, q -= w, w = h - i, y > w) {
                                    if (w = y - w, w > m && e.sane) {
                                        a.msg = "invalid distance too far back", e.mode = c;
                                        break a
                                    }
                                    if (z = 0, A = o, 0 === n) {
                                        if (z += l - w, x > w) {
                                            x -= w;
                                            do C[h++] = o[z++]; while (--w);
                                            z = h - y, A = C
                                        }
                                    } else if (w > n) {
                                        if (z += l + n - w, w -= n, x > w) {
                                            x -= w;
                                            do C[h++] = o[z++]; while (--w);
                                            if (z = 0, x > n) {
                                                w = n, x -= w;
                                                do C[h++] = o[z++]; while (--w);
                                                z = h - y, A = C
                                            }
                                        }
                                    } else if (z += n - w, x > w) {
                                        x -= w;
                                        do C[h++] = o[z++]; while (--w);
                                        z = h - y, A = C
                                    }
                                    for (; x > 2;)C[h++] = A[z++], C[h++] = A[z++], C[h++] = A[z++], x -= 3;
                                    x && (C[h++] = A[z++], x > 1 && (C[h++] = A[z++]))
                                } else {
                                    z = h - y;
                                    do C[h++] = C[z++], C[h++] = C[z++], C[h++] = C[z++], x -= 3; while (x > 2);
                                    x && (C[h++] = C[z++], x > 1 && (C[h++] = C[z++]))
                                }
                                break
                            }
                        }
                        break
                    }
                } while (g > f && j > h);
                x = q >> 3, f -= x, q -= x << 3, p &= (1 << q) - 1, a.next_in = f, a.next_out = h, a.avail_in = g > f ? 5 + (g - f) : 5 - (f - g), a.avail_out = j > h ? 257 + (j - h) : 257 - (h - j), e.hold = p, e.bits = q
            }
        }, {}],
        35: [function (a, b, c) {
            "use strict";
            function d(a) {
                return (a >>> 24 & 255) + (a >>> 8 & 65280) + ((65280 & a) << 8) + ((255 & a) << 24)
            }

            function e() {
                this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new r.Buf16(320), this.work = new r.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0
            }

            function f(a) {
                var b;
                return a && a.state ? (b = a.state, a.total_in = a.total_out = b.total = 0, a.msg = "", b.wrap && (a.adler = 1 & b.wrap), b.mode = K, b.last = 0, b.havedict = 0, b.dmax = 32768, b.head = null, b.hold = 0, b.bits = 0, b.lencode = b.lendyn = new r.Buf32(ob), b.distcode = b.distdyn = new r.Buf32(pb), b.sane = 1, b.back = -1, C) : F
            }

            function g(a) {
                var b;
                return a && a.state ? (b = a.state, b.wsize = 0, b.whave = 0, b.wnext = 0, f(a)) : F
            }

            function h(a, b) {
                var c, d;
                return a && a.state ? (d = a.state, 0 > b ? (c = 0, b = -b) : (c = (b >> 4) + 1, 48 > b && (b &= 15)), b && (8 > b || b > 15) ? F : (null !== d.window && d.wbits !== b && (d.window = null), d.wrap = c, d.wbits = b, g(a))) : F
            }

            function i(a, b) {
                var c, d;
                return a ? (d = new e, a.state = d, d.window = null, c = h(a, b), c !== C && (a.state = null), c) : F
            }

            function j(a) {
                return i(a, rb)
            }

            function k(a) {
                if (sb) {
                    var b;
                    for (p = new r.Buf32(512), q = new r.Buf32(32), b = 0; 144 > b;)a.lens[b++] = 8;
                    for (; 256 > b;)a.lens[b++] = 9;
                    for (; 280 > b;)a.lens[b++] = 7;
                    for (; 288 > b;)a.lens[b++] = 8;
                    for (v(x, a.lens, 0, 288, p, 0, a.work, {bits: 9}), b = 0; 32 > b;)a.lens[b++] = 5;
                    v(y, a.lens, 0, 32, q, 0, a.work, {bits: 5}), sb = !1
                }
                a.lencode = p, a.lenbits = 9, a.distcode = q, a.distbits = 5
            }

            function l(a, b, c, d) {
                var e, f = a.state;
                return null === f.window && (f.wsize = 1 << f.wbits, f.wnext = 0, f.whave = 0, f.window = new r.Buf8(f.wsize)), d >= f.wsize ? (r.arraySet(f.window, b, c - f.wsize, f.wsize, 0), f.wnext = 0, f.whave = f.wsize) : (e = f.wsize - f.wnext, e > d && (e = d), r.arraySet(f.window, b, c - d, e, f.wnext), d -= e, d ? (r.arraySet(f.window, b, c - d, d, 0), f.wnext = d, f.whave = f.wsize) : (f.wnext += e, f.wnext === f.wsize && (f.wnext = 0), f.whave < f.wsize && (f.whave += e))), 0
            }

            function m(a, b) {
                var c, e, f, g, h, i, j, m, n, o, p, q, ob, pb, qb, rb, sb, tb, ub, vb, wb, xb, yb, zb, Ab = 0, Bb = new r.Buf8(4), Cb = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                if (!a || !a.state || !a.output || !a.input && 0 !== a.avail_in)return F;
                c = a.state, c.mode === V && (c.mode = W), h = a.next_out, f = a.output, j = a.avail_out, g = a.next_in, e = a.input, i = a.avail_in, m = c.hold, n = c.bits, o = i, p = j, xb = C;
                a:for (; ;)switch (c.mode) {
                    case K:
                        if (0 === c.wrap) {
                            c.mode = W;
                            break
                        }
                        for (; 16 > n;) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (2 & c.wrap && 35615 === m) {
                            c.check = 0, Bb[0] = 255 & m, Bb[1] = m >>> 8 & 255, c.check = t(c.check, Bb, 2, 0), m = 0, n = 0, c.mode = L;
                            break
                        }
                        if (c.flags = 0, c.head && (c.head.done = !1), !(1 & c.wrap) || (((255 & m) << 8) + (m >> 8)) % 31) {
                            a.msg = "incorrect header check", c.mode = lb;
                            break
                        }
                        if ((15 & m) !== J) {
                            a.msg = "unknown compression method", c.mode = lb;
                            break
                        }
                        if (m >>>= 4, n -= 4, wb = (15 & m) + 8, 0 === c.wbits)c.wbits = wb; else if (wb > c.wbits) {
                            a.msg = "invalid window size", c.mode = lb;
                            break
                        }
                        c.dmax = 1 << wb, a.adler = c.check = 1, c.mode = 512 & m ? T : V, m = 0, n = 0;
                        break;
                    case L:
                        for (; 16 > n;) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (c.flags = m, (255 & c.flags) !== J) {
                            a.msg = "unknown compression method", c.mode = lb;
                            break
                        }
                        if (57344 & c.flags) {
                            a.msg = "unknown header flags set", c.mode = lb;
                            break
                        }
                        c.head && (c.head.text = m >> 8 & 1), 512 & c.flags && (Bb[0] = 255 & m, Bb[1] = m >>> 8 & 255, c.check = t(c.check, Bb, 2, 0)), m = 0, n = 0, c.mode = M;
                    case M:
                        for (; 32 > n;) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        c.head && (c.head.time = m), 512 & c.flags && (Bb[0] = 255 & m, Bb[1] = m >>> 8 & 255, Bb[2] = m >>> 16 & 255, Bb[3] = m >>> 24 & 255, c.check = t(c.check, Bb, 4, 0)), m = 0, n = 0, c.mode = N;
                    case N:
                        for (; 16 > n;) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        c.head && (c.head.xflags = 255 & m, c.head.os = m >> 8), 512 & c.flags && (Bb[0] = 255 & m, Bb[1] = m >>> 8 & 255, c.check = t(c.check, Bb, 2, 0)), m = 0, n = 0, c.mode = O;
                    case O:
                        if (1024 & c.flags) {
                            for (; 16 > n;) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            c.length = m, c.head && (c.head.extra_len = m), 512 & c.flags && (Bb[0] = 255 & m, Bb[1] = m >>> 8 & 255, c.check = t(c.check, Bb, 2, 0)), m = 0, n = 0
                        } else c.head && (c.head.extra = null);
                        c.mode = P;
                    case P:
                        if (1024 & c.flags && (q = c.length, q > i && (q = i), q && (c.head && (wb = c.head.extra_len - c.length, c.head.extra || (c.head.extra = new Array(c.head.extra_len)), r.arraySet(c.head.extra, e, g, q, wb)), 512 & c.flags && (c.check = t(c.check, e, q, g)), i -= q, g += q, c.length -= q), c.length))break a;
                        c.length = 0, c.mode = Q;
                    case Q:
                        if (2048 & c.flags) {
                            if (0 === i)break a;
                            q = 0;
                            do wb = e[g + q++], c.head && wb && c.length < 65536 && (c.head.name += String.fromCharCode(wb)); while (wb && i > q);
                            if (512 & c.flags && (c.check = t(c.check, e, q, g)), i -= q, g += q, wb)break a
                        } else c.head && (c.head.name = null);
                        c.length = 0, c.mode = R;
                    case R:
                        if (4096 & c.flags) {
                            if (0 === i)break a;
                            q = 0;
                            do wb = e[g + q++], c.head && wb && c.length < 65536 && (c.head.comment += String.fromCharCode(wb)); while (wb && i > q);
                            if (512 & c.flags && (c.check = t(c.check, e, q, g)), i -= q, g += q, wb)break a
                        } else c.head && (c.head.comment = null);
                        c.mode = S;
                    case S:
                        if (512 & c.flags) {
                            for (; 16 > n;) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            if (m !== (65535 & c.check)) {
                                a.msg = "header crc mismatch", c.mode = lb;
                                break
                            }
                            m = 0, n = 0
                        }
                        c.head && (c.head.hcrc = c.flags >> 9 & 1, c.head.done = !0), a.adler = c.check = 0, c.mode = V;
                        break;
                    case T:
                        for (; 32 > n;) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        a.adler = c.check = d(m), m = 0, n = 0, c.mode = U;
                    case U:
                        if (0 === c.havedict)return a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, E;
                        a.adler = c.check = 1, c.mode = V;
                    case V:
                        if (b === A || b === B)break a;
                    case W:
                        if (c.last) {
                            m >>>= 7 & n, n -= 7 & n, c.mode = ib;
                            break
                        }
                        for (; 3 > n;) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        switch (c.last = 1 & m, m >>>= 1, n -= 1, 3 & m) {
                            case 0:
                                c.mode = X;
                                break;
                            case 1:
                                if (k(c), c.mode = bb, b === B) {
                                    m >>>= 2, n -= 2;
                                    break a
                                }
                                break;
                            case 2:
                                c.mode = $;
                                break;
                            case 3:
                                a.msg = "invalid block type", c.mode = lb
                        }
                        m >>>= 2, n -= 2;
                        break;
                    case X:
                        for (m >>>= 7 & n, n -= 7 & n; 32 > n;) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if ((65535 & m) !== (m >>> 16 ^ 65535)) {
                            a.msg = "invalid stored block lengths", c.mode = lb;
                            break
                        }
                        if (c.length = 65535 & m, m = 0, n = 0, c.mode = Y, b === B)break a;
                    case Y:
                        c.mode = Z;
                    case Z:
                        if (q = c.length) {
                            if (q > i && (q = i), q > j && (q = j), 0 === q)break a;
                            r.arraySet(f, e, g, q, h), i -= q, g += q, j -= q, h += q, c.length -= q;
                            break
                        }
                        c.mode = V;
                        break;
                    case $:
                        for (; 14 > n;) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (c.nlen = (31 & m) + 257, m >>>= 5, n -= 5, c.ndist = (31 & m) + 1, m >>>= 5, n -= 5, c.ncode = (15 & m) + 4, m >>>= 4, n -= 4, c.nlen > 286 || c.ndist > 30) {
                            a.msg = "too many length or distance symbols", c.mode = lb;
                            break
                        }
                        c.have = 0, c.mode = _;
                    case _:
                        for (; c.have < c.ncode;) {
                            for (; 3 > n;) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            c.lens[Cb[c.have++]] = 7 & m, m >>>= 3, n -= 3
                        }
                        for (; c.have < 19;)c.lens[Cb[c.have++]] = 0;
                        if (c.lencode = c.lendyn, c.lenbits = 7, yb = {bits: c.lenbits}, xb = v(w, c.lens, 0, 19, c.lencode, 0, c.work, yb), c.lenbits = yb.bits, xb) {
                            a.msg = "invalid code lengths set", c.mode = lb;
                            break
                        }
                        c.have = 0, c.mode = ab;
                    case ab:
                        for (; c.have < c.nlen + c.ndist;) {
                            for (; Ab = c.lencode[m & (1 << c.lenbits) - 1], qb = Ab >>> 24, rb = Ab >>> 16 & 255, sb = 65535 & Ab, !(n >= qb);) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            if (16 > sb)m >>>= qb, n -= qb, c.lens[c.have++] = sb; else {
                                if (16 === sb) {
                                    for (zb = qb + 2; zb > n;) {
                                        if (0 === i)break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    if (m >>>= qb, n -= qb, 0 === c.have) {
                                        a.msg = "invalid bit length repeat", c.mode = lb;
                                        break
                                    }
                                    wb = c.lens[c.have - 1], q = 3 + (3 & m), m >>>= 2, n -= 2
                                } else if (17 === sb) {
                                    for (zb = qb + 3; zb > n;) {
                                        if (0 === i)break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    m >>>= qb, n -= qb, wb = 0, q = 3 + (7 & m), m >>>= 3, n -= 3
                                } else {
                                    for (zb = qb + 7; zb > n;) {
                                        if (0 === i)break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    m >>>= qb, n -= qb, wb = 0, q = 11 + (127 & m), m >>>= 7, n -= 7
                                }
                                if (c.have + q > c.nlen + c.ndist) {
                                    a.msg = "invalid bit length repeat", c.mode = lb;
                                    break
                                }
                                for (; q--;)c.lens[c.have++] = wb
                            }
                        }
                        if (c.mode === lb)break;
                        if (0 === c.lens[256]) {
                            a.msg = "invalid code -- missing end-of-block", c.mode = lb;
                            break
                        }
                        if (c.lenbits = 9, yb = {bits: c.lenbits}, xb = v(x, c.lens, 0, c.nlen, c.lencode, 0, c.work, yb), c.lenbits = yb.bits, xb) {
                            a.msg = "invalid literal/lengths set", c.mode = lb;
                            break
                        }
                        if (c.distbits = 6, c.distcode = c.distdyn, yb = {bits: c.distbits}, xb = v(y, c.lens, c.nlen, c.ndist, c.distcode, 0, c.work, yb), c.distbits = yb.bits, xb) {
                            a.msg = "invalid distances set", c.mode = lb;
                            break
                        }
                        if (c.mode = bb, b === B)break a;
                    case bb:
                        c.mode = cb;
                    case cb:
                        if (i >= 6 && j >= 258) {
                            a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, u(a, p), h = a.next_out, f = a.output, j = a.avail_out, g = a.next_in, e = a.input, i = a.avail_in, m = c.hold, n = c.bits, c.mode === V && (c.back = -1);
                            break
                        }
                        for (c.back = 0; Ab = c.lencode[m & (1 << c.lenbits) - 1], qb = Ab >>> 24, rb = Ab >>> 16 & 255, sb = 65535 & Ab, !(n >= qb);) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (rb && 0 === (240 & rb)) {
                            for (tb = qb, ub = rb, vb = sb; Ab = c.lencode[vb + ((m & (1 << tb + ub) - 1) >> tb)], qb = Ab >>> 24, rb = Ab >>> 16 & 255, sb = 65535 & Ab, !(n >= tb + qb);) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            m >>>= tb, n -= tb, c.back += tb
                        }
                        if (m >>>= qb, n -= qb, c.back += qb, c.length = sb, 0 === rb) {
                            c.mode = hb;
                            break
                        }
                        if (32 & rb) {
                            c.back = -1, c.mode = V;
                            break
                        }
                        if (64 & rb) {
                            a.msg = "invalid literal/length code", c.mode = lb;
                            break
                        }
                        c.extra = 15 & rb, c.mode = db;
                    case db:
                        if (c.extra) {
                            for (zb = c.extra; zb > n;) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            c.length += m & (1 << c.extra) - 1, m >>>= c.extra, n -= c.extra, c.back += c.extra
                        }
                        c.was = c.length, c.mode = eb;
                    case eb:
                        for (; Ab = c.distcode[m & (1 << c.distbits) - 1], qb = Ab >>> 24, rb = Ab >>> 16 & 255, sb = 65535 & Ab, !(n >= qb);) {
                            if (0 === i)break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (0 === (240 & rb)) {
                            for (tb = qb, ub = rb, vb = sb; Ab = c.distcode[vb + ((m & (1 << tb + ub) - 1) >> tb)], qb = Ab >>> 24, rb = Ab >>> 16 & 255, sb = 65535 & Ab, !(n >= tb + qb);) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            m >>>= tb, n -= tb, c.back += tb
                        }
                        if (m >>>= qb, n -= qb, c.back += qb, 64 & rb) {
                            a.msg = "invalid distance code", c.mode = lb;
                            break
                        }
                        c.offset = sb, c.extra = 15 & rb, c.mode = fb;
                    case fb:
                        if (c.extra) {
                            for (zb = c.extra; zb > n;) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            c.offset += m & (1 << c.extra) - 1, m >>>= c.extra, n -= c.extra, c.back += c.extra
                        }
                        if (c.offset > c.dmax) {
                            a.msg = "invalid distance too far back", c.mode = lb;
                            break
                        }
                        c.mode = gb;
                    case gb:
                        if (0 === j)break a;
                        if (q = p - j, c.offset > q) {
                            if (q = c.offset - q, q > c.whave && c.sane) {
                                a.msg = "invalid distance too far back", c.mode = lb;
                                break
                            }
                            q > c.wnext ? (q -= c.wnext, ob = c.wsize - q) : ob = c.wnext - q, q > c.length && (q = c.length), pb = c.window
                        } else pb = f, ob = h - c.offset, q = c.length;
                        q > j && (q = j), j -= q, c.length -= q;
                        do f[h++] = pb[ob++]; while (--q);
                        0 === c.length && (c.mode = cb);
                        break;
                    case hb:
                        if (0 === j)break a;
                        f[h++] = c.length, j--, c.mode = cb;
                        break;
                    case ib:
                        if (c.wrap) {
                            for (; 32 > n;) {
                                if (0 === i)break a;
                                i--, m |= e[g++] << n, n += 8
                            }
                            if (p -= j, a.total_out += p, c.total += p, p && (a.adler = c.check = c.flags ? t(c.check, f, p, h - p) : s(c.check, f, p, h - p)), p = j, (c.flags ? m : d(m)) !== c.check) {
                                a.msg = "incorrect data check", c.mode = lb;
                                break
                            }
                            m = 0, n = 0
                        }
                        c.mode = jb;
                    case jb:
                        if (c.wrap && c.flags) {
                            for (; 32 > n;) {
                                if (0 === i)break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            if (m !== (4294967295 & c.total)) {
                                a.msg = "incorrect length check", c.mode = lb;
                                break
                            }
                            m = 0, n = 0
                        }
                        c.mode = kb;
                    case kb:
                        xb = D;
                        break a;
                    case lb:
                        xb = G;
                        break a;
                    case mb:
                        return H;
                    case nb:
                    default:
                        return F
                }
                return a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, (c.wsize || p !== a.avail_out && c.mode < lb && (c.mode < ib || b !== z)) && l(a, a.output, a.next_out, p - a.avail_out) ? (c.mode = mb, H) : (o -= a.avail_in, p -= a.avail_out, a.total_in += o, a.total_out += p, c.total += p, c.wrap && p && (a.adler = c.check = c.flags ? t(c.check, f, p, a.next_out - p) : s(c.check, f, p, a.next_out - p)), a.data_type = c.bits + (c.last ? 64 : 0) + (c.mode === V ? 128 : 0) + (c.mode === bb || c.mode === Y ? 256 : 0), (0 === o && 0 === p || b === z) && xb === C && (xb = I), xb)
            }

            function n(a) {
                if (!a || !a.state)return F;
                var b = a.state;
                return b.window && (b.window = null), a.state = null, C
            }

            function o(a, b) {
                var c;
                return a && a.state ? (c = a.state, 0 === (2 & c.wrap) ? F : (c.head = b, b.done = !1, C)) : F
            }

            var p, q, r = a("../utils/common"), s = a("./adler32"), t = a("./crc32"), u = a("./inffast"), v = a("./inftrees"), w = 0, x = 1, y = 2, z = 4, A = 5, B = 6, C = 0, D = 1, E = 2, F = -2, G = -3, H = -4, I = -5, J = 8, K = 1, L = 2, M = 3, N = 4, O = 5, P = 6, Q = 7, R = 8, S = 9, T = 10, U = 11, V = 12, W = 13, X = 14, Y = 15, Z = 16, $ = 17, _ = 18, ab = 19, bb = 20, cb = 21, db = 22, eb = 23, fb = 24, gb = 25, hb = 26, ib = 27, jb = 28, kb = 29, lb = 30, mb = 31, nb = 32, ob = 852, pb = 592, qb = 15, rb = qb, sb = !0;
            c.inflateReset = g, c.inflateReset2 = h, c.inflateResetKeep = f, c.inflateInit = j, c.inflateInit2 = i, c.inflate = m, c.inflateEnd = n, c.inflateGetHeader = o, c.inflateInfo = "pako inflate (from Nodeca project)"
        }, {"../utils/common": 27, "./adler32": 29, "./crc32": 31, "./inffast": 34, "./inftrees": 36}],
        36: [function (a, b) {
            "use strict";
            var c = a("../utils/common"), d = 15, e = 852, f = 592, g = 0, h = 1, i = 2, j = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], k = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], l = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], m = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            b.exports = function (a, b, n, o, p, q, r, s) {
                var t, u, v, w, x, y, z, A, B, C = s.bits, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = null, O = 0, P = new c.Buf16(d + 1), Q = new c.Buf16(d + 1), R = null, S = 0;
                for (D = 0; d >= D; D++)P[D] = 0;
                for (E = 0; o > E; E++)P[b[n + E]]++;
                for (H = C, G = d; G >= 1 && 0 === P[G]; G--);
                if (H > G && (H = G), 0 === G)return p[q++] = 20971520, p[q++] = 20971520, s.bits = 1, 0;
                for (F = 1; G > F && 0 === P[F]; F++);
                for (F > H && (H = F), K = 1, D = 1; d >= D; D++)if (K <<= 1, K -= P[D], 0 > K)return -1;
                if (K > 0 && (a === g || 1 !== G))return -1;
                for (Q[1] = 0, D = 1; d > D; D++)Q[D + 1] = Q[D] + P[D];
                for (E = 0; o > E; E++)0 !== b[n + E] && (r[Q[b[n + E]]++] = E);
                if (a === g ? (N = R = r, y = 19) : a === h ? (N = j, O -= 257, R = k, S -= 257, y = 256) : (N = l, R = m, y = -1), M = 0, E = 0, D = F, x = q, I = H, J = 0, v = -1, L = 1 << H, w = L - 1, a === h && L > e || a === i && L > f)return 1;
                for (var T = 0; ;) {
                    T++, z = D - J, r[E] < y ? (A = 0, B = r[E]) : r[E] > y ? (A = R[S + r[E]], B = N[O + r[E]]) : (A = 96, B = 0), t = 1 << D - J, u = 1 << I, F = u;
                    do u -= t, p[x + (M >> J) + u] = z << 24 | A << 16 | B | 0; while (0 !== u);
                    for (t = 1 << D - 1; M & t;)t >>= 1;
                    if (0 !== t ? (M &= t - 1, M += t) : M = 0, E++, 0 === --P[D]) {
                        if (D === G)break;
                        D = b[n + r[E]]
                    }
                    if (D > H && (M & w) !== v) {
                        for (0 === J && (J = H), x += F, I = D - J, K = 1 << I; G > I + J && (K -= P[I + J], !(0 >= K));)I++, K <<= 1;
                        if (L += 1 << I, a === h && L > e || a === i && L > f)return 1;
                        v = M & w, p[v] = H << 24 | I << 16 | x - q | 0
                    }
                }
                return 0 !== M && (p[x + M] = D - J << 24 | 64 << 16 | 0), s.bits = H, 0
            }
        }, {"../utils/common": 27}],
        37: [function (a, b) {
            "use strict";
            b.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }, {}],
        38: [function (a, b, c) {
            "use strict";
            function d(a) {
                for (var b = a.length; --b >= 0;)a[b] = 0
            }

            function e(a) {
                return 256 > a ? gb[a] : gb[256 + (a >>> 7)]
            }

            function f(a, b) {
                a.pending_buf[a.pending++] = 255 & b, a.pending_buf[a.pending++] = b >>> 8 & 255
            }

            function g(a, b, c) {
                a.bi_valid > V - c ? (a.bi_buf |= b << a.bi_valid & 65535, f(a, a.bi_buf), a.bi_buf = b >> V - a.bi_valid, a.bi_valid += c - V) : (a.bi_buf |= b << a.bi_valid & 65535, a.bi_valid += c)
            }

            function h(a, b, c) {
                g(a, c[2 * b], c[2 * b + 1])
            }

            function i(a, b) {
                var c = 0;
                do c |= 1 & a, a >>>= 1, c <<= 1; while (--b > 0);
                return c >>> 1
            }

            function j(a) {
                16 === a.bi_valid ? (f(a, a.bi_buf), a.bi_buf = 0, a.bi_valid = 0) : a.bi_valid >= 8 && (a.pending_buf[a.pending++] = 255 & a.bi_buf, a.bi_buf >>= 8, a.bi_valid -= 8)
            }

            function k(a, b) {
                var c, d, e, f, g, h, i = b.dyn_tree, j = b.max_code, k = b.stat_desc.static_tree, l = b.stat_desc.has_stree, m = b.stat_desc.extra_bits, n = b.stat_desc.extra_base, o = b.stat_desc.max_length, p = 0;
                for (f = 0; U >= f; f++)a.bl_count[f] = 0;
                for (i[2 * a.heap[a.heap_max] + 1] = 0, c = a.heap_max + 1; T > c; c++)d = a.heap[c], f = i[2 * i[2 * d + 1] + 1] + 1, f > o && (f = o, p++), i[2 * d + 1] = f, d > j || (a.bl_count[f]++, g = 0, d >= n && (g = m[d - n]), h = i[2 * d], a.opt_len += h * (f + g), l && (a.static_len += h * (k[2 * d + 1] + g)));
                if (0 !== p) {
                    do {
                        for (f = o - 1; 0 === a.bl_count[f];)f--;
                        a.bl_count[f]--, a.bl_count[f + 1] += 2, a.bl_count[o]--, p -= 2
                    } while (p > 0);
                    for (f = o; 0 !== f; f--)for (d = a.bl_count[f]; 0 !== d;)e = a.heap[--c], e > j || (i[2 * e + 1] !== f && (a.opt_len += (f - i[2 * e + 1]) * i[2 * e], i[2 * e + 1] = f), d--)
                }
            }

            function l(a, b, c) {
                var d, e, f = new Array(U + 1), g = 0;
                for (d = 1; U >= d; d++)f[d] = g = g + c[d - 1] << 1;
                for (e = 0; b >= e; e++) {
                    var h = a[2 * e + 1];
                    0 !== h && (a[2 * e] = i(f[h]++, h))
                }
            }

            function m() {
                var a, b, c, d, e, f = new Array(U + 1);
                for (c = 0, d = 0; O - 1 > d; d++)for (ib[d] = c, a = 0; a < 1 << _[d]; a++)hb[c++] = d;
                for (hb[c - 1] = d, e = 0, d = 0; 16 > d; d++)for (jb[d] = e, a = 0; a < 1 << ab[d]; a++)gb[e++] = d;
                for (e >>= 7; R > d; d++)for (jb[d] = e << 7, a = 0; a < 1 << ab[d] - 7; a++)gb[256 + e++] = d;
                for (b = 0; U >= b; b++)f[b] = 0;
                for (a = 0; 143 >= a;)eb[2 * a + 1] = 8, a++, f[8]++;
                for (; 255 >= a;)eb[2 * a + 1] = 9, a++, f[9]++;
                for (; 279 >= a;)eb[2 * a + 1] = 7, a++, f[7]++;
                for (; 287 >= a;)eb[2 * a + 1] = 8, a++, f[8]++;
                for (l(eb, Q + 1, f), a = 0; R > a; a++)fb[2 * a + 1] = 5, fb[2 * a] = i(a, 5);
                kb = new nb(eb, _, P + 1, Q, U), lb = new nb(fb, ab, 0, R, U), mb = new nb(new Array(0), bb, 0, S, W)
            }

            function n(a) {
                var b;
                for (b = 0; Q > b; b++)a.dyn_ltree[2 * b] = 0;
                for (b = 0; R > b; b++)a.dyn_dtree[2 * b] = 0;
                for (b = 0; S > b; b++)a.bl_tree[2 * b] = 0;
                a.dyn_ltree[2 * X] = 1, a.opt_len = a.static_len = 0, a.last_lit = a.matches = 0
            }

            function o(a) {
                a.bi_valid > 8 ? f(a, a.bi_buf) : a.bi_valid > 0 && (a.pending_buf[a.pending++] = a.bi_buf), a.bi_buf = 0, a.bi_valid = 0
            }

            function p(a, b, c, d) {
                o(a), d && (f(a, c), f(a, ~c)), E.arraySet(a.pending_buf, a.window, b, c, a.pending), a.pending += c
            }

            function q(a, b, c, d) {
                var e = 2 * b, f = 2 * c;
                return a[e] < a[f] || a[e] === a[f] && d[b] <= d[c]
            }

            function r(a, b, c) {
                for (var d = a.heap[c], e = c << 1; e <= a.heap_len && (e < a.heap_len && q(b, a.heap[e + 1], a.heap[e], a.depth) && e++, !q(b, d, a.heap[e], a.depth));)a.heap[c] = a.heap[e], c = e, e <<= 1;
                a.heap[c] = d
            }

            function s(a, b, c) {
                var d, f, i, j, k = 0;
                if (0 !== a.last_lit)do d = a.pending_buf[a.d_buf + 2 * k] << 8 | a.pending_buf[a.d_buf + 2 * k + 1], f = a.pending_buf[a.l_buf + k], k++, 0 === d ? h(a, f, b) : (i = hb[f], h(a, i + P + 1, b), j = _[i], 0 !== j && (f -= ib[i], g(a, f, j)), d--, i = e(d), h(a, i, c), j = ab[i], 0 !== j && (d -= jb[i], g(a, d, j))); while (k < a.last_lit);
                h(a, X, b)
            }

            function t(a, b) {
                var c, d, e, f = b.dyn_tree, g = b.stat_desc.static_tree, h = b.stat_desc.has_stree, i = b.stat_desc.elems, j = -1;
                for (a.heap_len = 0, a.heap_max = T, c = 0; i > c; c++)0 !== f[2 * c] ? (a.heap[++a.heap_len] = j = c, a.depth[c] = 0) : f[2 * c + 1] = 0;
                for (; a.heap_len < 2;)e = a.heap[++a.heap_len] = 2 > j ? ++j : 0, f[2 * e] = 1, a.depth[e] = 0, a.opt_len--, h && (a.static_len -= g[2 * e + 1]);
                for (b.max_code = j, c = a.heap_len >> 1; c >= 1; c--)r(a, f, c);
                e = i;
                do c = a.heap[1], a.heap[1] = a.heap[a.heap_len--], r(a, f, 1), d = a.heap[1], a.heap[--a.heap_max] = c, a.heap[--a.heap_max] = d, f[2 * e] = f[2 * c] + f[2 * d], a.depth[e] = (a.depth[c] >= a.depth[d] ? a.depth[c] : a.depth[d]) + 1, f[2 * c + 1] = f[2 * d + 1] = e, a.heap[1] = e++, r(a, f, 1); while (a.heap_len >= 2);
                a.heap[--a.heap_max] = a.heap[1], k(a, b), l(f, j, a.bl_count)
            }

            function u(a, b, c) {
                var d, e, f = -1, g = b[1], h = 0, i = 7, j = 4;
                for (0 === g && (i = 138, j = 3), b[2 * (c + 1) + 1] = 65535, d = 0; c >= d; d++)e = g, g = b[2 * (d + 1) + 1], ++h < i && e === g || (j > h ? a.bl_tree[2 * e] += h : 0 !== e ? (e !== f && a.bl_tree[2 * e]++, a.bl_tree[2 * Y]++) : 10 >= h ? a.bl_tree[2 * Z]++ : a.bl_tree[2 * $]++, h = 0, f = e, 0 === g ? (i = 138, j = 3) : e === g ? (i = 6, j = 3) : (i = 7, j = 4))
            }

            function v(a, b, c) {
                var d, e, f = -1, i = b[1], j = 0, k = 7, l = 4;
                for (0 === i && (k = 138, l = 3), d = 0; c >= d; d++)if (e = i, i = b[2 * (d + 1) + 1], !(++j < k && e === i)) {
                    if (l > j) {
                        do h(a, e, a.bl_tree); while (0 !== --j)
                    } else 0 !== e ? (e !== f && (h(a, e, a.bl_tree), j--), h(a, Y, a.bl_tree), g(a, j - 3, 2)) : 10 >= j ? (h(a, Z, a.bl_tree), g(a, j - 3, 3)) : (h(a, $, a.bl_tree), g(a, j - 11, 7));
                    j = 0, f = e, 0 === i ? (k = 138, l = 3) : e === i ? (k = 6, l = 3) : (k = 7, l = 4)
                }
            }

            function w(a) {
                var b;
                for (u(a, a.dyn_ltree, a.l_desc.max_code), u(a, a.dyn_dtree, a.d_desc.max_code), t(a, a.bl_desc), b = S - 1; b >= 3 && 0 === a.bl_tree[2 * cb[b] + 1]; b--);
                return a.opt_len += 3 * (b + 1) + 5 + 5 + 4, b
            }

            function x(a, b, c, d) {
                var e;
                for (g(a, b - 257, 5), g(a, c - 1, 5), g(a, d - 4, 4), e = 0; d > e; e++)g(a, a.bl_tree[2 * cb[e] + 1], 3);
                v(a, a.dyn_ltree, b - 1), v(a, a.dyn_dtree, c - 1)
            }

            function y(a) {
                var b, c = 4093624447;
                for (b = 0; 31 >= b; b++, c >>>= 1)if (1 & c && 0 !== a.dyn_ltree[2 * b])return G;
                if (0 !== a.dyn_ltree[18] || 0 !== a.dyn_ltree[20] || 0 !== a.dyn_ltree[26])return H;
                for (b = 32; P > b; b++)if (0 !== a.dyn_ltree[2 * b])return H;
                return G
            }

            function z(a) {
                pb || (m(), pb = !0), a.l_desc = new ob(a.dyn_ltree, kb), a.d_desc = new ob(a.dyn_dtree, lb), a.bl_desc = new ob(a.bl_tree, mb), a.bi_buf = 0, a.bi_valid = 0, n(a)
            }

            function A(a, b, c, d) {
                g(a, (J << 1) + (d ? 1 : 0), 3), p(a, b, c, !0)
            }

            function B(a) {
                g(a, K << 1, 3), h(a, X, eb), j(a)
            }

            function C(a, b, c, d) {
                var e, f, h = 0;
                a.level > 0 ? (a.strm.data_type === I && (a.strm.data_type = y(a)), t(a, a.l_desc), t(a, a.d_desc), h = w(a), e = a.opt_len + 3 + 7 >>> 3, f = a.static_len + 3 + 7 >>> 3, e >= f && (e = f)) : e = f = c + 5, e >= c + 4 && -1 !== b ? A(a, b, c, d) : a.strategy === F || f === e ? (g(a, (K << 1) + (d ? 1 : 0), 3), s(a, eb, fb)) : (g(a, (L << 1) + (d ? 1 : 0), 3), x(a, a.l_desc.max_code + 1, a.d_desc.max_code + 1, h + 1), s(a, a.dyn_ltree, a.dyn_dtree)), n(a), d && o(a)
            }

            function D(a, b, c) {
                return a.pending_buf[a.d_buf + 2 * a.last_lit] = b >>> 8 & 255, a.pending_buf[a.d_buf + 2 * a.last_lit + 1] = 255 & b, a.pending_buf[a.l_buf + a.last_lit] = 255 & c, a.last_lit++, 0 === b ? a.dyn_ltree[2 * c]++ : (a.matches++, b--, a.dyn_ltree[2 * (hb[c] + P + 1)]++, a.dyn_dtree[2 * e(b)]++), a.last_lit === a.lit_bufsize - 1
            }

            var E = a("../utils/common"), F = 4, G = 0, H = 1, I = 2, J = 0, K = 1, L = 2, M = 3, N = 258, O = 29, P = 256, Q = P + 1 + O, R = 30, S = 19, T = 2 * Q + 1, U = 15, V = 16, W = 7, X = 256, Y = 16, Z = 17, $ = 18, _ = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], ab = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], bb = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], cb = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], db = 512, eb = new Array(2 * (Q + 2));
            d(eb);
            var fb = new Array(2 * R);
            d(fb);
            var gb = new Array(db);
            d(gb);
            var hb = new Array(N - M + 1);
            d(hb);
            var ib = new Array(O);
            d(ib);
            var jb = new Array(R);
            d(jb);
            var kb, lb, mb, nb = function (a, b, c, d, e) {
                this.static_tree = a, this.extra_bits = b, this.extra_base = c, this.elems = d, this.max_length = e, this.has_stree = a && a.length
            }, ob = function (a, b) {
                this.dyn_tree = a, this.max_code = 0, this.stat_desc = b
            }, pb = !1;
            c._tr_init = z, c._tr_stored_block = A, c._tr_flush_block = C, c._tr_tally = D, c._tr_align = B
        }, {"../utils/common": 27}],
        39: [function (a, b) {
            "use strict";
            function c() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0
            }

            b.exports = c
        }, {}]
    }, {}, [9])(9)
});

/*! pdfmake v0.1.32, @license MIT, @link http://pdfmake.org */
!function (t, e) {
    if ("object" == typeof exports && "object" == typeof module)module.exports = e(); else if ("function" == typeof define && define.amd)define([], e); else {
        var n = e();
        for (var r in n)("object" == typeof exports ? exports : t)[r] = n[r]
    }
}(this, function () {
    return function (t) {
        function e(r) {
            if (n[r])return n[r].exports;
            var i = n[r] = {exports: {}, id: r, loaded: !1};
            return t[r].call(i.exports, i, i.exports, e), i.loaded = !0, i.exports
        }

        var n = {};
        return e.m = t, e.c = n, e.p = "", e(0)
    }([function (t, e, n) {
        (function (e) {
            t.exports = e.pdfMake = n(1)
        }).call(e, function () {
            return this
        }())
    }, function (t, e, n) {
        (function (e, r) {
            "use strict";
            function i(t, e, n, r) {
                this.docDefinition = t, this.tableLayouts = e || null, this.fonts = n || l, this.vfs = r
            }

            function o() {
                return !!Object.keys
            }

            var a = n(6), s = n(300), u = s.saveAs, l = {
                Consola: {
                    normal: "consola.ttf",
                    bold: "consolab.ttf",
                    italics: "consolai.ttf",
                    bolditalics: "consolaz.ttf"
                }
            };
            i.prototype._createDoc = function (t, n) {
                t = t || {}, this.tableLayouts && (t.tableLayouts = this.tableLayouts);
                var r = new a(this.fonts);
                r.fs.bindFS(this.vfs);
                var i, o = r.createPdfKitDocument(this.docDefinition, t), s = [];
                o.on("readable", function () {
                    for (var t; null !== (t = o.read(9007199254740991));)s.push(t)
                }), o.on("end", function () {
                    i = e.concat(s), n(i, o._pdfMakePages)
                }), o.end()
            }, i.prototype._getPages = function (t, e) {
                if (!e)throw"_getPages is an async method and needs a callback argument";
                this._createDoc(t, function (t, n) {
                    e(n)
                })
            }, i.prototype._bufferToBlob = function (t) {
                var e;
                try {
                    e = new Blob([t], {type: "application/pdf"})
                } catch (r) {
                    if ("InvalidStateError" === r.name) {
                        var n = new Uint8Array(t);
                        e = new Blob([n.buffer], {type: "application/pdf"})
                    }
                }
                if (!e)throw"Could not generate blob";
                return e
            }, i.prototype._openWindow = function () {
                var t = r.open("", "_blank");
                if (null === t)throw"Open PDF in new window blocked by browser";
                return t
            }, i.prototype._openPdf = function (t, e) {
                e || (e = this._openWindow());
                try {
                    this.getBlob(function (t) {
                        var n = r.URL || r.webkitURL, i = n.createObjectURL(t);
                        e.location.href = i
                    }, t)
                } catch (t) {
                    throw e.close(), t
                }
            }, i.prototype.open = function (t, e) {
                t = t || {}, t.autoPrint = !1, e = e || null, this._openPdf(t, e)
            }, i.prototype.print = function (t, e) {
                t = t || {}, t.autoPrint = !0, e = e || null, this._openPdf(t, e)
            }, i.prototype.download = function (t, e, n) {
                "function" == typeof t && (e = t, t = null), t = t || "file.pdf", this.getBlob(function (n) {
                    u(n, t), "function" == typeof e && e()
                }, n)
            }, i.prototype.getBase64 = function (t, e) {
                if (!t)throw"getBase64 is an async method and needs a callback argument";
                this.getBuffer(function (e) {
                    t(e.toString("base64"))
                }, e)
            }, i.prototype.getDataUrl = function (t, e) {
                if (!t)throw"getDataUrl is an async method and needs a callback argument";
                this.getBuffer(function (e) {
                    t("data:application/pdf;base64," + e.toString("base64"))
                }, e)
            }, i.prototype.getBlob = function (t, e) {
                if (!t)throw"getBlob is an async method and needs a callback argument";
                var n = this;
                this.getBuffer(function (e) {
                    var r = n._bufferToBlob(e);
                    t(r)
                }, e)
            }, i.prototype.getBuffer = function (t, e) {
                if (!t)throw"getBuffer is an async method and needs a callback argument";
                this._createDoc(e, function (e) {
                    t(e)
                })
            }, t.exports = {
                createPdf: function (t) {
                    if (!o())throw"Your browser does not provide the level of support needed";
                    return new i(t, r.pdfMake.tableLayouts, r.pdfMake.fonts, r.pdfMake.vfs)
                }
            }
        }).call(e, n(2).Buffer, function () {
            return this
        }())
    }, function (t, e, n) {
        (function (t) {
            "use strict";
            function r() {
                return o.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
            }

            function i(t, e) {
                if (r() < e)throw new RangeError("Invalid typed array length");
                return o.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(e), t.__proto__ = o.prototype) : (null === t && (t = new o(e)), t.length = e), t
            }

            function o(t, e, n) {
                if (!(o.TYPED_ARRAY_SUPPORT || this instanceof o))return new o(t, e, n);
                if ("number" == typeof t) {
                    if ("string" == typeof e)throw new Error("If encoding is specified then the first argument must be a string");
                    return l(this, t)
                }
                return a(this, t, e, n)
            }

            function a(t, e, n, r) {
                if ("number" == typeof e)throw new TypeError('"value" argument must not be a number');
                return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer ? h(t, e, n, r) : "string" == typeof e ? c(t, e, n) : p(t, e)
            }

            function s(t) {
                if ("number" != typeof t)throw new TypeError('"size" argument must be a number');
                if (t < 0)throw new RangeError('"size" argument must not be negative')
            }

            function u(t, e, n, r) {
                return s(e), e <= 0 ? i(t, e) : void 0 !== n ? "string" == typeof r ? i(t, e).fill(n, r) : i(t, e).fill(n) : i(t, e)
            }

            function l(t, e) {
                if (s(e), t = i(t, e < 0 ? 0 : 0 | d(e)), !o.TYPED_ARRAY_SUPPORT)for (var n = 0; n < e; ++n)t[n] = 0;
                return t
            }

            function c(t, e, n) {
                if ("string" == typeof n && "" !== n || (n = "utf8"), !o.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');
                var r = 0 | y(e, n);
                t = i(t, r);
                var a = t.write(e, n);
                return a !== r && (t = t.slice(0, a)), t
            }

            function f(t, e) {
                var n = e.length < 0 ? 0 : 0 | d(e.length);
                t = i(t, n);
                for (var r = 0; r < n; r += 1)t[r] = 255 & e[r];
                return t
            }

            function h(t, e, n, r) {
                if (e.byteLength, n < 0 || e.byteLength < n)throw new RangeError("'offset' is out of bounds");
                if (e.byteLength < n + (r || 0))throw new RangeError("'length' is out of bounds");
                return e = void 0 === n && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e, n) : new Uint8Array(e, n, r), o.TYPED_ARRAY_SUPPORT ? (t = e, t.__proto__ = o.prototype) : t = f(t, e), t
            }

            function p(t, e) {
                if (o.isBuffer(e)) {
                    var n = 0 | d(e.length);
                    return t = i(t, n), 0 === t.length ? t : (e.copy(t, 0, 0, n), t)
                }
                if (e) {
                    if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length" in e)return "number" != typeof e.length || X(e.length) ? i(t, 0) : f(t, e);
                    if ("Buffer" === e.type && Q(e.data))return f(t, e.data)
                }
                throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
            }

            function d(t) {
                if (t >= r())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + r().toString(16) + " bytes");
                return 0 | t
            }

            function g(t) {
                return +t != t && (t = 0), o.alloc(+t)
            }

            function y(t, e) {
                if (o.isBuffer(t))return t.length;
                if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer))return t.byteLength;
                "string" != typeof t && (t = "" + t);
                var n = t.length;
                if (0 === n)return 0;
                for (var r = !1; ;)switch (e) {
                    case"ascii":
                    case"latin1":
                    case"binary":
                        return n;
                    case"utf8":
                    case"utf-8":
                    case void 0:
                        return V(t).length;
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                        return 2 * n;
                    case"hex":
                        return n >>> 1;
                    case"base64":
                        return Z(t).length;
                    default:
                        if (r)return V(t).length;
                        e = ("" + e).toLowerCase(), r = !0
                }
            }

            function v(t, e, n) {
                var r = !1;
                if ((void 0 === e || e < 0) && (e = 0), e > this.length)return "";
                if ((void 0 === n || n > this.length) && (n = this.length), n <= 0)return "";
                if (n >>>= 0, e >>>= 0, n <= e)return "";
                for (t || (t = "utf8"); ;)switch (t) {
                    case"hex":
                        return B(this, e, n);
                    case"utf8":
                    case"utf-8":
                        return E(this, e, n);
                    case"ascii":
                        return T(this, e, n);
                    case"latin1":
                    case"binary":
                        return O(this, e, n);
                    case"base64":
                        return P(this, e, n);
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                        return L(this, e, n);
                    default:
                        if (r)throw new TypeError("Unknown encoding: " + t);
                        t = (t + "").toLowerCase(), r = !0
                }
            }

            function b(t, e, n) {
                var r = t[e];
                t[e] = t[n], t[n] = r
            }

            function m(t, e, n, r, i) {
                if (0 === t.length)return -1;
                if ("string" == typeof n ? (r = n, n = 0) : n > 2147483647 ? n = 2147483647 : n < -2147483648 && (n = -2147483648), n = +n, isNaN(n) && (n = i ? 0 : t.length - 1), n < 0 && (n = t.length + n), n >= t.length) {
                    if (i)return -1;
                    n = t.length - 1
                } else if (n < 0) {
                    if (!i)return -1;
                    n = 0
                }
                if ("string" == typeof e && (e = o.from(e, r)), o.isBuffer(e))return 0 === e.length ? -1 : w(t, e, n, r, i);
                if ("number" == typeof e)return e &= 255, o.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, e, n) : Uint8Array.prototype.lastIndexOf.call(t, e, n) : w(t, [e], n, r, i);
                throw new TypeError("val must be string, number or Buffer")
            }

            function w(t, e, n, r, i) {
                function o(t, e) {
                    return 1 === a ? t[e] : t.readUInt16BE(e * a)
                }

                var a = 1, s = t.length, u = e.length;
                if (void 0 !== r && ("ucs2" === (r = String(r).toLowerCase()) || "ucs-2" === r || "utf16le" === r || "utf-16le" === r)) {
                    if (t.length < 2 || e.length < 2)return -1;
                    a = 2, s /= 2, u /= 2, n /= 2
                }
                var l;
                if (i) {
                    var c = -1;
                    for (l = n; l < s; l++)if (o(t, l) === o(e, -1 === c ? 0 : l - c)) {
                        if (-1 === c && (c = l), l - c + 1 === u)return c * a
                    } else-1 !== c && (l -= l - c), c = -1
                } else for (n + u > s && (n = s - u), l = n; l >= 0; l--) {
                    for (var f = !0, h = 0; h < u; h++)if (o(t, l + h) !== o(e, h)) {
                        f = !1;
                        break
                    }
                    if (f)return l
                }
                return -1
            }

            function x(t, e, n, r) {
                n = Number(n) || 0;
                var i = t.length - n;
                r ? (r = Number(r)) > i && (r = i) : r = i;
                var o = e.length;
                if (o % 2 != 0)throw new TypeError("Invalid hex string");
                r > o / 2 && (r = o / 2);
                for (var a = 0; a < r; ++a) {
                    var s = parseInt(e.substr(2 * a, 2), 16);
                    if (isNaN(s))return a;
                    t[n + a] = s
                }
                return a
            }

            function _(t, e, n, r) {
                return Y(V(e, t.length - n), t, n, r)
            }

            function k(t, e, n, r) {
                return Y(H(e), t, n, r)
            }

            function S(t, e, n, r) {
                return k(t, e, n, r)
            }

            function C(t, e, n, r) {
                return Y(Z(e), t, n, r)
            }

            function A(t, e, n, r) {
                return Y(q(e, t.length - n), t, n, r)
            }

            function P(t, e, n) {
                return 0 === e && n === t.length ? K.fromByteArray(t) : K.fromByteArray(t.slice(e, n))
            }

            function E(t, e, n) {
                n = Math.min(t.length, n);
                for (var r = [], i = e; i < n;) {
                    var o = t[i], a = null, s = o > 239 ? 4 : o > 223 ? 3 : o > 191 ? 2 : 1;
                    if (i + s <= n) {
                        var u, l, c, f;
                        switch (s) {
                            case 1:
                                o < 128 && (a = o);
                                break;
                            case 2:
                                u = t[i + 1], 128 == (192 & u) && (f = (31 & o) << 6 | 63 & u) > 127 && (a = f);
                                break;
                            case 3:
                                u = t[i + 1], l = t[i + 2], 128 == (192 & u) && 128 == (192 & l) && (f = (15 & o) << 12 | (63 & u) << 6 | 63 & l) > 2047 && (f < 55296 || f > 57343) && (a = f);
                                break;
                            case 4:
                                u = t[i + 1], l = t[i + 2], c = t[i + 3], 128 == (192 & u) && 128 == (192 & l) && 128 == (192 & c) && (f = (15 & o) << 18 | (63 & u) << 12 | (63 & l) << 6 | 63 & c) > 65535 && f < 1114112 && (a = f)
                        }
                    }
                    null === a ? (a = 65533, s = 1) : a > 65535 && (a -= 65536, r.push(a >>> 10 & 1023 | 55296), a = 56320 | 1023 & a), r.push(a), i += s
                }
                return I(r)
            }

            function I(t) {
                var e = t.length;
                if (e <= $)return String.fromCharCode.apply(String, t);
                for (var n = "", r = 0; r < e;)n += String.fromCharCode.apply(String, t.slice(r, r += $));
                return n
            }

            function T(t, e, n) {
                var r = "";
                n = Math.min(t.length, n);
                for (var i = e; i < n; ++i)r += String.fromCharCode(127 & t[i]);
                return r
            }

            function O(t, e, n) {
                var r = "";
                n = Math.min(t.length, n);
                for (var i = e; i < n; ++i)r += String.fromCharCode(t[i]);
                return r
            }

            function B(t, e, n) {
                var r = t.length;
                (!e || e < 0) && (e = 0), (!n || n < 0 || n > r) && (n = r);
                for (var i = "", o = e; o < n; ++o)i += G(t[o]);
                return i
            }

            function L(t, e, n) {
                for (var r = t.slice(e, n), i = "", o = 0; o < r.length; o += 2)i += String.fromCharCode(r[o] + 256 * r[o + 1]);
                return i
            }

            function M(t, e, n) {
                if (t % 1 != 0 || t < 0)throw new RangeError("offset is not uint");
                if (t + e > n)throw new RangeError("Trying to access beyond buffer length")
            }

            function R(t, e, n, r, i, a) {
                if (!o.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');
                if (e > i || e < a)throw new RangeError('"value" argument is out of bounds');
                if (n + r > t.length)throw new RangeError("Index out of range")
            }

            function F(t, e, n, r) {
                e < 0 && (e = 65535 + e + 1);
                for (var i = 0, o = Math.min(t.length - n, 2); i < o; ++i)t[n + i] = (e & 255 << 8 * (r ? i : 1 - i)) >>> 8 * (r ? i : 1 - i)
            }

            function z(t, e, n, r) {
                e < 0 && (e = 4294967295 + e + 1);
                for (var i = 0, o = Math.min(t.length - n, 4); i < o; ++i)t[n + i] = e >>> 8 * (r ? i : 3 - i) & 255
            }

            function D(t, e, n, r, i, o) {
                if (n + r > t.length)throw new RangeError("Index out of range");
                if (n < 0)throw new RangeError("Index out of range")
            }

            function N(t, e, n, r, i) {
                return i || D(t, e, n, 4, 3.4028234663852886e38, -3.4028234663852886e38), J.write(t, e, n, r, 23, 4), n + 4
            }

            function U(t, e, n, r, i) {
                return i || D(t, e, n, 8, 1.7976931348623157e308, -1.7976931348623157e308), J.write(t, e, n, r, 52, 8), n + 8
            }

            function W(t) {
                if (t = j(t).replace(tt, ""), t.length < 2)return "";
                for (; t.length % 4 != 0;)t += "=";
                return t
            }

            function j(t) {
                return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")
            }

            function G(t) {
                return t < 16 ? "0" + t.toString(16) : t.toString(16)
            }

            function V(t, e) {
                e = e || 1 / 0;
                for (var n, r = t.length, i = null, o = [], a = 0; a < r; ++a) {
                    if ((n = t.charCodeAt(a)) > 55295 && n < 57344) {
                        if (!i) {
                            if (n > 56319) {
                                (e -= 3) > -1 && o.push(239, 191, 189);
                                continue
                            }
                            if (a + 1 === r) {
                                (e -= 3) > -1 && o.push(239, 191, 189);
                                continue
                            }
                            i = n;
                            continue
                        }
                        if (n < 56320) {
                            (e -= 3) > -1 && o.push(239, 191, 189), i = n;
                            continue
                        }
                        n = 65536 + (i - 55296 << 10 | n - 56320)
                    } else i && (e -= 3) > -1 && o.push(239, 191, 189);
                    if (i = null, n < 128) {
                        if ((e -= 1) < 0)break;
                        o.push(n)
                    } else if (n < 2048) {
                        if ((e -= 2) < 0)break;
                        o.push(n >> 6 | 192, 63 & n | 128)
                    } else if (n < 65536) {
                        if ((e -= 3) < 0)break;
                        o.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128)
                    } else {
                        if (!(n < 1114112))throw new Error("Invalid code point");
                        if ((e -= 4) < 0)break;
                        o.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128)
                    }
                }
                return o
            }

            function H(t) {
                for (var e = [], n = 0; n < t.length; ++n)e.push(255 & t.charCodeAt(n));
                return e
            }

            function q(t, e) {
                for (var n, r, i, o = [], a = 0; a < t.length && !((e -= 2) < 0); ++a)n = t.charCodeAt(a), r = n >> 8, i = n % 256, o.push(i), o.push(r);
                return o
            }

            function Z(t) {
                return K.toByteArray(W(t))
            }

            function Y(t, e, n, r) {
                for (var i = 0; i < r && !(i + n >= e.length || i >= t.length); ++i)e[i + n] = t[i];
                return i
            }

            function X(t) {
                return t !== t
            }

            var K = n(3), J = n(4), Q = n(5);
            e.Buffer = o, e.SlowBuffer = g, e.INSPECT_MAX_BYTES = 50, o.TYPED_ARRAY_SUPPORT = void 0 !== t.TYPED_ARRAY_SUPPORT ? t.TYPED_ARRAY_SUPPORT : function () {
                try {
                    var t = new Uint8Array(1);
                    return t.__proto__ = {
                        __proto__: Uint8Array.prototype, foo: function () {
                            return 42
                        }
                    }, 42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength
                } catch (t) {
                    return !1
                }
            }(), e.kMaxLength = r(), o.poolSize = 8192, o._augment = function (t) {
                return t.__proto__ = o.prototype, t
            }, o.from = function (t, e, n) {
                return a(null, t, e, n)
            }, o.TYPED_ARRAY_SUPPORT && (o.prototype.__proto__ = Uint8Array.prototype, o.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && o[Symbol.species] === o && Object.defineProperty(o, Symbol.species, {
                value: null,
                configurable: !0
            })), o.alloc = function (t, e, n) {
                return u(null, t, e, n)
            }, o.allocUnsafe = function (t) {
                return l(null, t)
            }, o.allocUnsafeSlow = function (t) {
                return l(null, t)
            }, o.isBuffer = function (t) {
                return !(null == t || !t._isBuffer)
            }, o.compare = function (t, e) {
                if (!o.isBuffer(t) || !o.isBuffer(e))throw new TypeError("Arguments must be Buffers");
                if (t === e)return 0;
                for (var n = t.length, r = e.length, i = 0, a = Math.min(n, r); i < a; ++i)if (t[i] !== e[i]) {
                    n = t[i], r = e[i];
                    break
                }
                return n < r ? -1 : r < n ? 1 : 0
            }, o.isEncoding = function (t) {
                switch (String(t).toLowerCase()) {
                    case"hex":
                    case"utf8":
                    case"utf-8":
                    case"ascii":
                    case"latin1":
                    case"binary":
                    case"base64":
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                        return !0;
                    default:
                        return !1
                }
            }, o.concat = function (t, e) {
                if (!Q(t))throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === t.length)return o.alloc(0);
                var n;
                if (void 0 === e)for (e = 0, n = 0; n < t.length; ++n)e += t[n].length;
                var r = o.allocUnsafe(e), i = 0;
                for (n = 0; n < t.length; ++n) {
                    var a = t[n];
                    if (!o.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');
                    a.copy(r, i), i += a.length
                }
                return r
            }, o.byteLength = y, o.prototype._isBuffer = !0, o.prototype.swap16 = function () {
                var t = this.length;
                if (t % 2 != 0)throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var e = 0; e < t; e += 2)b(this, e, e + 1);
                return this
            }, o.prototype.swap32 = function () {
                var t = this.length;
                if (t % 4 != 0)throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var e = 0; e < t; e += 4)b(this, e, e + 3), b(this, e + 1, e + 2);
                return this
            }, o.prototype.swap64 = function () {
                var t = this.length;
                if (t % 8 != 0)throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var e = 0; e < t; e += 8)b(this, e, e + 7), b(this, e + 1, e + 6), b(this, e + 2, e + 5), b(this, e + 3, e + 4);
                return this
            }, o.prototype.toString = function () {
                var t = 0 | this.length;
                return 0 === t ? "" : 0 === arguments.length ? E(this, 0, t) : v.apply(this, arguments)
            }, o.prototype.equals = function (t) {
                if (!o.isBuffer(t))throw new TypeError("Argument must be a Buffer");
                return this === t || 0 === o.compare(this, t)
            }, o.prototype.inspect = function () {
                var t = "", n = e.INSPECT_MAX_BYTES;
                return this.length > 0 && (t = this.toString("hex", 0, n).match(/.{2}/g).join(" "), this.length > n && (t += " ... ")), "<Buffer " + t + ">"
            }, o.prototype.compare = function (t, e, n, r, i) {
                if (!o.isBuffer(t))throw new TypeError("Argument must be a Buffer");
                if (void 0 === e && (e = 0), void 0 === n && (n = t ? t.length : 0), void 0 === r && (r = 0), void 0 === i && (i = this.length), e < 0 || n > t.length || r < 0 || i > this.length)throw new RangeError("out of range index");
                if (r >= i && e >= n)return 0;
                if (r >= i)return -1;
                if (e >= n)return 1;
                if (e >>>= 0, n >>>= 0, r >>>= 0, i >>>= 0, this === t)return 0;
                for (var a = i - r, s = n - e, u = Math.min(a, s), l = this.slice(r, i), c = t.slice(e, n), f = 0; f < u; ++f)if (l[f] !== c[f]) {
                    a = l[f], s = c[f];
                    break
                }
                return a < s ? -1 : s < a ? 1 : 0
            }, o.prototype.includes = function (t, e, n) {
                return -1 !== this.indexOf(t, e, n)
            }, o.prototype.indexOf = function (t, e, n) {
                return m(this, t, e, n, !0)
            }, o.prototype.lastIndexOf = function (t, e, n) {
                return m(this, t, e, n, !1)
            }, o.prototype.write = function (t, e, n, r) {
                if (void 0 === e)r = "utf8", n = this.length, e = 0; else if (void 0 === n && "string" == typeof e)r = e, n = this.length, e = 0; else {
                    if (!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    e |= 0, isFinite(n) ? (n |= 0, void 0 === r && (r = "utf8")) : (r = n, n = void 0)
                }
                var i = this.length - e;
                if ((void 0 === n || n > i) && (n = i), t.length > 0 && (n < 0 || e < 0) || e > this.length)throw new RangeError("Attempt to write outside buffer bounds");
                r || (r = "utf8");
                for (var o = !1; ;)switch (r) {
                    case"hex":
                        return x(this, t, e, n);
                    case"utf8":
                    case"utf-8":
                        return _(this, t, e, n);
                    case"ascii":
                        return k(this, t, e, n);
                    case"latin1":
                    case"binary":
                        return S(this, t, e, n);
                    case"base64":
                        return C(this, t, e, n);
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                        return A(this, t, e, n);
                    default:
                        if (o)throw new TypeError("Unknown encoding: " + r);
                        r = ("" + r).toLowerCase(), o = !0
                }
            }, o.prototype.toJSON = function () {
                return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)}
            };
            var $ = 4096;
            o.prototype.slice = function (t, e) {
                var n = this.length;
                t = ~~t, e = void 0 === e ? n : ~~e, t < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), e < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), e < t && (e = t);
                var r;
                if (o.TYPED_ARRAY_SUPPORT)r = this.subarray(t, e), r.__proto__ = o.prototype; else {
                    var i = e - t;
                    r = new o(i, void 0);
                    for (var a = 0; a < i; ++a)r[a] = this[a + t]
                }
                return r
            }, o.prototype.readUIntLE = function (t, e, n) {
                t |= 0, e |= 0, n || M(t, e, this.length);
                for (var r = this[t], i = 1, o = 0; ++o < e && (i *= 256);)r += this[t + o] * i;
                return r
            }, o.prototype.readUIntBE = function (t, e, n) {
                t |= 0, e |= 0, n || M(t, e, this.length);
                for (var r = this[t + --e], i = 1; e > 0 && (i *= 256);)r += this[t + --e] * i;
                return r
            }, o.prototype.readUInt8 = function (t, e) {
                return e || M(t, 1, this.length), this[t]
            }, o.prototype.readUInt16LE = function (t, e) {
                return e || M(t, 2, this.length), this[t] | this[t + 1] << 8
            }, o.prototype.readUInt16BE = function (t, e) {
                return e || M(t, 2, this.length), this[t] << 8 | this[t + 1]
            }, o.prototype.readUInt32LE = function (t, e) {
                return e || M(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]
            }, o.prototype.readUInt32BE = function (t, e) {
                return e || M(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
            }, o.prototype.readIntLE = function (t, e, n) {
                t |= 0, e |= 0, n || M(t, e, this.length);
                for (var r = this[t], i = 1, o = 0; ++o < e && (i *= 256);)r += this[t + o] * i;
                return i *= 128, r >= i && (r -= Math.pow(2, 8 * e)), r
            }, o.prototype.readIntBE = function (t, e, n) {
                t |= 0, e |= 0, n || M(t, e, this.length);
                for (var r = e, i = 1, o = this[t + --r]; r > 0 && (i *= 256);)o += this[t + --r] * i;
                return i *= 128, o >= i && (o -= Math.pow(2, 8 * e)), o
            }, o.prototype.readInt8 = function (t, e) {
                return e || M(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
            }, o.prototype.readInt16LE = function (t, e) {
                e || M(t, 2, this.length);
                var n = this[t] | this[t + 1] << 8;
                return 32768 & n ? 4294901760 | n : n
            }, o.prototype.readInt16BE = function (t, e) {
                e || M(t, 2, this.length);
                var n = this[t + 1] | this[t] << 8;
                return 32768 & n ? 4294901760 | n : n
            }, o.prototype.readInt32LE = function (t, e) {
                return e || M(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24
            }, o.prototype.readInt32BE = function (t, e) {
                return e || M(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]
            }, o.prototype.readFloatLE = function (t, e) {
                return e || M(t, 4, this.length), J.read(this, t, !0, 23, 4)
            }, o.prototype.readFloatBE = function (t, e) {
                return e || M(t, 4, this.length), J.read(this, t, !1, 23, 4)
            }, o.prototype.readDoubleLE = function (t, e) {
                return e || M(t, 8, this.length), J.read(this, t, !0, 52, 8)
            }, o.prototype.readDoubleBE = function (t, e) {
                return e || M(t, 8, this.length), J.read(this, t, !1, 52, 8)
            }, o.prototype.writeUIntLE = function (t, e, n, r) {
                if (t = +t, e |= 0, n |= 0, !r) {
                    R(this, t, e, n, Math.pow(2, 8 * n) - 1, 0)
                }
                var i = 1, o = 0;
                for (this[e] = 255 & t; ++o < n && (i *= 256);)this[e + o] = t / i & 255;
                return e + n
            }, o.prototype.writeUIntBE = function (t, e, n, r) {
                if (t = +t, e |= 0, n |= 0, !r) {
                    R(this, t, e, n, Math.pow(2, 8 * n) - 1, 0)
                }
                var i = n - 1, o = 1;
                for (this[e + i] = 255 & t; --i >= 0 && (o *= 256);)this[e + i] = t / o & 255;
                return e + n
            }, o.prototype.writeUInt8 = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 1, 255, 0), o.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), this[e] = 255 & t, e + 1
            }, o.prototype.writeUInt16LE = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 2, 65535, 0), o.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : F(this, t, e, !0), e + 2
            }, o.prototype.writeUInt16BE = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 2, 65535, 0), o.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : F(this, t, e, !1), e + 2
            }, o.prototype.writeUInt32LE = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 4, 4294967295, 0), o.TYPED_ARRAY_SUPPORT ? (this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t) : z(this, t, e, !0), e + 4
            }, o.prototype.writeUInt32BE = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 4, 4294967295, 0), o.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : z(this, t, e, !1), e + 4
            }, o.prototype.writeIntLE = function (t, e, n, r) {
                if (t = +t, e |= 0, !r) {
                    var i = Math.pow(2, 8 * n - 1);
                    R(this, t, e, n, i - 1, -i)
                }
                var o = 0, a = 1, s = 0;
                for (this[e] = 255 & t; ++o < n && (a *= 256);)t < 0 && 0 === s && 0 !== this[e + o - 1] && (s = 1), this[e + o] = (t / a >> 0) - s & 255;
                return e + n
            }, o.prototype.writeIntBE = function (t, e, n, r) {
                if (t = +t, e |= 0, !r) {
                    var i = Math.pow(2, 8 * n - 1);
                    R(this, t, e, n, i - 1, -i)
                }
                var o = n - 1, a = 1, s = 0;
                for (this[e + o] = 255 & t; --o >= 0 && (a *= 256);)t < 0 && 0 === s && 0 !== this[e + o + 1] && (s = 1), this[e + o] = (t / a >> 0) - s & 255;
                return e + n
            }, o.prototype.writeInt8 = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 1, 127, -128), o.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1
            }, o.prototype.writeInt16LE = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 2, 32767, -32768), o.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : F(this, t, e, !0), e + 2
            }, o.prototype.writeInt16BE = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 2, 32767, -32768), o.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : F(this, t, e, !1), e + 2
            }, o.prototype.writeInt32LE = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 4, 2147483647, -2147483648), o.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24) : z(this, t, e, !0), e + 4
            }, o.prototype.writeInt32BE = function (t, e, n) {
                return t = +t, e |= 0, n || R(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), o.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : z(this, t, e, !1), e + 4
            }, o.prototype.writeFloatLE = function (t, e, n) {
                return N(this, t, e, !0, n)
            }, o.prototype.writeFloatBE = function (t, e, n) {
                return N(this, t, e, !1, n)
            }, o.prototype.writeDoubleLE = function (t, e, n) {
                return U(this, t, e, !0, n)
            }, o.prototype.writeDoubleBE = function (t, e, n) {
                return U(this, t, e, !1, n)
            }, o.prototype.copy = function (t, e, n, r) {
                if (n || (n = 0), r || 0 === r || (r = this.length), e >= t.length && (e = t.length), e || (e = 0), r > 0 && r < n && (r = n), r === n)return 0;
                if (0 === t.length || 0 === this.length)return 0;
                if (e < 0)throw new RangeError("targetStart out of bounds");
                if (n < 0 || n >= this.length)throw new RangeError("sourceStart out of bounds");
                if (r < 0)throw new RangeError("sourceEnd out of bounds");
                r > this.length && (r = this.length), t.length - e < r - n && (r = t.length - e + n);
                var i, a = r - n;
                if (this === t && n < e && e < r)for (i = a - 1; i >= 0; --i)t[i + e] = this[i + n]; else if (a < 1e3 || !o.TYPED_ARRAY_SUPPORT)for (i = 0; i < a; ++i)t[i + e] = this[i + n]; else Uint8Array.prototype.set.call(t, this.subarray(n, n + a), e);
                return a
            }, o.prototype.fill = function (t, e, n, r) {
                if ("string" == typeof t) {
                    if ("string" == typeof e ? (r = e, e = 0, n = this.length) : "string" == typeof n && (r = n, n = this.length), 1 === t.length) {
                        var i = t.charCodeAt(0);
                        i < 256 && (t = i)
                    }
                    if (void 0 !== r && "string" != typeof r)throw new TypeError("encoding must be a string");
                    if ("string" == typeof r && !o.isEncoding(r))throw new TypeError("Unknown encoding: " + r)
                } else"number" == typeof t && (t &= 255);
                if (e < 0 || this.length < e || this.length < n)throw new RangeError("Out of range index");
                if (n <= e)return this;
                e >>>= 0, n = void 0 === n ? this.length : n >>> 0, t || (t = 0);
                var a;
                if ("number" == typeof t)for (a = e; a < n; ++a)this[a] = t; else {
                    var s = o.isBuffer(t) ? t : V(new o(t, r).toString()), u = s.length;
                    for (a = 0; a < n - e; ++a)this[a + e] = s[a % u]
                }
                return this
            };
            var tt = /[^+\/0-9A-Za-z-_]/g
        }).call(e, function () {
            return this
        }())
    }, function (t, e) {
        "use strict";
        function n(t) {
            var e = t.length;
            if (e % 4 > 0)throw new Error("Invalid string. Length must be a multiple of 4");
            return "=" === t[e - 2] ? 2 : "=" === t[e - 1] ? 1 : 0
        }

        function r(t) {
            return 3 * t.length / 4 - n(t)
        }

        function i(t) {
            var e, r, i, o, a, s = t.length;
            o = n(t), a = new c(3 * s / 4 - o), r = o > 0 ? s - 4 : s;
            var u = 0;
            for (e = 0; e < r; e += 4)i = l[t.charCodeAt(e)] << 18 | l[t.charCodeAt(e + 1)] << 12 | l[t.charCodeAt(e + 2)] << 6 | l[t.charCodeAt(e + 3)], a[u++] = i >> 16 & 255, a[u++] = i >> 8 & 255, a[u++] = 255 & i;
            return 2 === o ? (i = l[t.charCodeAt(e)] << 2 | l[t.charCodeAt(e + 1)] >> 4, a[u++] = 255 & i) : 1 === o && (i = l[t.charCodeAt(e)] << 10 | l[t.charCodeAt(e + 1)] << 4 | l[t.charCodeAt(e + 2)] >> 2, a[u++] = i >> 8 & 255, a[u++] = 255 & i), a
        }

        function o(t) {
            return u[t >> 18 & 63] + u[t >> 12 & 63] + u[t >> 6 & 63] + u[63 & t]
        }

        function a(t, e, n) {
            for (var r, i = [], a = e; a < n; a += 3)r = (t[a] << 16) + (t[a + 1] << 8) + t[a + 2], i.push(o(r));
            return i.join("")
        }

        function s(t) {
            for (var e, n = t.length, r = n % 3, i = "", o = [], s = 0, l = n - r; s < l; s += 16383)o.push(a(t, s, s + 16383 > l ? l : s + 16383));
            return 1 === r ? (e = t[n - 1], i += u[e >> 2], i += u[e << 4 & 63], i += "==") : 2 === r && (e = (t[n - 2] << 8) + t[n - 1], i += u[e >> 10], i += u[e >> 4 & 63], i += u[e << 2 & 63], i += "="), o.push(i), o.join("")
        }

        e.byteLength = r, e.toByteArray = i, e.fromByteArray = s;
        for (var u = [], l = [], c = "undefined" != typeof Uint8Array ? Uint8Array : Array, f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", h = 0, p = f.length; h < p; ++h)u[h] = f[h], l[f.charCodeAt(h)] = h;
        l["-".charCodeAt(0)] = 62, l["_".charCodeAt(0)] = 63
    }, function (t, e) {
        e.read = function (t, e, n, r, i) {
            var o, a, s = 8 * i - r - 1, u = (1 << s) - 1, l = u >> 1, c = -7, f = n ? i - 1 : 0, h = n ? -1 : 1, p = t[e + f];
            for (f += h, o = p & (1 << -c) - 1, p >>= -c, c += s; c > 0; o = 256 * o + t[e + f], f += h, c -= 8);
            for (a = o & (1 << -c) - 1, o >>= -c, c += r; c > 0; a = 256 * a + t[e + f], f += h, c -= 8);
            if (0 === o)o = 1 - l; else {
                if (o === u)return a ? NaN : 1 / 0 * (p ? -1 : 1);
                a += Math.pow(2, r), o -= l
            }
            return (p ? -1 : 1) * a * Math.pow(2, o - r)
        }, e.write = function (t, e, n, r, i, o) {
            var a, s, u, l = 8 * o - i - 1, c = (1 << l) - 1, f = c >> 1, h = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = r ? 0 : o - 1, d = r ? 1 : -1, g = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
            for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (s = isNaN(e) ? 1 : 0, a = c) : (a = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), e += a + f >= 1 ? h / u : h * Math.pow(2, 1 - f), e * u >= 2 && (a++, u /= 2), a + f >= c ? (s = 0, a = c) : a + f >= 1 ? (s = (e * u - 1) * Math.pow(2, i), a += f) : (s = e * Math.pow(2, f - 1) * Math.pow(2, i), a = 0)); i >= 8; t[n + p] = 255 & s, p += d, s /= 256, i -= 8);
            for (a = a << i | s, l += i; l > 0; t[n + p] = 255 & a, p += d, a /= 256, l -= 8);
            t[n + p - d] |= 128 * g
        }
    }, function (t, e) {
        var n = {}.toString;
        t.exports = Array.isArray || function (t) {
                return "[object Array]" == n.call(t)
            }
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            this.fontDescriptors = t
        }

        function i(t, e) {
            if (e.info.Producer = "pdfmake", e.info.Creator = "pdfmake", t.info)for (var n in t.info) {
                var r = t.info[n];
                r && (n = function (t) {
                    var e = ["Title", "Author", "Subject", "Keywords", "Creator", "Producer", "CreationDate", "ModDate", "Trapped"], n = t.charAt(0).toUpperCase() + t.slice(1);
                    return -1 !== e.indexOf(n) ? n : t.replace(/\s+/g, "")
                }(n), e.info[n] = r)
            }
        }

        function o(t, e) {
            function n(t) {
                return "function" == typeof t.item.getHeight ? t.item.getHeight() : t.item._height ? t.item._height : 0
            }

            var r = s(e || 40), i = r.top + r.bottom;
            return t.forEach(function (t) {
                t.items.forEach(function (t) {
                    i += n(t)
                })
            }), i
        }

        function a(t, e) {
            t && "auto" === t.height && (t.height = 1 / 0);
            var n = l(t || "A4");
            return function (t) {
                return ("string" == typeof t || t instanceof String) && ("portrait" === (t = t.toLowerCase()) && n.width > n.height || "landscape" === t && n.width < n.height)
            }(e) && (n = {
                width: n.height,
                height: n.width
            }), n.orientation = n.width > n.height ? "landscape" : "portrait", n
        }

        function s(t) {
            if (!t)return null;
            if ("number" == typeof t || t instanceof Number)t = {
                left: t,
                right: t,
                top: t,
                bottom: t
            }; else if (Array.isArray(t))if (2 === t.length)t = {
                left: t[0],
                top: t[1],
                right: t[0],
                bottom: t[1]
            }; else {
                if (4 !== t.length)throw"Invalid pageMargins definition";
                t = {left: t[0], top: t[1], right: t[2], bottom: t[3]}
            }
            return t
        }

        function u(t) {
            t.registerTableLayouts({
                noBorders: {
                    hLineWidth: function (t) {
                        return 0
                    }, vLineWidth: function (t) {
                        return 0
                    }, paddingLeft: function (t) {
                        return t && 4 || 0
                    }, paddingRight: function (t, e) {
                        return t < e.table.widths.length - 1 ? 4 : 0
                    }
                }, headerLineOnly: {
                    hLineWidth: function (t, e) {
                        return 0 === t || t === e.table.body.length ? 0 : t === e.table.headerRows ? 2 : 0
                    }, vLineWidth: function (t) {
                        return 0
                    }, paddingLeft: function (t) {
                        return 0 === t ? 0 : 8
                    }, paddingRight: function (t, e) {
                        return t === e.table.widths.length - 1 ? 0 : 8
                    }
                }, lightHorizontalLines: {
                    hLineWidth: function (t, e) {
                        return 0 === t || t === e.table.body.length ? 0 : t === e.table.headerRows ? 2 : 1
                    }, vLineWidth: function (t) {
                        return 0
                    }, hLineColor: function (t) {
                        return 1 === t ? "black" : "#aaa"
                    }, paddingLeft: function (t) {
                        return 0 === t ? 0 : 8
                    }, paddingRight: function (t, e) {
                        return t === e.table.widths.length - 1 ? 0 : 8
                    }
                }
            })
        }

        function l(t) {
            if ("string" == typeof t || t instanceof String) {
                var e = w[t.toUpperCase()];
                if (!e)throw"Page size " + t + " not recognized";
                return {width: e[0], height: e[1]}
            }
            return t
        }

        function c(t, e) {
            var n = e.options.size[0] > e.options.size[1] ? "landscape" : "portrait";
            if (t.pageSize.orientation !== n) {
                var r = e.options.size[0], i = e.options.size[1];
                e.options.size = [i, r]
            }
        }

        function f(t, e, n, r) {
            n._pdfMakePages = t, n.addPage();
            var i = r && y.sumBy(t, function (t) {
                    return t.items.length
                }), o = 0;
            r = r || function () {
                };
            for (var a = 0; a < t.length; a++) {
                a > 0 && (c(t[a], n), n.addPage(n.options));
                for (var s = t[a], u = 0, l = s.items.length; u < l; u++) {
                    var f = s.items[u];
                    switch (f.type) {
                        case"vector":
                            d(f.item, n);
                            break;
                        case"line":
                            h(f.item, f.item.x, f.item.y, n);
                            break;
                        case"image":
                            g(f.item, f.item.x, f.item.y, n)
                    }
                    o++, r(o / i)
                }
                s.watermark && p(s, n)
            }
        }

        function h(t, e, n, r) {
            if (t._tocItemNode) {
                var i, o, a = new k(null);
                switch (t.inlines[0].text = t._tocItemNode.positions[0].pageNumber.toString(), i = a.widthOfString(t.inlines[0].text, t.inlines[0].font, t.inlines[0].fontSize, t.inlines[0].characterSpacing), o = t.inlines[0].width - i, t.inlines[0].width = i, t.inlines[0].alignment) {
                    case"right":
                        t.inlines[0].x += o;
                        break;
                    case"center":
                        t.inlines[0].x += o / 2
                }
            }
            e = e || 0, n = n || 0;
            var s = t.getHeight(), u = t.getAscenderHeight(), l = s - u;
            _.drawBackground(t, e, n, r);
            for (var c = 0, f = t.inlines.length; c < f; c++) {
                var h = t.inlines[c], p = s - h.font.ascender / 1e3 * h.fontSize - l;
                if (r.fill(h.color || "black"), r._font = h.font, r.fontSize(h.fontSize), r.text(h.text, e + h.x, n + p, {
                        lineBreak: !1,
                        textWidth: h.width,
                        characterSpacing: h.characterSpacing,
                        wordCount: 1,
                        link: h.link
                    }), h.linkToPage) {
                    r.ref({Type: "Action", S: "GoTo", D: [h.linkToPage, 0, 0]}).end();
                    r.annotate(e + h.x, n + p, h.width, h.height, {
                        Subtype: "Link",
                        Dest: [h.linkToPage - 1, "XYZ", null, null, null]
                    })
                }
            }
            _.drawDecorations(t, e, n, r)
        }

        function p(t, e) {
            var n = t.watermark;
            e.fill(n.color), e.opacity(n.opacity), e.save();
            var r = -180 * Math.atan2(e.page.height, e.page.width) / Math.PI;
            e.rotate(r, {origin: [e.page.width / 2, e.page.height / 2]});
            var i = e.page.width / 2 - n.size.size.width / 2, o = e.page.height / 2 - n.size.size.height / 4;
            e._font = n.font, e.fontSize(n.size.fontSize), e.text(n.text, i, o, {lineBreak: !1}), e.restore()
        }

        function d(t, e) {
            switch (e.lineWidth(t.lineWidth || 1), t.dash ? e.dash(t.dash.length, {
                space: t.dash.space || t.dash.length,
                phase: t.dash.phase || 0
            }) : e.undash(), e.lineJoin(t.lineJoin || "miter"), t.type) {
                case"ellipse":
                    e.ellipse(t.x, t.y, t.r1, t.r2);
                    break;
                case"rect":
                    if (t.r ? e.roundedRect(t.x, t.y, t.w, t.h, t.r) : e.rect(t.x, t.y, t.w, t.h), t.linearGradient) {
                        for (var n = e.linearGradient(t.x, t.y, t.x + t.w, t.y), r = 1 / (t.linearGradient.length - 1), i = 0; i < t.linearGradient.length; i++)n.stop(i * r, t.linearGradient[i]);
                        t.color = n
                    }
                    break;
                case"line":
                    e.moveTo(t.x1, t.y1), e.lineTo(t.x2, t.y2);
                    break;
                case"polyline":
                    if (0 === t.points.length)break;
                    e.moveTo(t.points[0].x, t.points[0].y);
                    for (var i = 1, o = t.points.length; i < o; i++)e.lineTo(t.points[i].x, t.points[i].y);
                    if (t.points.length > 1) {
                        var a = t.points[0], s = t.points[t.points.length - 1];
                        (t.closePath || a.x === s.x && a.y === s.y) && e.closePath()
                    }
                    break;
                case"path":
                    e.path(t.d)
            }
            t.color && t.lineColor ? (e.fillColor(t.color, t.fillOpacity || 1), e.strokeColor(t.lineColor, t.strokeOpacity || 1), e.fillAndStroke()) : t.color ? (e.fillColor(t.color, t.fillOpacity || 1), e.fill()) : (e.strokeColor(t.lineColor || "black", t.strokeOpacity || 1), e.stroke())
        }

        function g(t, e, n, r) {
            r.image(t.image, t.x, t.y, {
                width: t._width,
                height: t._height
            }), t.link && r.link(t.x, t.y, t._width, t._height, t.link)
        }

        var y = n(7), v = n(9), b = n(10), m = n(30), w = n(297), x = n(298), _ = n(299), k = n(15);
        y.noConflict(), r.prototype.createPdfKitDocument = function (t, e) {
            e = e || {};
            var n = a(t.pageSize, t.pageOrientation);
            this.pdfKitDoc = new m({
                size: [n.width, n.height],
                autoFirstPage: !1,
                compress: t.compress || !0
            }), i(t, this.pdfKitDoc), this.fontProvider = new v(this.fontDescriptors, this.pdfKitDoc), t.images = t.images || {};
            var r = new b(n, s(t.pageMargins || 40), new x(this.pdfKitDoc, t.images));
            u(r), e.tableLayouts && r.registerTableLayouts(e.tableLayouts);
            var l = r.layoutDocument(t.content, this.fontProvider, t.styles || {}, t.defaultStyle || {
                    fontSize: 12,
                    font: "Consola"
                }, t.background, t.header, t.footer, t.images, t.watermark, t.pageBreakBefore), c = t.maxPagesNumber || -1;
            if ("number" == typeof c && c > -1 && (l = l.slice(0, c)), n.height === 1 / 0) {
                var h = o(l, t.pageMargins);
                this.pdfKitDoc.options.size = [n.width, h]
            }
            if (f(l, this.fontProvider, this.pdfKitDoc, e.progressCallback), e.autoPrint) {
                var p = this.pdfKitDoc.ref({Type: "Action", S: "Named", N: "Print"});
                this.pdfKitDoc._root.data.OpenAction = p, p.end()
            }
            return this.pdfKitDoc
        }, t.exports = r, r.prototype.fs = n(56)
    }, function (t, e, n) {
        var r;
        (function (t, i) {
            (function () {
                function o(t, e) {
                    return t.set(e[0], e[1]), t
                }

                function a(t, e) {
                    return t.add(e), t
                }

                function s(t, e, n) {
                    switch (n.length) {
                        case 0:
                            return t.call(e);
                        case 1:
                            return t.call(e, n[0]);
                        case 2:
                            return t.call(e, n[0], n[1]);
                        case 3:
                            return t.call(e, n[0], n[1], n[2])
                    }
                    return t.apply(e, n)
                }

                function u(t, e, n, r) {
                    for (var i = -1, o = null == t ? 0 : t.length; ++i < o;) {
                        var a = t[i];
                        e(r, a, n(a), t)
                    }
                    return r
                }

                function l(t, e) {
                    for (var n = -1, r = null == t ? 0 : t.length; ++n < r && !1 !== e(t[n], n, t););
                    return t
                }

                function c(t, e) {
                    for (var n = null == t ? 0 : t.length; n-- && !1 !== e(t[n], n, t););
                    return t
                }

                function f(t, e) {
                    for (var n = -1, r = null == t ? 0 : t.length; ++n < r;)if (!e(t[n], n, t))return !1;
                    return !0
                }

                function h(t, e) {
                    for (var n = -1, r = null == t ? 0 : t.length, i = 0, o = []; ++n < r;) {
                        var a = t[n];
                        e(a, n, t) && (o[i++] = a)
                    }
                    return o
                }

                function p(t, e) {
                    return !!(null == t ? 0 : t.length) && S(t, e, 0) > -1
                }

                function d(t, e, n) {
                    for (var r = -1, i = null == t ? 0 : t.length; ++r < i;)if (n(e, t[r]))return !0;
                    return !1
                }

                function g(t, e) {
                    for (var n = -1, r = null == t ? 0 : t.length, i = Array(r); ++n < r;)i[n] = e(t[n], n, t);
                    return i
                }

                function y(t, e) {
                    for (var n = -1, r = e.length, i = t.length; ++n < r;)t[i + n] = e[n];
                    return t
                }

                function v(t, e, n, r) {
                    var i = -1, o = null == t ? 0 : t.length;
                    for (r && o && (n = t[++i]); ++i < o;)n = e(n, t[i], i, t);
                    return n
                }

                function b(t, e, n, r) {
                    var i = null == t ? 0 : t.length;
                    for (r && i && (n = t[--i]); i--;)n = e(n, t[i], i, t);
                    return n
                }

                function m(t, e) {
                    for (var n = -1, r = null == t ? 0 : t.length; ++n < r;)if (e(t[n], n, t))return !0;
                    return !1
                }

                function w(t) {
                    return t.split("")
                }

                function x(t) {
                    return t.match(Ue) || []
                }

                function _(t, e, n) {
                    var r;
                    return n(t, function (t, n, i) {
                        if (e(t, n, i))return r = n, !1
                    }), r
                }

                function k(t, e, n, r) {
                    for (var i = t.length, o = n + (r ? 1 : -1); r ? o-- : ++o < i;)if (e(t[o], o, t))return o;
                    return -1
                }

                function S(t, e, n) {
                    return e === e ? J(t, e, n) : k(t, A, n)
                }

                function C(t, e, n, r) {
                    for (var i = n - 1, o = t.length; ++i < o;)if (r(t[i], e))return i;
                    return -1
                }

                function A(t) {
                    return t !== t
                }

                function P(t, e) {
                    var n = null == t ? 0 : t.length;
                    return n ? B(t, e) / n : Rt
                }

                function E(t) {
                    return function (e) {
                        return null == e ? it : e[t]
                    }
                }

                function I(t) {
                    return function (e) {
                        return null == t ? it : t[e]
                    }
                }

                function T(t, e, n, r, i) {
                    return i(t, function (t, i, o) {
                        n = r ? (r = !1, t) : e(n, t, i, o)
                    }), n
                }

                function O(t, e) {
                    var n = t.length;
                    for (t.sort(e); n--;)t[n] = t[n].value;
                    return t
                }

                function B(t, e) {
                    for (var n, r = -1, i = t.length; ++r < i;) {
                        var o = e(t[r]);
                        o !== it && (n = n === it ? o : n + o)
                    }
                    return n
                }

                function L(t, e) {
                    for (var n = -1, r = Array(t); ++n < t;)r[n] = e(n);
                    return r
                }

                function M(t, e) {
                    return g(e, function (e) {
                        return [e, t[e]]
                    })
                }

                function R(t) {
                    return function (e) {
                        return t(e)
                    }
                }

                function F(t, e) {
                    return g(e, function (e) {
                        return t[e]
                    })
                }

                function z(t, e) {
                    return t.has(e)
                }

                function D(t, e) {
                    for (var n = -1, r = t.length; ++n < r && S(e, t[n], 0) > -1;);
                    return n
                }

                function N(t, e) {
                    for (var n = t.length; n-- && S(e, t[n], 0) > -1;);
                    return n
                }

                function U(t, e) {
                    for (var n = t.length, r = 0; n--;)t[n] === e && ++r;
                    return r
                }

                function W(t) {
                    return "\\" + En[t]
                }

                function j(t, e) {
                    return null == t ? it : t[e]
                }

                function G(t) {
                    return mn.test(t)
                }

                function V(t) {
                    return wn.test(t)
                }

                function H(t) {
                    for (var e, n = []; !(e = t.next()).done;)n.push(e.value);
                    return n
                }

                function q(t) {
                    var e = -1, n = Array(t.size);
                    return t.forEach(function (t, r) {
                        n[++e] = [r, t]
                    }), n
                }

                function Z(t, e) {
                    return function (n) {
                        return t(e(n))
                    }
                }

                function Y(t, e) {
                    for (var n = -1, r = t.length, i = 0, o = []; ++n < r;) {
                        var a = t[n];
                        a !== e && a !== ct || (t[n] = ct, o[i++] = n)
                    }
                    return o
                }

                function X(t) {
                    var e = -1, n = Array(t.size);
                    return t.forEach(function (t) {
                        n[++e] = t
                    }), n
                }

                function K(t) {
                    var e = -1, n = Array(t.size);
                    return t.forEach(function (t) {
                        n[++e] = [t, t]
                    }), n
                }

                function J(t, e, n) {
                    for (var r = n - 1, i = t.length; ++r < i;)if (t[r] === e)return r;
                    return -1
                }

                function Q(t, e, n) {
                    for (var r = n + 1; r--;)if (t[r] === e)return r;
                    return r
                }

                function $(t) {
                    return G(t) ? et(t) : Hn(t)
                }

                function tt(t) {
                    return G(t) ? nt(t) : w(t)
                }

                function et(t) {
                    for (var e = vn.lastIndex = 0; vn.test(t);)++e;
                    return e
                }

                function nt(t) {
                    return t.match(vn) || []
                }

                function rt(t) {
                    return t.match(bn) || []
                }

                var it, ot = 200, at = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", st = "Expected a function", ut = "__lodash_hash_undefined__", lt = 500, ct = "__lodash_placeholder__", ft = 1, ht = 2, pt = 4, dt = 1, gt = 2, yt = 1, vt = 2, bt = 4, mt = 8, wt = 16, xt = 32, _t = 64, kt = 128, St = 256, Ct = 512, At = 30, Pt = "...", Et = 800, It = 16, Tt = 1, Ot = 2, Bt = 1 / 0, Lt = 9007199254740991, Mt = 1.7976931348623157e308, Rt = NaN, Ft = 4294967295, zt = Ft - 1, Dt = Ft >>> 1, Nt = [["ary", kt], ["bind", yt], ["bindKey", vt], ["curry", mt], ["curryRight", wt], ["flip", Ct], ["partial", xt], ["partialRight", _t], ["rearg", St]], Ut = "[object Arguments]", Wt = "[object Array]", jt = "[object AsyncFunction]", Gt = "[object Boolean]", Vt = "[object Date]", Ht = "[object DOMException]", qt = "[object Error]", Zt = "[object Function]", Yt = "[object GeneratorFunction]", Xt = "[object Map]", Kt = "[object Number]", Jt = "[object Null]", Qt = "[object Object]", $t = "[object Proxy]", te = "[object RegExp]", ee = "[object Set]", ne = "[object String]", re = "[object Symbol]", ie = "[object Undefined]", oe = "[object WeakMap]", ae = "[object WeakSet]", se = "[object ArrayBuffer]", ue = "[object DataView]", le = "[object Float32Array]", ce = "[object Float64Array]", fe = "[object Int8Array]", he = "[object Int16Array]", pe = "[object Int32Array]", de = "[object Uint8Array]", ge = "[object Uint8ClampedArray]", ye = "[object Uint16Array]", ve = "[object Uint32Array]", be = /\b__p \+= '';/g, me = /\b(__p \+=) '' \+/g, we = /(__e\(.*?\)|\b__t\)) \+\n'';/g, xe = /&(?:amp|lt|gt|quot|#39);/g, _e = /[&<>"']/g, ke = RegExp(xe.source), Se = RegExp(_e.source), Ce = /<%-([\s\S]+?)%>/g, Ae = /<%([\s\S]+?)%>/g, Pe = /<%=([\s\S]+?)%>/g, Ee = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, Ie = /^\w*$/, Te = /^\./, Oe = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Be = /[\\^$.*+?()[\]{}|]/g, Le = RegExp(Be.source), Me = /^\s+|\s+$/g, Re = /^\s+/, Fe = /\s+$/, ze = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, De = /\{\n\/\* \[wrapped with (.+)\] \*/, Ne = /,? & /, Ue = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, We = /\\(\\)?/g, je = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Ge = /\w*$/, Ve = /^[-+]0x[0-9a-f]+$/i, He = /^0b[01]+$/i, qe = /^\[object .+?Constructor\]$/, Ze = /^0o[0-7]+$/i, Ye = /^(?:0|[1-9]\d*)$/, Xe = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Ke = /($^)/, Je = /['\n\r\u2028\u2029\\]/g, Qe = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff", $e = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", tn = "[" + $e + "]", en = "[" + Qe + "]", nn = "[a-z\\xdf-\\xf6\\xf8-\\xff]", rn = "[^\\ud800-\\udfff" + $e + "\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]", on = "\\ud83c[\\udffb-\\udfff]", an = "(?:\\ud83c[\\udde6-\\uddff]){2}", sn = "[\\ud800-\\udbff][\\udc00-\\udfff]", un = "[A-Z\\xc0-\\xd6\\xd8-\\xde]", ln = "(?:" + nn + "|" + rn + ")", cn = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?", fn = "(?:\\u200d(?:" + ["[^\\ud800-\\udfff]", an, sn].join("|") + ")[\\ufe0e\\ufe0f]?" + cn + ")*", hn = "[\\ufe0e\\ufe0f]?" + cn + fn, pn = "(?:" + ["[\\u2700-\\u27bf]", an, sn].join("|") + ")" + hn, dn = "(?:" + ["[^\\ud800-\\udfff]" + en + "?", en, an, sn, "[\\ud800-\\udfff]"].join("|") + ")", gn = RegExp("['’]", "g"), yn = RegExp(en, "g"), vn = RegExp(on + "(?=" + on + ")|" + dn + hn, "g"), bn = RegExp([un + "?" + nn + "+(?:['’](?:d|ll|m|re|s|t|ve))?(?=" + [tn, un, "$"].join("|") + ")", "(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=" + [tn, un + ln, "$"].join("|") + ")", un + "?" + ln + "+(?:['’](?:d|ll|m|re|s|t|ve))?", un + "+(?:['’](?:D|LL|M|RE|S|T|VE))?", "\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)", "\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)", "\\d+", pn].join("|"), "g"), mn = RegExp("[\\u200d\\ud800-\\udfff" + Qe + "\\ufe0e\\ufe0f]"), wn = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, xn = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], _n = -1, kn = {};
                kn[le] = kn[ce] = kn[fe] = kn[he] = kn[pe] = kn[de] = kn[ge] = kn[ye] = kn[ve] = !0, kn[Ut] = kn[Wt] = kn[se] = kn[Gt] = kn[ue] = kn[Vt] = kn[qt] = kn[Zt] = kn[Xt] = kn[Kt] = kn[Qt] = kn[te] = kn[ee] = kn[ne] = kn[oe] = !1;
                var Sn = {};
                Sn[Ut] = Sn[Wt] = Sn[se] = Sn[ue] = Sn[Gt] = Sn[Vt] = Sn[le] = Sn[ce] = Sn[fe] = Sn[he] = Sn[pe] = Sn[Xt] = Sn[Kt] = Sn[Qt] = Sn[te] = Sn[ee] = Sn[ne] = Sn[re] = Sn[de] = Sn[ge] = Sn[ye] = Sn[ve] = !0, Sn[qt] = Sn[Zt] = Sn[oe] = !1;
                var Cn = {
                    "À": "A",
                    "Á": "A",
                    "Â": "A",
                    "Ã": "A",
                    "Ä": "A",
                    "Å": "A",
                    "à": "a",
                    "á": "a",
                    "â": "a",
                    "ã": "a",
                    "ä": "a",
                    "å": "a",
                    "Ç": "C",
                    "ç": "c",
                    "Ð": "D",
                    "ð": "d",
                    "È": "E",
                    "É": "E",
                    "Ê": "E",
                    "Ë": "E",
                    "è": "e",
                    "é": "e",
                    "ê": "e",
                    "ë": "e",
                    "Ì": "I",
                    "Í": "I",
                    "Î": "I",
                    "Ï": "I",
                    "ì": "i",
                    "í": "i",
                    "î": "i",
                    "ï": "i",
                    "Ñ": "N",
                    "ñ": "n",
                    "Ò": "O",
                    "Ó": "O",
                    "Ô": "O",
                    "Õ": "O",
                    "Ö": "O",
                    "Ø": "O",
                    "ò": "o",
                    "ó": "o",
                    "ô": "o",
                    "õ": "o",
                    "ö": "o",
                    "ø": "o",
                    "Ù": "U",
                    "Ú": "U",
                    "Û": "U",
                    "Ü": "U",
                    "ù": "u",
                    "ú": "u",
                    "û": "u",
                    "ü": "u",
                    "Ý": "Y",
                    "ý": "y",
                    "ÿ": "y",
                    "Æ": "Ae",
                    "æ": "ae",
                    "Þ": "Th",
                    "þ": "th",
                    "ß": "ss",
                    "Ā": "A",
                    "Ă": "A",
                    "Ą": "A",
                    "ā": "a",
                    "ă": "a",
                    "ą": "a",
                    "Ć": "C",
                    "Ĉ": "C",
                    "Ċ": "C",
                    "Č": "C",
                    "ć": "c",
                    "ĉ": "c",
                    "ċ": "c",
                    "č": "c",
                    "Ď": "D",
                    "Đ": "D",
                    "ď": "d",
                    "đ": "d",
                    "Ē": "E",
                    "Ĕ": "E",
                    "Ė": "E",
                    "Ę": "E",
                    "Ě": "E",
                    "ē": "e",
                    "ĕ": "e",
                    "ė": "e",
                    "ę": "e",
                    "ě": "e",
                    "Ĝ": "G",
                    "Ğ": "G",
                    "Ġ": "G",
                    "Ģ": "G",
                    "ĝ": "g",
                    "ğ": "g",
                    "ġ": "g",
                    "ģ": "g",
                    "Ĥ": "H",
                    "Ħ": "H",
                    "ĥ": "h",
                    "ħ": "h",
                    "Ĩ": "I",
                    "Ī": "I",
                    "Ĭ": "I",
                    "Į": "I",
                    "İ": "I",
                    "ĩ": "i",
                    "ī": "i",
                    "ĭ": "i",
                    "į": "i",
                    "ı": "i",
                    "Ĵ": "J",
                    "ĵ": "j",
                    "Ķ": "K",
                    "ķ": "k",
                    "ĸ": "k",
                    "Ĺ": "L",
                    "Ļ": "L",
                    "Ľ": "L",
                    "Ŀ": "L",
                    "Ł": "L",
                    "ĺ": "l",
                    "ļ": "l",
                    "ľ": "l",
                    "ŀ": "l",
                    "ł": "l",
                    "Ń": "N",
                    "Ņ": "N",
                    "Ň": "N",
                    "Ŋ": "N",
                    "ń": "n",
                    "ņ": "n",
                    "ň": "n",
                    "ŋ": "n",
                    "Ō": "O",
                    "Ŏ": "O",
                    "Ő": "O",
                    "ō": "o",
                    "ŏ": "o",
                    "ő": "o",
                    "Ŕ": "R",
                    "Ŗ": "R",
                    "Ř": "R",
                    "ŕ": "r",
                    "ŗ": "r",
                    "ř": "r",
                    "Ś": "S",
                    "Ŝ": "S",
                    "Ş": "S",
                    "Š": "S",
                    "ś": "s",
                    "ŝ": "s",
                    "ş": "s",
                    "š": "s",
                    "Ţ": "T",
                    "Ť": "T",
                    "Ŧ": "T",
                    "ţ": "t",
                    "ť": "t",
                    "ŧ": "t",
                    "Ũ": "U",
                    "Ū": "U",
                    "Ŭ": "U",
                    "Ů": "U",
                    "Ű": "U",
                    "Ų": "U",
                    "ũ": "u",
                    "ū": "u",
                    "ŭ": "u",
                    "ů": "u",
                    "ű": "u",
                    "ų": "u",
                    "Ŵ": "W",
                    "ŵ": "w",
                    "Ŷ": "Y",
                    "ŷ": "y",
                    "Ÿ": "Y",
                    "Ź": "Z",
                    "Ż": "Z",
                    "Ž": "Z",
                    "ź": "z",
                    "ż": "z",
                    "ž": "z",
                    "Ĳ": "IJ",
                    "ĳ": "ij",
                    "Œ": "Oe",
                    "œ": "oe",
                    "ŉ": "'n",
                    "ſ": "s"
                }, An = {"&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;"}, Pn = {
                    "&amp;": "&",
                    "&lt;": "<",
                    "&gt;": ">",
                    "&quot;": '"',
                    "&#39;": "'"
                }, En = {
                    "\\": "\\",
                    "'": "'",
                    "\n": "n",
                    "\r": "r",
                    "\u2028": "u2028",
                    "\u2029": "u2029"
                }, In = parseFloat, Tn = parseInt, On = "object" == typeof t && t && t.Object === Object && t, Bn = "object" == typeof self && self && self.Object === Object && self, Ln = On || Bn || Function("return this")(), Mn = "object" == typeof e && e && !e.nodeType && e, Rn = Mn && "object" == typeof i && i && !i.nodeType && i, Fn = Rn && Rn.exports === Mn, zn = Fn && On.process, Dn = function () {
                    try {
                        return zn && zn.binding && zn.binding("util")
                    } catch (t) {
                    }
                }(), Nn = Dn && Dn.isArrayBuffer, Un = Dn && Dn.isDate, Wn = Dn && Dn.isMap, jn = Dn && Dn.isRegExp, Gn = Dn && Dn.isSet, Vn = Dn && Dn.isTypedArray, Hn = E("length"), qn = I(Cn), Zn = I(An), Yn = I(Pn), Xn = function t(e) {
                    function n(t) {
                        if (ou(t) && !vh(t) && !(t instanceof w)) {
                            if (t instanceof i)return t;
                            if (yc.call(t, "__wrapped__"))return na(t)
                        }
                        return new i(t)
                    }

                    function r() {
                    }

                    function i(t, e) {
                        this.__wrapped__ = t, this.__actions__ = [], this.__chain__ = !!e, this.__index__ = 0, this.__values__ = it
                    }

                    function w(t) {
                        this.__wrapped__ = t, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Ft, this.__views__ = []
                    }

                    function I() {
                        var t = new w(this.__wrapped__);
                        return t.__actions__ = zi(this.__actions__), t.__dir__ = this.__dir__, t.__filtered__ = this.__filtered__, t.__iteratees__ = zi(this.__iteratees__), t.__takeCount__ = this.__takeCount__, t.__views__ = zi(this.__views__), t
                    }

                    function J() {
                        if (this.__filtered__) {
                            var t = new w(this);
                            t.__dir__ = -1, t.__filtered__ = !0
                        } else t = this.clone(), t.__dir__ *= -1;
                        return t
                    }

                    function et() {
                        var t = this.__wrapped__.value(), e = this.__dir__, n = vh(t), r = e < 0, i = n ? t.length : 0, o = Po(0, i, this.__views__), a = o.start, s = o.end, u = s - a, l = r ? s : a - 1, c = this.__iteratees__, f = c.length, h = 0, p = qc(u, this.__takeCount__);
                        if (!n || !r && i == u && p == u)return bi(t, this.__actions__);
                        var d = [];
                        t:for (; u-- && h < p;) {
                            l += e;
                            for (var g = -1, y = t[l]; ++g < f;) {
                                var v = c[g], b = v.iteratee, m = v.type, w = b(y);
                                if (m == Ot)y = w; else if (!w) {
                                    if (m == Tt)continue t;
                                    break t
                                }
                            }
                            d[h++] = y
                        }
                        return d
                    }

                    function nt(t) {
                        var e = -1, n = null == t ? 0 : t.length;
                        for (this.clear(); ++e < n;) {
                            var r = t[e];
                            this.set(r[0], r[1])
                        }
                    }

                    function Ue() {
                        this.__data__ = nf ? nf(null) : {}, this.size = 0
                    }

                    function Qe(t) {
                        var e = this.has(t) && delete this.__data__[t];
                        return this.size -= e ? 1 : 0, e
                    }

                    function $e(t) {
                        var e = this.__data__;
                        if (nf) {
                            var n = e[t];
                            return n === ut ? it : n
                        }
                        return yc.call(e, t) ? e[t] : it
                    }

                    function tn(t) {
                        var e = this.__data__;
                        return nf ? e[t] !== it : yc.call(e, t)
                    }

                    function en(t, e) {
                        var n = this.__data__;
                        return this.size += this.has(t) ? 0 : 1, n[t] = nf && e === it ? ut : e, this
                    }

                    function nn(t) {
                        var e = -1, n = null == t ? 0 : t.length;
                        for (this.clear(); ++e < n;) {
                            var r = t[e];
                            this.set(r[0], r[1])
                        }
                    }

                    function rn() {
                        this.__data__ = [], this.size = 0
                    }

                    function on(t) {
                        var e = this.__data__, n = Kn(e, t);
                        return !(n < 0) && (n == e.length - 1 ? e.pop() : Tc.call(e, n, 1), --this.size, !0)
                    }

                    function an(t) {
                        var e = this.__data__, n = Kn(e, t);
                        return n < 0 ? it : e[n][1]
                    }

                    function sn(t) {
                        return Kn(this.__data__, t) > -1
                    }

                    function un(t, e) {
                        var n = this.__data__, r = Kn(n, t);
                        return r < 0 ? (++this.size, n.push([t, e])) : n[r][1] = e, this
                    }

                    function ln(t) {
                        var e = -1, n = null == t ? 0 : t.length;
                        for (this.clear(); ++e < n;) {
                            var r = t[e];
                            this.set(r[0], r[1])
                        }
                    }

                    function cn() {
                        this.size = 0, this.__data__ = {hash: new nt, map: new (Qc || nn), string: new nt}
                    }

                    function fn(t) {
                        var e = ko(this, t).delete(t);
                        return this.size -= e ? 1 : 0, e
                    }

                    function hn(t) {
                        return ko(this, t).get(t)
                    }

                    function pn(t) {
                        return ko(this, t).has(t)
                    }

                    function dn(t, e) {
                        var n = ko(this, t), r = n.size;
                        return n.set(t, e), this.size += n.size == r ? 0 : 1, this
                    }

                    function vn(t) {
                        var e = -1, n = null == t ? 0 : t.length;
                        for (this.__data__ = new ln; ++e < n;)this.add(t[e])
                    }

                    function bn(t) {
                        return this.__data__.set(t, ut), this
                    }

                    function mn(t) {
                        return this.__data__.has(t)
                    }

                    function wn(t) {
                        var e = this.__data__ = new nn(t);
                        this.size = e.size
                    }

                    function Cn() {
                        this.__data__ = new nn, this.size = 0
                    }

                    function An(t) {
                        var e = this.__data__, n = e.delete(t);
                        return this.size = e.size, n
                    }

                    function Pn(t) {
                        return this.__data__.get(t)
                    }

                    function En(t) {
                        return this.__data__.has(t)
                    }

                    function On(t, e) {
                        var n = this.__data__;
                        if (n instanceof nn) {
                            var r = n.__data__;
                            if (!Qc || r.length < ot - 1)return r.push([t, e]), this.size = ++n.size, this;
                            n = this.__data__ = new ln(r)
                        }
                        return n.set(t, e), this.size = n.size, this
                    }

                    function Bn(t, e) {
                        var n = vh(t), r = !n && yh(t), i = !n && !r && mh(t), o = !n && !r && !i && Sh(t), a = n || r || i || o, s = a ? L(t.length, lc) : [], u = s.length;
                        for (var l in t)!e && !yc.call(t, l) || a && ("length" == l || i && ("offset" == l || "parent" == l) || o && ("buffer" == l || "byteLength" == l || "byteOffset" == l) || Ro(l, u)) || s.push(l);
                        return s
                    }

                    function Mn(t) {
                        var e = t.length;
                        return e ? t[$r(0, e - 1)] : it
                    }

                    function Rn(t, e) {
                        return Qo(zi(t), nr(e, 0, t.length))
                    }

                    function zn(t) {
                        return Qo(zi(t))
                    }

                    function Dn(t, e, n) {
                        (n === it || Hs(t[e], n)) && (n !== it || e in t) || tr(t, e, n)
                    }

                    function Hn(t, e, n) {
                        var r = t[e];
                        yc.call(t, e) && Hs(r, n) && (n !== it || e in t) || tr(t, e, n)
                    }

                    function Kn(t, e) {
                        for (var n = t.length; n--;)if (Hs(t[n][0], e))return n;
                        return -1
                    }

                    function Jn(t, e, n, r) {
                        return gf(t, function (t, i, o) {
                            e(r, t, n(t), o)
                        }), r
                    }

                    function Qn(t, e) {
                        return t && Di(e, Uu(e), t)
                    }

                    function $n(t, e) {
                        return t && Di(e, Wu(e), t)
                    }

                    function tr(t, e, n) {
                        "__proto__" == e && Mc ? Mc(t, e, {
                            configurable: !0,
                            enumerable: !0,
                            value: n,
                            writable: !0
                        }) : t[e] = n
                    }

                    function er(t, e) {
                        for (var n = -1, r = e.length, i = nc(r), o = null == t; ++n < r;)i[n] = o ? it : zu(t, e[n]);
                        return i
                    }

                    function nr(t, e, n) {
                        return t === t && (n !== it && (t = t <= n ? t : n), e !== it && (t = t >= e ? t : e)), t
                    }

                    function rr(t, e, n, r, i, o) {
                        var a, s = e & ft, u = e & ht, c = e & pt;
                        if (n && (a = i ? n(t, r, i, o) : n(t)), a !== it)return a;
                        if (!iu(t))return t;
                        var f = vh(t);
                        if (f) {
                            if (a = To(t), !s)return zi(t, a)
                        } else {
                            var h = Pf(t), p = h == Zt || h == Yt;
                            if (mh(t))return Ci(t, s);
                            if (h == Qt || h == Ut || p && !i) {
                                if (a = u || p ? {} : Oo(t), !s)return u ? Ui(t, $n(a, t)) : Ni(t, Qn(a, t))
                            } else {
                                if (!Sn[h])return i ? t : {};
                                a = Bo(t, h, rr, s)
                            }
                        }
                        o || (o = new wn);
                        var d = o.get(t);
                        if (d)return d;
                        o.set(t, a);
                        var g = c ? u ? mo : bo : u ? Wu : Uu, y = f ? it : g(t);
                        return l(y || t, function (r, i) {
                            y && (i = r, r = t[i]), Hn(a, i, rr(r, e, n, i, t, o))
                        }), a
                    }

                    function ir(t) {
                        var e = Uu(t);
                        return function (n) {
                            return or(n, t, e)
                        }
                    }

                    function or(t, e, n) {
                        var r = n.length;
                        if (null == t)return !r;
                        for (t = sc(t); r--;) {
                            var i = n[r], o = e[i], a = t[i];
                            if (a === it && !(i in t) || !o(a))return !1
                        }
                        return !0
                    }

                    function ar(t, e, n) {
                        if ("function" != typeof t)throw new cc(st);
                        return Tf(function () {
                            t.apply(it, n)
                        }, e)
                    }

                    function sr(t, e, n, r) {
                        var i = -1, o = p, a = !0, s = t.length, u = [], l = e.length;
                        if (!s)return u;
                        n && (e = g(e, R(n))), r ? (o = d, a = !1) : e.length >= ot && (o = z, a = !1, e = new vn(e));
                        t:for (; ++i < s;) {
                            var c = t[i], f = null == n ? c : n(c);
                            if (c = r || 0 !== c ? c : 0, a && f === f) {
                                for (var h = l; h--;)if (e[h] === f)continue t;
                                u.push(c)
                            } else o(e, f, r) || u.push(c)
                        }
                        return u
                    }

                    function ur(t, e) {
                        var n = !0;
                        return gf(t, function (t, r, i) {
                            return n = !!e(t, r, i)
                        }), n
                    }

                    function lr(t, e, n) {
                        for (var r = -1, i = t.length; ++r < i;) {
                            var o = t[r], a = e(o);
                            if (null != a && (s === it ? a === a && !yu(a) : n(a, s)))var s = a, u = o
                        }
                        return u
                    }

                    function cr(t, e, n, r) {
                        var i = t.length;
                        for (n = _u(n), n < 0 && (n = -n > i ? 0 : i + n), r = r === it || r > i ? i : _u(r), r < 0 && (r += i), r = n > r ? 0 : ku(r); n < r;)t[n++] = e;
                        return t
                    }

                    function fr(t, e) {
                        var n = [];
                        return gf(t, function (t, r, i) {
                            e(t, r, i) && n.push(t)
                        }), n
                    }

                    function hr(t, e, n, r, i) {
                        var o = -1, a = t.length;
                        for (n || (n = Mo), i || (i = []); ++o < a;) {
                            var s = t[o];
                            e > 0 && n(s) ? e > 1 ? hr(s, e - 1, n, r, i) : y(i, s) : r || (i[i.length] = s)
                        }
                        return i
                    }

                    function pr(t, e) {
                        return t && vf(t, e, Uu)
                    }

                    function dr(t, e) {
                        return t && bf(t, e, Uu)
                    }

                    function gr(t, e) {
                        return h(e, function (e) {
                            return eu(t[e])
                        })
                    }

                    function yr(t, e) {
                        e = ki(e, t);
                        for (var n = 0, r = e.length; null != t && n < r;)t = t[$o(e[n++])];
                        return n && n == r ? t : it
                    }

                    function vr(t, e, n) {
                        var r = e(t);
                        return vh(t) ? r : y(r, n(t))
                    }

                    function br(t) {
                        return null == t ? t === it ? ie : Jt : Lc && Lc in sc(t) ? Ao(t) : qo(t)
                    }

                    function mr(t, e) {
                        return t > e
                    }

                    function wr(t, e) {
                        return null != t && yc.call(t, e)
                    }

                    function xr(t, e) {
                        return null != t && e in sc(t)
                    }

                    function _r(t, e, n) {
                        return t >= qc(e, n) && t < Hc(e, n)
                    }

                    function kr(t, e, n) {
                        for (var r = n ? d : p, i = t[0].length, o = t.length, a = o, s = nc(o), u = 1 / 0, l = []; a--;) {
                            var c = t[a];
                            a && e && (c = g(c, R(e))), u = qc(c.length, u), s[a] = !n && (e || i >= 120 && c.length >= 120) ? new vn(a && c) : it
                        }
                        c = t[0];
                        var f = -1, h = s[0];
                        t:for (; ++f < i && l.length < u;) {
                            var y = c[f], v = e ? e(y) : y;
                            if (y = n || 0 !== y ? y : 0, !(h ? z(h, v) : r(l, v, n))) {
                                for (a = o; --a;) {
                                    var b = s[a];
                                    if (!(b ? z(b, v) : r(t[a], v, n)))continue t
                                }
                                h && h.push(v), l.push(y)
                            }
                        }
                        return l
                    }

                    function Sr(t, e, n, r) {
                        return pr(t, function (t, i, o) {
                            e(r, n(t), i, o)
                        }), r
                    }

                    function Cr(t, e, n) {
                        e = ki(e, t), t = Yo(t, e);
                        var r = null == t ? t : t[$o(xa(e))];
                        return null == r ? it : s(r, t, n)
                    }

                    function Ar(t) {
                        return ou(t) && br(t) == Ut
                    }

                    function Pr(t) {
                        return ou(t) && br(t) == se
                    }

                    function Er(t) {
                        return ou(t) && br(t) == Vt
                    }

                    function Ir(t, e, n, r, i) {
                        return t === e || (null == t || null == e || !ou(t) && !ou(e) ? t !== t && e !== e : Tr(t, e, n, r, Ir, i))
                    }

                    function Tr(t, e, n, r, i, o) {
                        var a = vh(t), s = vh(e), u = a ? Wt : Pf(t), l = s ? Wt : Pf(e);
                        u = u == Ut ? Qt : u, l = l == Ut ? Qt : l;
                        var c = u == Qt, f = l == Qt, h = u == l;
                        if (h && mh(t)) {
                            if (!mh(e))return !1;
                            a = !0, c = !1
                        }
                        if (h && !c)return o || (o = new wn), a || Sh(t) ? po(t, e, n, r, i, o) : go(t, e, u, n, r, i, o);
                        if (!(n & dt)) {
                            var p = c && yc.call(t, "__wrapped__"), d = f && yc.call(e, "__wrapped__");
                            if (p || d) {
                                var g = p ? t.value() : t, y = d ? e.value() : e;
                                return o || (o = new wn), i(g, y, n, r, o)
                            }
                        }
                        return !!h && (o || (o = new wn), yo(t, e, n, r, i, o))
                    }

                    function Or(t) {
                        return ou(t) && Pf(t) == Xt
                    }

                    function Br(t, e, n, r) {
                        var i = n.length, o = i, a = !r;
                        if (null == t)return !o;
                        for (t = sc(t); i--;) {
                            var s = n[i];
                            if (a && s[2] ? s[1] !== t[s[0]] : !(s[0] in t))return !1
                        }
                        for (; ++i < o;) {
                            s = n[i];
                            var u = s[0], l = t[u], c = s[1];
                            if (a && s[2]) {
                                if (l === it && !(u in t))return !1
                            } else {
                                var f = new wn;
                                if (r)var h = r(l, c, u, t, e, f);
                                if (!(h === it ? Ir(c, l, dt | gt, r, f) : h))return !1
                            }
                        }
                        return !0
                    }

                    function Lr(t) {
                        return !(!iu(t) || Uo(t)) && (eu(t) ? _c : qe).test(ta(t))
                    }

                    function Mr(t) {
                        return ou(t) && br(t) == te
                    }

                    function Rr(t) {
                        return ou(t) && Pf(t) == ee
                    }

                    function Fr(t) {
                        return ou(t) && ru(t.length) && !!kn[br(t)]
                    }

                    function zr(t) {
                        return "function" == typeof t ? t : null == t ? Tl : "object" == typeof t ? vh(t) ? Gr(t[0], t[1]) : jr(t) : Dl(t)
                    }

                    function Dr(t) {
                        if (!Wo(t))return Vc(t);
                        var e = [];
                        for (var n in sc(t))yc.call(t, n) && "constructor" != n && e.push(n);
                        return e
                    }

                    function Nr(t) {
                        if (!iu(t))return Ho(t);
                        var e = Wo(t), n = [];
                        for (var r in t)("constructor" != r || !e && yc.call(t, r)) && n.push(r);
                        return n
                    }

                    function Ur(t, e) {
                        return t < e
                    }

                    function Wr(t, e) {
                        var n = -1, r = qs(t) ? nc(t.length) : [];
                        return gf(t, function (t, i, o) {
                            r[++n] = e(t, i, o)
                        }), r
                    }

                    function jr(t) {
                        var e = So(t);
                        return 1 == e.length && e[0][2] ? Go(e[0][0], e[0][1]) : function (n) {
                            return n === t || Br(n, t, e)
                        }
                    }

                    function Gr(t, e) {
                        return zo(t) && jo(e) ? Go($o(t), e) : function (n) {
                            var r = zu(n, t);
                            return r === it && r === e ? Nu(n, t) : Ir(e, r, dt | gt)
                        }
                    }

                    function Vr(t, e, n, r, i) {
                        t !== e && vf(e, function (o, a) {
                            if (iu(o))i || (i = new wn), Hr(t, e, a, n, Vr, r, i); else {
                                var s = r ? r(t[a], o, a + "", t, e, i) : it;
                                s === it && (s = o), Dn(t, a, s)
                            }
                        }, Wu)
                    }

                    function Hr(t, e, n, r, i, o, a) {
                        var s = t[n], u = e[n], l = a.get(u);
                        if (l)return void Dn(t, n, l);
                        var c = o ? o(s, u, n + "", t, e, a) : it, f = c === it;
                        if (f) {
                            var h = vh(u), p = !h && mh(u), d = !h && !p && Sh(u);
                            c = u, h || p || d ? vh(s) ? c = s : Zs(s) ? c = zi(s) : p ? (f = !1, c = Ci(u, !0)) : d ? (f = !1, c = Bi(u, !0)) : c = [] : pu(u) || yh(u) ? (c = s, yh(s) ? c = Cu(s) : (!iu(s) || r && eu(s)) && (c = Oo(u))) : f = !1
                        }
                        f && (a.set(u, c), i(c, u, r, o, a), a.delete(u)), Dn(t, n, c)
                    }

                    function qr(t, e) {
                        var n = t.length;
                        if (n)return e += e < 0 ? n : 0, Ro(e, n) ? t[e] : it
                    }

                    function Zr(t, e, n) {
                        var r = -1;
                        return e = g(e.length ? e : [Tl], R(_o())), O(Wr(t, function (t, n, i) {
                            return {
                                criteria: g(e, function (e) {
                                    return e(t)
                                }), index: ++r, value: t
                            }
                        }), function (t, e) {
                            return Mi(t, e, n)
                        })
                    }

                    function Yr(t, e) {
                        return Xr(t, e, function (e, n) {
                            return Nu(t, n)
                        })
                    }

                    function Xr(t, e, n) {
                        for (var r = -1, i = e.length, o = {}; ++r < i;) {
                            var a = e[r], s = yr(t, a);
                            n(s, a) && oi(o, ki(a, t), s)
                        }
                        return o
                    }

                    function Kr(t) {
                        return function (e) {
                            return yr(e, t)
                        }
                    }

                    function Jr(t, e, n, r) {
                        var i = r ? C : S, o = -1, a = e.length, s = t;
                        for (t === e && (e = zi(e)), n && (s = g(t, R(n))); ++o < a;)for (var u = 0, l = e[o], c = n ? n(l) : l; (u = i(s, c, u, r)) > -1;)s !== t && Tc.call(s, u, 1), Tc.call(t, u, 1);
                        return t
                    }

                    function Qr(t, e) {
                        for (var n = t ? e.length : 0, r = n - 1; n--;) {
                            var i = e[n];
                            if (n == r || i !== o) {
                                var o = i;
                                Ro(i) ? Tc.call(t, i, 1) : gi(t, i)
                            }
                        }
                        return t
                    }

                    function $r(t, e) {
                        return t + Nc(Xc() * (e - t + 1))
                    }

                    function ti(t, e, n, r) {
                        for (var i = -1, o = Hc(Dc((e - t) / (n || 1)), 0), a = nc(o); o--;)a[r ? o : ++i] = t, t += n;
                        return a
                    }

                    function ei(t, e) {
                        var n = "";
                        if (!t || e < 1 || e > Lt)return n;
                        do {
                            e % 2 && (n += t), (e = Nc(e / 2)) && (t += t)
                        } while (e);
                        return n
                    }

                    function ni(t, e) {
                        return Of(Zo(t, e, Tl), t + "")
                    }

                    function ri(t) {
                        return Mn($u(t))
                    }

                    function ii(t, e) {
                        var n = $u(t);
                        return Qo(n, nr(e, 0, n.length))
                    }

                    function oi(t, e, n, r) {
                        if (!iu(t))return t;
                        e = ki(e, t);
                        for (var i = -1, o = e.length, a = o - 1, s = t; null != s && ++i < o;) {
                            var u = $o(e[i]), l = n;
                            if (i != a) {
                                var c = s[u];
                                l = r ? r(c, u, s) : it, l === it && (l = iu(c) ? c : Ro(e[i + 1]) ? [] : {})
                            }
                            Hn(s, u, l), s = s[u]
                        }
                        return t
                    }

                    function ai(t) {
                        return Qo($u(t))
                    }

                    function si(t, e, n) {
                        var r = -1, i = t.length;
                        e < 0 && (e = -e > i ? 0 : i + e), n = n > i ? i : n, n < 0 && (n += i), i = e > n ? 0 : n - e >>> 0, e >>>= 0;
                        for (var o = nc(i); ++r < i;)o[r] = t[r + e];
                        return o
                    }

                    function ui(t, e) {
                        var n;
                        return gf(t, function (t, r, i) {
                            return !(n = e(t, r, i))
                        }), !!n
                    }

                    function li(t, e, n) {
                        var r = 0, i = null == t ? r : t.length;
                        if ("number" == typeof e && e === e && i <= Dt) {
                            for (; r < i;) {
                                var o = r + i >>> 1, a = t[o];
                                null !== a && !yu(a) && (n ? a <= e : a < e) ? r = o + 1 : i = o
                            }
                            return i
                        }
                        return ci(t, e, Tl, n)
                    }

                    function ci(t, e, n, r) {
                        e = n(e);
                        for (var i = 0, o = null == t ? 0 : t.length, a = e !== e, s = null === e, u = yu(e), l = e === it; i < o;) {
                            var c = Nc((i + o) / 2), f = n(t[c]), h = f !== it, p = null === f, d = f === f, g = yu(f);
                            if (a)var y = r || d; else y = l ? d && (r || h) : s ? d && h && (r || !p) : u ? d && h && !p && (r || !g) : !p && !g && (r ? f <= e : f < e);
                            y ? i = c + 1 : o = c
                        }
                        return qc(o, zt)
                    }

                    function fi(t, e) {
                        for (var n = -1, r = t.length, i = 0, o = []; ++n < r;) {
                            var a = t[n], s = e ? e(a) : a;
                            if (!n || !Hs(s, u)) {
                                var u = s;
                                o[i++] = 0 === a ? 0 : a
                            }
                        }
                        return o
                    }

                    function hi(t) {
                        return "number" == typeof t ? t : yu(t) ? Rt : +t
                    }

                    function pi(t) {
                        if ("string" == typeof t)return t;
                        if (vh(t))return g(t, pi) + "";
                        if (yu(t))return pf ? pf.call(t) : "";
                        var e = t + "";
                        return "0" == e && 1 / t == -Bt ? "-0" : e
                    }

                    function di(t, e, n) {
                        var r = -1, i = p, o = t.length, a = !0, s = [], u = s;
                        if (n)a = !1, i = d; else if (o >= ot) {
                            var l = e ? null : kf(t);
                            if (l)return X(l);
                            a = !1, i = z, u = new vn
                        } else u = e ? [] : s;
                        t:for (; ++r < o;) {
                            var c = t[r], f = e ? e(c) : c;
                            if (c = n || 0 !== c ? c : 0, a && f === f) {
                                for (var h = u.length; h--;)if (u[h] === f)continue t;
                                e && u.push(f), s.push(c)
                            } else i(u, f, n) || (u !== s && u.push(f), s.push(c))
                        }
                        return s
                    }

                    function gi(t, e) {
                        return e = ki(e, t), null == (t = Yo(t, e)) || delete t[$o(xa(e))]
                    }

                    function yi(t, e, n, r) {
                        return oi(t, e, n(yr(t, e)), r)
                    }

                    function vi(t, e, n, r) {
                        for (var i = t.length, o = r ? i : -1; (r ? o-- : ++o < i) && e(t[o], o, t););
                        return n ? si(t, r ? 0 : o, r ? o + 1 : i) : si(t, r ? o + 1 : 0, r ? i : o)
                    }

                    function bi(t, e) {
                        var n = t;
                        return n instanceof w && (n = n.value()), v(e, function (t, e) {
                            return e.func.apply(e.thisArg, y([t], e.args))
                        }, n)
                    }

                    function mi(t, e, n) {
                        var r = t.length;
                        if (r < 2)return r ? di(t[0]) : [];
                        for (var i = -1, o = nc(r); ++i < r;)for (var a = t[i], s = -1; ++s < r;)s != i && (o[i] = sr(o[i] || a, t[s], e, n));
                        return di(hr(o, 1), e, n)
                    }

                    function wi(t, e, n) {
                        for (var r = -1, i = t.length, o = e.length, a = {}; ++r < i;) {
                            var s = r < o ? e[r] : it;
                            n(a, t[r], s)
                        }
                        return a
                    }

                    function xi(t) {
                        return Zs(t) ? t : []
                    }

                    function _i(t) {
                        return "function" == typeof t ? t : Tl
                    }

                    function ki(t, e) {
                        return vh(t) ? t : zo(t, e) ? [t] : Bf(Pu(t))
                    }

                    function Si(t, e, n) {
                        var r = t.length;
                        return n = n === it ? r : n, !e && n >= r ? t : si(t, e, n)
                    }

                    function Ci(t, e) {
                        if (e)return t.slice();
                        var n = t.length, r = Ac ? Ac(n) : new t.constructor(n);
                        return t.copy(r), r
                    }

                    function Ai(t) {
                        var e = new t.constructor(t.byteLength);
                        return new Cc(e).set(new Cc(t)), e
                    }

                    function Pi(t, e) {
                        var n = e ? Ai(t.buffer) : t.buffer;
                        return new t.constructor(n, t.byteOffset, t.byteLength)
                    }

                    function Ei(t, e, n) {
                        return v(e ? n(q(t), ft) : q(t), o, new t.constructor)
                    }

                    function Ii(t) {
                        var e = new t.constructor(t.source, Ge.exec(t));
                        return e.lastIndex = t.lastIndex, e
                    }

                    function Ti(t, e, n) {
                        return v(e ? n(X(t), ft) : X(t), a, new t.constructor)
                    }

                    function Oi(t) {
                        return hf ? sc(hf.call(t)) : {}
                    }

                    function Bi(t, e) {
                        var n = e ? Ai(t.buffer) : t.buffer;
                        return new t.constructor(n, t.byteOffset, t.length)
                    }

                    function Li(t, e) {
                        if (t !== e) {
                            var n = t !== it, r = null === t, i = t === t, o = yu(t), a = e !== it, s = null === e, u = e === e, l = yu(e);
                            if (!s && !l && !o && t > e || o && a && u && !s && !l || r && a && u || !n && u || !i)return 1;
                            if (!r && !o && !l && t < e || l && n && i && !r && !o || s && n && i || !a && i || !u)return -1
                        }
                        return 0
                    }

                    function Mi(t, e, n) {
                        for (var r = -1, i = t.criteria, o = e.criteria, a = i.length, s = n.length; ++r < a;) {
                            var u = Li(i[r], o[r]);
                            if (u) {
                                if (r >= s)return u;
                                return u * ("desc" == n[r] ? -1 : 1)
                            }
                        }
                        return t.index - e.index
                    }

                    function Ri(t, e, n, r) {
                        for (var i = -1, o = t.length, a = n.length, s = -1, u = e.length, l = Hc(o - a, 0), c = nc(u + l), f = !r; ++s < u;)c[s] = e[s];
                        for (; ++i < a;)(f || i < o) && (c[n[i]] = t[i]);
                        for (; l--;)c[s++] = t[i++];
                        return c
                    }

                    function Fi(t, e, n, r) {
                        for (var i = -1, o = t.length, a = -1, s = n.length, u = -1, l = e.length, c = Hc(o - s, 0), f = nc(c + l), h = !r; ++i < c;)f[i] = t[i];
                        for (var p = i; ++u < l;)f[p + u] = e[u];
                        for (; ++a < s;)(h || i < o) && (f[p + n[a]] = t[i++]);
                        return f
                    }

                    function zi(t, e) {
                        var n = -1, r = t.length;
                        for (e || (e = nc(r)); ++n < r;)e[n] = t[n];
                        return e
                    }

                    function Di(t, e, n, r) {
                        var i = !n;
                        n || (n = {});
                        for (var o = -1, a = e.length; ++o < a;) {
                            var s = e[o], u = r ? r(n[s], t[s], s, n, t) : it;
                            u === it && (u = t[s]), i ? tr(n, s, u) : Hn(n, s, u)
                        }
                        return n
                    }

                    function Ni(t, e) {
                        return Di(t, Cf(t), e)
                    }

                    function Ui(t, e) {
                        return Di(t, Af(t), e)
                    }

                    function Wi(t, e) {
                        return function (n, r) {
                            var i = vh(n) ? u : Jn, o = e ? e() : {};
                            return i(n, t, _o(r, 2), o)
                        }
                    }

                    function ji(t) {
                        return ni(function (e, n) {
                            var r = -1, i = n.length, o = i > 1 ? n[i - 1] : it, a = i > 2 ? n[2] : it;
                            for (o = t.length > 3 && "function" == typeof o ? (i--, o) : it, a && Fo(n[0], n[1], a) && (o = i < 3 ? it : o, i = 1), e = sc(e); ++r < i;) {
                                var s = n[r];
                                s && t(e, s, r, o)
                            }
                            return e
                        })
                    }

                    function Gi(t, e) {
                        return function (n, r) {
                            if (null == n)return n;
                            if (!qs(n))return t(n, r);
                            for (var i = n.length, o = e ? i : -1, a = sc(n); (e ? o-- : ++o < i) && !1 !== r(a[o], o, a););
                            return n
                        }
                    }

                    function Vi(t) {
                        return function (e, n, r) {
                            for (var i = -1, o = sc(e), a = r(e), s = a.length; s--;) {
                                var u = a[t ? s : ++i];
                                if (!1 === n(o[u], u, o))break
                            }
                            return e
                        }
                    }

                    function Hi(t, e, n) {
                        function r() {
                            return (this && this !== Ln && this instanceof r ? o : t).apply(i ? n : this, arguments)
                        }

                        var i = e & yt, o = Yi(t);
                        return r
                    }

                    function qi(t) {
                        return function (e) {
                            e = Pu(e);
                            var n = G(e) ? tt(e) : it, r = n ? n[0] : e.charAt(0), i = n ? Si(n, 1).join("") : e.slice(1);
                            return r[t]() + i
                        }
                    }

                    function Zi(t) {
                        return function (e) {
                            return v(Cl(ol(e).replace(gn, "")), t, "")
                        }
                    }

                    function Yi(t) {
                        return function () {
                            var e = arguments;
                            switch (e.length) {
                                case 0:
                                    return new t;
                                case 1:
                                    return new t(e[0]);
                                case 2:
                                    return new t(e[0], e[1]);
                                case 3:
                                    return new t(e[0], e[1], e[2]);
                                case 4:
                                    return new t(e[0], e[1], e[2], e[3]);
                                case 5:
                                    return new t(e[0], e[1], e[2], e[3], e[4]);
                                case 6:
                                    return new t(e[0], e[1], e[2], e[3], e[4], e[5]);
                                case 7:
                                    return new t(e[0], e[1], e[2], e[3], e[4], e[5], e[6])
                            }
                            var n = df(t.prototype), r = t.apply(n, e);
                            return iu(r) ? r : n
                        }
                    }

                    function Xi(t, e, n) {
                        function r() {
                            for (var o = arguments.length, a = nc(o), u = o, l = xo(r); u--;)a[u] = arguments[u];
                            var c = o < 3 && a[0] !== l && a[o - 1] !== l ? [] : Y(a, l);
                            return (o -= c.length) < n ? ao(t, e, Qi, r.placeholder, it, a, c, it, it, n - o) : s(this && this !== Ln && this instanceof r ? i : t, this, a)
                        }

                        var i = Yi(t);
                        return r
                    }

                    function Ki(t) {
                        return function (e, n, r) {
                            var i = sc(e);
                            if (!qs(e)) {
                                var o = _o(n, 3);
                                e = Uu(e), n = function (t) {
                                    return o(i[t], t, i)
                                }
                            }
                            var a = t(e, n, r);
                            return a > -1 ? i[o ? e[a] : a] : it
                        }
                    }

                    function Ji(t) {
                        return vo(function (e) {
                            var n = e.length, r = n, o = i.prototype.thru;
                            for (t && e.reverse(); r--;) {
                                var a = e[r];
                                if ("function" != typeof a)throw new cc(st);
                                if (o && !s && "wrapper" == wo(a))var s = new i([], !0)
                            }
                            for (r = s ? r : n; ++r < n;) {
                                a = e[r];
                                var u = wo(a), l = "wrapper" == u ? Sf(a) : it;
                                s = l && No(l[0]) && l[1] == (kt | mt | xt | St) && !l[4].length && 1 == l[9] ? s[wo(l[0])].apply(s, l[3]) : 1 == a.length && No(a) ? s[u]() : s.thru(a)
                            }
                            return function () {
                                var t = arguments, r = t[0];
                                if (s && 1 == t.length && vh(r))return s.plant(r).value();
                                for (var i = 0, o = n ? e[i].apply(this, t) : r; ++i < n;)o = e[i].call(this, o);
                                return o
                            }
                        })
                    }

                    function Qi(t, e, n, r, i, o, a, s, u, l) {
                        function c() {
                            for (var v = arguments.length, b = nc(v), m = v; m--;)b[m] = arguments[m];
                            if (d)var w = xo(c), x = U(b, w);
                            if (r && (b = Ri(b, r, i, d)), o && (b = Fi(b, o, a, d)), v -= x, d && v < l) {
                                var _ = Y(b, w);
                                return ao(t, e, Qi, c.placeholder, n, b, _, s, u, l - v)
                            }
                            var k = h ? n : this, S = p ? k[t] : t;
                            return v = b.length, s ? b = Xo(b, s) : g && v > 1 && b.reverse(), f && u < v && (b.length = u), this && this !== Ln && this instanceof c && (S = y || Yi(S)), S.apply(k, b)
                        }

                        var f = e & kt, h = e & yt, p = e & vt, d = e & (mt | wt), g = e & Ct, y = p ? it : Yi(t);
                        return c
                    }

                    function $i(t, e) {
                        return function (n, r) {
                            return Sr(n, t, e(r), {})
                        }
                    }

                    function to(t, e) {
                        return function (n, r) {
                            var i;
                            if (n === it && r === it)return e;
                            if (n !== it && (i = n), r !== it) {
                                if (i === it)return r;
                                "string" == typeof n || "string" == typeof r ? (n = pi(n), r = pi(r)) : (n = hi(n), r = hi(r)), i = t(n, r)
                            }
                            return i
                        }
                    }

                    function eo(t) {
                        return vo(function (e) {
                            return e = g(e, R(_o())), ni(function (n) {
                                var r = this;
                                return t(e, function (t) {
                                    return s(t, r, n)
                                })
                            })
                        })
                    }

                    function no(t, e) {
                        e = e === it ? " " : pi(e);
                        var n = e.length;
                        if (n < 2)return n ? ei(e, t) : e;
                        var r = ei(e, Dc(t / $(e)));
                        return G(e) ? Si(tt(r), 0, t).join("") : r.slice(0, t)
                    }

                    function ro(t, e, n, r) {
                        function i() {
                            for (var e = -1, u = arguments.length, l = -1, c = r.length, f = nc(c + u), h = this && this !== Ln && this instanceof i ? a : t; ++l < c;)f[l] = r[l];
                            for (; u--;)f[l++] = arguments[++e];
                            return s(h, o ? n : this, f)
                        }

                        var o = e & yt, a = Yi(t);
                        return i
                    }

                    function io(t) {
                        return function (e, n, r) {
                            return r && "number" != typeof r && Fo(e, n, r) && (n = r = it), e = xu(e), n === it ? (n = e, e = 0) : n = xu(n), r = r === it ? e < n ? 1 : -1 : xu(r), ti(e, n, r, t)
                        }
                    }

                    function oo(t) {
                        return function (e, n) {
                            return "string" == typeof e && "string" == typeof n || (e = Su(e), n = Su(n)), t(e, n)
                        }
                    }

                    function ao(t, e, n, r, i, o, a, s, u, l) {
                        var c = e & mt, f = c ? a : it, h = c ? it : a, p = c ? o : it, d = c ? it : o;
                        e |= c ? xt : _t, (e &= ~(c ? _t : xt)) & bt || (e &= ~(yt | vt));
                        var g = [t, e, i, p, f, d, h, s, u, l], y = n.apply(it, g);
                        return No(t) && If(y, g), y.placeholder = r, Ko(y, t, e)
                    }

                    function so(t) {
                        var e = ac[t];
                        return function (t, n) {
                            if (t = Su(t), n = null == n ? 0 : qc(_u(n), 292)) {
                                var r = (Pu(t) + "e").split("e");
                                return r = (Pu(e(r[0] + "e" + (+r[1] + n))) + "e").split("e"), +(r[0] + "e" + (+r[1] - n))
                            }
                            return e(t)
                        }
                    }

                    function uo(t) {
                        return function (e) {
                            var n = Pf(e);
                            return n == Xt ? q(e) : n == ee ? K(e) : M(e, t(e))
                        }
                    }

                    function lo(t, e, n, r, i, o, a, s) {
                        var u = e & vt;
                        if (!u && "function" != typeof t)throw new cc(st);
                        var l = r ? r.length : 0;
                        if (l || (e &= ~(xt | _t), r = i = it), a = a === it ? a : Hc(_u(a), 0), s = s === it ? s : _u(s), l -= i ? i.length : 0, e & _t) {
                            var c = r, f = i;
                            r = i = it
                        }
                        var h = u ? it : Sf(t), p = [t, e, n, r, i, c, f, o, a, s];
                        if (h && Vo(p, h), t = p[0], e = p[1], n = p[2], r = p[3], i = p[4], s = p[9] = p[9] === it ? u ? 0 : t.length : Hc(p[9] - l, 0), !s && e & (mt | wt) && (e &= ~(mt | wt)), e && e != yt)d = e == mt || e == wt ? Xi(t, e, s) : e != xt && e != (yt | xt) || i.length ? Qi.apply(it, p) : ro(t, e, n, r); else var d = Hi(t, e, n);
                        return Ko((h ? mf : If)(d, p), t, e)
                    }

                    function co(t, e, n, r) {
                        return t === it || Hs(t, pc[n]) && !yc.call(r, n) ? e : t
                    }

                    function fo(t, e, n, r, i, o) {
                        return iu(t) && iu(e) && (o.set(e, t), Vr(t, e, it, fo, o), o.delete(e)), t
                    }

                    function ho(t) {
                        return pu(t) ? it : t
                    }

                    function po(t, e, n, r, i, o) {
                        var a = n & dt, s = t.length, u = e.length;
                        if (s != u && !(a && u > s))return !1;
                        var l = o.get(t);
                        if (l && o.get(e))return l == e;
                        var c = -1, f = !0, h = n & gt ? new vn : it;
                        for (o.set(t, e), o.set(e, t); ++c < s;) {
                            var p = t[c], d = e[c];
                            if (r)var g = a ? r(d, p, c, e, t, o) : r(p, d, c, t, e, o);
                            if (g !== it) {
                                if (g)continue;
                                f = !1;
                                break
                            }
                            if (h) {
                                if (!m(e, function (t, e) {
                                        if (!z(h, e) && (p === t || i(p, t, n, r, o)))return h.push(e)
                                    })) {
                                    f = !1;
                                    break
                                }
                            } else if (p !== d && !i(p, d, n, r, o)) {
                                f = !1;
                                break
                            }
                        }
                        return o.delete(t), o.delete(e), f
                    }

                    function go(t, e, n, r, i, o, a) {
                        switch (n) {
                            case ue:
                                if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset)return !1;
                                t = t.buffer, e = e.buffer;
                            case se:
                                return !(t.byteLength != e.byteLength || !o(new Cc(t), new Cc(e)));
                            case Gt:
                            case Vt:
                            case Kt:
                                return Hs(+t, +e);
                            case qt:
                                return t.name == e.name && t.message == e.message;
                            case te:
                            case ne:
                                return t == e + "";
                            case Xt:
                                var s = q;
                            case ee:
                                var u = r & dt;
                                if (s || (s = X), t.size != e.size && !u)return !1;
                                var l = a.get(t);
                                if (l)return l == e;
                                r |= gt, a.set(t, e);
                                var c = po(s(t), s(e), r, i, o, a);
                                return a.delete(t), c;
                            case re:
                                if (hf)return hf.call(t) == hf.call(e)
                        }
                        return !1
                    }

                    function yo(t, e, n, r, i, o) {
                        var a = n & dt, s = bo(t), u = s.length;
                        if (u != bo(e).length && !a)return !1;
                        for (var l = u; l--;) {
                            var c = s[l];
                            if (!(a ? c in e : yc.call(e, c)))return !1
                        }
                        var f = o.get(t);
                        if (f && o.get(e))return f == e;
                        var h = !0;
                        o.set(t, e), o.set(e, t);
                        for (var p = a; ++l < u;) {
                            c = s[l];
                            var d = t[c], g = e[c];
                            if (r)var y = a ? r(g, d, c, e, t, o) : r(d, g, c, t, e, o)
                                ;
                            if (!(y === it ? d === g || i(d, g, n, r, o) : y)) {
                                h = !1;
                                break
                            }
                            p || (p = "constructor" == c)
                        }
                        if (h && !p) {
                            var v = t.constructor, b = e.constructor;
                            v != b && "constructor" in t && "constructor" in e && !("function" == typeof v && v instanceof v && "function" == typeof b && b instanceof b) && (h = !1)
                        }
                        return o.delete(t), o.delete(e), h
                    }

                    function vo(t) {
                        return Of(Zo(t, it, pa), t + "")
                    }

                    function bo(t) {
                        return vr(t, Uu, Cf)
                    }

                    function mo(t) {
                        return vr(t, Wu, Af)
                    }

                    function wo(t) {
                        for (var e = t.name + "", n = of[e], r = yc.call(of, e) ? n.length : 0; r--;) {
                            var i = n[r], o = i.func;
                            if (null == o || o == t)return i.name
                        }
                        return e
                    }

                    function xo(t) {
                        return (yc.call(n, "placeholder") ? n : t).placeholder
                    }

                    function _o() {
                        var t = n.iteratee || Ol;
                        return t = t === Ol ? zr : t, arguments.length ? t(arguments[0], arguments[1]) : t
                    }

                    function ko(t, e) {
                        var n = t.__data__;
                        return Do(e) ? n["string" == typeof e ? "string" : "hash"] : n.map
                    }

                    function So(t) {
                        for (var e = Uu(t), n = e.length; n--;) {
                            var r = e[n], i = t[r];
                            e[n] = [r, i, jo(i)]
                        }
                        return e
                    }

                    function Co(t, e) {
                        var n = j(t, e);
                        return Lr(n) ? n : it
                    }

                    function Ao(t) {
                        var e = yc.call(t, Lc), n = t[Lc];
                        try {
                            t[Lc] = it;
                            var r = !0
                        } catch (t) {
                        }
                        var i = mc.call(t);
                        return r && (e ? t[Lc] = n : delete t[Lc]), i
                    }

                    function Po(t, e, n) {
                        for (var r = -1, i = n.length; ++r < i;) {
                            var o = n[r], a = o.size;
                            switch (o.type) {
                                case"drop":
                                    t += a;
                                    break;
                                case"dropRight":
                                    e -= a;
                                    break;
                                case"take":
                                    e = qc(e, t + a);
                                    break;
                                case"takeRight":
                                    t = Hc(t, e - a)
                            }
                        }
                        return {start: t, end: e}
                    }

                    function Eo(t) {
                        var e = t.match(De);
                        return e ? e[1].split(Ne) : []
                    }

                    function Io(t, e, n) {
                        e = ki(e, t);
                        for (var r = -1, i = e.length, o = !1; ++r < i;) {
                            var a = $o(e[r]);
                            if (!(o = null != t && n(t, a)))break;
                            t = t[a]
                        }
                        return o || ++r != i ? o : !!(i = null == t ? 0 : t.length) && ru(i) && Ro(a, i) && (vh(t) || yh(t))
                    }

                    function To(t) {
                        var e = t.length, n = t.constructor(e);
                        return e && "string" == typeof t[0] && yc.call(t, "index") && (n.index = t.index, n.input = t.input), n
                    }

                    function Oo(t) {
                        return "function" != typeof t.constructor || Wo(t) ? {} : df(Pc(t))
                    }

                    function Bo(t, e, n, r) {
                        var i = t.constructor;
                        switch (e) {
                            case se:
                                return Ai(t);
                            case Gt:
                            case Vt:
                                return new i(+t);
                            case ue:
                                return Pi(t, r);
                            case le:
                            case ce:
                            case fe:
                            case he:
                            case pe:
                            case de:
                            case ge:
                            case ye:
                            case ve:
                                return Bi(t, r);
                            case Xt:
                                return Ei(t, r, n);
                            case Kt:
                            case ne:
                                return new i(t);
                            case te:
                                return Ii(t);
                            case ee:
                                return Ti(t, r, n);
                            case re:
                                return Oi(t)
                        }
                    }

                    function Lo(t, e) {
                        var n = e.length;
                        if (!n)return t;
                        var r = n - 1;
                        return e[r] = (n > 1 ? "& " : "") + e[r], e = e.join(n > 2 ? ", " : " "), t.replace(ze, "{\n/* [wrapped with " + e + "] */\n")
                    }

                    function Mo(t) {
                        return vh(t) || yh(t) || !!(Oc && t && t[Oc])
                    }

                    function Ro(t, e) {
                        return !!(e = null == e ? Lt : e) && ("number" == typeof t || Ye.test(t)) && t > -1 && t % 1 == 0 && t < e
                    }

                    function Fo(t, e, n) {
                        if (!iu(n))return !1;
                        var r = typeof e;
                        return !!("number" == r ? qs(n) && Ro(e, n.length) : "string" == r && e in n) && Hs(n[e], t)
                    }

                    function zo(t, e) {
                        if (vh(t))return !1;
                        var n = typeof t;
                        return !("number" != n && "symbol" != n && "boolean" != n && null != t && !yu(t)) || (Ie.test(t) || !Ee.test(t) || null != e && t in sc(e))
                    }

                    function Do(t) {
                        var e = typeof t;
                        return "string" == e || "number" == e || "symbol" == e || "boolean" == e ? "__proto__" !== t : null === t
                    }

                    function No(t) {
                        var e = wo(t), r = n[e];
                        if ("function" != typeof r || !(e in w.prototype))return !1;
                        if (t === r)return !0;
                        var i = Sf(r);
                        return !!i && t === i[0]
                    }

                    function Uo(t) {
                        return !!bc && bc in t
                    }

                    function Wo(t) {
                        var e = t && t.constructor;
                        return t === ("function" == typeof e && e.prototype || pc)
                    }

                    function jo(t) {
                        return t === t && !iu(t)
                    }

                    function Go(t, e) {
                        return function (n) {
                            return null != n && (n[t] === e && (e !== it || t in sc(n)))
                        }
                    }

                    function Vo(t, e) {
                        var n = t[1], r = e[1], i = n | r, o = i < (yt | vt | kt), a = r == kt && n == mt || r == kt && n == St && t[7].length <= e[8] || r == (kt | St) && e[7].length <= e[8] && n == mt;
                        if (!o && !a)return t;
                        r & yt && (t[2] = e[2], i |= n & yt ? 0 : bt);
                        var s = e[3];
                        if (s) {
                            var u = t[3];
                            t[3] = u ? Ri(u, s, e[4]) : s, t[4] = u ? Y(t[3], ct) : e[4]
                        }
                        return s = e[5], s && (u = t[5], t[5] = u ? Fi(u, s, e[6]) : s, t[6] = u ? Y(t[5], ct) : e[6]), s = e[7], s && (t[7] = s), r & kt && (t[8] = null == t[8] ? e[8] : qc(t[8], e[8])), null == t[9] && (t[9] = e[9]), t[0] = e[0], t[1] = i, t
                    }

                    function Ho(t) {
                        var e = [];
                        if (null != t)for (var n in sc(t))e.push(n);
                        return e
                    }

                    function qo(t) {
                        return mc.call(t)
                    }

                    function Zo(t, e, n) {
                        return e = Hc(e === it ? t.length - 1 : e, 0), function () {
                            for (var r = arguments, i = -1, o = Hc(r.length - e, 0), a = nc(o); ++i < o;)a[i] = r[e + i];
                            i = -1;
                            for (var u = nc(e + 1); ++i < e;)u[i] = r[i];
                            return u[e] = n(a), s(t, this, u)
                        }
                    }

                    function Yo(t, e) {
                        return e.length < 2 ? t : yr(t, si(e, 0, -1))
                    }

                    function Xo(t, e) {
                        for (var n = t.length, r = qc(e.length, n), i = zi(t); r--;) {
                            var o = e[r];
                            t[r] = Ro(o, n) ? i[o] : it
                        }
                        return t
                    }

                    function Ko(t, e, n) {
                        var r = e + "";
                        return Of(t, Lo(r, ea(Eo(r), n)))
                    }

                    function Jo(t) {
                        var e = 0, n = 0;
                        return function () {
                            var r = Zc(), i = It - (r - n);
                            if (n = r, i > 0) {
                                if (++e >= Et)return arguments[0]
                            } else e = 0;
                            return t.apply(it, arguments)
                        }
                    }

                    function Qo(t, e) {
                        var n = -1, r = t.length, i = r - 1;
                        for (e = e === it ? r : e; ++n < e;) {
                            var o = $r(n, i), a = t[o];
                            t[o] = t[n], t[n] = a
                        }
                        return t.length = e, t
                    }

                    function $o(t) {
                        if ("string" == typeof t || yu(t))return t;
                        var e = t + "";
                        return "0" == e && 1 / t == -Bt ? "-0" : e
                    }

                    function ta(t) {
                        if (null != t) {
                            try {
                                return gc.call(t)
                            } catch (t) {
                            }
                            try {
                                return t + ""
                            } catch (t) {
                            }
                        }
                        return ""
                    }

                    function ea(t, e) {
                        return l(Nt, function (n) {
                            var r = "_." + n[0];
                            e & n[1] && !p(t, r) && t.push(r)
                        }), t.sort()
                    }

                    function na(t) {
                        if (t instanceof w)return t.clone();
                        var e = new i(t.__wrapped__, t.__chain__);
                        return e.__actions__ = zi(t.__actions__), e.__index__ = t.__index__, e.__values__ = t.__values__, e
                    }

                    function ra(t, e, n) {
                        e = (n ? Fo(t, e, n) : e === it) ? 1 : Hc(_u(e), 0);
                        var r = null == t ? 0 : t.length;
                        if (!r || e < 1)return [];
                        for (var i = 0, o = 0, a = nc(Dc(r / e)); i < r;)a[o++] = si(t, i, i += e);
                        return a
                    }

                    function ia(t) {
                        for (var e = -1, n = null == t ? 0 : t.length, r = 0, i = []; ++e < n;) {
                            var o = t[e];
                            o && (i[r++] = o)
                        }
                        return i
                    }

                    function oa() {
                        var t = arguments.length;
                        if (!t)return [];
                        for (var e = nc(t - 1), n = arguments[0], r = t; r--;)e[r - 1] = arguments[r];
                        return y(vh(n) ? zi(n) : [n], hr(e, 1))
                    }

                    function aa(t, e, n) {
                        var r = null == t ? 0 : t.length;
                        return r ? (e = n || e === it ? 1 : _u(e), si(t, e < 0 ? 0 : e, r)) : []
                    }

                    function sa(t, e, n) {
                        var r = null == t ? 0 : t.length;
                        return r ? (e = n || e === it ? 1 : _u(e), e = r - e, si(t, 0, e < 0 ? 0 : e)) : []
                    }

                    function ua(t, e) {
                        return t && t.length ? vi(t, _o(e, 3), !0, !0) : []
                    }

                    function la(t, e) {
                        return t && t.length ? vi(t, _o(e, 3), !0) : []
                    }

                    function ca(t, e, n, r) {
                        var i = null == t ? 0 : t.length;
                        return i ? (n && "number" != typeof n && Fo(t, e, n) && (n = 0, r = i), cr(t, e, n, r)) : []
                    }

                    function fa(t, e, n) {
                        var r = null == t ? 0 : t.length;
                        if (!r)return -1;
                        var i = null == n ? 0 : _u(n);
                        return i < 0 && (i = Hc(r + i, 0)), k(t, _o(e, 3), i)
                    }

                    function ha(t, e, n) {
                        var r = null == t ? 0 : t.length;
                        if (!r)return -1;
                        var i = r - 1;
                        return n !== it && (i = _u(n), i = n < 0 ? Hc(r + i, 0) : qc(i, r - 1)), k(t, _o(e, 3), i, !0)
                    }

                    function pa(t) {
                        return (null == t ? 0 : t.length) ? hr(t, 1) : []
                    }

                    function da(t) {
                        return (null == t ? 0 : t.length) ? hr(t, Bt) : []
                    }

                    function ga(t, e) {
                        return (null == t ? 0 : t.length) ? (e = e === it ? 1 : _u(e), hr(t, e)) : []
                    }

                    function ya(t) {
                        for (var e = -1, n = null == t ? 0 : t.length, r = {}; ++e < n;) {
                            var i = t[e];
                            r[i[0]] = i[1]
                        }
                        return r
                    }

                    function va(t) {
                        return t && t.length ? t[0] : it
                    }

                    function ba(t, e, n) {
                        var r = null == t ? 0 : t.length;
                        if (!r)return -1;
                        var i = null == n ? 0 : _u(n);
                        return i < 0 && (i = Hc(r + i, 0)), S(t, e, i)
                    }

                    function ma(t) {
                        return (null == t ? 0 : t.length) ? si(t, 0, -1) : []
                    }

                    function wa(t, e) {
                        return null == t ? "" : Gc.call(t, e)
                    }

                    function xa(t) {
                        var e = null == t ? 0 : t.length;
                        return e ? t[e - 1] : it
                    }

                    function _a(t, e, n) {
                        var r = null == t ? 0 : t.length;
                        if (!r)return -1;
                        var i = r;
                        return n !== it && (i = _u(n), i = i < 0 ? Hc(r + i, 0) : qc(i, r - 1)), e === e ? Q(t, e, i) : k(t, A, i, !0)
                    }

                    function ka(t, e) {
                        return t && t.length ? qr(t, _u(e)) : it
                    }

                    function Sa(t, e) {
                        return t && t.length && e && e.length ? Jr(t, e) : t
                    }

                    function Ca(t, e, n) {
                        return t && t.length && e && e.length ? Jr(t, e, _o(n, 2)) : t
                    }

                    function Aa(t, e, n) {
                        return t && t.length && e && e.length ? Jr(t, e, it, n) : t
                    }

                    function Pa(t, e) {
                        var n = [];
                        if (!t || !t.length)return n;
                        var r = -1, i = [], o = t.length;
                        for (e = _o(e, 3); ++r < o;) {
                            var a = t[r];
                            e(a, r, t) && (n.push(a), i.push(r))
                        }
                        return Qr(t, i), n
                    }

                    function Ea(t) {
                        return null == t ? t : Kc.call(t)
                    }

                    function Ia(t, e, n) {
                        var r = null == t ? 0 : t.length;
                        return r ? (n && "number" != typeof n && Fo(t, e, n) ? (e = 0, n = r) : (e = null == e ? 0 : _u(e), n = n === it ? r : _u(n)), si(t, e, n)) : []
                    }

                    function Ta(t, e) {
                        return li(t, e)
                    }

                    function Oa(t, e, n) {
                        return ci(t, e, _o(n, 2))
                    }

                    function Ba(t, e) {
                        var n = null == t ? 0 : t.length;
                        if (n) {
                            var r = li(t, e);
                            if (r < n && Hs(t[r], e))return r
                        }
                        return -1
                    }

                    function La(t, e) {
                        return li(t, e, !0)
                    }

                    function Ma(t, e, n) {
                        return ci(t, e, _o(n, 2), !0)
                    }

                    function Ra(t, e) {
                        if (null == t ? 0 : t.length) {
                            var n = li(t, e, !0) - 1;
                            if (Hs(t[n], e))return n
                        }
                        return -1
                    }

                    function Fa(t) {
                        return t && t.length ? fi(t) : []
                    }

                    function za(t, e) {
                        return t && t.length ? fi(t, _o(e, 2)) : []
                    }

                    function Da(t) {
                        var e = null == t ? 0 : t.length;
                        return e ? si(t, 1, e) : []
                    }

                    function Na(t, e, n) {
                        return t && t.length ? (e = n || e === it ? 1 : _u(e), si(t, 0, e < 0 ? 0 : e)) : []
                    }

                    function Ua(t, e, n) {
                        var r = null == t ? 0 : t.length;
                        return r ? (e = n || e === it ? 1 : _u(e), e = r - e, si(t, e < 0 ? 0 : e, r)) : []
                    }

                    function Wa(t, e) {
                        return t && t.length ? vi(t, _o(e, 3), !1, !0) : []
                    }

                    function ja(t, e) {
                        return t && t.length ? vi(t, _o(e, 3)) : []
                    }

                    function Ga(t) {
                        return t && t.length ? di(t) : []
                    }

                    function Va(t, e) {
                        return t && t.length ? di(t, _o(e, 2)) : []
                    }

                    function Ha(t, e) {
                        return e = "function" == typeof e ? e : it, t && t.length ? di(t, it, e) : []
                    }

                    function qa(t) {
                        if (!t || !t.length)return [];
                        var e = 0;
                        return t = h(t, function (t) {
                            if (Zs(t))return e = Hc(t.length, e), !0
                        }), L(e, function (e) {
                            return g(t, E(e))
                        })
                    }

                    function Za(t, e) {
                        if (!t || !t.length)return [];
                        var n = qa(t);
                        return null == e ? n : g(n, function (t) {
                            return s(e, it, t)
                        })
                    }

                    function Ya(t, e) {
                        return wi(t || [], e || [], Hn)
                    }

                    function Xa(t, e) {
                        return wi(t || [], e || [], oi)
                    }

                    function Ka(t) {
                        var e = n(t);
                        return e.__chain__ = !0, e
                    }

                    function Ja(t, e) {
                        return e(t), t
                    }

                    function Qa(t, e) {
                        return e(t)
                    }

                    function $a() {
                        return Ka(this)
                    }

                    function ts() {
                        return new i(this.value(), this.__chain__)
                    }

                    function es() {
                        this.__values__ === it && (this.__values__ = wu(this.value()));
                        var t = this.__index__ >= this.__values__.length;
                        return {done: t, value: t ? it : this.__values__[this.__index__++]}
                    }

                    function ns() {
                        return this
                    }

                    function rs(t) {
                        for (var e, n = this; n instanceof r;) {
                            var i = na(n);
                            i.__index__ = 0, i.__values__ = it, e ? o.__wrapped__ = i : e = i;
                            var o = i;
                            n = n.__wrapped__
                        }
                        return o.__wrapped__ = t, e
                    }

                    function is() {
                        var t = this.__wrapped__;
                        if (t instanceof w) {
                            var e = t;
                            return this.__actions__.length && (e = new w(this)), e = e.reverse(), e.__actions__.push({
                                func: Qa,
                                args: [Ea],
                                thisArg: it
                            }), new i(e, this.__chain__)
                        }
                        return this.thru(Ea)
                    }

                    function os() {
                        return bi(this.__wrapped__, this.__actions__)
                    }

                    function as(t, e, n) {
                        var r = vh(t) ? f : ur;
                        return n && Fo(t, e, n) && (e = it), r(t, _o(e, 3))
                    }

                    function ss(t, e) {
                        return (vh(t) ? h : fr)(t, _o(e, 3))
                    }

                    function us(t, e) {
                        return hr(ds(t, e), 1)
                    }

                    function ls(t, e) {
                        return hr(ds(t, e), Bt)
                    }

                    function cs(t, e, n) {
                        return n = n === it ? 1 : _u(n), hr(ds(t, e), n)
                    }

                    function fs(t, e) {
                        return (vh(t) ? l : gf)(t, _o(e, 3))
                    }

                    function hs(t, e) {
                        return (vh(t) ? c : yf)(t, _o(e, 3))
                    }

                    function ps(t, e, n, r) {
                        t = qs(t) ? t : $u(t), n = n && !r ? _u(n) : 0;
                        var i = t.length;
                        return n < 0 && (n = Hc(i + n, 0)), gu(t) ? n <= i && t.indexOf(e, n) > -1 : !!i && S(t, e, n) > -1
                    }

                    function ds(t, e) {
                        return (vh(t) ? g : Wr)(t, _o(e, 3))
                    }

                    function gs(t, e, n, r) {
                        return null == t ? [] : (vh(e) || (e = null == e ? [] : [e]), n = r ? it : n, vh(n) || (n = null == n ? [] : [n]), Zr(t, e, n))
                    }

                    function ys(t, e, n) {
                        var r = vh(t) ? v : T, i = arguments.length < 3;
                        return r(t, _o(e, 4), n, i, gf)
                    }

                    function vs(t, e, n) {
                        var r = vh(t) ? b : T, i = arguments.length < 3;
                        return r(t, _o(e, 4), n, i, yf)
                    }

                    function bs(t, e) {
                        return (vh(t) ? h : fr)(t, Bs(_o(e, 3)))
                    }

                    function ms(t) {
                        return (vh(t) ? Mn : ri)(t)
                    }

                    function ws(t, e, n) {
                        return e = (n ? Fo(t, e, n) : e === it) ? 1 : _u(e), (vh(t) ? Rn : ii)(t, e)
                    }

                    function xs(t) {
                        return (vh(t) ? zn : ai)(t)
                    }

                    function _s(t) {
                        if (null == t)return 0;
                        if (qs(t))return gu(t) ? $(t) : t.length;
                        var e = Pf(t);
                        return e == Xt || e == ee ? t.size : Dr(t).length
                    }

                    function ks(t, e, n) {
                        var r = vh(t) ? m : ui;
                        return n && Fo(t, e, n) && (e = it), r(t, _o(e, 3))
                    }

                    function Ss(t, e) {
                        if ("function" != typeof e)throw new cc(st);
                        return t = _u(t), function () {
                            if (--t < 1)return e.apply(this, arguments)
                        }
                    }

                    function Cs(t, e, n) {
                        return e = n ? it : e, e = t && null == e ? t.length : e, lo(t, kt, it, it, it, it, e)
                    }

                    function As(t, e) {
                        var n;
                        if ("function" != typeof e)throw new cc(st);
                        return t = _u(t), function () {
                            return --t > 0 && (n = e.apply(this, arguments)), t <= 1 && (e = it), n
                        }
                    }

                    function Ps(t, e, n) {
                        e = n ? it : e;
                        var r = lo(t, mt, it, it, it, it, it, e);
                        return r.placeholder = Ps.placeholder, r
                    }

                    function Es(t, e, n) {
                        e = n ? it : e;
                        var r = lo(t, wt, it, it, it, it, it, e);
                        return r.placeholder = Es.placeholder, r
                    }

                    function Is(t, e, n) {
                        function r(e) {
                            var n = h, r = p;
                            return h = p = it, b = e, g = t.apply(r, n)
                        }

                        function i(t) {
                            return b = t, y = Tf(s, e), m ? r(t) : g
                        }

                        function o(t) {
                            var n = t - v, r = t - b, i = e - n;
                            return w ? qc(i, d - r) : i
                        }

                        function a(t) {
                            var n = t - v, r = t - b;
                            return v === it || n >= e || n < 0 || w && r >= d
                        }

                        function s() {
                            var t = oh();
                            if (a(t))return u(t);
                            y = Tf(s, o(t))
                        }

                        function u(t) {
                            return y = it, x && h ? r(t) : (h = p = it, g)
                        }

                        function l() {
                            y !== it && _f(y), b = 0, h = v = p = y = it
                        }

                        function c() {
                            return y === it ? g : u(oh())
                        }

                        function f() {
                            var t = oh(), n = a(t);
                            if (h = arguments, p = this, v = t, n) {
                                if (y === it)return i(v);
                                if (w)return y = Tf(s, e), r(v)
                            }
                            return y === it && (y = Tf(s, e)), g
                        }

                        var h, p, d, g, y, v, b = 0, m = !1, w = !1, x = !0;
                        if ("function" != typeof t)throw new cc(st);
                        return e = Su(e) || 0, iu(n) && (m = !!n.leading, w = "maxWait" in n, d = w ? Hc(Su(n.maxWait) || 0, e) : d, x = "trailing" in n ? !!n.trailing : x), f.cancel = l, f.flush = c, f
                    }

                    function Ts(t) {
                        return lo(t, Ct)
                    }

                    function Os(t, e) {
                        if ("function" != typeof t || null != e && "function" != typeof e)throw new cc(st);
                        var n = function () {
                            var r = arguments, i = e ? e.apply(this, r) : r[0], o = n.cache;
                            if (o.has(i))return o.get(i);
                            var a = t.apply(this, r);
                            return n.cache = o.set(i, a) || o, a
                        };
                        return n.cache = new (Os.Cache || ln), n
                    }

                    function Bs(t) {
                        if ("function" != typeof t)throw new cc(st);
                        return function () {
                            var e = arguments;
                            switch (e.length) {
                                case 0:
                                    return !t.call(this);
                                case 1:
                                    return !t.call(this, e[0]);
                                case 2:
                                    return !t.call(this, e[0], e[1]);
                                case 3:
                                    return !t.call(this, e[0], e[1], e[2])
                            }
                            return !t.apply(this, e)
                        }
                    }

                    function Ls(t) {
                        return As(2, t)
                    }

                    function Ms(t, e) {
                        if ("function" != typeof t)throw new cc(st);
                        return e = e === it ? e : _u(e), ni(t, e)
                    }

                    function Rs(t, e) {
                        if ("function" != typeof t)throw new cc(st);
                        return e = null == e ? 0 : Hc(_u(e), 0), ni(function (n) {
                            var r = n[e], i = Si(n, 0, e);
                            return r && y(i, r), s(t, this, i)
                        })
                    }

                    function Fs(t, e, n) {
                        var r = !0, i = !0;
                        if ("function" != typeof t)throw new cc(st);
                        return iu(n) && (r = "leading" in n ? !!n.leading : r, i = "trailing" in n ? !!n.trailing : i), Is(t, e, {
                            leading: r,
                            maxWait: e,
                            trailing: i
                        })
                    }

                    function zs(t) {
                        return Cs(t, 1)
                    }

                    function Ds(t, e) {
                        return fh(_i(e), t)
                    }

                    function Ns() {
                        if (!arguments.length)return [];
                        var t = arguments[0];
                        return vh(t) ? t : [t]
                    }

                    function Us(t) {
                        return rr(t, pt)
                    }

                    function Ws(t, e) {
                        return e = "function" == typeof e ? e : it, rr(t, pt, e)
                    }

                    function js(t) {
                        return rr(t, ft | pt)
                    }

                    function Gs(t, e) {
                        return e = "function" == typeof e ? e : it, rr(t, ft | pt, e)
                    }

                    function Vs(t, e) {
                        return null == e || or(t, e, Uu(e))
                    }

                    function Hs(t, e) {
                        return t === e || t !== t && e !== e
                    }

                    function qs(t) {
                        return null != t && ru(t.length) && !eu(t)
                    }

                    function Zs(t) {
                        return ou(t) && qs(t)
                    }

                    function Ys(t) {
                        return !0 === t || !1 === t || ou(t) && br(t) == Gt
                    }

                    function Xs(t) {
                        return ou(t) && 1 === t.nodeType && !pu(t)
                    }

                    function Ks(t) {
                        if (null == t)return !0;
                        if (qs(t) && (vh(t) || "string" == typeof t || "function" == typeof t.splice || mh(t) || Sh(t) || yh(t)))return !t.length;
                        var e = Pf(t);
                        if (e == Xt || e == ee)return !t.size;
                        if (Wo(t))return !Dr(t).length;
                        for (var n in t)if (yc.call(t, n))return !1;
                        return !0
                    }

                    function Js(t, e) {
                        return Ir(t, e)
                    }

                    function Qs(t, e, n) {
                        n = "function" == typeof n ? n : it;
                        var r = n ? n(t, e) : it;
                        return r === it ? Ir(t, e, it, n) : !!r
                    }

                    function $s(t) {
                        if (!ou(t))return !1;
                        var e = br(t);
                        return e == qt || e == Ht || "string" == typeof t.message && "string" == typeof t.name && !pu(t)
                    }

                    function tu(t) {
                        return "number" == typeof t && jc(t)
                    }

                    function eu(t) {
                        if (!iu(t))return !1;
                        var e = br(t);
                        return e == Zt || e == Yt || e == jt || e == $t
                    }

                    function nu(t) {
                        return "number" == typeof t && t == _u(t)
                    }

                    function ru(t) {
                        return "number" == typeof t && t > -1 && t % 1 == 0 && t <= Lt
                    }

                    function iu(t) {
                        var e = typeof t;
                        return null != t && ("object" == e || "function" == e)
                    }

                    function ou(t) {
                        return null != t && "object" == typeof t
                    }

                    function au(t, e) {
                        return t === e || Br(t, e, So(e))
                    }

                    function su(t, e, n) {
                        return n = "function" == typeof n ? n : it, Br(t, e, So(e), n)
                    }

                    function uu(t) {
                        return hu(t) && t != +t
                    }

                    function lu(t) {
                        if (Ef(t))throw new ic(at);
                        return Lr(t)
                    }

                    function cu(t) {
                        return null === t
                    }

                    function fu(t) {
                        return null == t
                    }

                    function hu(t) {
                        return "number" == typeof t || ou(t) && br(t) == Kt
                    }

                    function pu(t) {
                        if (!ou(t) || br(t) != Qt)return !1;
                        var e = Pc(t);
                        if (null === e)return !0;
                        var n = yc.call(e, "constructor") && e.constructor;
                        return "function" == typeof n && n instanceof n && gc.call(n) == wc
                    }

                    function du(t) {
                        return nu(t) && t >= -Lt && t <= Lt
                    }

                    function gu(t) {
                        return "string" == typeof t || !vh(t) && ou(t) && br(t) == ne
                    }

                    function yu(t) {
                        return "symbol" == typeof t || ou(t) && br(t) == re
                    }

                    function vu(t) {
                        return t === it
                    }

                    function bu(t) {
                        return ou(t) && Pf(t) == oe
                    }

                    function mu(t) {
                        return ou(t) && br(t) == ae
                    }

                    function wu(t) {
                        if (!t)return [];
                        if (qs(t))return gu(t) ? tt(t) : zi(t);
                        if (Bc && t[Bc])return H(t[Bc]());
                        var e = Pf(t);
                        return (e == Xt ? q : e == ee ? X : $u)(t)
                    }

                    function xu(t) {
                        if (!t)return 0 === t ? t : 0;
                        if ((t = Su(t)) === Bt || t === -Bt) {
                            return (t < 0 ? -1 : 1) * Mt
                        }
                        return t === t ? t : 0
                    }

                    function _u(t) {
                        var e = xu(t), n = e % 1;
                        return e === e ? n ? e - n : e : 0
                    }

                    function ku(t) {
                        return t ? nr(_u(t), 0, Ft) : 0
                    }

                    function Su(t) {
                        if ("number" == typeof t)return t;
                        if (yu(t))return Rt;
                        if (iu(t)) {
                            var e = "function" == typeof t.valueOf ? t.valueOf() : t;
                            t = iu(e) ? e + "" : e
                        }
                        if ("string" != typeof t)return 0 === t ? t : +t;
                        t = t.replace(Me, "");
                        var n = He.test(t);
                        return n || Ze.test(t) ? Tn(t.slice(2), n ? 2 : 8) : Ve.test(t) ? Rt : +t
                    }

                    function Cu(t) {
                        return Di(t, Wu(t))
                    }

                    function Au(t) {
                        return t ? nr(_u(t), -Lt, Lt) : 0 === t ? t : 0
                    }

                    function Pu(t) {
                        return null == t ? "" : pi(t)
                    }

                    function Eu(t, e) {
                        var n = df(t);
                        return null == e ? n : Qn(n, e)
                    }

                    function Iu(t, e) {
                        return _(t, _o(e, 3), pr)
                    }

                    function Tu(t, e) {
                        return _(t, _o(e, 3), dr)
                    }

                    function Ou(t, e) {
                        return null == t ? t : vf(t, _o(e, 3), Wu)
                    }

                    function Bu(t, e) {
                        return null == t ? t : bf(t, _o(e, 3), Wu)
                    }

                    function Lu(t, e) {
                        return t && pr(t, _o(e, 3))
                    }

                    function Mu(t, e) {
                        return t && dr(t, _o(e, 3))
                    }

                    function Ru(t) {
                        return null == t ? [] : gr(t, Uu(t))
                    }

                    function Fu(t) {
                        return null == t ? [] : gr(t, Wu(t))
                    }

                    function zu(t, e, n) {
                        var r = null == t ? it : yr(t, e);
                        return r === it ? n : r
                    }

                    function Du(t, e) {
                        return null != t && Io(t, e, wr)
                    }

                    function Nu(t, e) {
                        return null != t && Io(t, e, xr)
                    }

                    function Uu(t) {
                        return qs(t) ? Bn(t) : Dr(t)
                    }

                    function Wu(t) {
                        return qs(t) ? Bn(t, !0) : Nr(t)
                    }

                    function ju(t, e) {
                        var n = {};
                        return e = _o(e, 3), pr(t, function (t, r, i) {
                            tr(n, e(t, r, i), t)
                        }), n
                    }

                    function Gu(t, e) {
                        var n = {};
                        return e = _o(e, 3), pr(t, function (t, r, i) {
                            tr(n, r, e(t, r, i))
                        }), n
                    }

                    function Vu(t, e) {
                        return Hu(t, Bs(_o(e)))
                    }

                    function Hu(t, e) {
                        if (null == t)return {};
                        var n = g(mo(t), function (t) {
                            return [t]
                        });
                        return e = _o(e), Xr(t, n, function (t, n) {
                            return e(t, n[0])
                        })
                    }

                    function qu(t, e, n) {
                        e = ki(e, t);
                        var r = -1, i = e.length;
                        for (i || (i = 1, t = it); ++r < i;) {
                            var o = null == t ? it : t[$o(e[r])];
                            o === it && (r = i, o = n), t = eu(o) ? o.call(t) : o
                        }
                        return t
                    }

                    function Zu(t, e, n) {
                        return null == t ? t : oi(t, e, n)
                    }

                    function Yu(t, e, n, r) {
                        return r = "function" == typeof r ? r : it, null == t ? t : oi(t, e, n, r)
                    }

                    function Xu(t, e, n) {
                        var r = vh(t), i = r || mh(t) || Sh(t);
                        if (e = _o(e, 4), null == n) {
                            var o = t && t.constructor;
                            n = i ? r ? new o : [] : iu(t) && eu(o) ? df(Pc(t)) : {}
                        }
                        return (i ? l : pr)(t, function (t, r, i) {
                            return e(n, t, r, i)
                        }), n
                    }

                    function Ku(t, e) {
                        return null == t || gi(t, e)
                    }

                    function Ju(t, e, n) {
                        return null == t ? t : yi(t, e, _i(n))
                    }

                    function Qu(t, e, n, r) {
                        return r = "function" == typeof r ? r : it, null == t ? t : yi(t, e, _i(n), r)
                    }

                    function $u(t) {
                        return null == t ? [] : F(t, Uu(t))
                    }

                    function tl(t) {
                        return null == t ? [] : F(t, Wu(t))
                    }

                    function el(t, e, n) {
                        return n === it && (n = e, e = it), n !== it && (n = Su(n), n = n === n ? n : 0), e !== it && (e = Su(e), e = e === e ? e : 0), nr(Su(t), e, n)
                    }

                    function nl(t, e, n) {
                        return e = xu(e), n === it ? (n = e, e = 0) : n = xu(n), t = Su(t), _r(t, e, n)
                    }

                    function rl(t, e, n) {
                        if (n && "boolean" != typeof n && Fo(t, e, n) && (e = n = it), n === it && ("boolean" == typeof e ? (n = e, e = it) : "boolean" == typeof t && (n = t, t = it)), t === it && e === it ? (t = 0, e = 1) : (t = xu(t), e === it ? (e = t, t = 0) : e = xu(e)), t > e) {
                            var r = t;
                            t = e, e = r
                        }
                        if (n || t % 1 || e % 1) {
                            var i = Xc();
                            return qc(t + i * (e - t + In("1e-" + ((i + "").length - 1))), e)
                        }
                        return $r(t, e)
                    }

                    function il(t) {
                        return Kh(Pu(t).toLowerCase())
                    }

                    function ol(t) {
                        return (t = Pu(t)) && t.replace(Xe, qn).replace(yn, "")
                    }

                    function al(t, e, n) {
                        t = Pu(t), e = pi(e);
                        var r = t.length;
                        n = n === it ? r : nr(_u(n), 0, r);
                        var i = n;
                        return (n -= e.length) >= 0 && t.slice(n, i) == e
                    }

                    function sl(t) {
                        return t = Pu(t), t && Se.test(t) ? t.replace(_e, Zn) : t
                    }

                    function ul(t) {
                        return t = Pu(t), t && Le.test(t) ? t.replace(Be, "\\$&") : t
                    }

                    function ll(t, e, n) {
                        t = Pu(t), e = _u(e);
                        var r = e ? $(t) : 0;
                        if (!e || r >= e)return t;
                        var i = (e - r) / 2;
                        return no(Nc(i), n) + t + no(Dc(i), n)
                    }

                    function cl(t, e, n) {
                        t = Pu(t), e = _u(e);
                        var r = e ? $(t) : 0;
                        return e && r < e ? t + no(e - r, n) : t
                    }

                    function fl(t, e, n) {
                        t = Pu(t), e = _u(e);
                        var r = e ? $(t) : 0;
                        return e && r < e ? no(e - r, n) + t : t
                    }

                    function hl(t, e, n) {
                        return n || null == e ? e = 0 : e && (e = +e), Yc(Pu(t).replace(Re, ""), e || 0)
                    }

                    function pl(t, e, n) {
                        return e = (n ? Fo(t, e, n) : e === it) ? 1 : _u(e), ei(Pu(t), e)
                    }

                    function dl() {
                        var t = arguments, e = Pu(t[0]);
                        return t.length < 3 ? e : e.replace(t[1], t[2])
                    }

                    function gl(t, e, n) {
                        return n && "number" != typeof n && Fo(t, e, n) && (e = n = it), (n = n === it ? Ft : n >>> 0) ? (t = Pu(t), t && ("string" == typeof e || null != e && !_h(e)) && !(e = pi(e)) && G(t) ? Si(tt(t), 0, n) : t.split(e, n)) : []
                    }

                    function yl(t, e, n) {
                        return t = Pu(t), n = null == n ? 0 : nr(_u(n), 0, t.length), e = pi(e), t.slice(n, n + e.length) == e
                    }

                    function vl(t, e, r) {
                        var i = n.templateSettings;
                        r && Fo(t, e, r) && (e = it), t = Pu(t), e = Ih({}, e, i, co);
                        var o, a, s = Ih({}, e.imports, i.imports, co), u = Uu(s), l = F(s, u), c = 0, f = e.interpolate || Ke, h = "__p += '", p = uc((e.escape || Ke).source + "|" + f.source + "|" + (f === Pe ? je : Ke).source + "|" + (e.evaluate || Ke).source + "|$", "g"), d = "//# sourceURL=" + ("sourceURL" in e ? e.sourceURL : "lodash.templateSources[" + ++_n + "]") + "\n";
                        t.replace(p, function (e, n, r, i, s, u) {
                            return r || (r = i), h += t.slice(c, u).replace(Je, W), n && (o = !0, h += "' +\n__e(" + n + ") +\n'"), s && (a = !0, h += "';\n" + s + ";\n__p += '"), r && (h += "' +\n((__t = (" + r + ")) == null ? '' : __t) +\n'"), c = u + e.length, e
                        }), h += "';\n";
                        var g = e.variable;
                        g || (h = "with (obj) {\n" + h + "\n}\n"), h = (a ? h.replace(be, "") : h).replace(me, "$1").replace(we, "$1;"), h = "function(" + (g || "obj") + ") {\n" + (g ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (o ? ", __e = _.escape" : "") + (a ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + h + "return __p\n}";
                        var y = Jh(function () {
                            return oc(u, d + "return " + h).apply(it, l)
                        });
                        if (y.source = h, $s(y))throw y;
                        return y
                    }

                    function bl(t) {
                        return Pu(t).toLowerCase()
                    }

                    function ml(t) {
                        return Pu(t).toUpperCase()
                    }

                    function wl(t, e, n) {
                        if ((t = Pu(t)) && (n || e === it))return t.replace(Me, "");
                        if (!t || !(e = pi(e)))return t;
                        var r = tt(t), i = tt(e);
                        return Si(r, D(r, i), N(r, i) + 1).join("")
                    }

                    function xl(t, e, n) {
                        if ((t = Pu(t)) && (n || e === it))return t.replace(Fe, "");
                        if (!t || !(e = pi(e)))return t;
                        var r = tt(t);
                        return Si(r, 0, N(r, tt(e)) + 1).join("")
                    }

                    function _l(t, e, n) {
                        if ((t = Pu(t)) && (n || e === it))return t.replace(Re, "");
                        if (!t || !(e = pi(e)))return t;
                        var r = tt(t);
                        return Si(r, D(r, tt(e))).join("")
                    }

                    function kl(t, e) {
                        var n = At, r = Pt;
                        if (iu(e)) {
                            var i = "separator" in e ? e.separator : i;
                            n = "length" in e ? _u(e.length) : n, r = "omission" in e ? pi(e.omission) : r
                        }
                        t = Pu(t);
                        var o = t.length;
                        if (G(t)) {
                            var a = tt(t);
                            o = a.length
                        }
                        if (n >= o)return t;
                        var s = n - $(r);
                        if (s < 1)return r;
                        var u = a ? Si(a, 0, s).join("") : t.slice(0, s);
                        if (i === it)return u + r;
                        if (a && (s += u.length - s), _h(i)) {
                            if (t.slice(s).search(i)) {
                                var l, c = u;
                                for (i.global || (i = uc(i.source, Pu(Ge.exec(i)) + "g")), i.lastIndex = 0; l = i.exec(c);)var f = l.index;
                                u = u.slice(0, f === it ? s : f)
                            }
                        } else if (t.indexOf(pi(i), s) != s) {
                            var h = u.lastIndexOf(i);
                            h > -1 && (u = u.slice(0, h))
                        }
                        return u + r
                    }

                    function Sl(t) {
                        return t = Pu(t), t && ke.test(t) ? t.replace(xe, Yn) : t
                    }

                    function Cl(t, e, n) {
                        return t = Pu(t), e = n ? it : e, e === it ? V(t) ? rt(t) : x(t) : t.match(e) || []
                    }

                    function Al(t) {
                        var e = null == t ? 0 : t.length, n = _o();
                        return t = e ? g(t, function (t) {
                            if ("function" != typeof t[1])throw new cc(st);
                            return [n(t[0]), t[1]]
                        }) : [], ni(function (n) {
                            for (var r = -1; ++r < e;) {
                                var i = t[r];
                                if (s(i[0], this, n))return s(i[1], this, n)
                            }
                        })
                    }

                    function Pl(t) {
                        return ir(rr(t, ft))
                    }

                    function El(t) {
                        return function () {
                            return t
                        }
                    }

                    function Il(t, e) {
                        return null == t || t !== t ? e : t
                    }

                    function Tl(t) {
                        return t
                    }

                    function Ol(t) {
                        return zr("function" == typeof t ? t : rr(t, ft))
                    }

                    function Bl(t) {
                        return jr(rr(t, ft))
                    }

                    function Ll(t, e) {
                        return Gr(t, rr(e, ft))
                    }

                    function Ml(t, e, n) {
                        var r = Uu(e), i = gr(e, r);
                        null != n || iu(e) && (i.length || !r.length) || (n = e, e = t, t = this, i = gr(e, Uu(e)));
                        var o = !(iu(n) && "chain" in n && !n.chain), a = eu(t);
                        return l(i, function (n) {
                            var r = e[n];
                            t[n] = r, a && (t.prototype[n] = function () {
                                var e = this.__chain__;
                                if (o || e) {
                                    var n = t(this.__wrapped__);
                                    return (n.__actions__ = zi(this.__actions__)).push({
                                        func: r,
                                        args: arguments,
                                        thisArg: t
                                    }), n.__chain__ = e, n
                                }
                                return r.apply(t, y([this.value()], arguments))
                            })
                        }), t
                    }

                    function Rl() {
                        return Ln._ === this && (Ln._ = xc), this
                    }

                    function Fl() {
                    }

                    function zl(t) {
                        return t = _u(t), ni(function (e) {
                            return qr(e, t)
                        })
                    }

                    function Dl(t) {
                        return zo(t) ? E($o(t)) : Kr(t)
                    }

                    function Nl(t) {
                        return function (e) {
                            return null == t ? it : yr(t, e)
                        }
                    }

                    function Ul() {
                        return []
                    }

                    function Wl() {
                        return !1
                    }

                    function jl() {
                        return {}
                    }

                    function Gl() {
                        return ""
                    }

                    function Vl() {
                        return !0
                    }

                    function Hl(t, e) {
                        if ((t = _u(t)) < 1 || t > Lt)return [];
                        var n = Ft, r = qc(t, Ft);
                        e = _o(e), t -= Ft;
                        for (var i = L(r, e); ++n < t;)e(n);
                        return i
                    }

                    function ql(t) {
                        return vh(t) ? g(t, $o) : yu(t) ? [t] : zi(Bf(Pu(t)))
                    }

                    function Zl(t) {
                        var e = ++vc;
                        return Pu(t) + e
                    }

                    function Yl(t) {
                        return t && t.length ? lr(t, Tl, mr) : it
                    }

                    function Xl(t, e) {
                        return t && t.length ? lr(t, _o(e, 2), mr) : it
                    }

                    function Kl(t) {
                        return P(t, Tl)
                    }

                    function Jl(t, e) {
                        return P(t, _o(e, 2))
                    }

                    function Ql(t) {
                        return t && t.length ? lr(t, Tl, Ur) : it
                    }

                    function $l(t, e) {
                        return t && t.length ? lr(t, _o(e, 2), Ur) : it
                    }

                    function tc(t) {
                        return t && t.length ? B(t, Tl) : 0
                    }

                    function ec(t, e) {
                        return t && t.length ? B(t, _o(e, 2)) : 0
                    }

                    e = null == e ? Ln : Xn.defaults(Ln.Object(), e, Xn.pick(Ln, xn));
                    var nc = e.Array, rc = e.Date, ic = e.Error, oc = e.Function, ac = e.Math, sc = e.Object, uc = e.RegExp, lc = e.String, cc = e.TypeError, fc = nc.prototype, hc = oc.prototype, pc = sc.prototype, dc = e["__core-js_shared__"], gc = hc.toString, yc = pc.hasOwnProperty, vc = 0, bc = function () {
                        var t = /[^.]+$/.exec(dc && dc.keys && dc.keys.IE_PROTO || "");
                        return t ? "Symbol(src)_1." + t : ""
                    }(), mc = pc.toString, wc = gc.call(sc), xc = Ln._, _c = uc("^" + gc.call(yc).replace(Be, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), kc = Fn ? e.Buffer : it, Sc = e.Symbol, Cc = e.Uint8Array, Ac = kc ? kc.allocUnsafe : it, Pc = Z(sc.getPrototypeOf, sc), Ec = sc.create, Ic = pc.propertyIsEnumerable, Tc = fc.splice, Oc = Sc ? Sc.isConcatSpreadable : it, Bc = Sc ? Sc.iterator : it, Lc = Sc ? Sc.toStringTag : it, Mc = function () {
                        try {
                            var t = Co(sc, "defineProperty");
                            return t({}, "", {}), t
                        } catch (t) {
                        }
                    }(), Rc = e.clearTimeout !== Ln.clearTimeout && e.clearTimeout, Fc = rc && rc.now !== Ln.Date.now && rc.now, zc = e.setTimeout !== Ln.setTimeout && e.setTimeout, Dc = ac.ceil, Nc = ac.floor, Uc = sc.getOwnPropertySymbols, Wc = kc ? kc.isBuffer : it, jc = e.isFinite, Gc = fc.join, Vc = Z(sc.keys, sc), Hc = ac.max, qc = ac.min, Zc = rc.now, Yc = e.parseInt, Xc = ac.random, Kc = fc.reverse, Jc = Co(e, "DataView"), Qc = Co(e, "Map"), $c = Co(e, "Promise"), tf = Co(e, "Set"), ef = Co(e, "WeakMap"), nf = Co(sc, "create"), rf = ef && new ef, of = {}, af = ta(Jc), sf = ta(Qc), uf = ta($c), lf = ta(tf), cf = ta(ef), ff = Sc ? Sc.prototype : it, hf = ff ? ff.valueOf : it, pf = ff ? ff.toString : it, df = function () {
                        function t() {
                        }

                        return function (e) {
                            if (!iu(e))return {};
                            if (Ec)return Ec(e);
                            t.prototype = e;
                            var n = new t;
                            return t.prototype = it, n
                        }
                    }();
                    n.templateSettings = {
                        escape: Ce,
                        evaluate: Ae,
                        interpolate: Pe,
                        variable: "",
                        imports: {_: n}
                    }, n.prototype = r.prototype, n.prototype.constructor = n, i.prototype = df(r.prototype), i.prototype.constructor = i, w.prototype = df(r.prototype), w.prototype.constructor = w, nt.prototype.clear = Ue, nt.prototype.delete = Qe, nt.prototype.get = $e, nt.prototype.has = tn, nt.prototype.set = en, nn.prototype.clear = rn, nn.prototype.delete = on, nn.prototype.get = an, nn.prototype.has = sn, nn.prototype.set = un, ln.prototype.clear = cn, ln.prototype.delete = fn, ln.prototype.get = hn, ln.prototype.has = pn, ln.prototype.set = dn, vn.prototype.add = vn.prototype.push = bn, vn.prototype.has = mn, wn.prototype.clear = Cn, wn.prototype.delete = An, wn.prototype.get = Pn, wn.prototype.has = En, wn.prototype.set = On;
                    var gf = Gi(pr), yf = Gi(dr, !0), vf = Vi(), bf = Vi(!0), mf = rf ? function (t, e) {
                        return rf.set(t, e), t
                    } : Tl, wf = Mc ? function (t, e) {
                        return Mc(t, "toString", {configurable: !0, enumerable: !1, value: El(e), writable: !0})
                    } : Tl, xf = ni, _f = Rc || function (t) {
                            return Ln.clearTimeout(t)
                        }, kf = tf && 1 / X(new tf([, -0]))[1] == Bt ? function (t) {
                        return new tf(t)
                    } : Fl, Sf = rf ? function (t) {
                        return rf.get(t)
                    } : Fl, Cf = Uc ? function (t) {
                        return null == t ? [] : (t = sc(t), h(Uc(t), function (e) {
                            return Ic.call(t, e)
                        }))
                    } : Ul, Af = Uc ? function (t) {
                        for (var e = []; t;)y(e, Cf(t)), t = Pc(t);
                        return e
                    } : Ul, Pf = br;
                    (Jc && Pf(new Jc(new ArrayBuffer(1))) != ue || Qc && Pf(new Qc) != Xt || $c && "[object Promise]" != Pf($c.resolve()) || tf && Pf(new tf) != ee || ef && Pf(new ef) != oe) && (Pf = function (t) {
                        var e = br(t), n = e == Qt ? t.constructor : it, r = n ? ta(n) : "";
                        if (r)switch (r) {
                            case af:
                                return ue;
                            case sf:
                                return Xt;
                            case uf:
                                return "[object Promise]";
                            case lf:
                                return ee;
                            case cf:
                                return oe
                        }
                        return e
                    });
                    var Ef = dc ? eu : Wl, If = Jo(mf), Tf = zc || function (t, e) {
                            return Ln.setTimeout(t, e)
                        }, Of = Jo(wf), Bf = function (t) {
                        var e = Os(t, function (t) {
                            return n.size === lt && n.clear(), t
                        }), n = e.cache;
                        return e
                    }(function (t) {
                        var e = [];
                        return Te.test(t) && e.push(""), t.replace(Oe, function (t, n, r, i) {
                            e.push(r ? i.replace(We, "$1") : n || t)
                        }), e
                    }), Lf = ni(function (t, e) {
                        return Zs(t) ? sr(t, hr(e, 1, Zs, !0)) : []
                    }), Mf = ni(function (t, e) {
                        var n = xa(e);
                        return Zs(n) && (n = it), Zs(t) ? sr(t, hr(e, 1, Zs, !0), _o(n, 2)) : []
                    }), Rf = ni(function (t, e) {
                        var n = xa(e);
                        return Zs(n) && (n = it), Zs(t) ? sr(t, hr(e, 1, Zs, !0), it, n) : []
                    }), Ff = ni(function (t) {
                        var e = g(t, xi);
                        return e.length && e[0] === t[0] ? kr(e) : []
                    }), zf = ni(function (t) {
                        var e = xa(t), n = g(t, xi);
                        return e === xa(n) ? e = it : n.pop(), n.length && n[0] === t[0] ? kr(n, _o(e, 2)) : []
                    }), Df = ni(function (t) {
                        var e = xa(t), n = g(t, xi);
                        return e = "function" == typeof e ? e : it, e && n.pop(), n.length && n[0] === t[0] ? kr(n, it, e) : []
                    }), Nf = ni(Sa), Uf = vo(function (t, e) {
                        var n = null == t ? 0 : t.length, r = er(t, e);
                        return Qr(t, g(e, function (t) {
                            return Ro(t, n) ? +t : t
                        }).sort(Li)), r
                    }), Wf = ni(function (t) {
                        return di(hr(t, 1, Zs, !0))
                    }), jf = ni(function (t) {
                        var e = xa(t);
                        return Zs(e) && (e = it), di(hr(t, 1, Zs, !0), _o(e, 2))
                    }), Gf = ni(function (t) {
                        var e = xa(t);
                        return e = "function" == typeof e ? e : it, di(hr(t, 1, Zs, !0), it, e)
                    }), Vf = ni(function (t, e) {
                        return Zs(t) ? sr(t, e) : []
                    }), Hf = ni(function (t) {
                        return mi(h(t, Zs))
                    }), qf = ni(function (t) {
                        var e = xa(t);
                        return Zs(e) && (e = it), mi(h(t, Zs), _o(e, 2))
                    }), Zf = ni(function (t) {
                        var e = xa(t);
                        return e = "function" == typeof e ? e : it, mi(h(t, Zs), it, e)
                    }), Yf = ni(qa), Xf = ni(function (t) {
                        var e = t.length, n = e > 1 ? t[e - 1] : it;
                        return n = "function" == typeof n ? (t.pop(), n) : it, Za(t, n)
                    }), Kf = vo(function (t) {
                        var e = t.length, n = e ? t[0] : 0, r = this.__wrapped__, o = function (e) {
                            return er(e, t)
                        };
                        return !(e > 1 || this.__actions__.length) && r instanceof w && Ro(n) ? (r = r.slice(n, +n + (e ? 1 : 0)), r.__actions__.push({
                            func: Qa,
                            args: [o],
                            thisArg: it
                        }), new i(r, this.__chain__).thru(function (t) {
                            return e && !t.length && t.push(it), t
                        })) : this.thru(o)
                    }), Jf = Wi(function (t, e, n) {
                        yc.call(t, n) ? ++t[n] : tr(t, n, 1)
                    }), Qf = Ki(fa), $f = Ki(ha), th = Wi(function (t, e, n) {
                        yc.call(t, n) ? t[n].push(e) : tr(t, n, [e])
                    }), eh = ni(function (t, e, n) {
                        var r = -1, i = "function" == typeof e, o = qs(t) ? nc(t.length) : [];
                        return gf(t, function (t) {
                            o[++r] = i ? s(e, t, n) : Cr(t, e, n)
                        }), o
                    }), nh = Wi(function (t, e, n) {
                        tr(t, n, e)
                    }), rh = Wi(function (t, e, n) {
                        t[n ? 0 : 1].push(e)
                    }, function () {
                        return [[], []]
                    }), ih = ni(function (t, e) {
                        if (null == t)return [];
                        var n = e.length;
                        return n > 1 && Fo(t, e[0], e[1]) ? e = [] : n > 2 && Fo(e[0], e[1], e[2]) && (e = [e[0]]), Zr(t, hr(e, 1), [])
                    }), oh = Fc || function () {
                            return Ln.Date.now()
                        }, ah = ni(function (t, e, n) {
                        var r = yt;
                        if (n.length) {
                            var i = Y(n, xo(ah));
                            r |= xt
                        }
                        return lo(t, r, e, n, i)
                    }), sh = ni(function (t, e, n) {
                        var r = yt | vt;
                        if (n.length) {
                            var i = Y(n, xo(sh));
                            r |= xt
                        }
                        return lo(e, r, t, n, i)
                    }), uh = ni(function (t, e) {
                        return ar(t, 1, e)
                    }), lh = ni(function (t, e, n) {
                        return ar(t, Su(e) || 0, n)
                    });
                    Os.Cache = ln;
                    var ch = xf(function (t, e) {
                        e = 1 == e.length && vh(e[0]) ? g(e[0], R(_o())) : g(hr(e, 1), R(_o()));
                        var n = e.length;
                        return ni(function (r) {
                            for (var i = -1, o = qc(r.length, n); ++i < o;)r[i] = e[i].call(this, r[i]);
                            return s(t, this, r)
                        })
                    }), fh = ni(function (t, e) {
                        var n = Y(e, xo(fh));
                        return lo(t, xt, it, e, n)
                    }), hh = ni(function (t, e) {
                        var n = Y(e, xo(hh));
                        return lo(t, _t, it, e, n)
                    }), ph = vo(function (t, e) {
                        return lo(t, St, it, it, it, e)
                    }), dh = oo(mr), gh = oo(function (t, e) {
                        return t >= e
                    }), yh = Ar(function () {
                        return arguments
                    }()) ? Ar : function (t) {
                        return ou(t) && yc.call(t, "callee") && !Ic.call(t, "callee")
                    }, vh = nc.isArray, bh = Nn ? R(Nn) : Pr, mh = Wc || Wl, wh = Un ? R(Un) : Er, xh = Wn ? R(Wn) : Or, _h = jn ? R(jn) : Mr, kh = Gn ? R(Gn) : Rr, Sh = Vn ? R(Vn) : Fr, Ch = oo(Ur), Ah = oo(function (t, e) {
                        return t <= e
                    }), Ph = ji(function (t, e) {
                        if (Wo(e) || qs(e))return void Di(e, Uu(e), t);
                        for (var n in e)yc.call(e, n) && Hn(t, n, e[n])
                    }), Eh = ji(function (t, e) {
                        Di(e, Wu(e), t)
                    }), Ih = ji(function (t, e, n, r) {
                        Di(e, Wu(e), t, r)
                    }), Th = ji(function (t, e, n, r) {
                        Di(e, Uu(e), t, r)
                    }), Oh = vo(er), Bh = ni(function (t) {
                        return t.push(it, co), s(Ih, it, t)
                    }), Lh = ni(function (t) {
                        return t.push(it, fo), s(Dh, it, t)
                    }), Mh = $i(function (t, e, n) {
                        t[e] = n
                    }, El(Tl)), Rh = $i(function (t, e, n) {
                        yc.call(t, e) ? t[e].push(n) : t[e] = [n]
                    }, _o), Fh = ni(Cr), zh = ji(function (t, e, n) {
                        Vr(t, e, n)
                    }), Dh = ji(function (t, e, n, r) {
                        Vr(t, e, n, r)
                    }), Nh = vo(function (t, e) {
                        var n = {};
                        if (null == t)return n;
                        var r = !1;
                        e = g(e, function (e) {
                            return e = ki(e, t), r || (r = e.length > 1), e
                        }), Di(t, mo(t), n), r && (n = rr(n, ft | ht | pt, ho));
                        for (var i = e.length; i--;)gi(n, e[i]);
                        return n
                    }), Uh = vo(function (t, e) {
                        return null == t ? {} : Yr(t, e)
                    }), Wh = uo(Uu), jh = uo(Wu), Gh = Zi(function (t, e, n) {
                        return e = e.toLowerCase(), t + (n ? il(e) : e)
                    }), Vh = Zi(function (t, e, n) {
                        return t + (n ? "-" : "") + e.toLowerCase()
                    }), Hh = Zi(function (t, e, n) {
                        return t + (n ? " " : "") + e.toLowerCase()
                    }), qh = qi("toLowerCase"), Zh = Zi(function (t, e, n) {
                        return t + (n ? "_" : "") + e.toLowerCase()
                    }), Yh = Zi(function (t, e, n) {
                        return t + (n ? " " : "") + Kh(e)
                    }), Xh = Zi(function (t, e, n) {
                        return t + (n ? " " : "") + e.toUpperCase()
                    }), Kh = qi("toUpperCase"), Jh = ni(function (t, e) {
                        try {
                            return s(t, it, e)
                        } catch (t) {
                            return $s(t) ? t : new ic(t)
                        }
                    }), Qh = vo(function (t, e) {
                        return l(e, function (e) {
                            e = $o(e), tr(t, e, ah(t[e], t))
                        }), t
                    }), $h = Ji(), tp = Ji(!0), ep = ni(function (t, e) {
                        return function (n) {
                            return Cr(n, t, e)
                        }
                    }), np = ni(function (t, e) {
                        return function (n) {
                            return Cr(t, n, e)
                        }
                    }), rp = eo(g), ip = eo(f), op = eo(m), ap = io(), sp = io(!0), up = to(function (t, e) {
                        return t + e
                    }, 0), lp = so("ceil"), cp = to(function (t, e) {
                        return t / e
                    }, 1), fp = so("floor"), hp = to(function (t, e) {
                        return t * e
                    }, 1), pp = so("round"), dp = to(function (t, e) {
                        return t - e
                    }, 0);
                    return n.after = Ss, n.ary = Cs, n.assign = Ph, n.assignIn = Eh, n.assignInWith = Ih, n.assignWith = Th, n.at = Oh, n.before = As, n.bind = ah, n.bindAll = Qh, n.bindKey = sh,
                        n.castArray = Ns, n.chain = Ka, n.chunk = ra, n.compact = ia, n.concat = oa, n.cond = Al, n.conforms = Pl, n.constant = El, n.countBy = Jf, n.create = Eu, n.curry = Ps, n.curryRight = Es, n.debounce = Is, n.defaults = Bh, n.defaultsDeep = Lh, n.defer = uh, n.delay = lh, n.difference = Lf, n.differenceBy = Mf, n.differenceWith = Rf, n.drop = aa, n.dropRight = sa, n.dropRightWhile = ua, n.dropWhile = la, n.fill = ca, n.filter = ss, n.flatMap = us, n.flatMapDeep = ls, n.flatMapDepth = cs, n.flatten = pa, n.flattenDeep = da, n.flattenDepth = ga, n.flip = Ts, n.flow = $h, n.flowRight = tp, n.fromPairs = ya, n.functions = Ru, n.functionsIn = Fu, n.groupBy = th, n.initial = ma, n.intersection = Ff, n.intersectionBy = zf, n.intersectionWith = Df, n.invert = Mh, n.invertBy = Rh, n.invokeMap = eh, n.iteratee = Ol, n.keyBy = nh, n.keys = Uu, n.keysIn = Wu, n.map = ds, n.mapKeys = ju, n.mapValues = Gu, n.matches = Bl, n.matchesProperty = Ll, n.memoize = Os, n.merge = zh, n.mergeWith = Dh, n.method = ep, n.methodOf = np, n.mixin = Ml, n.negate = Bs, n.nthArg = zl, n.omit = Nh, n.omitBy = Vu, n.once = Ls, n.orderBy = gs, n.over = rp, n.overArgs = ch, n.overEvery = ip, n.overSome = op, n.partial = fh, n.partialRight = hh, n.partition = rh, n.pick = Uh, n.pickBy = Hu, n.property = Dl, n.propertyOf = Nl, n.pull = Nf, n.pullAll = Sa, n.pullAllBy = Ca, n.pullAllWith = Aa, n.pullAt = Uf, n.range = ap, n.rangeRight = sp, n.rearg = ph, n.reject = bs, n.remove = Pa, n.rest = Ms, n.reverse = Ea,n.sampleSize = ws,n.set = Zu,n.setWith = Yu,n.shuffle = xs,n.slice = Ia,n.sortBy = ih,n.sortedUniq = Fa,n.sortedUniqBy = za,n.split = gl,n.spread = Rs,n.tail = Da,n.take = Na,n.takeRight = Ua,n.takeRightWhile = Wa,n.takeWhile = ja,n.tap = Ja,n.throttle = Fs,n.thru = Qa,n.toArray = wu,n.toPairs = Wh,n.toPairsIn = jh,n.toPath = ql,n.toPlainObject = Cu,n.transform = Xu,n.unary = zs,n.union = Wf,n.unionBy = jf,n.unionWith = Gf,n.uniq = Ga,n.uniqBy = Va,n.uniqWith = Ha,n.unset = Ku,n.unzip = qa,n.unzipWith = Za,n.update = Ju,n.updateWith = Qu,n.values = $u,n.valuesIn = tl,n.without = Vf,n.words = Cl,n.wrap = Ds,n.xor = Hf,n.xorBy = qf,n.xorWith = Zf,n.zip = Yf,n.zipObject = Ya,n.zipObjectDeep = Xa,n.zipWith = Xf,n.entries = Wh,n.entriesIn = jh,n.extend = Eh,n.extendWith = Ih,Ml(n, n),n.add = up,n.attempt = Jh,n.camelCase = Gh,n.capitalize = il,n.ceil = lp,n.clamp = el,n.clone = Us,n.cloneDeep = js,n.cloneDeepWith = Gs,n.cloneWith = Ws,n.conformsTo = Vs,n.deburr = ol,n.defaultTo = Il,n.divide = cp,n.endsWith = al,n.eq = Hs,n.escape = sl,n.escapeRegExp = ul,n.every = as,n.find = Qf,n.findIndex = fa,n.findKey = Iu,n.findLast = $f,n.findLastIndex = ha,n.findLastKey = Tu,n.floor = fp,n.forEach = fs,n.forEachRight = hs,n.forIn = Ou,n.forInRight = Bu,n.forOwn = Lu,n.forOwnRight = Mu,n.get = zu,n.gt = dh,n.gte = gh,n.has = Du,n.hasIn = Nu,n.head = va,n.identity = Tl,n.includes = ps,n.indexOf = ba,n.inRange = nl,n.invoke = Fh,n.isArguments = yh,n.isArray = vh,n.isArrayBuffer = bh,n.isArrayLike = qs,n.isArrayLikeObject = Zs,n.isBoolean = Ys,n.isBuffer = mh,n.isDate = wh,n.isElement = Xs,n.isEmpty = Ks,n.isEqual = Js,n.isEqualWith = Qs,n.isError = $s,n.isFinite = tu,n.isFunction = eu,n.isInteger = nu,n.isLength = ru,n.isMap = xh,n.isMatch = au,n.isMatchWith = su,n.isNaN = uu,n.isNative = lu,n.isNil = fu,n.isNull = cu,n.isNumber = hu,n.isObject = iu,n.isObjectLike = ou,n.isPlainObject = pu,n.isRegExp = _h,n.isSafeInteger = du,n.isSet = kh,n.isString = gu,n.isSymbol = yu,n.isTypedArray = Sh,n.isUndefined = vu,n.isWeakMap = bu,n.isWeakSet = mu,n.join = wa,n.kebabCase = Vh,n.last = xa,n.lastIndexOf = _a,n.lowerCase = Hh,n.lowerFirst = qh,n.lt = Ch,n.lte = Ah,n.max = Yl,n.maxBy = Xl,n.mean = Kl,n.meanBy = Jl,n.min = Ql,n.minBy = $l,n.stubArray = Ul,n.stubFalse = Wl,n.stubObject = jl,n.stubString = Gl,n.stubTrue = Vl,n.multiply = hp,n.nth = ka,n.noConflict = Rl,n.noop = Fl,n.now = oh,n.pad = ll,n.padEnd = cl,n.padStart = fl,n.parseInt = hl,n.random = rl,n.reduce = ys,n.reduceRight = vs,n.repeat = pl,n.replace = dl,n.result = qu,n.round = pp,n.runInContext = t,n.sample = ms,n.size = _s,n.snakeCase = Zh,n.some = ks,n.sortedIndex = Ta,n.sortedIndexBy = Oa,n.sortedIndexOf = Ba,n.sortedLastIndex = La,n.sortedLastIndexBy = Ma,n.sortedLastIndexOf = Ra,n.startCase = Yh,n.startsWith = yl,n.subtract = dp,n.sum = tc,n.sumBy = ec,n.template = vl,n.times = Hl,n.toFinite = xu,n.toInteger = _u,n.toLength = ku,n.toLower = bl,n.toNumber = Su,n.toSafeInteger = Au,n.toString = Pu,n.toUpper = ml,n.trim = wl,n.trimEnd = xl,n.trimStart = _l,n.truncate = kl,n.unescape = Sl,n.uniqueId = Zl,n.upperCase = Xh,n.upperFirst = Kh,n.each = fs,n.eachRight = hs,n.first = va,Ml(n, function () {
                        var t = {};
                        return pr(n, function (e, r) {
                            yc.call(n.prototype, r) || (t[r] = e)
                        }), t
                    }(), {chain: !1}),n.VERSION = "4.17.4",l(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function (t) {
                        n[t].placeholder = n
                    }),l(["drop", "take"], function (t, e) {
                        w.prototype[t] = function (n) {
                            n = n === it ? 1 : Hc(_u(n), 0);
                            var r = this.__filtered__ && !e ? new w(this) : this.clone();
                            return r.__filtered__ ? r.__takeCount__ = qc(n, r.__takeCount__) : r.__views__.push({
                                size: qc(n, Ft),
                                type: t + (r.__dir__ < 0 ? "Right" : "")
                            }), r
                        }, w.prototype[t + "Right"] = function (e) {
                            return this.reverse()[t](e).reverse()
                        }
                    }),l(["filter", "map", "takeWhile"], function (t, e) {
                        var n = e + 1, r = n == Tt || 3 == n;
                        w.prototype[t] = function (t) {
                            var e = this.clone();
                            return e.__iteratees__.push({
                                iteratee: _o(t, 3),
                                type: n
                            }), e.__filtered__ = e.__filtered__ || r, e
                        }
                    }),l(["head", "last"], function (t, e) {
                        var n = "take" + (e ? "Right" : "");
                        w.prototype[t] = function () {
                            return this[n](1).value()[0]
                        }
                    }),l(["initial", "tail"], function (t, e) {
                        var n = "drop" + (e ? "" : "Right");
                        w.prototype[t] = function () {
                            return this.__filtered__ ? new w(this) : this[n](1)
                        }
                    }),w.prototype.compact = function () {
                        return this.filter(Tl)
                    },w.prototype.find = function (t) {
                        return this.filter(t).head()
                    },w.prototype.findLast = function (t) {
                        return this.reverse().find(t)
                    },w.prototype.invokeMap = ni(function (t, e) {
                        return "function" == typeof t ? new w(this) : this.map(function (n) {
                            return Cr(n, t, e)
                        })
                    }),w.prototype.reject = function (t) {
                        return this.filter(Bs(_o(t)))
                    },w.prototype.slice = function (t, e) {
                        t = _u(t);
                        var n = this;
                        return n.__filtered__ && (t > 0 || e < 0) ? new w(n) : (t < 0 ? n = n.takeRight(-t) : t && (n = n.drop(t)), e !== it && (e = _u(e), n = e < 0 ? n.dropRight(-e) : n.take(e - t)), n)
                    },w.prototype.takeRightWhile = function (t) {
                        return this.reverse().takeWhile(t).reverse()
                    },w.prototype.toArray = function () {
                        return this.take(Ft)
                    },pr(w.prototype, function (t, e) {
                        var r = /^(?:filter|find|map|reject)|While$/.test(e), o = /^(?:head|last)$/.test(e), a = n[o ? "take" + ("last" == e ? "Right" : "") : e], s = o || /^find/.test(e);
                        a && (n.prototype[e] = function () {
                            var e = this.__wrapped__, u = o ? [1] : arguments, l = e instanceof w, c = u[0], f = l || vh(e), h = function (t) {
                                var e = a.apply(n, y([t], u));
                                return o && p ? e[0] : e
                            };
                            f && r && "function" == typeof c && 1 != c.length && (l = f = !1);
                            var p = this.__chain__, d = !!this.__actions__.length, g = s && !p, v = l && !d;
                            if (!s && f) {
                                e = v ? e : new w(this);
                                var b = t.apply(e, u);
                                return b.__actions__.push({func: Qa, args: [h], thisArg: it}), new i(b, p)
                            }
                            return g && v ? t.apply(this, u) : (b = this.thru(h), g ? o ? b.value()[0] : b.value() : b)
                        })
                    }),l(["pop", "push", "shift", "sort", "splice", "unshift"], function (t) {
                        var e = fc[t], r = /^(?:push|sort|unshift)$/.test(t) ? "tap" : "thru", i = /^(?:pop|shift)$/.test(t);
                        n.prototype[t] = function () {
                            var t = arguments;
                            if (i && !this.__chain__) {
                                var n = this.value();
                                return e.apply(vh(n) ? n : [], t)
                            }
                            return this[r](function (n) {
                                return e.apply(vh(n) ? n : [], t)
                            })
                        }
                    }),pr(w.prototype, function (t, e) {
                        var r = n[e];
                        if (r) {
                            var i = r.name + "";
                            (of[i] || (of[i] = [])).push({name: e, func: r})
                        }
                    }),of[Qi(it, vt).name] = [{
                        name: "wrapper",
                        func: it
                    }],w.prototype.clone = I,w.prototype.reverse = J,w.prototype.value = et,n.prototype.at = Kf,n.prototype.chain = $a,n.prototype.commit = ts,n.prototype.next = es,n.prototype.plant = rs,n.prototype.reverse = is,n.prototype.toJSON = n.prototype.valueOf = n.prototype.value = os,n.prototype.first = n.prototype.head,Bc && (n.prototype[Bc] = ns),n
                }();
                Ln._ = Xn, (r = function () {
                    return Xn
                }.call(e, n, e, i)) !== it && (i.exports = r)
            }).call(this)
        }).call(e, function () {
            return this
        }(), n(8)(t))
    }, function (t, e) {
        t.exports = function (t) {
            return t.webpackPolyfill || (t.deprecate = function () {
            }, t.paths = [], t.children = [], t.webpackPolyfill = 1), t
        }
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            var n = "normal";
            return t && e ? n = "bolditalics" : t ? n = "bold" : e && (n = "italics"), n
        }

        function i(t, e) {
            this.fonts = {}, this.pdfKitDoc = e, this.fontCache = {};
            for (var n in t)if (t.hasOwnProperty(n)) {
                var r = t[n];
                this.fonts[n] = {normal: r.normal, bold: r.bold, italics: r.italics, bolditalics: r.bolditalics}
            }
        }

        n(7).noConflict(), i.prototype.provideFont = function (t, e, n) {
            var i = r(e, n);
            if (!this.fonts[t] || !this.fonts[t][i])throw new Error("Font '" + t + "' in style '" + i + "' is not defined in the font section of the document definition.");
            if (this.fontCache[t] = this.fontCache[t] || {}, !this.fontCache[t][i]) {
                var o = this.fonts[t][i];
                Array.isArray(o) || (o = [o]), this.fontCache[t][i] = this.pdfKitDoc.font.apply(this.pdfKitDoc, o)._font
            }
            return this.fontCache[t][i]
        }, t.exports = i
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            a.each(e, function (e) {
                t.push(e)
            })
        }

        function i(t, e, n) {
            this.pageSize = t, this.pageMargins = e, this.tracker = new s, this.imageMeasure = n, this.tableLayouts = {}
        }

        function o(t) {
            var e = t.x, n = t.y;
            t.positions = [], a.each(t.canvas, function (t) {
                var e = t.x, n = t.y, r = t.x1, i = t.y1, o = t.x2, a = t.y2;
                t.resetXY = function () {
                    t.x = e, t.y = n, t.x1 = r, t.y1 = i, t.x2 = o, t.y2 = a
                }
            }), t.resetXY = function () {
                t.x = e, t.y = n, a.each(t.canvas, function (t) {
                    t.resetXY()
                })
            }
        }

        var a = n(7), s = n(11), u = n(12), l = n(14), c = n(25), f = n(26), h = n(23), p = n(29), d = n(28), g = n(13).pack, y = n(13).offsetVector, v = n(13).fontStringify, b = n(13).isFunction, m = n(15), w = n(22);
        i.prototype.registerTableLayouts = function (t) {
            this.tableLayouts = g(this.tableLayouts, t)
        }, i.prototype.layoutDocument = function (t, e, n, r, i, o, s, c, f, h) {
            this.docPreprocessor = new u, this.docMeasure = new l(e, n, r, this.imageMeasure, this.tableLayouts, c);
            for (var p = this.tryLayoutDocument(t, e, n, r, i, o, s, c, f); function (t, e) {
                return !!b(h) && (t = a.reject(t, function (t) {
                        return a.isEmpty(t.positions)
                    }), a.each(t, function (t) {
                        var n = a.pick(t, ["id", "text", "ul", "ol", "table", "image", "qr", "canvas", "columns", "headlineLevel", "style", "pageBreak", "pageOrientation", "width", "height"]);
                        n.startPosition = a.first(t.positions), n.pageNumbers = a.chain(t.positions).map("pageNumber").uniq().value(), n.pages = e.length, n.stack = a.isArray(t.stack), t.nodeInfo = n
                    }), a.some(t, function (t, e, n) {
                        if ("before" !== t.pageBreak && !t.pageBreakCalculated) {
                            t.pageBreakCalculated = !0;
                            var r = a.first(t.nodeInfo.pageNumbers), i = a.chain(n).drop(e + 1).filter(function (t) {
                                return a.includes(t.nodeInfo.pageNumbers, r)
                            }).value(), o = a.chain(n).drop(e + 1).filter(function (t) {
                                return a.includes(t.nodeInfo.pageNumbers, r + 1)
                            }).value(), s = a.chain(n).take(e).filter(function (t) {
                                return a.includes(t.nodeInfo.pageNumbers, r)
                            }).value();
                            if (h(t.nodeInfo, a.map(i, "nodeInfo"), a.map(o, "nodeInfo"), a.map(s, "nodeInfo")))return t.pageBreak = "before", !0
                        }
                    }))
            }(p.linearNodeList, p.pages);)!function (t) {
                a.each(t.linearNodeList, function (t) {
                    t.resetXY()
                })
            }(p), p = this.tryLayoutDocument(t, e, n, r, i, o, s, c, f);
            return p.pages
        }, i.prototype.tryLayoutDocument = function (t, e, n, r, i, o, a, s, u, l) {
            this.linearNodeList = [], t = this.docPreprocessor.preprocessDocument(t), t = this.docMeasure.measureDocument(t), this.writer = new f(new c(this.pageSize, this.pageMargins), this.tracker);
            var h = this;
            return this.writer.context().tracker.startTracking("pageAdded", function () {
                h.addBackground(i)
            }), this.addBackground(i), this.processNode(t), this.addHeadersAndFooters(o, a), null != u && this.addWatermark(u, e, r), {
                pages: this.writer.context().pages,
                linearNodeList: this.linearNodeList
            }
        }, i.prototype.addBackground = function (t) {
            var e = b(t) ? t : function () {
                return t
            }, n = e(this.writer.context().page + 1);
            if (n) {
                var r = this.writer.context().getCurrentPage().pageSize;
                this.writer.beginUnbreakableBlock(r.width, r.height), n = this.docPreprocessor.preprocessDocument(n), this.processNode(this.docMeasure.measureDocument(n)), this.writer.commitUnbreakableBlock(0, 0)
            }
        }, i.prototype.addStaticRepeatable = function (t, e) {
            this.addDynamicRepeatable(function () {
                return JSON.parse(JSON.stringify(t))
            }, e)
        }, i.prototype.addDynamicRepeatable = function (t, e) {
            for (var n = this.writer.context().pages, r = 0, i = n.length; r < i; r++) {
                this.writer.context().page = r;
                var o = t(r + 1, i, this.writer.context().pages[r].pageSize);
                if (o) {
                    var a = e(this.writer.context().getCurrentPage().pageSize, this.pageMargins);
                    this.writer.beginUnbreakableBlock(a.width, a.height), o = this.docPreprocessor.preprocessDocument(o), this.processNode(this.docMeasure.measureDocument(o)), this.writer.commitUnbreakableBlock(a.x, a.y)
                }
            }
        }, i.prototype.addHeadersAndFooters = function (t, e) {
            var n = function (t, e) {
                return {x: 0, y: 0, width: t.width, height: e.top}
            }, r = function (t, e) {
                return {x: 0, y: t.height - e.bottom, width: t.width, height: e.bottom}
            };
            b(t) ? this.addDynamicRepeatable(t, n) : t && this.addStaticRepeatable(t, n), b(e) ? this.addDynamicRepeatable(e, r) : e && this.addStaticRepeatable(e, r)
        }, i.prototype.addWatermark = function (t, e, n) {
            if ("string" == typeof t && (t = {text: t}), t.text) {
                t.font = t.font || n.font || "Consola", t.color = t.color || "black", t.opacity = t.opacity || .6, t.bold = t.bold || !1, t.italics = t.italics || !1;
                for (var r = {
                    text: t.text, font: e.provideFont(t.font, t.bold, t.italics), size: function (t, e, n) {
                        for (var r, i = t.width, o = t.height, a = .8 * Math.sqrt(i * i + o * o), s = new m(n), u = new w(null, {
                            font: e.font,
                            bold: e.bold,
                            italics: e.italics
                        }), l = 0, c = 1e3, f = (l + c) / 2; Math.abs(l - c) > 1;)u.push({fontSize: f}), r = s.sizeOfString(e.text, u), r.width > a ? (c = f, f = (l + c) / 2) : r.width < a && (l = f, f = (l + c) / 2), u.pop();
                        return {size: r, fontSize: f}
                    }(this.pageSize, t, e), color: t.color, opacity: t.opacity
                }, i = this.writer.context().pages, o = 0, a = i.length; o < a; o++)i[o].watermark = r
            }
        }, i.prototype.processNode = function (t) {
            var e = this;
            this.linearNodeList.push(t), o(t), function (n) {
                var r = t._margin;
                "before" === t.pageBreak && e.writer.moveToNextPage(t.pageOrientation), r && (e.writer.context().moveDown(r[1]), e.writer.context().addMargin(r[0], r[2])), n(), r && (e.writer.context().addMargin(-r[0], -r[2]), e.writer.context().moveDown(r[3])), "after" === t.pageBreak && e.writer.moveToNextPage(t.pageOrientation)
            }(function () {
                var n = t.unbreakable;
                n && e.writer.beginUnbreakableBlock();
                var r = t.absolutePosition;
                r && (e.writer.context().beginDetachedBlock(), e.writer.context().moveTo(r.x || 0, r.y || 0));
                var i = t.relativePosition;
                if (i && (e.writer.context().beginDetachedBlock(), e.writer.context().moveTo((i.x || 0) + e.writer.context().x, (i.y || 0) + e.writer.context().y)), t.stack)e.processVerticalContainer(t); else if (t.columns)e.processColumns(t); else if (t.ul)e.processList(!1, t); else if (t.ol)e.processList(!0, t); else if (t.table)e.processTable(t); else if (void 0 !== t.text)e.processLeaf(t); else if (t.toc)e.processToc(t); else if (t.image)e.processImage(t); else if (t.canvas)e.processCanvas(t); else if (t.qr)e.processQr(t); else if (!t._span)throw"Unrecognized document structure: " + JSON.stringify(t, v);
                (r || i) && e.writer.context().endDetachedBlock(), n && e.writer.commitUnbreakableBlock()
            })
        }, i.prototype.processVerticalContainer = function (t) {
            var e = this;
            t.stack.forEach(function (n) {
                e.processNode(n), r(t.positions, n.positions)
            })
        }, i.prototype.processColumns = function (t) {
            var e = t.columns, n = this.writer.context().availableWidth, i = function (t) {
                if (!t)return null;
                var n = [];
                n.push(0);
                for (var r = e.length - 1; r > 0; r--)n.push(t);
                return n
            }(t._gap);
            i && (n -= (i.length - 1) * t._gap), h.buildColumnWidths(e, n);
            var o = this.processRow(e, e, i);
            r(t.positions, o.positions)
        }, i.prototype.processRow = function (t, e, n, i, o) {
            function a(t) {
                for (var e, n = 0, r = c.length; n < r; n++) {
                    var i = c[n];
                    if (i.prevPage === t.prevPage) {
                        e = i;
                        break
                    }
                }
                e || (e = t, c.push(e)), e.prevY = Math.max(e.prevY, t.prevY), e.y = Math.min(e.y, t.y)
            }

            function s(t) {
                return n && n.length > t ? n[t] : 0
            }

            function u(t, e) {
                if (t.rowSpan && t.rowSpan > 1) {
                    var n = o + t.rowSpan - 1;
                    if (n >= i.length)throw"Row span for column " + e + " (with indexes starting from 0) exceeded row count";
                    return i[n][e]
                }
                return null
            }

            var l = this, c = [], f = [];
            return this.tracker.auto("pageChanged", a, function () {
                e = e || t, l.writer.context().beginColumnGroup();
                for (var i = 0, o = t.length; i < o; i++) {
                    var a = t[i], c = e[i]._calcWidth, h = s(i);
                    if (a.colSpan && a.colSpan > 1)for (var p = 1; p < a.colSpan; p++)c += e[++i]._calcWidth + n[i];
                    l.writer.context().beginColumn(c, h, u(a, i)), a._span ? a._columnEndingContext && l.writer.context().markEnding(a) : (l.processNode(a), r(f, a.positions))
                }
                l.writer.context().completeColumnGroup()
            }), {pageBreaks: c, positions: f}
        }, i.prototype.processList = function (t, e) {
            function n(t) {
                if (s) {
                    var e = s;
                    if (s = null, e.canvas) {
                        var n = e.canvas[0];
                        y(n, -e._minWidth, 0), i.writer.addVector(n)
                    } else if (e._inlines) {
                        var r = new d(i.pageSize.width);
                        r.addInline(e._inlines[0]), r.x = -e._minWidth, r.y = t.getAscenderHeight() - r.getAscenderHeight(), i.writer.addLine(r, !0)
                    }
                }
            }

            var i = this, o = t ? e.ol : e.ul, a = e._gapSize;
            this.writer.context().addMargin(a.width);
            var s;
            this.tracker.auto("lineAdded", n, function () {
                o.forEach(function (t) {
                    s = t.listMarker, i.processNode(t), r(e.positions, t.positions)
                })
            }), this.writer.context().addMargin(-a.width)
        }, i.prototype.processTable = function (t) {
            var e = new p(t);
            e.beginTable(this.writer);
            for (var n = 0, i = t.table.body.length; n < i; n++) {
                e.beginRow(n, this.writer);
                var o = this.processRow(t.table.body[n], t.table.widths, t._offsets.offsets, t.table.body, n);
                r(t.positions, o.positions), e.endRow(n, this.writer, o.pageBreaks)
            }
            e.endTable(this.writer)
        }, i.prototype.processLeaf = function (t) {
            var e = this.buildNextLine(t), n = e ? e.getHeight() : 0, r = t.maxHeight || -1;
            for (t._tocItemRef && (e._tocItemNode = t._tocItemRef); e && (-1 === r || n < r);) {
                var i = this.writer.addLine(e);
                t.positions.push(i), e = this.buildNextLine(t), e && (n += e.getHeight())
            }
        }, i.prototype.processToc = function (t) {
            t.toc.title && this.processNode(t.toc.title), this.processNode(t.toc._table)
        }, i.prototype.buildNextLine = function (t) {
            if (!t._inlines || 0 === t._inlines.length)return null;
            for (var e = new d(this.writer.context().availableWidth), n = new m(null); t._inlines && t._inlines.length > 0 && e.hasEnoughSpaceForInline(t._inlines[0]);) {
                var r = t._inlines.shift();
                if (!r.noWrap && r.text.length > 1 && r.width > e.maxWidth) {
                    var i = r.width / r.text.length, o = Math.floor(e.maxWidth / i);
                    if (o < 1 && (o = 1), o < r.text.length) {
                        var a = function (t) {
                            var e = t.constructor();
                            for (var n in t)e[n] = t[n];
                            return e
                        }(r);
                        a.text = r.text.substr(o), r.text = r.text.substr(0, o), a.width = n.widthOfString(a.text, a.font, a.fontSize, a.characterSpacing), r.width = n.widthOfString(r.text, r.font, r.fontSize, r.characterSpacing), t._inlines.unshift(a)
                    }
                }
                e.addInline(r)
            }
            return e.lastLineInParagraph = 0 === t._inlines.length, e
        }, i.prototype.processImage = function (t) {
            var e = this.writer.addImage(t);
            t.positions.push(e)
        }, i.prototype.processCanvas = function (t) {
            var e = t._minHeight;
            this.writer.context().availableHeight < e && this.writer.moveToNextPage(), t.canvas.forEach(function (e) {
                var n = this.writer.addVector(e);
                t.positions.push(n)
            }, this), this.writer.context().moveDown(e)
        }, i.prototype.processQr = function (t) {
            var e = this.writer.addQr(t);
            t.positions.push(e)
        }, t.exports = i
    }, function (t, e) {
        "use strict";
        function n() {
            this.events = {}
        }

        n.prototype.startTracking = function (t, e) {
            var n = this.events[t] || (this.events[t] = []);
            n.indexOf(e) < 0 && n.push(e)
        }, n.prototype.stopTracking = function (t, e) {
            var n = this.events[t];
            if (n) {
                var r = n.indexOf(e);
                r >= 0 && n.splice(r, 1)
            }
        }, n.prototype.emit = function (t) {
            var e = Array.prototype.slice.call(arguments, 1), n = this.events[t];
            n && n.forEach(function (t) {
                t.apply(this, e)
            })
        }, n.prototype.auto = function (t, e, n) {
            this.startTracking(t, e), n(), this.stopTracking(t, e)
        }, t.exports = n
    }, function (t, e, n) {
        "use strict";
        function r() {
        }

        var i = n(13).fontStringify;
        r.prototype.preprocessDocument = function (t) {
            return this.tocs = [], this.preprocessNode(t)
        }, r.prototype.preprocessNode = function (t) {
            if (Array.isArray(t) ? t = {stack: t} : "string" == typeof t || t instanceof String ? t = {text: t} : "number" == typeof t || "boolean" == typeof t ? t = {text: t.toString()} : null === t ? t = {text: ""} : 0 === Object.keys(t).length && (t = {text: ""}), t.columns)return this.preprocessColumns(t);
            if (t.stack)return this.preprocessVerticalContainer(t);
            if (t.ul)return this.preprocessList(t);
            if (t.ol)return this.preprocessList(t);
            if (t.table)return this.preprocessTable(t);
            if (void 0 !== t.text)return this.preprocessText(t);
            if (t.toc)return this.preprocessToc(t);
            if (t.image)return this.preprocessImage(t);
            if (t.canvas)return this.preprocessCanvas(t);
            if (t.qr)return this.preprocessQr(t);
            throw"Unrecognized document structure: " + JSON.stringify(t, i)
        }, r.prototype.preprocessColumns = function (t) {
            for (var e = t.columns, n = 0, r = e.length; n < r; n++)e[n] = this.preprocessNode(e[n]);
            return t
        }, r.prototype.preprocessVerticalContainer = function (t) {
            for (var e = t.stack, n = 0, r = e.length; n < r; n++)e[n] = this.preprocessNode(e[n]);
            return t
        }, r.prototype.preprocessList = function (t) {
            for (var e = t.ul || t.ol, n = 0, r = e.length; n < r; n++)e[n] = this.preprocessNode(e[n]);
            return t
        }, r.prototype.preprocessTable = function (t) {
            var e, n, r, i;
            for (e = 0, r = t.table.body[0].length; e < r; e++)for (n = 0, i = t.table.body.length; n < i; n++) {
                var o = t.table.body[n], a = o[e];
                void 0 !== a && (null === a && (a = ""), a._span || (o[e] = this.preprocessNode(a)))
            }
            return t
        }, r.prototype.preprocessText = function (t) {
            if (t.tocItem) {
                Array.isArray(t.tocItem) || (t.tocItem = [t.tocItem]);
                for (var e = 0, n = t.tocItem.length; e < n; e++) {
                    "string" == typeof t.tocItem[e] || t.tocItem[e] instanceof String || (t.tocItem[e] = "_default_");
                    var r = t.tocItem[e];
                    this.tocs[r] || (this.tocs[r] = {toc: {_items: [], _pseudo: !0}}), this.tocs[r].toc._items.push(t)
                }
            }
            return t
        }, r.prototype.preprocessToc = function (t) {
            if (t.toc.id || (t.toc.id = "_default_"), t.toc.title = t.toc.title ? this.preprocessNode(t.toc.title) : null, t.toc._items = [], this.tocs[t.toc.id]) {
                if (!this.tocs[t.toc.id].toc._pseudo)throw"TOC '" + t.toc.id + "' already exists";
                t.toc._items = this.tocs[t.toc.id].toc._items
            }
            return this.tocs[t.toc.id] = t, t
        }, r.prototype.preprocessImage = function (t) {
            return t
        }, r.prototype.preprocessCanvas = function (t) {
            return t
        }, r.prototype.preprocessQr = function (t) {
            return t
        }, t.exports = r
    }, function (t, e) {
        "use strict";
        function n() {
            for (var t = {}, e = 0, n = arguments.length; e < n; e++) {
                var r = arguments[e];
                if (r)for (var i in r)r.hasOwnProperty(i) && (t[i] = r[i])
            }
            return t
        }

        function r(t, e, n) {
            switch (t.type) {
                case"ellipse":
                case"rect":
                    t.x += e, t.y += n;
                    break;
                case"line":
                    t.x1 += e, t.x2 += e, t.y1 += n, t.y2 += n;
                    break;
                case"polyline":
                    for (var r = 0, i = t.points.length; r < i; r++)t.points[r].x += e, t.points[r].y += n
            }
        }

        function i(t, e) {
            return "font" === t ? "font" : e
        }

        function o(t) {
            var e = {};
            return t && "[object Function]" === e.toString.call(t)
        }

        t.exports = {pack: n, fontStringify: i, offsetVector: r, isFunction: o}
    }, function (t, e, n) {
        "use strict";
        function r(t, e, n, r, a, s) {
            this.textTools = new i(t), this.styleStack = new o(e, n), this.imageMeasure = r, this.tableLayouts = a, this.images = s, this.autoImageIndex = 1
        }

        var i = n(15), o = n(22), a = n(23), s = n(13).fontStringify, u = n(13).pack, l = n(24);
        r.prototype.measureDocument = function (t) {
            return this.measureNode(t)
        }, r.prototype.measureNode = function (t) {
            function e(t) {
                var e = t._margin;
                return e && (t._minWidth += e[0] + e[2], t._maxWidth += e[0] + e[2]), t
            }

            function n() {
                function e(t, e) {
                    return t.marginLeft || t.marginTop || t.marginRight || t.marginBottom ? [t.marginLeft || e[0] || 0, t.marginTop || e[1] || 0, t.marginRight || e[2] || 0, t.marginBottom || e[3] || 0] : e
                }

                function n(t) {
                    return "number" == typeof t || t instanceof Number ? t = [t, t, t, t] : Array.isArray(t) && 2 === t.length && (t = [t[0], t[1], t[0], t[1]]), t
                }

                var i = [void 0, void 0, void 0, void 0];
                if (t.style) {
                    var o = Array.isArray(t.style) ? t.style : [t.style], a = function (t) {
                        for (var e = {}, n = t.length - 1; n >= 0; n--) {
                            var i = t[n], o = r.styleStack.styleDictionary[i];
                            for (var a in o)o.hasOwnProperty(a) && (e[a] = o[a])
                        }
                        return e
                    }(o);
                    a && (i = e(a, i)), a.margin && (i = n(a.margin))
                }
                return i = e(t, i), t.margin && (i = n(t.margin)), void 0 === i[0] && void 0 === i[1] && void 0 === i[2] && void 0 === i[3] ? null : i
            }

            var r = this;
            return this.styleStack.auto(t, function () {
                if (t._margin = n(), t.columns)return e(r.measureColumns(t));
                if (t.stack)return e(r.measureVerticalContainer(t));
                if (t.ul)return e(r.measureUnorderedList(t));
                if (t.ol)return e(r.measureOrderedList(t));
                if (t.table)return e(r.measureTable(t));
                if (void 0 !== t.text)return e(r.measureLeaf(t));
                if (t.toc)return e(r.measureToc(t));
                if (t.image)return e(r.measureImage(t));
                if (t.canvas)return e(r.measureCanvas(t));
                if (t.qr)return e(r.measureQr(t));
                throw"Unrecognized document structure: " + JSON.stringify(t, s)
            })
        }, r.prototype.convertIfBase64Image = function (t) {
            if (/^data:image\/(jpeg|jpg|png);base64,/.test(t.image)) {
                var e = "$$pdfmake$$" + this.autoImageIndex++;
                this.images[e] = t.image, t.image = e
            }
        }, r.prototype.measureImage = function (t) {
            this.images && this.convertIfBase64Image(t);
            var e = this.imageMeasure.measureImage(t.image);
            if (t.fit) {
                var n = e.width / e.height > t.fit[0] / t.fit[1] ? t.fit[0] / e.width : t.fit[1] / e.height;
                t._width = t._minWidth = t._maxWidth = e.width * n, t._height = e.height * n
            } else t._width = t._minWidth = t._maxWidth = t.width || e.width, t._height = t.height || e.height * t._width / e.width, "number" == typeof t.maxWidth && t.maxWidth < t._width && (t._width = t._minWidth = t._maxWidth = t.maxWidth, t._height = t._width * e.height / e.width), "number" == typeof t.maxHeight && t.maxHeight < t._height && (t._height = t.maxHeight, t._width = t._minWidth = t._maxWidth = t._height * e.width / e.height), "number" == typeof t.minWidth && t.minWidth > t._width && (t._width = t._minWidth = t._maxWidth = t.minWidth, t._height = t._width * e.height / e.width), "number" == typeof t.minHeight && t.minHeight > t._height && (t._height = t.minHeight, t._width = t._minWidth = t._maxWidth = t._height * e.width / e.height);
            return t._alignment = this.styleStack.getProperty("alignment"), t
        }, r.prototype.measureLeaf = function (t) {
            var e = this.styleStack.clone();
            e.push(t);
            var n = this.textTools.buildInlines(t.text, e);
            return t._inlines = n.items, t._minWidth = n.minWidth, t._maxWidth = n.maxWidth, t
        }, r.prototype.measureToc = function (t) {
            t.toc.title && (t.toc.title = this.measureNode(t.toc.title));
            for (var e = [], n = 0, r = t.toc._items.length; n < r; n++) {
                var i = t.toc._items[n];
                e.push([{text: i.text, alignment: "left"}, {text: "00000", alignment: "right", _tocItemRef: i}])
            }
            return t.toc._table = {
                table: {dontBreakRows: !0, widths: ["*", "auto"], body: e},
                layout: "noBorders"
            }, t.toc._table = this.measureNode(t.toc._table), t
        }, r.prototype.measureVerticalContainer = function (t) {
            var e = t.stack;
            t._minWidth = 0, t._maxWidth = 0;
            for (var n = 0, r = e.length; n < r; n++)e[n] = this.measureNode(e[n]), t._minWidth = Math.max(t._minWidth, e[n]._minWidth), t._maxWidth = Math.max(t._maxWidth, e[n]._maxWidth);
            return t
        }, r.prototype.gapSizeForList = function () {
            return this.textTools.sizeOfString("9. ", this.styleStack)
        }, r.prototype.buildUnorderedMarker = function (t, e, n) {
            var r, i = t.getProperty("markerColor") || t.getProperty("color") || "black";
            switch (n) {
                case"circle":
                    r = function (t, e) {
                        var n = t.fontSize / 6;
                        return {
                            canvas: [{
                                x: n,
                                y: t.height / t.lineHeight + t.descender - t.fontSize / 3,
                                r1: n,
                                r2: n,
                                type: "ellipse",
                                lineColor: e
                            }]
                        }
                    }(e, i);
                    break;
                case"square":
                    r = function (t, e) {
                        var n = t.fontSize / 3;
                        return {
                            canvas: [{
                                x: 0,
                                y: t.height / t.lineHeight + t.descender - t.fontSize / 3 - n / 2,
                                h: n,
                                w: n,
                                type: "rect",
                                color: e
                            }]
                        }
                    }(e, i);
                    break;
                case"none":
                    r = {};
                    break;
                case"disc":
                default:
                    r = function (t, e) {
                        var n = t.fontSize / 6;
                        return {
                            canvas: [{
                                x: n,
                                y: t.height / t.lineHeight + t.descender - t.fontSize / 3,
                                r1: n,
                                r2: n,
                                type: "ellipse",
                                color: e
                            }]
                        }
                    }(e, i)
            }
            return r._minWidth = r._maxWidth = e.width, r._minHeight = r._maxHeight = e.height, r
        }, r.prototype.buildOrderedMarker = function (t, e, n, r) {
            function i(t) {
                function e(t) {
                    return (t >= 26 ? e((t / 26 >> 0) - 1) : "") + "abcdefghijklmnopqrstuvwxyz"[t % 26 >> 0]
                }

                return t < 1 ? t.toString() : e(t - 1)
            }

            function o(t) {
                if (t < 1 || t > 4999)return t.toString();
                var e, n = t, r = {
                    M: 1e3,
                    CM: 900,
                    D: 500,
                    CD: 400,
                    C: 100,
                    XC: 90,
                    L: 50,
                    XL: 40,
                    X: 10,
                    IX: 9,
                    V: 5,
                    IV: 4,
                    I: 1
                }, i = "";
                for (e in r)for (; n >= r[e];)i += e, n -= r[e];
                return i
            }

            var a;
            switch (n) {
                case"none":
                    a = null;
                    break;
                case"upper-alpha":
                    a = i(t).toUpperCase();
                    break;
                case"lower-alpha":
                    a = i(t);
                    break;
                case"upper-roman":
                    a = o(t);
                    break;
                case"lower-roman":
                    a = o(t).toLowerCase();
                    break;
                case"decimal":
                default:
                    a = function (t) {
                        return t.toString()
                    }(t)
            }
            if (null === a)return {};
            r && (Array.isArray(r) ? (r[0] && (a = r[0] + a), r[1] && (a += r[1]), a += " ") : a += r + " ");
            var s = {text: a}, u = e.getProperty("markerColor");
            return u && (s.color = u), {_inlines: this.textTools.buildInlines(s, e).items}
        }, r.prototype.measureUnorderedList = function (t) {
            var e = this.styleStack.clone(), n = t.ul;
            t.type = t.type || "disc", t._gapSize = this.gapSizeForList(), t._minWidth = 0, t._maxWidth = 0;
            for (var r = 0, i = n.length; r < i; r++) {
                var o = n[r] = this.measureNode(n[r]);
                o.ol || o.ul || (o.listMarker = this.buildUnorderedMarker(e, t._gapSize, t.type)), t._minWidth = Math.max(t._minWidth, n[r]._minWidth + t._gapSize.width), t._maxWidth = Math.max(t._maxWidth, n[r]._maxWidth + t._gapSize.width)
            }
            return t
        }, r.prototype.measureOrderedList = function (t) {
            var e = this.styleStack.clone(), n = t.ol;
            t.type = t.type || "decimal", t.separator = t.separator || ".", t.reversed = t.reversed || !1, t.start || (t.start = t.reversed ? n.length : 1), t._gapSize = this.gapSizeForList(), t._minWidth = 0, t._maxWidth = 0;
            for (var r = t.start, i = 0, o = n.length; i < o; i++) {
                var a = n[i] = this.measureNode(n[i]);
                a.ol || a.ul || (a.listMarker = this.buildOrderedMarker(a.counter || r, e, t.type, t.separator), a.listMarker._inlines && (t._gapSize.width = Math.max(t._gapSize.width, a.listMarker._inlines[0].width))), t._minWidth = Math.max(t._minWidth, n[i]._minWidth), t._maxWidth = Math.max(t._maxWidth, n[i]._maxWidth), t.reversed ? r-- : r++
            }
            t._minWidth += t._gapSize.width, t._maxWidth += t._gapSize.width;
            for (var i = 0, o = n.length; i < o; i++) {
                var a = n[i];
                a.ol || a.ul || (a.listMarker._minWidth = a.listMarker._maxWidth = t._gapSize.width)
            }
            return t
        }, r.prototype.measureColumns = function (t) {
            var e = t.columns;
            t._gap = this.styleStack.getProperty("columnGap") || 0;
            for (var n = 0, r = e.length; n < r; n++)e[n] = this.measureNode(e[n]);
            var i = a.measureMinMax(e), o = e.length > 0 ? e.length - 1 : 0;
            return t._minWidth = i.min + t._gap * o, t._maxWidth = i.max + t._gap * o, t
        }, r.prototype.measureTable = function (t) {
            function e(e, n, r) {
                for (var i = {
                    minWidth: 0,
                    maxWidth: 0
                }, o = 0; o < n; o++)i.minWidth += t.table.widths[e + o]._minWidth + (o ? r.offsets[e + o] : 0), i.maxWidth += t.table.widths[e + o]._maxWidth + (o ? r.offsets[e + o] : 0);
                return i
            }

            !function (t) {
                if (t.table.widths || (t.table.widths = "auto"), "string" == typeof t.table.widths || t.table.widths instanceof String)for (t.table.widths = [t.table.widths]; t.table.widths.length < t.table.body[0].length;)t.table.widths.push(t.table.widths[t.table.widths.length - 1]);
                for (var e = 0, n = t.table.widths.length; e < n; e++) {
                    var r = t.table.widths[e];
                    ("number" == typeof r || r instanceof Number || "string" == typeof r || r instanceof String) && (t.table.widths[e] = {width: r})
                }
            }(t), t._layout = function (e) {
                var n = t.layout;
                return ("string" == typeof t.layout || t instanceof String) && (n = e[n]), u({
                    hLineWidth: function (t, e) {
                        return 1
                    }, vLineWidth: function (t, e) {
                        return 1
                    }, hLineColor: function (t, e) {
                        return "black"
                    }, vLineColor: function (t, e) {
                        return "black"
                    }, paddingLeft: function (t, e) {
                        return 4
                    }, paddingRight: function (t, e) {
                        return 4
                    }, paddingTop: function (t, e) {
                        return 2
                    }, paddingBottom: function (t, e) {
                        return 2
                    }, fillColor: function (t, e) {
                        return null
                    }, defaultBorder: !0
                }, n)
            }(this.tableLayouts), t._offsets = function (e) {
                for (var n = [], r = 0, i = 0, o = 0, a = t.table.widths.length; o < a; o++) {
                    var s = i + e.vLineWidth(o, t) + e.paddingLeft(o, t);
                    n.push(s), r += s, i = e.paddingRight(o, t)
                }
                return r += i + e.vLineWidth(t.table.widths.length, t), {total: r, offsets: n}
            }(t._layout);
            var n, r, i, o, s = [];
            for (n = 0, i = t.table.body[0].length; n < i; n++) {
                var l = t.table.widths[n];
                for (l._minWidth = 0, l._maxWidth = 0, r = 0, o = t.table.body.length; r < o; r++) {
                    var c = t.table.body[r], f = c[n];
                    if (void 0 === f)throw"Malformed table row, a cell is undefined.";
                    null === f && (f = ""), f._span || (f = c[n] = this.styleStack.auto(f, function (t, e) {
                        return function () {
                            return null !== e && "object" == typeof e && (e.fillColor = t.styleStack.getProperty("fillColor")), t.measureNode(e)
                        }
                    }(this, f)), f.colSpan && f.colSpan > 1 ? (!function (t, e, n) {
                        for (var r = 1; r < n; r++)t[e + r] = {
                            _span: !0,
                            _minWidth: 0,
                            _maxWidth: 0,
                            rowSpan: t[e].rowSpan
                        }
                    }(c, n, f.colSpan), s.push({
                        col: n,
                        span: f.colSpan,
                        minWidth: f._minWidth,
                        maxWidth: f._maxWidth
                    })) : (l._minWidth = Math.max(l._minWidth, f._minWidth), l._maxWidth = Math.max(l._maxWidth, f._maxWidth))), f.rowSpan && f.rowSpan > 1 && function (t, e, n, r) {
                        for (var i = 1; i < r; i++)t.body[e + i][n] = {
                            _span: !0,
                            _minWidth: 0,
                            _maxWidth: 0,
                            fillColor: t.body[e][n].fillColor
                        }
                    }(t.table, r, n, f.rowSpan)
                }
            }
            !function () {
                for (var n, r, i = 0, o = s.length; i < o; i++) {
                    var a = s[i], u = e(a.col, a.span, t._offsets), l = a.minWidth - u.minWidth, c = a.maxWidth - u.maxWidth;
                    if (l > 0)for (n = l / a.span, r = 0; r < a.span; r++)t.table.widths[a.col + r]._minWidth += n;
                    if (c > 0)for (n = c / a.span, r = 0; r < a.span; r++)t.table.widths[a.col + r]._maxWidth += n
                }
            }();
            var h = a.measureMinMax(t.table.widths);
            return t._minWidth = h.min + t._offsets.total, t._maxWidth = h.max + t._offsets.total, t
        }, r.prototype.measureCanvas = function (t) {
            for (var e = 0, n = 0, r = 0, i = t.canvas.length; r < i; r++) {
                var o = t.canvas[r];
                switch (o.type) {
                    case"ellipse":
                        e = Math.max(e, o.x + o.r1), n = Math.max(n, o.y + o.r2);
                        break;
                    case"rect":
                        e = Math.max(e, o.x + o.w), n = Math.max(n, o.y + o.h);
                        break;
                    case"line":
                        e = Math.max(e, o.x1, o.x2), n = Math.max(n, o.y1, o.y2);
                        break;
                    case"polyline":
                        for (var a = 0, s = o.points.length; a < s; a++)e = Math.max(e, o.points[a].x), n = Math.max(n, o.points[a].y)
                }
            }
            return t._minWidth = t._maxWidth = e, t._minHeight = t._maxHeight = n, t
        }, r.prototype.measureQr = function (t) {
            return t = l.measure(t), t._alignment = this.styleStack.getProperty("alignment"), t
        }, t.exports = r
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            this.fontProvider = t
        }

        function i(t, e) {
            var n = [];
            if (t = t.replace("\t", "    "), e)return n.push({text: t}), n;
            for (var r, i = new f(t), o = 0; r = i.nextBreak();) {
                var a = t.slice(o, r.position);
                r.required || a.match(/\r?\n$|\r$/) ? (a = a.replace(/\r?\n$|\r$/, ""), n.push({
                    text: a,
                    lineEnd: !0
                })) : n.push({text: a}), o = r.position
            }
            return n
        }

        function o(t, e) {
            e = e || {}, t = t || {};
            for (var n in t)"text" != n && t.hasOwnProperty(n) && (e[n] = t[n]);
            return e
        }

        function a(t, e) {
            var n = [];
            Array.isArray(t) || (t = [t])
            ;
            for (var r = 0, a = t.length; r < a; r++) {
                var l, c = t[r], f = null, h = u(c || {}, e, "noWrap", !1);
                null !== c && ("object" == typeof c || c instanceof Object) ? (l = i(s(c.text), h), f = o(c)) : l = i(s(c), h);
                for (var p = 0, d = l.length; p < d; p++) {
                    var g = {text: l[p].text};
                    l[p].lineEnd && (g.lineEnd = !0), o(f, g), n.push(g)
                }
            }
            return n
        }

        function s(t) {
            return void 0 === t || null === t ? "" : "number" == typeof t ? t.toString() : "string" == typeof t || t instanceof String ? t : t.toString()
        }

        function u(t, e, n, r) {
            var i;
            return void 0 !== t[n] && null !== t[n] ? t[n] : e ? (e.auto(t, function () {
                i = e.getProperty(n)
            }), null !== i && void 0 !== i ? i : r) : r
        }

        function l(t, e, n) {
            var r = a(e, n);
            if (r.length) {
                var i = u(r[0], n, "leadingIndent", 0);
                i && (r[0].leadingCut = -i, r[0].leadingIndent = i)
            }
            return r.forEach(function (e) {
                var r = u(e, n, "font", "Consola"), i = u(e, n, "fontSize", 12), o = u(e, n, "bold", !1), a = u(e, n, "italics", !1), s = u(e, n, "color", "black"), l = u(e, n, "decoration", null), f = u(e, n, "decorationColor", null), d = u(e, n, "decorationStyle", null), g = u(e, n, "background", null), y = u(e, n, "lineHeight", 1), v = u(e, n, "characterSpacing", 0), b = u(e, n, "link", null), m = u(e, n, "linkToPage", null), w = u(e, n, "noWrap", null), x = u(e, n, "preserveLeadingSpaces", !1), _ = t.provideFont(r, o, a);
                e.width = c(e.text, _, i, v), e.height = _.lineHeight(i) * y;
                var k = e.text.match(h);
                e.leadingCut || (e.leadingCut = 0), k && !x && (e.leadingCut += c(k[0], _, i, v));
                var S = e.text.match(p);
                e.trailingCut = S ? c(S[0], _, i, v) : 0, e.alignment = u(e, n, "alignment", "left"), e.font = _, e.fontSize = i, e.characterSpacing = v, e.color = s, e.decoration = l, e.decorationColor = f, e.decorationStyle = d, e.background = g, e.link = b, e.linkToPage = m, e.noWrap = w
            }), r
        }

        function c(t, e, n, r) {
            return e.widthOfString(t, n) + (r || 0) * (t.length - 1)
        }

        var f = n(16), h = /^(\s)+/g, p = /(\s)+$/g;
        r.prototype.buildInlines = function (t, e) {
            function n(t) {
                return Math.max(0, t.width - t.leadingCut - t.trailingCut)
            }

            var r, i = l(this.fontProvider, t, e), o = 0, a = 0;
            return i.forEach(function (t) {
                o = Math.max(o, t.width - t.leadingCut - t.trailingCut), r || (r = {
                    width: 0,
                    leadingCut: t.leadingCut,
                    trailingCut: 0
                }), r.width += t.width, r.trailingCut = t.trailingCut, a = Math.max(a, n(r)), t.lineEnd && (r = null)
            }), u({}, e, "noWrap", !1) && (o = a), {items: i, minWidth: o, maxWidth: a}
        }, r.prototype.sizeOfString = function (t, e) {
            t = t ? t.toString().replace("\t", "    ") : "";
            var n = u({}, e, "font", "Consola"), r = u({}, e, "fontSize", 12), i = u({}, e, "bold", !1), o = u({}, e, "italics", !1), a = u({}, e, "lineHeight", 1), s = u({}, e, "characterSpacing", 0), l = this.fontProvider.provideFont(n, i, o);
            return {
                width: c(t, l, r, s),
                height: l.lineHeight(r) * a,
                fontSize: r,
                lineHeight: a,
                ascender: l.ascender / 1e3 * r,
                descender: l.descender / 1e3 * r
            }
        }, r.prototype.widthOfString = function (t, e, n, r) {
            return c(t, e, n, r)
        }, t.exports = r
    }, function (t, e, n) {
        (function () {
            var e, r, i, o, a, s, u, l, c, f, h, p, d, g, y, v, b, m, w, x, _, k, S, C, A, P, E;
            w = n(17), k = n(19), P = n(20), o = P.BK, c = P.CR, p = P.LF, g = P.NL, a = P.CB, i = P.BA, m = P.SP, x = P.WJ, m = P.SP, o = P.BK, p = P.LF, g = P.NL, e = P.AI, r = P.AL, v = P.SA, b = P.SG, _ = P.XX, u = P.CJ, P.ID, y = P.NS, P.characterClasses, E = n(21), f = E.DI_BRK, h = E.IN_BRK, s = E.CI_BRK, l = E.CP_BRK, E.PR_BRK, A = E.pairTable, C = k.toByteArray("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"), S = new w(C), d = function () {
                function t(t) {
                    this.string = t, this.pos = 0, this.lastPos = 0, this.curClass = null, this.nextClass = null
                }

                var n, d, w;
                return t.prototype.nextCodePoint = function () {
                    var t, e;
                    return t = this.string.charCodeAt(this.pos++), e = this.string.charCodeAt(this.pos), 55296 <= t && t <= 56319 && 56320 <= e && e <= 57343 ? (this.pos++, 1024 * (t - 55296) + (e - 56320) + 65536) : t
                }, d = function (t) {
                    switch (t) {
                        case e:
                            return r;
                        case v:
                        case b:
                        case _:
                            return r;
                        case u:
                            return y;
                        default:
                            return t
                    }
                }, w = function (t) {
                    switch (t) {
                        case p:
                        case g:
                            return o;
                        case a:
                            return i;
                        case m:
                            return x;
                        default:
                            return t
                    }
                }, t.prototype.nextCharClass = function (t) {
                    return null == t && (t = !1), d(S.get(this.nextCodePoint()))
                }, n = function () {
                    function t(t, e) {
                        this.position = t, this.required = null != e && e
                    }

                    return t
                }(), t.prototype.nextBreak = function () {
                    var t, e, r;
                    for (null == this.curClass && (this.curClass = w(this.nextCharClass())); this.pos < this.string.length;) {
                        if (this.lastPos = this.pos, e = this.nextClass, this.nextClass = this.nextCharClass(), this.curClass === o || this.curClass === c && this.nextClass !== p)return this.curClass = w(d(this.nextClass)), new n(this.lastPos, !0);
                        if (null == (t = function () {
                                switch (this.nextClass) {
                                    case m:
                                        return this.curClass;
                                    case o:
                                    case p:
                                    case g:
                                        return o;
                                    case c:
                                        return c;
                                    case a:
                                        return i
                                }
                            }.call(this))) {
                            switch (r = !1, A[this.curClass][this.nextClass]) {
                                case f:
                                    r = !0;
                                    break;
                                case h:
                                    r = e === m;
                                    break;
                                case s:
                                    if (!(r = e === m))continue;
                                    break;
                                case l:
                                    if (e !== m)continue
                            }
                            if (this.curClass = this.nextClass, r)return new n(this.lastPos)
                        } else if (this.curClass = t, this.nextClass === a)return new n(this.lastPos)
                    }
                    if (this.pos >= this.string.length)return this.lastPos < this.string.length ? (this.lastPos = this.string.length, new n(this.string.length)) : null
                }, t
            }(), t.exports = d
        }).call(this)
    }, function (t, e, n) {
        var r, i;
        i = n(18), r = function () {
            function t(t) {
                var e, n, r;
                e = "function" == typeof t.readUInt32BE && "function" == typeof t.slice, e || t instanceof Uint8Array ? (e ? (this.highStart = t.readUInt32BE(0), this.errorValue = t.readUInt32BE(4), n = t.readUInt32BE(8), t = t.slice(12)) : (r = new DataView(t.buffer), this.highStart = r.getUint32(0), this.errorValue = r.getUint32(4), n = r.getUint32(8), t = t.subarray(12)), t = i(t, new Uint8Array(n)), t = i(t, new Uint8Array(n)), this.data = new Uint32Array(t.buffer)) : (this.data = t.data, this.highStart = t.highStart, this.errorValue = t.errorValue)
            }

            var e, n, r, o, a, s, u, l, c, f, h, p, d, g, y, v;
            return p = 11, g = 5, d = p - g, h = 65536 >> p, a = 1 << d, u = a - 1, l = 2, e = 1 << g, r = e - 1, f = 65536 >> g, c = 1024 >> g, s = f + c, v = s, y = 32, o = v + y, n = 1 << l, t.prototype.get = function (t) {
                var e;
                return t < 0 || t > 1114111 ? this.errorValue : t < 55296 || t > 56319 && t <= 65535 ? (e = (this.data[t >> g] << l) + (t & r), this.data[e]) : t <= 65535 ? (e = (this.data[f + (t - 55296 >> g)] << l) + (t & r), this.data[e]) : t < this.highStart ? (e = this.data[o - h + (t >> p)], e = this.data[e + (t >> g & u)], e = (e << l) + (t & r), this.data[e]) : this.data[this.data.length - n]
            }, t
        }(), t.exports = r
    }, function (t, e) {
        function n() {
            this.table = new Uint16Array(16), this.trans = new Uint16Array(288)
        }

        function r(t, e) {
            this.source = t, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = e, this.destLen = 0, this.ltree = new n, this.dtree = new n
        }

        function i(t, e, n, r) {
            var i, o;
            for (i = 0; i < n; ++i)t[i] = 0;
            for (i = 0; i < 30 - n; ++i)t[i + n] = i / n | 0;
            for (o = r, i = 0; i < 30; ++i)e[i] = o, o += 1 << t[i]
        }

        function o(t, e, n, r) {
            var i, o;
            for (i = 0; i < 16; ++i)t.table[i] = 0;
            for (i = 0; i < r; ++i)t.table[e[n + i]]++;
            for (t.table[0] = 0, o = 0, i = 0; i < 16; ++i)S[i] = o, o += t.table[i];
            for (i = 0; i < r; ++i)e[n + i] && (t.trans[S[e[n + i]]++] = i)
        }

        function a(t) {
            t.bitcount-- || (t.tag = t.source[t.sourceIndex++], t.bitcount = 7);
            var e = 1 & t.tag;
            return t.tag >>>= 1, e
        }

        function s(t, e, n) {
            if (!e)return n;
            for (; t.bitcount < 24;)t.tag |= t.source[t.sourceIndex++] << t.bitcount, t.bitcount += 8;
            var r = t.tag & 65535 >>> 16 - e;
            return t.tag >>>= e, t.bitcount -= e, r + n
        }

        function u(t, e) {
            for (; t.bitcount < 24;)t.tag |= t.source[t.sourceIndex++] << t.bitcount, t.bitcount += 8;
            var n = 0, r = 0, i = 0, o = t.tag;
            do {
                r = 2 * r + (1 & o), o >>>= 1, ++i, n += e.table[i], r -= e.table[i]
            } while (r >= 0);
            return t.tag = o, t.bitcount -= i, e.trans[n + r]
        }

        function l(t, e, n) {
            var r, i, a, l, c, f;
            for (r = s(t, 5, 257), i = s(t, 5, 1), a = s(t, 4, 4), l = 0; l < 19; ++l)k[l] = 0;
            for (l = 0; l < a; ++l) {
                var h = s(t, 3, 0);
                k[x[l]] = h
            }
            for (o(_, k, 0, 19), c = 0; c < r + i;) {
                var p = u(t, _);
                switch (p) {
                    case 16:
                        var d = k[c - 1];
                        for (f = s(t, 2, 3); f; --f)k[c++] = d;
                        break;
                    case 17:
                        for (f = s(t, 3, 3); f; --f)k[c++] = 0;
                        break;
                    case 18:
                        for (f = s(t, 7, 11); f; --f)k[c++] = 0;
                        break;
                    default:
                        k[c++] = p
                }
            }
            o(e, k, 0, r), o(n, k, r, i)
        }

        function c(t, e, n) {
            for (; ;) {
                var r = u(t, e);
                if (256 === r)return p;
                if (r < 256)t.dest[t.destLen++] = r; else {
                    var i, o, a, l;
                    for (r -= 257, i = s(t, v[r], b[r]), o = u(t, n), a = t.destLen - s(t, m[o], w[o]), l = a; l < a + i; ++l)t.dest[t.destLen++] = t.dest[l]
                }
            }
        }

        function f(t) {
            for (var e, n, r; t.bitcount > 8;)t.sourceIndex--, t.bitcount -= 8;
            if (e = t.source[t.sourceIndex + 1], e = 256 * e + t.source[t.sourceIndex], n = t.source[t.sourceIndex + 3], n = 256 * n + t.source[t.sourceIndex + 2], e !== (65535 & ~n))return d;
            for (t.sourceIndex += 4, r = e; r; --r)t.dest[t.destLen++] = t.source[t.sourceIndex++];
            return t.bitcount = 0, p
        }

        function h(t, e) {
            var n, i, o = new r(t, e);
            do {
                switch (n = a(o), s(o, 2, 0)) {
                    case 0:
                        i = f(o);
                        break;
                    case 1:
                        i = c(o, g, y);
                        break;
                    case 2:
                        l(o, o.ltree, o.dtree), i = c(o, o.ltree, o.dtree);
                        break;
                    default:
                        i = d
                }
                if (i !== p)throw new Error("Data error")
            } while (!n);
            return o.destLen < o.dest.length ? "function" == typeof o.dest.slice ? o.dest.slice(0, o.destLen) : o.dest.subarray(0, o.destLen) : o.dest
        }

        var p = 0, d = -3, g = new n, y = new n, v = new Uint8Array(30), b = new Uint16Array(30), m = new Uint8Array(30), w = new Uint16Array(30), x = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), _ = new n, k = new Uint8Array(320), S = new Uint16Array(16);
        !function (t, e) {
            var n;
            for (n = 0; n < 7; ++n)t.table[n] = 0;
            for (t.table[7] = 24, t.table[8] = 152, t.table[9] = 112, n = 0; n < 24; ++n)t.trans[n] = 256 + n;
            for (n = 0; n < 144; ++n)t.trans[24 + n] = n;
            for (n = 0; n < 8; ++n)t.trans[168 + n] = 280 + n;
            for (n = 0; n < 112; ++n)t.trans[176 + n] = 144 + n;
            for (n = 0; n < 5; ++n)e.table[n] = 0;
            for (e.table[5] = 32, n = 0; n < 32; ++n)e.trans[n] = n
        }(g, y), i(v, b, 4, 3), i(m, w, 2, 1), v[28] = 0, b[28] = 258, t.exports = h
    }, function (t, e, n) {
        !function (t) {
            "use strict";
            function e(t) {
                var e = t.charCodeAt(0);
                return e === o || e === c ? 62 : e === a || e === f ? 63 : e < s ? -1 : e < s + 10 ? e - s + 26 + 26 : e < l + 26 ? e - l : e < u + 26 ? e - u + 26 : void 0
            }

            function n(t) {
                function n(t) {
                    l[f++] = t
                }

                var r, o, a, s, u, l;
                if (t.length % 4 > 0)throw new Error("Invalid string. Length must be a multiple of 4");
                var c = t.length;
                u = "=" === t.charAt(c - 2) ? 2 : "=" === t.charAt(c - 1) ? 1 : 0, l = new i(3 * t.length / 4 - u), a = u > 0 ? t.length - 4 : t.length;
                var f = 0;
                for (r = 0, o = 0; r < a; r += 4, o += 3)s = e(t.charAt(r)) << 18 | e(t.charAt(r + 1)) << 12 | e(t.charAt(r + 2)) << 6 | e(t.charAt(r + 3)), n((16711680 & s) >> 16), n((65280 & s) >> 8), n(255 & s);
                return 2 === u ? (s = e(t.charAt(r)) << 2 | e(t.charAt(r + 1)) >> 4, n(255 & s)) : 1 === u && (s = e(t.charAt(r)) << 10 | e(t.charAt(r + 1)) << 4 | e(t.charAt(r + 2)) >> 2, n(s >> 8 & 255), n(255 & s)), l
            }

            function r(t) {
                function e(t) {
                    return "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(t)
                }

                var n, r, i, o = t.length % 3, a = "";
                for (n = 0, i = t.length - o; n < i; n += 3)r = (t[n] << 16) + (t[n + 1] << 8) + t[n + 2], a += function (t) {
                    return e(t >> 18 & 63) + e(t >> 12 & 63) + e(t >> 6 & 63) + e(63 & t)
                }(r);
                switch (o) {
                    case 1:
                        r = t[t.length - 1], a += e(r >> 2), a += e(r << 4 & 63), a += "==";
                        break;
                    case 2:
                        r = (t[t.length - 2] << 8) + t[t.length - 1], a += e(r >> 10), a += e(r >> 4 & 63), a += e(r << 2 & 63), a += "="
                }
                return a
            }

            var i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "+".charCodeAt(0), a = "/".charCodeAt(0), s = "0".charCodeAt(0), u = "a".charCodeAt(0), l = "A".charCodeAt(0), c = "-".charCodeAt(0), f = "_".charCodeAt(0);
            t.toByteArray = n, t.fromByteArray = r
        }(e)
    }, function (t, e) {
        (function () {
            e.OP = 0, e.CL = 1, e.CP = 2, e.QU = 3, e.GL = 4, e.NS = 5, e.EX = 6, e.SY = 7, e.IS = 8, e.PR = 9, e.PO = 10, e.NU = 11, e.AL = 12, e.HL = 13, e.ID = 14, e.IN = 15, e.HY = 16, e.BA = 17, e.BB = 18, e.B2 = 19, e.ZW = 20, e.CM = 21, e.WJ = 22, e.H2 = 23, e.H3 = 24, e.JL = 25, e.JV = 26, e.JT = 27, e.RI = 28, e.AI = 29, e.BK = 30, e.CB = 31, e.CJ = 32, e.CR = 33, e.LF = 34, e.NL = 35, e.SA = 36, e.SG = 37, e.SP = 38, e.XX = 39
        }).call(this)
    }, function (t, e) {
        (function () {
            var t, n, r, i, o;
            e.DI_BRK = r = 0, e.IN_BRK = i = 1, e.CI_BRK = t = 2, e.CP_BRK = n = 3, e.PR_BRK = o = 4, e.pairTable = [[o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, n, o, o, o, o, o, o, o], [r, o, o, i, i, o, o, o, o, i, i, r, r, r, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [r, o, o, i, i, o, o, o, o, i, i, i, i, i, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [o, o, o, i, i, i, o, o, o, i, i, i, i, i, i, i, i, i, i, i, o, t, o, i, i, i, i, i, i], [i, o, o, i, i, i, o, o, o, i, i, i, i, i, i, i, i, i, i, i, o, t, o, i, i, i, i, i, i], [r, o, o, i, i, i, o, o, o, r, r, r, r, r, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [r, o, o, i, i, i, o, o, o, r, r, r, r, r, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [r, o, o, i, i, i, o, o, o, r, r, i, r, r, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [r, o, o, i, i, i, o, o, o, r, r, i, i, i, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [i, o, o, i, i, i, o, o, o, r, r, i, i, i, i, r, i, i, r, r, o, t, o, i, i, i, i, i, r], [i, o, o, i, i, i, o, o, o, r, r, i, i, i, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [i, o, o, i, i, i, o, o, o, i, i, i, i, i, r, i, i, i, r, r, o, t, o, r, r, r, r, r, r], [i, o, o, i, i, i, o, o, o, r, r, i, i, i, r, i, i, i, r, r, o, t, o, r, r, r, r, r, r], [i, o, o, i, i, i, o, o, o, r, r, i, i, i, r, i, i, i, r, r, o, t, o, r, r, r, r, r, r], [r, o, o, i, i, i, o, o, o, r, i, r, r, r, r, i, i, i, r, r, o, t, o, r, r, r, r, r, r], [r, o, o, i, i, i, o, o, o, r, r, r, r, r, r, i, i, i, r, r, o, t, o, r, r, r, r, r, r], [r, o, o, i, r, i, o, o, o, r, r, i, r, r, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [r, o, o, i, r, i, o, o, o, r, r, r, r, r, r, r, i, i, r, r, o, t, o, r, r, r, r, r, r], [i, o, o, i, i, i, o, o, o, i, i, i, i, i, i, i, i, i, i, i, o, t, o, i, i, i, i, i, i], [r, o, o, i, i, i, o, o, o, r, r, r, r, r, r, r, i, i, r, o, o, t, o, r, r, r, r, r, r], [r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, o, r, r, r, r, r, r, r, r], [i, o, o, i, i, i, o, o, o, r, r, i, i, i, r, i, i, i, r, r, o, t, o, r, r, r, r, r, r], [i, o, o, i, i, i, o, o, o, i, i, i, i, i, i, i, i, i, i, i, o, t, o, i, i, i, i, i, i], [r, o, o, i, i, i, o, o, o, r, i, r, r, r, r, i, i, i, r, r, o, t, o, r, r, r, i, i, r], [r, o, o, i, i, i, o, o, o, r, i, r, r, r, r, i, i, i, r, r, o, t, o, r, r, r, r, i, r], [r, o, o, i, i, i, o, o, o, r, i, r, r, r, r, i, i, i, r, r, o, t, o, i, i, i, i, r, r], [r, o, o, i, i, i, o, o, o, r, i, r, r, r, r, i, i, i, r, r, o, t, o, r, r, r, i, i, r], [r, o, o, i, i, i, o, o, o, r, i, r, r, r, r, i, i, i, r, r, o, t, o, r, r, r, r, i, r], [r, o, o, i, i, i, o, o, o, r, r, r, r, r, r, r, i, i, r, r, o, t, o, r, r, r, r, r, i]]
        }).call(this)
    }, function (t, e) {
        "use strict";
        function n(t, e) {
            this.defaultStyle = e || {}, this.styleDictionary = t, this.styleOverrides = []
        }

        n.prototype.clone = function () {
            var t = new n(this.styleDictionary, this.defaultStyle);
            return this.styleOverrides.forEach(function (e) {
                t.styleOverrides.push(e)
            }), t
        }, n.prototype.push = function (t) {
            this.styleOverrides.push(t)
        }, n.prototype.pop = function (t) {
            for (t = t || 1; t-- > 0;)this.styleOverrides.pop()
        }, n.prototype.autopush = function (t) {
            if ("string" == typeof t || t instanceof String)return 0;
            var e = [];
            t.style && (e = Array.isArray(t.style) ? t.style : [t.style]);
            for (var n = 0, r = e.length; n < r; n++)this.push(e[n]);
            var i = {}, o = !1;
            return ["font", "fontSize", "bold", "italics", "alignment", "color", "columnGap", "fillColor", "decoration", "decorationStyle", "decorationColor", "background", "lineHeight", "characterSpacing", "noWrap", "markerColor", "leadingIndent"].forEach(function (e) {
                void 0 !== t[e] && null !== t[e] && (i[e] = t[e], o = !0)
            }), o && this.push(i), e.length + (o ? 1 : 0)
        }, n.prototype.auto = function (t, e) {
            var n = this.autopush(t), r = e();
            return n > 0 && this.pop(n), r
        }, n.prototype.getProperty = function (t) {
            if (this.styleOverrides)for (var e = this.styleOverrides.length - 1; e >= 0; e--) {
                var n = this.styleOverrides[e];
                if ("string" == typeof n || n instanceof String) {
                    var r = this.styleDictionary[n];
                    if (r && null !== r[t] && void 0 !== r[t])return r[t]
                } else if (void 0 !== n[t] && null !== n[t])return n[t]
            }
            return this.defaultStyle && this.defaultStyle[t]
        }, t.exports = n
    }, function (t, e) {
        "use strict";
        function n(t, e) {
            var n = [], o = 0, a = 0, s = [], u = 0, l = 0, c = [], f = e;
            t.forEach(function (t) {
                r(t) ? (n.push(t), o += t._minWidth, a += t._maxWidth) : i(t) ? (s.push(t), u = Math.max(u, t._minWidth), l = Math.max(l, t._maxWidth)) : c.push(t)
            }), c.forEach(function (t) {
                "string" == typeof t.width && /\d+%/.test(t.width) && (t.width = parseFloat(t.width) * f / 100), t.width < t._minWidth && t.elasticWidth ? t._calcWidth = t._minWidth : t._calcWidth = t.width, e -= t._calcWidth
            });
            var h = o + u * s.length, p = a + l * s.length;
            if (h >= e)n.forEach(function (t) {
                t._calcWidth = t._minWidth
            }), s.forEach(function (t) {
                t._calcWidth = u
            }); else {
                if (p < e)n.forEach(function (t) {
                    t._calcWidth = t._maxWidth, e -= t._calcWidth
                }); else {
                    var d = e - h, g = p - h;
                    n.forEach(function (t) {
                        var n = t._maxWidth - t._minWidth;
                        t._calcWidth = t._minWidth + n * d / g, e -= t._calcWidth
                    })
                }
                if (s.length > 0) {
                    var y = e / s.length;
                    s.forEach(function (t) {
                        t._calcWidth = y
                    })
                }
            }
        }

        function r(t) {
            return "auto" === t.width
        }

        function i(t) {
            return null === t.width || void 0 === t.width || "*" === t.width || "star" === t.width
        }

        function o(t) {
            for (var e = {min: 0, max: 0}, n = {min: 0, max: 0}, o = 0, a = 0, s = t.length; a < s; a++) {
                var u = t[a];
                i(u) ? (n.min = Math.max(n.min, u._minWidth), n.max = Math.max(n.max, u._maxWidth), o++) : r(u) ? (e.min += u._minWidth, e.max += u._maxWidth) : (e.min += void 0 !== u.width && u.width || u._minWidth, e.max += void 0 !== u.width && u.width || u._maxWidth)
            }
            return o && (e.min += o * n.min, e.max += o * n.max), e
        }

        t.exports = {buildColumnWidths: n, measureMinMax: o, isAutoColumn: r, isStarColumn: i}
    }, function (t, e) {
        "use strict";
        function n(t, e) {
            var n = {numeric: a, alphanumeric: s, octet: u}, r = {L: h, M: p, Q: d, H: g};
            e = e || {};
            var i = e.version || -1, o = r[(e.eccLevel || "L").toUpperCase()], c = e.mode ? n[e.mode.toLowerCase()] : -1, y = "mask" in e ? e.mask : -1;
            if (c < 0)c = "string" == typeof t ? t.match(l) ? a : t.match(f) ? s : u : u; else if (c != a && c != s && c != u)throw"invalid or unsupported mode";
            if (null === (t = M(c, t)))throw"invalid data format";
            if (o < 0 || o > 3)throw"invalid ECC level";
            if (i < 0) {
                for (i = 1; i <= 40 && !(t.length <= L(i, c, o)); ++i);
                if (i > 40)throw"too large data for the Qr format"
            } else if (i < 1 || i > 40)throw"invalid Qr version! should be between 1 and 40";
            if (-1 != y && (y < 0 || y > 8))throw"invalid mask";
            return V(t, i, c, o, y)
        }

        function r(t, e) {
            var r = [], i = e.background || "#fff", o = e.foreground || "#000", a = n(t, e), s = a.length, u = Math.floor(e.fit ? e.fit / s : 5), l = s * u;
            r.push({type: "rect", x: 0, y: 0, w: l, h: l, lineWidth: 0, color: i});
            for (var c = 0; c < s; ++c)for (var f = 0; f < s; ++f)a[c][f] && r.push({
                type: "rect",
                x: u * f,
                y: u * c,
                w: u,
                h: u,
                lineWidth: 0,
                color: o
            });
            return {canvas: r, size: l}
        }

        function i(t) {
            var e = r(t.qr, t);
            return t._canvas = e.canvas, t._width = t._height = t._minWidth = t._maxWidth = t._minHeight = t._maxHeight = e.size, t
        }

        for (var o = [null, [[10, 7, 17, 13], [1, 1, 1, 1], []], [[16, 10, 28, 22], [1, 1, 1, 1], [4, 16]], [[26, 15, 22, 18], [1, 1, 2, 2], [4, 20]], [[18, 20, 16, 26], [2, 1, 4, 2], [4, 24]], [[24, 26, 22, 18], [2, 1, 4, 4], [4, 28]], [[16, 18, 28, 24], [4, 2, 4, 4], [4, 32]], [[18, 20, 26, 18], [4, 2, 5, 6], [4, 20, 36]], [[22, 24, 26, 22], [4, 2, 6, 6], [4, 22, 40]], [[22, 30, 24, 20], [5, 2, 8, 8], [4, 24, 44]], [[26, 18, 28, 24], [5, 4, 8, 8], [4, 26, 48]], [[30, 20, 24, 28], [5, 4, 11, 8], [4, 28, 52]], [[22, 24, 28, 26], [8, 4, 11, 10], [4, 30, 56]], [[22, 26, 22, 24], [9, 4, 16, 12], [4, 32, 60]], [[24, 30, 24, 20], [9, 4, 16, 16], [4, 24, 44, 64]], [[24, 22, 24, 30], [10, 6, 18, 12], [4, 24, 46, 68]], [[28, 24, 30, 24], [10, 6, 16, 17], [4, 24, 48, 72]], [[28, 28, 28, 28], [11, 6, 19, 16], [4, 28, 52, 76]], [[26, 30, 28, 28], [13, 6, 21, 18], [4, 28, 54, 80]], [[26, 28, 26, 26], [14, 7, 25, 21], [4, 28, 56, 84]], [[26, 28, 28, 30], [16, 8, 25, 20], [4, 32, 60, 88]], [[26, 28, 30, 28], [17, 8, 25, 23], [4, 26, 48, 70, 92]], [[28, 28, 24, 30], [17, 9, 34, 23], [4, 24, 48, 72, 96]], [[28, 30, 30, 30], [18, 9, 30, 25], [4, 28, 52, 76, 100]], [[28, 30, 30, 30], [20, 10, 32, 27], [4, 26, 52, 78, 104]], [[28, 26, 30, 30], [21, 12, 35, 29], [4, 30, 56, 82, 108]], [[28, 28, 30, 28], [23, 12, 37, 34], [4, 28, 56, 84, 112]], [[28, 30, 30, 30], [25, 12, 40, 34], [4, 32, 60, 88, 116]], [[28, 30, 30, 30], [26, 13, 42, 35], [4, 24, 48, 72, 96, 120]], [[28, 30, 30, 30], [28, 14, 45, 38], [4, 28, 52, 76, 100, 124]], [[28, 30, 30, 30], [29, 15, 48, 40], [4, 24, 50, 76, 102, 128]], [[28, 30, 30, 30], [31, 16, 51, 43], [4, 28, 54, 80, 106, 132]], [[28, 30, 30, 30], [33, 17, 54, 45], [4, 32, 58, 84, 110, 136]], [[28, 30, 30, 30], [35, 18, 57, 48], [4, 28, 56, 84, 112, 140]], [[28, 30, 30, 30], [37, 19, 60, 51], [4, 32, 60, 88, 116, 144]], [[28, 30, 30, 30], [38, 19, 63, 53], [4, 28, 52, 76, 100, 124, 148]], [[28, 30, 30, 30], [40, 20, 66, 56], [4, 22, 48, 74, 100, 126, 152]], [[28, 30, 30, 30], [43, 21, 70, 59], [4, 26, 52, 78, 104, 130, 156]], [[28, 30, 30, 30], [45, 22, 74, 62], [4, 30, 56, 82, 108, 134, 160]], [[28, 30, 30, 30], [47, 24, 77, 65], [4, 24, 52, 80, 108, 136, 164]], [[28, 30, 30, 30], [49, 25, 81, 68], [4, 28, 56, 84, 112, 140, 168]]], a = 1, s = 2, u = 4, l = /^\d*$/, c = /^[A-Za-z0-9 $%*+\-.\/:]*$/, f = /^[A-Z0-9 $%*+\-.\/:]*$/, h = 1, p = 0, d = 3, g = 2, y = [], v = [-1], b = 0, m = 1; b < 255; ++b)y.push(m), v[m] = b, m = 2 * m ^ (m >= 128 ? 285 : 0);
        for (var w = [[]], b = 0; b < 30; ++b) {
            for (var x = w[b], _ = [], k = 0; k <= b; ++k) {
                var S = k < b ? y[x[k]] : 0, C = y[(b + (x[k - 1] || 0)) % 255];
                _.push(v[S ^ C])
            }
            w.push(_)
        }
        for (var A = {}, b = 0; b < 45; ++b)A["0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:".charAt(b)] = b;
        var P = [function (t, e) {
            return (t + e) % 2 == 0
        }, function (t, e) {
            return t % 2 == 0
        }, function (t, e) {
            return e % 3 == 0
        }, function (t, e) {
            return (t + e) % 3 == 0
        }, function (t, e) {
            return ((t / 2 | 0) + (e / 3 | 0)) % 2 == 0
        }, function (t, e) {
            return t * e % 2 + t * e % 3 == 0
        }, function (t, e) {
            return (t * e % 2 + t * e % 3) % 2 == 0
        }, function (t, e) {
            return ((t + e) % 2 + t * e % 3) % 2 == 0
        }], E = function (t) {
            return t > 6
        }, I = function (t) {
            return 4 * t + 17
        }, T = function (t) {
            var e = o[t], n = 16 * t * t + 128 * t + 64;
            return E(t) && (n -= 36), e[2].length && (n -= 25 * e[2].length * e[2].length - 10 * e[2].length - 55), n
        }, O = function (t, e) {
            var n = -8 & T(t), r = o[t];
            return n -= 8 * r[0][e] * r[1][e]
        }, B = function (t, e) {
            switch (e) {
                case a:
                    return t < 10 ? 10 : t < 27 ? 12 : 14;
                case s:
                    return t < 10 ? 9 : t < 27 ? 11 : 13;
                case u:
                    return t < 10 ? 8 : 16;
                case 8:
                    return t < 10 ? 8 : t < 27 ? 10 : 12
            }
        }, L = function (t, e, n) {
            var r = O(t, n) - 4 - B(t, e);
            switch (e) {
                case a:
                    return 3 * (r / 10 | 0) + (r % 10 < 4 ? 0 : r % 10 < 7 ? 1 : 2);
                case s:
                    return 2 * (r / 11 | 0) + (r % 11 < 6 ? 0 : 1);
                case u:
                    return r / 8 | 0;
                case 8:
                    return r / 13 | 0
            }
        }, M = function (t, e) {
            switch (t) {
                case a:
                    return e.match(l) ? e : null;
                case s:
                    return e.match(c) ? e.toUpperCase() : null;
                case u:
                    if ("string" == typeof e) {
                        for (var n = [], r = 0; r < e.length; ++r) {
                            var i = e.charCodeAt(r);
                            i < 128 ? n.push(i) : i < 2048 ? n.push(192 | i >> 6, 128 | 63 & i) : i < 65536 ? n.push(224 | i >> 12, 128 | i >> 6 & 63, 128 | 63 & i) : n.push(240 | i >> 18, 128 | i >> 12 & 63, 128 | i >> 6 & 63, 128 | 63 & i)
                        }
                        return n
                    }
                    return e
            }
        }, R = function (t, e, n, r) {
            var i = [], o = 0, l = 8, c = n.length, f = function (t, e) {
                if (e >= l) {
                    for (i.push(o | t >> (e -= l)); e >= 8;)i.push(t >> (e -= 8) & 255);
                    o = 0, l = 8
                }
                e > 0 && (o |= (t & (1 << e) - 1) << (l -= e))
            }, h = B(t, e);
            switch (f(e, 4), f(c, h), e) {
                case a:
                    for (var p = 2; p < c; p += 3)f(parseInt(n.substring(p - 2, p + 1), 10), 10);
                    f(parseInt(n.substring(p - 2), 10), [0, 4, 7][c % 3]);
                    break;
                case s:
                    for (var p = 1; p < c; p += 2)f(45 * A[n.charAt(p - 1)] + A[n.charAt(p)], 11);
                    c % 2 == 1 && f(A[n.charAt(p - 1)], 6);
                    break;
                case u:
                    for (var p = 0; p < c; ++p)f(n[p], 8)
            }
            for (f(0, 4), l < 8 && i.push(o); i.length + 1 < r;)i.push(236, 17);
            return i.length < r && i.push(236), i
        }, F = function (t, e) {
            for (var n = t.slice(0), r = t.length, i = e.length, o = 0; o < i; ++o)n.push(0);
            for (var o = 0; o < r;) {
                var a = v[n[o++]];
                if (a >= 0)for (var s = 0; s < i; ++s)n[o + s] ^= y[(a + e[s]) % 255]
            }
            return n.slice(r)
        }, z = function (t, e, n) {
            for (var r = [], i = t.length / e | 0, o = 0, a = e - t.length % e, s = 0; s < a; ++s)r.push(o), o += i;
            for (var s = a; s < e; ++s)r.push(o), o += i + 1;
            r.push(o);
            for (var u = [], s = 0; s < e; ++s)u.push(F(t.slice(r[s], r[s + 1]), n));
            for (var l = [], c = t.length / e | 0, s = 0; s < c; ++s)for (var f = 0; f < e; ++f)l.push(t[r[f] + s]);
            for (var f = a; f < e; ++f)l.push(t[r[f + 1] - 1]);
            for (var s = 0; s < n.length; ++s)for (var f = 0; f < e; ++f)l.push(u[f][s]);
            return l
        }, D = function (t, e, n, r) {
            for (var i = t << r, o = e - 1; o >= 0; --o)i >> r + o & 1 && (i ^= n << o);
            return t << r | i
        }, N = function (t) {
            for (var e = o[t], n = I(t), r = [], i = [], a = 0; a < n; ++a)r.push([]), i.push([]);
            var s = function (t, e, n, o, a) {
                for (var s = 0; s < n; ++s)for (var u = 0; u < o; ++u)r[t + s][e + u] = a[s] >> u & 1, i[t + s][e + u] = 1
            };
            s(0, 0, 9, 9, [127, 65, 93, 93, 93, 65, 383, 0, 64]), s(n - 8, 0, 8, 9, [256, 127, 65, 93, 93, 93, 65, 127]), s(0, n - 8, 9, 8, [254, 130, 186, 186, 186, 130, 254, 0, 0]);
            for (var a = 9; a < n - 8; ++a)r[6][a] = r[a][6] = 1 & ~a, i[6][a] = i[a][6] = 1;
            for (var u = e[2], l = u.length, a = 0; a < l; ++a)for (var c = 0 === a || a === l - 1 ? 1 : 0, f = 0 === a ? l - 1 : l, h = c; h < f; ++h)s(u[a], u[h], 5, 5, [31, 17, 21, 17, 31]);
            if (E(t))for (var p = D(t, 6, 7973, 12), d = 0, a = 0; a < 6; ++a)for (var h = 0; h < 3; ++h)r[a][n - 11 + h] = r[n - 11 + h][a] = p >> d++ & 1, i[a][n - 11 + h] = i[n - 11 + h][a] = 1;
            return {matrix: r, reserved: i}
        }, U = function (t, e, n) {
            for (var r = t.length, i = 0, o = -1, a = r - 1; a >= 0; a -= 2) {
                6 == a && --a;
                for (var s = o < 0 ? r - 1 : 0, u = 0; u < r; ++u) {
                    for (var l = a; l > a - 2; --l)e[s][l] || (t[s][l] = n[i >> 3] >> (7 & ~i) & 1, ++i);
                    s += o
                }
                o = -o
            }
            return t
        }, W = function (t, e, n) {
            for (var r = P[n], i = t.length, o = 0; o < i; ++o)for (var a = 0; a < i; ++a)e[o][a] || (t[o][a] ^= r(o, a));
            return t
        }, j = function (t, e, n, r) {
            for (var i = t.length, o = 21522 ^ D(n << 3 | r, 5, 1335, 10), a = 0; a < 15; ++a) {
                var s = [0, 1, 2, 3, 4, 5, 7, 8, i - 7, i - 6, i - 5, i - 4, i - 3, i - 2, i - 1][a], u = [i - 1, i - 2, i - 3, i - 4, i - 5, i - 6, i - 7, i - 8, 7, 5, 4, 3, 2, 1, 0][a];
                t[s][8] = t[8][u] = o >> a & 1
            }
            return t
        }, G = function (t) {
            for (var e = function (t) {
                for (var e = 0, n = 0; n < t.length; ++n)t[n] >= 5 && (e += t[n] - 5 + 3);
                for (var n = 5; n < t.length; n += 2) {
                    var r = t[n];
                    t[n - 1] == r && t[n - 2] == 3 * r && t[n - 3] == r && t[n - 4] == r && (t[n - 5] >= 4 * r || t[n + 1] >= 4 * r) && (e += 40)
                }
                return e
            }, n = t.length, r = 0, i = 0, o = 0; o < n; ++o) {
                var a, s = t[o];
                a = [0];
                for (var u = 0; u < n;) {
                    var l;
                    for (l = 0; u < n && s[u]; ++l)++u;
                    for (a.push(l), l = 0; u < n && !s[u]; ++l)++u;
                    a.push(l)
                }
                r += e(a), a = [0];
                for (var u = 0; u < n;) {
                    var l;
                    for (l = 0; u < n && t[u][o]; ++l)++u;
                    for (a.push(l), l = 0; u < n && !t[u][o]; ++l)++u;
                    a.push(l)
                }
                r += e(a);
                var c = t[o + 1] || [];
                i += s[0];
                for (var u = 1; u < n; ++u) {
                    var f = s[u];
                    i += f, s[u - 1] == f && c[u] === f && c[u - 1] === f && (r += 3)
                }
            }
            return r += 10 * (Math.abs(i / n / n - .5) / .05 | 0)
        }, V = function (t, e, n, r, i) {
            var a = o[e], s = R(e, n, t, O(e, r) >> 3);
            s = z(s, a[1][r], w[a[0][r]]);
            var u = N(e), l = u.matrix, c = u.reserved;
            if (U(l, c, s), i < 0) {
                W(l, c, 0), j(l, 0, r, 0);
                var f = 0, h = G(l);
                for (W(l, c, 0), i = 1; i < 8; ++i) {
                    W(l, c, i), j(l, 0, r, i);
                    var p = G(l);
                    h > p && (h = p, f = i), W(l, c, i)
                }
                i = f
            }
            return W(l, c, i), j(l, 0, r, i), l
        };
        t.exports = {measure: i}
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            this.pages = [], this.pageMargins = e, this.x = e.left, this.availableWidth = t.width - e.left - e.right, this.availableHeight = 0, this.page = -1, this.snapshots = [], this.endingCell = null, this.tracker = new a, this.addPage(t)
        }

        function i(t, e) {
            return void 0 === t ? e : ("string" == typeof t || t instanceof String) && "landscape" === t.toLowerCase() ? "landscape" : "portrait"
        }

        function o(t, e) {
            var n;
            return n = t.page > e.page ? t : e.page > t.page ? e : t.y > e.y ? t : e, {
                page: n.page,
                x: n.x,
                y: n.y,
                availableHeight: n.availableHeight,
                availableWidth: n.availableWidth
            }
        }

        var a = n(11);
        r.prototype.beginColumnGroup = function () {
            this.snapshots.push({
                x: this.x,
                y: this.y,
                availableHeight: this.availableHeight,
                availableWidth: this.availableWidth,
                page: this.page,
                bottomMost: {
                    x: this.x,
                    y: this.y,
                    availableHeight: this.availableHeight,
                    availableWidth: this.availableWidth,
                    page: this.page
                },
                endingCell: this.endingCell,
                lastColumnWidth: this.lastColumnWidth
            }), this.lastColumnWidth = 0
        }, r.prototype.beginColumn = function (t, e, n) {
            var r = this.snapshots[this.snapshots.length - 1];
            this.calculateBottomMost(r), this.endingCell = n, this.page = r.page, this.x = this.x + this.lastColumnWidth + (e || 0), this.y = r.y, this.availableWidth = t, this.availableHeight = r.availableHeight, this.lastColumnWidth = t
        }, r.prototype.calculateBottomMost = function (t) {
            this.endingCell ? (this.saveContextInEndingCell(this.endingCell), this.endingCell = null) : t.bottomMost = o(this, t.bottomMost)
        }, r.prototype.markEnding = function (t) {
            this.page = t._columnEndingContext.page, this.x = t._columnEndingContext.x, this.y = t._columnEndingContext.y, this.availableWidth = t._columnEndingContext.availableWidth, this.availableHeight = t._columnEndingContext.availableHeight, this.lastColumnWidth = t._columnEndingContext.lastColumnWidth
        }, r.prototype.saveContextInEndingCell = function (t) {
            t._columnEndingContext = {
                page: this.page,
                x: this.x,
                y: this.y,
                availableHeight: this.availableHeight,
                availableWidth: this.availableWidth,
                lastColumnWidth: this.lastColumnWidth
            }
        }, r.prototype.completeColumnGroup = function () {
            var t = this.snapshots.pop();
            this.calculateBottomMost(t), this.endingCell = null, this.x = t.x, this.y = t.bottomMost.y, this.page = t.bottomMost.page, this.availableWidth = t.availableWidth, this.availableHeight = t.bottomMost.availableHeight, this.lastColumnWidth = t.lastColumnWidth
        }, r.prototype.addMargin = function (t, e) {
            this.x += t, this.availableWidth -= t + (e || 0)
        }, r.prototype.moveDown = function (t) {
            return this.y += t, this.availableHeight -= t, this.availableHeight > 0
        }, r.prototype.initializePage = function () {
            this.y = this.pageMargins.top, this.availableHeight = this.getCurrentPage().pageSize.height - this.pageMargins.top - this.pageMargins.bottom, this.pageSnapshot().availableWidth = this.getCurrentPage().pageSize.width - this.pageMargins.left - this.pageMargins.right
        }, r.prototype.pageSnapshot = function () {
            return this.snapshots[0] ? this.snapshots[0] : this
        }, r.prototype.moveTo = function (t, e) {
            void 0 !== t && null !== t && (this.x = t, this.availableWidth = this.getCurrentPage().pageSize.width - this.x - this.pageMargins.right), void 0 !== e && null !== e && (this.y = e, this.availableHeight = this.getCurrentPage().pageSize.height - this.y - this.pageMargins.bottom)
        }, r.prototype.beginDetachedBlock = function () {
            this.snapshots.push({
                x: this.x,
                y: this.y,
                availableHeight: this.availableHeight,
                availableWidth: this.availableWidth,
                page: this.page,
                endingCell: this.endingCell,
                lastColumnWidth: this.lastColumnWidth
            })
        }, r.prototype.endDetachedBlock = function () {
            var t = this.snapshots.pop();
            this.x = t.x, this.y = t.y, this.availableWidth = t.availableWidth, this.availableHeight = t.availableHeight, this.page = t.page, this.endingCell = t.endingCell, this.lastColumnWidth = t.lastColumnWidth
        };
        var s = function (t, e) {
            return e = i(e, t.pageSize.orientation), e !== t.pageSize.orientation ? {
                orientation: e,
                width: t.pageSize.height,
                height: t.pageSize.width
            } : {orientation: t.pageSize.orientation, width: t.pageSize.width, height: t.pageSize.height}
        };
        r.prototype.moveToNextPage = function (t) {
            var e = this.page + 1, n = this.page, r = this.y, i = e >= this.pages.length;
            if (i) {
                var o = this.availableWidth, a = this.getCurrentPage().pageSize.orientation, u = s(this.getCurrentPage(), t);
                this.addPage(u), a === u.orientation && (this.availableWidth = o)
            } else this.page = e, this.initializePage();
            return {newPageCreated: i, prevPage: n, prevY: r, y: this.y}
        }, r.prototype.addPage = function (t) {
            var e = {items: [], pageSize: t};
            return this.pages.push(e), this.page = this.pages.length - 1, this.initializePage(), this.tracker.emit("pageAdded"), e
        }, r.prototype.getCurrentPage = function () {
            return this.page < 0 || this.page >= this.pages.length ? null : this.pages[this.page]
        }, r.prototype.getCurrentPosition = function () {
            var t = this.getCurrentPage().pageSize, e = t.height - this.pageMargins.top - this.pageMargins.bottom, n = t.width - this.pageMargins.left - this.pageMargins.right;
            return {
                pageNumber: this.page + 1,
                pageOrientation: t.orientation,
                pageInnerHeight: e,
                pageInnerWidth: n,
                left: this.x,
                top: this.y,
                verticalRatio: (this.y - this.pageMargins.top) / e,
                horizontalRatio: (this.x - this.pageMargins.left) / n
            }
        }, t.exports = r
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            this.transactionLevel = 0, this.repeatables = [], this.tracker = e, this.writer = new o(t, e)
        }

        function i(t, e) {
            var n = e(t);
            return n || (t.moveToNextPage(), n = e(t)), n
        }

        var o = n(27);
        r.prototype.addLine = function (t, e, n) {
            return i(this, function (r) {
                return r.writer.addLine(t, e, n)
            })
        }, r.prototype.addImage = function (t, e) {
            return i(this, function (n) {
                return n.writer.addImage(t, e)
            })
        }, r.prototype.addQr = function (t, e) {
            return i(this, function (n) {
                return n.writer.addQr(t, e)
            })
        }, r.prototype.addVector = function (t, e, n, r) {
            return this.writer.addVector(t, e, n, r)
        }, r.prototype.addFragment = function (t, e, n, r) {
            this.writer.addFragment(t, e, n, r) || (this.moveToNextPage(), this.writer.addFragment(t, e, n, r))
        }, r.prototype.moveToNextPage = function (t) {
            var e = this.writer.context.moveToNextPage(t);
            e.newPageCreated ? this.repeatables.forEach(function (t) {
                this.writer.addFragment(t, !0)
            }, this) : this.repeatables.forEach(function (t) {
                this.writer.context.moveDown(t.height)
            }, this), this.writer.tracker.emit("pageChanged", {prevPage: e.prevPage, prevY: e.prevY, y: e.y})
        }, r.prototype.beginUnbreakableBlock = function (t, e) {
            0 == this.transactionLevel++ && (this.originalX = this.writer.context.x, this.writer.pushContext(t, e))
        }, r.prototype.commitUnbreakableBlock = function (t, e) {
            if (0 == --this.transactionLevel) {
                var n = this.writer.context;
                this.writer.popContext();
                var r = n.pages.length;
                if (r > 0) {
                    var i = n.pages[0];
                    if (i.xOffset = t, i.yOffset = e, r > 1)if (void 0 !== t || void 0 !== e)i.height = n.getCurrentPage().pageSize.height - n.pageMargins.top - n.pageMargins.bottom; else {
                        i.height = this.writer.context.getCurrentPage().pageSize.height - this.writer.context.pageMargins.top - this.writer.context.pageMargins.bottom;
                        for (var o = 0, a = this.repeatables.length; o < a; o++)i.height -= this.repeatables[o].height
                    } else i.height = n.y;
                    void 0 !== t || void 0 !== e ? this.writer.addFragment(i, !0, !0, !0) : this.addFragment(i)
                }
            }
        }, r.prototype.currentBlockToRepeatable = function () {
            var t = this.writer.context, e = {items: []};
            return t.pages[0].items.forEach(function (t) {
                e.items.push(t)
            }), e.xOffset = this.originalX, e.height = t.y, e
        }, r.prototype.pushToRepeatables = function (t) {
            this.repeatables.push(t)
        }, r.prototype.popFromRepeatables = function () {
            this.repeatables.pop()
        }, r.prototype.context = function () {
            return this.writer.context
        }, t.exports = r
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            this.context = t, this.contextStack = [], this.tracker = e
        }

        function i(t, e, n) {
            null === n || void 0 === n || n < 0 || n > t.items.length ? t.items.push(e) : t.items.splice(n, 0, e)
        }

        function o(t) {
            var e = new a(t.maxWidth);
            for (var n in t)t.hasOwnProperty(n) && (e[n] = t[n]);
            return e
        }

        var a = n(28), s = n(13).pack, u = n(13).offsetVector, l = n(25);
        r.prototype.addLine = function (t, e, n) {
            var r = t.getHeight(), o = this.context, a = o.getCurrentPage(), s = this.getCurrentPositionOnPage();
            return !(o.availableHeight < r || !a) && (t.x = o.x + (t.x || 0), t.y = o.y + (t.y || 0), this.alignLine(t), i(a, {
                    type: "line",
                    item: t
                }, n), this.tracker.emit("lineAdded", t), e || o.moveDown(r), s)
        }, r.prototype.alignLine = function (t) {
            var e = this.context.availableWidth, n = t.getWidth(), r = t.inlines && t.inlines.length > 0 && t.inlines[0].alignment, i = 0;
            switch (r) {
                case"right":
                    i = e - n;
                    break;
                case"center":
                    i = (e - n) / 2
            }
            if (i && (t.x = (t.x || 0) + i), "justify" === r && !t.newLineForced && !t.lastLineInParagraph && t.inlines.length > 1)for (var o = (e - n) / (t.inlines.length - 1), a = 1, s = t.inlines.length; a < s; a++)i = a * o, t.inlines[a].x += i, t.inlines[a].justifyShift = o
        }, r.prototype.addImage = function (t, e) {
            var n = this.context, r = n.getCurrentPage(), o = this.getCurrentPositionOnPage();
            return !(!r || n.availableHeight < t._height && r.items.length > 0) && (void 0 === t._x && (t._x = t.x || 0), t.x = n.x + t._x, t.y = n.y, this.alignImage(t), i(r, {
                    type: "image",
                    item: t
                }, e), n.moveDown(t._height), o)
        }, r.prototype.addQr = function (t, e) {
            var n = this.context, r = n.getCurrentPage(), i = this.getCurrentPositionOnPage();
            if (n.availableHeight < t._height || !r)return !1;
            void 0 === t._x && (t._x = t.x || 0), t.x = n.x + t._x, t.y = n.y, this.alignImage(t);
            for (var o = 0, a = t._canvas.length; o < a; o++) {
                var s = t._canvas[o];
                s.x += t.x, s.y += t.y, this.addVector(s, !0, !0, e)
            }
            return n.moveDown(t._height), i
        }, r.prototype.alignImage = function (t) {
            var e = this.context.availableWidth, n = t._minWidth, r = 0;
            switch (t._alignment) {
                case"right":
                    r = e - n;
                    break;
                case"center":
                    r = (e - n) / 2
            }
            r && (t.x = (t.x || 0) + r)
        }, r.prototype.addVector = function (t, e, n, r) {
            var o = this.context, a = o.getCurrentPage(), s = this.getCurrentPositionOnPage();
            if (a)return u(t, e ? 0 : o.x, n ? 0 : o.y), i(a, {type: "vector", item: t}, r), s
        }, r.prototype.addFragment = function (t, e, n, r) {
            var i = this.context, a = i.getCurrentPage();
            return !(!e && t.height > i.availableHeight) && (t.items.forEach(function (r) {
                    switch (r.type) {
                        case"line":
                            var l = o(r.item);
                            l.x = (l.x || 0) + (e ? t.xOffset || 0 : i.x), l.y = (l.y || 0) + (n ? t.yOffset || 0 : i.y), a.items.push({
                                type: "line",
                                item: l
                            });
                            break;
                        case"vector":
                            var c = s(r.item);
                            u(c, e ? t.xOffset || 0 : i.x, n ? t.yOffset || 0 : i.y), a.items.push({
                                type: "vector",
                                item: c
                            });
                            break;
                        case"image":
                            var f = s(r.item);
                            f.x = (f.x || 0) + (e ? t.xOffset || 0 : i.x), f.y = (f.y || 0) + (n ? t.yOffset || 0 : i.y), a.items.push({
                                type: "image",
                                item: f
                            })
                    }
                }), r || i.moveDown(t.height), !0)
        }, r.prototype.pushContext = function (t, e) {
            void 0 === t && (e = this.context.getCurrentPage().height - this.context.pageMargins.top - this.context.pageMargins.bottom, t = this.context.availableWidth), ("number" == typeof t || t instanceof Number) && (t = new l({
                width: t,
                height: e
            }, {left: 0, right: 0, top: 0, bottom: 0})), this.contextStack.push(this.context), this.context = t
        }, r.prototype.popContext = function () {
            this.context = this.contextStack.pop()
        }, r.prototype.getCurrentPositionOnPage = function () {
            return (this.contextStack[0] || this.context).getCurrentPosition()
        }, t.exports = r
    }, function (t, e) {
        "use strict";
        function n(t) {
            this.maxWidth = t, this.leadingCut = 0, this.trailingCut = 0, this.inlineWidths = 0, this.inlines = []
        }

        n.prototype.getAscenderHeight = function () {
            var t = 0;
            return this.inlines.forEach(function (e) {
                t = Math.max(t, e.font.ascender / 1e3 * e.fontSize)
            }), t
        }, n.prototype.hasEnoughSpaceForInline = function (t) {
            return 0 === this.inlines.length || !this.newLineForced && this.inlineWidths + t.width - this.leadingCut - (t.trailingCut || 0) <= this.maxWidth
        }, n.prototype.addInline = function (t) {
            0 === this.inlines.length && (this.leadingCut = t.leadingCut || 0), this.trailingCut = t.trailingCut || 0, t.x = this.inlineWidths - this.leadingCut, this.inlines.push(t), this.inlineWidths += t.width, t.lineEnd && (this.newLineForced = !0)
        }, n.prototype.getWidth = function () {
            return this.inlineWidths - this.leadingCut - this.trailingCut
        }, n.prototype.getHeight = function () {
            var t = 0;
            return this.inlines.forEach(function (e) {
                t = Math.max(t, e.height || 0)
            }), t
        }, t.exports = n
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            this.tableNode = t
        }

        var i = n(23);
        r.prototype.beginTable = function (t) {
            var e, n, r = this;
            e = this.tableNode, this.offsets = e._offsets, this.layout = e._layout, n = t.context().availableWidth - this.offsets.total, i.buildColumnWidths(e.table.widths, n), this.tableWidth = e._offsets.total + function () {
                    var t = 0;
                    return e.table.widths.forEach(function (e) {
                        t += e._calcWidth
                    }), t
                }(), this.rowSpanData = function () {
                var t = [], e = 0, n = 0;
                t.push({left: 0, rowSpan: 0});
                for (var i = 0, o = r.tableNode.table.body[0].length; i < o; i++) {
                    n = r.layout.paddingLeft(i, r.tableNode) + r.layout.paddingRight(i, r.tableNode) + r.layout.vLineWidth(i, r.tableNode) + r.tableNode.table.widths[i]._calcWidth, t[t.length - 1].width = n, e += n, t.push({
                        left: e,
                        rowSpan: 0,
                        width: 0
                    })
                }
                return t
            }(), this.cleanUpRepeatables = !1, this.headerRows = e.table.headerRows || 0, this.rowsWithoutPageBreak = this.headerRows + (e.table.keepWithHeaderRows || 0), this.dontBreakRows = e.table.dontBreakRows || !1, this.rowsWithoutPageBreak && t.beginUnbreakableBlock(), function (t) {
                function e(e, n, r, i) {
                    var o = t[e][n];
                    o.border = o.border || {}, o.border[r] = i
                }

                for (var n = 0; n < t.length; n++)for (var r = t[n], i = 0; i < r.length; i++) {
                    var o = r[i];
                    if (o.border) {
                        for (var a = o.rowSpan || 1, s = o.colSpan || 1, u = 0; u < a; u++)void 0 !== o.border[0] && u > 0 && e(n + u, i, 0, o.border[0]), void 0 !== o.border[2] && e(n + u, i + s - 1, 2, o.border[2]);
                        for (var l = 0; l < s; l++)void 0 !== o.border[1] && l > 0 && e(n, i + l, 1, o.border[1]), void 0 !== o.border[3] && e(n + a - 1, i + l, 3, o.border[3])
                    }
                }
            }(this.tableNode.table.body), this.drawHorizontalLine(0, t)
        }, r.prototype.onRowBreak = function (t, e) {
            var n = this;
            return function () {
                var t = n.rowPaddingTop + (n.headerRows ? 0 : n.topLineWidth);
                e.context().availableHeight -= n.reservedAtBottom, e.context().moveDown(t)
            }
        }, r.prototype.beginRow = function (t, e) {
            this.topLineWidth = this.layout.hLineWidth(t, this.tableNode), this.rowPaddingTop = this.layout.paddingTop(t, this.tableNode), this.bottomLineWidth = this.layout.hLineWidth(t + 1, this.tableNode), this.rowPaddingBottom = this.layout.paddingBottom(t, this.tableNode), this.rowCallback = this.onRowBreak(t, e), e.tracker.startTracking("pageChanged", this.rowCallback), this.dontBreakRows && e.beginUnbreakableBlock(), this.rowTopY = e.context().y, this.reservedAtBottom = this.bottomLineWidth + this.rowPaddingBottom, e.context().availableHeight -= this.reservedAtBottom, e.context().moveDown(this.rowPaddingTop)
        }, r.prototype.drawHorizontalLine = function (t, e, n) {
            var r = this.layout.hLineWidth(t, this.tableNode);
            if (r) {
                for (var i = r / 2, o = null, a = this.tableNode.table.body, s = 0, u = this.rowSpanData.length; s < u; s++) {
                    var l = this.rowSpanData[s], c = !l.rowSpan;
                    if (c && s < u - 1) {
                        var f = !1, h = !1;
                        if (t < a.length) {
                            var p = a[t][s];
                            f = p.border ? p.border[1] : this.layout.defaultBorder
                        }
                        if (t > 0) {
                            var d = a[t - 1][s];
                            h = d.border ? d.border[3] : this.layout.defaultBorder
                        }
                        c = f || h
                    }
                    !o && c && (o = {left: l.left, width: 0}), c && (o.width += l.width || 0);
                    var g = (n || 0) + i;
                    c && s !== u - 1 || o && o.width && (e.addVector({
                        type: "line",
                        x1: o.left,
                        x2: o.left + o.width,
                        y1: g,
                        y2: g,
                        lineWidth: r,
                        lineColor: "function" == typeof this.layout.hLineColor ? this.layout.hLineColor(t, this.tableNode) : this.layout.hLineColor
                    }, !1, n), o = null)
                }
                e.context().moveDown(r)
            }
        }, r.prototype.drawVerticalLine = function (t, e, n, r, i) {
            var o = this.layout.vLineWidth(r, this.tableNode);
            0 !== o && i.addVector({
                type: "line",
                x1: t + o / 2,
                x2: t + o / 2,
                y1: e,
                y2: n,
                lineWidth: o,
                lineColor: "function" == typeof this.layout.vLineColor ? this.layout.vLineColor(r, this.tableNode) : this.layout.vLineColor
            }, !1, !0)
        }, r.prototype.endTable = function (t) {
            this.cleanUpRepeatables && (t.popFromRepeatables(), this.headerRepeatableHeight = null)
        }, r.prototype.endRow = function (t, e, n) {
            var r, i, o = this;
            e.tracker.stopTracking("pageChanged", this.rowCallback), e.context().moveDown(this.layout.paddingBottom(t, this.tableNode)), e.context().availableHeight += this.reservedAtBottom;
            var a = e.context().page, s = e.context().y, u = function () {
                for (var e = [], n = 0, r = 0, i = o.tableNode.table.body[t].length; r < i; r++) {
                    if (!n) {
                        e.push({x: o.rowSpanData[r].left, index: r});
                        var a = o.tableNode.table.body[t][r];
                        n = a._colSpan || a.colSpan || 0
                    }
                    n > 0 && n--
                }
                return e.push({x: o.rowSpanData[o.rowSpanData.length - 1].left, index: o.rowSpanData.length - 1}), e
            }(), l = [], c = n && n.length > 0, f = this.tableNode.table.body;
            if (l.push({y0: this.rowTopY, page: c ? n[0].prevPage : a}), c)for (i = 0, r = n.length; i < r; i++) {
                var h = n[i];
                l[l.length - 1].y1 = h.prevY, l.push({
                    y0: h.y,
                    page: h.prevPage + 1
                }), this.headerRepeatableHeight && (l[l.length - 1].y0 += this.headerRepeatableHeight)
            }
            l[l.length - 1].y1 = s;
            for (var p = l[0].y1 - l[0].y0 === this.rowPaddingTop, d = p ? 1 : 0, g = l.length; d < g; d++) {
                var y = d < l.length - 1, v = d > 0 && !this.headerRows, b = v ? 0 : this.topLineWidth, m = l[d].y0, w = l[d].y1;
                for (y && (w += this.rowPaddingBottom), e.context().page != l[d].page && (e.context().page = l[d].page, this.reservedAtBottom = 0), i = 0, r = u.length; i < r; i++) {
                    var x = !1, _ = !1, k = u[i].index;
                    if (k < f[t].length) {
                        var S = f[t][k];
                        x = S.border ? S.border[0] : this.layout.defaultBorder
                    }
                    if (k > 0) {
                        var S = f[t][k - 1];
                        _ = S.border ? S.border[2] : this.layout.defaultBorder
                    }
                    if ((x || _) && this.drawVerticalLine(u[i].x, m - b, w + this.bottomLineWidth, u[i].index, e), i < r - 1) {
                        var C = f[t][k].fillColor;
                        if (C || (C = "function" == typeof this.layout.fillColor ? this.layout.fillColor(t, this.tableNode) : this.layout.fillColor), C) {
                            var A = x || _ ? this.layout.vLineWidth(k, this.tableNode) : 0, P = u[i].x + A, E = this.dontBreakRows ? m : m - b;
                            e.addVector({
                                type: "rect",
                                x: P,
                                y: E,
                                w: u[i + 1].x - P,
                                h: w + this.bottomLineWidth - E,
                                lineWidth: 0,
                                color: C
                            }, !1, !0, 0)
                        }
                    }
                }
                y && !1 !== this.layout.hLineWhenBroken && this.drawHorizontalLine(t + 1, e, w), v && !1 !== this.layout.hLineWhenBroken && this.drawHorizontalLine(t, e, m)
            }
            e.context().page = a, e.context().y = s;
            var I = this.tableNode.table.body[t];
            for (i = 0, r = I.length; i < r; i++) {
                if (I[i].rowSpan && (this.rowSpanData[i].rowSpan = I[i].rowSpan, I[i].colSpan && I[i].colSpan > 1))for (var T = 1; T < I[i].rowSpan; T++)this.tableNode.table.body[t + T][i]._colSpan = I[i].colSpan;
                this.rowSpanData[i].rowSpan > 0 && this.rowSpanData[i].rowSpan--
            }
            this.drawHorizontalLine(t + 1, e), this.headerRows && t === this.headerRows - 1 && (this.headerRepeatable = e.currentBlockToRepeatable()), this.dontBreakRows && e.tracker.auto("pageChanged", function () {
                o.headerRows || !1 === o.layout.hLineWhenBroken || o.drawHorizontalLine(t, e)
            }, function () {
                e.commitUnbreakableBlock()
            }), !this.headerRepeatable || t !== this.rowsWithoutPageBreak - 1 && t !== this.tableNode.table.body.length - 1 || (this.headerRepeatableHeight = this.headerRepeatable.height, e.commitUnbreakableBlock(), e.pushToRepeatables(this.headerRepeatable), this.cleanUpRepeatables = !0, this.headerRepeatable = null)
        }, t.exports = r
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i, o, a, s, u, l = function (t, e) {
                    function n() {
                        this.constructor = t
                    }

                    for (var r in e)c.call(e, r) && (t[r] = e[r]);
                    return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                }, c = {}.hasOwnProperty;
                u = n(31), s = n(56), i = n(57), a = n(58), o = n(76), r = function (t) {
                    function r(t) {
                        var e, n, i, o;
                        if (this.options = null != t ? t : {}, r.__super__.constructor.apply(this, arguments), this.version = 1.3, this.compress = null == (n = this.options.compress) || n, this._pageBuffer = [], this._pageBufferStart = 0, this._offsets = [], this._waiting = 0, this._ended = !1, this._offset = 0, this._root = this.ref({
                                Type: "Catalog",
                                Pages: this.ref({Type: "Pages", Count: 0, Kids: []})
                            }), this.page = null, this.initColor(), this.initVector(), this.initFonts(), this.initText(), this.initImages(), this.info = {
                                Producer: "PDFKit",
                                Creator: "PDFKit",
                                CreationDate: new Date
                            }, this.options.info) {
                            i = this.options.info;
                            for (e in i)o = i[e], this.info[e] = o
                        }
                        this._write("%PDF-" + this.version), this._write("%ÿÿÿÿ"), !1 !== this.options.autoFirstPage && this.addPage()
                    }

                    var u;
                    return l(r, t), u = function (t) {
                        var e, n, i;
                        i = [];
                        for (n in t)e = t[n], i.push(r.prototype[n] = e);
                        return i
                    }, u(n(77)), u(n(79)), u(n(81)), u(n(288)), u(n(290)), u(n(296)), r.prototype.addPage = function (t) {
                        var e;
                        return null == t && (t = this.options), this.options.bufferPages || this.flushPages(), this.page = new o(this, t), this._pageBuffer.push(this.page), e = this._root.data.Pages.data, e.Kids.push(this.page.dictionary), e.Count++, this.x = this.page.margins.left, this.y = this.page.margins.top, this._ctm = [1, 0, 0, 1, 0, 0], this.transform(1, 0, 0, -1, 0, this.page.height), this.emit("pageAdded"), this
                    }, r.prototype.bufferedPageRange = function () {
                        return {start: this._pageBufferStart, count: this._pageBuffer.length}
                    }, r.prototype.switchToPage = function (t) {
                        var e;
                        if (!(e = this._pageBuffer[t - this._pageBufferStart]))throw new Error("switchToPage(" + t + ") out of bounds, current buffer covers pages " + this._pageBufferStart + " to " + (this._pageBufferStart + this._pageBuffer.length - 1));
                        return this.page = e
                    }, r.prototype.flushPages = function () {
                        var t, e, n, r;
                        for (r = this._pageBuffer, this._pageBuffer = [], this._pageBufferStart += r.length, t = 0, e = r.length; t < e; t++)n = r[t], n.end()
                    }, r.prototype.ref = function (t) {
                        var e;
                        return e = new a(this, this._offsets.length + 1, t), this._offsets.push(null), this._waiting++, e
                    }, r.prototype._read = function () {
                    }, r.prototype._write = function (t) {
                        return e.isBuffer(t) || (t = new e(t + "\n", "binary")), this.push(t), this._offset += t.length
                    }, r.prototype.addContent = function (t) {
                        return this.page.write(t), this
                    }, r.prototype._refEnd = function (t) {
                        if (this._offsets[t.id - 1] = t.offset, 0 == --this._waiting && this._ended)return this._finalize(), this._ended = !1
                    }, r.prototype.write = function (t, e) {
                        return new Error("PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream."), this.pipe(s.createWriteStream(t)), this.end(), this.once("end", e)
                    }, r.prototype.output = function (t) {
                        throw new Error("PDFDocument#output is deprecated, and has been removed from PDFKit. Please pipe the document into a Node stream.")
                    }, r.prototype.end = function () {
                        var t, e, n, r, i, o;
                        this.flushPages(), this._info = this.ref(), r = this.info;
                        for (e in r)o = r[e], "string" == typeof o && (o = new String(o)), this._info.data[e] = o;
                        this._info.end(), i = this._fontFamilies;
                        for (n in i)t = i[n], t.finalize();
                        return this._root.end(), this._root.data.Pages.end(), 0 === this._waiting ? this._finalize() : this._ended = !0
                    }, r.prototype._finalize = function (t) {
                        var e, n, r, o, a;
                        for (a = this._offset, this._write("xref"), this._write("0 " + (this._offsets.length + 1)), this._write("0000000000 65535 f "), o = this._offsets, e = 0, n = o.length; e < n; e++)r = o[e], r = ("0000000000" + r).slice(-10), this._write(r + " 00000 n ");
                        return this._write("trailer"), this._write(i.convert({
                            Size: this._offsets.length + 1,
                            Root: this._root,
                            Info: this._info
                        })), this._write("startxref"), this._write("" + a), this._write("%%EOF"), this.push(null)
                    }, r.prototype.toString = function () {
                        return "[object PDFDocument]"
                    }, r
                }(u.Readable), t.exports = r
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        function r() {
            i.call(this)
        }

        t.exports = r;
        var i = n(32).EventEmitter;
        n(33)(r, i), r.Readable = n(34), r.Writable = n(52), r.Duplex = n(53), r.Transform = n(54), r.PassThrough = n(55), r.Stream = r, r.prototype.pipe = function (t, e) {
            function n(e) {
                t.writable && !1 === t.write(e) && l.pause && l.pause()
            }

            function r() {
                l.readable && l.resume && l.resume()
            }

            function o() {
                c || (c = !0, t.end())
            }

            function a() {
                c || (c = !0, "function" == typeof t.destroy && t.destroy())
            }

            function s(t) {
                if (u(), 0 === i.listenerCount(this, "error"))throw t
            }

            function u() {
                l.removeListener("data", n), t.removeListener("drain", r), l.removeListener("end", o), l.removeListener("close", a), l.removeListener("error", s), t.removeListener("error", s), l.removeListener("end", u), l.removeListener("close", u), t.removeListener("close", u)
            }

            var l = this;
            l.on("data", n), t.on("drain", r), t._isStdio || e && !1 === e.end || (l.on("end", o), l.on("close", a));
            var c = !1;
            return l.on("error", s), t.on("error", s), l.on("end", u), l.on("close", u), t.on("close", u), t.emit("pipe", l), t
        }
    }, function (t, e) {
        function n() {
            this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0
        }

        function r(t) {
            return "function" == typeof t
        }

        function i(t) {
            return "number" == typeof t
        }

        function o(t) {
            return "object" == typeof t && null !== t
        }

        function a(t) {
            return void 0 === t
        }

        t.exports = n, n.EventEmitter = n, n.prototype._events = void 0, n.prototype._maxListeners = void 0, n.defaultMaxListeners = 10, n.prototype.setMaxListeners = function (t) {
            if (!i(t) || t < 0 || isNaN(t))throw TypeError("n must be a positive number");
            return this._maxListeners = t, this
        }, n.prototype.emit = function (t) {
            var e, n, i, s, u, l;
            if (this._events || (this._events = {}), "error" === t && (!this._events.error || o(this._events.error) && !this._events.error.length)) {
                if ((e = arguments[1]) instanceof Error)throw e;
                var c = new Error('Uncaught, unspecified "error" event. (' + e + ")");
                throw c.context = e, c
            }
            if (n = this._events[t], a(n))return !1;
            if (r(n))switch (arguments.length) {
                case 1:
                    n.call(this);
                    break;
                case 2:
                    n.call(this, arguments[1]);
                    break;
                case 3:
                    n.call(this, arguments[1], arguments[2]);
                    break;
                default:
                    s = Array.prototype.slice.call(arguments, 1), n.apply(this, s)
            } else if (o(n))for (s = Array.prototype.slice.call(arguments, 1), l = n.slice(), i = l.length, u = 0; u < i; u++)l[u].apply(this, s);
            return !0
        }, n.prototype.addListener = function (t, e) {
            var i;
            if (!r(e))throw TypeError("listener must be a function");
            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", t, r(e.listener) ? e.listener : e), this._events[t] ? o(this._events[t]) ? this._events[t].push(e) : this._events[t] = [this._events[t], e] : this._events[t] = e, o(this._events[t]) && !this._events[t].warned && (i = a(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners) && i > 0 && this._events[t].length > i && (this._events[t].warned = !0, console.trace), this
        }, n.prototype.on = n.prototype.addListener, n.prototype.once = function (t, e) {
            function n() {
                this.removeListener(t, n), i || (i = !0, e.apply(this, arguments))
            }

            if (!r(e))throw TypeError("listener must be a function");
            var i = !1;
            return n.listener = e, this.on(t, n), this
        }, n.prototype.removeListener = function (t, e) {
            var n, i, a, s;
            if (!r(e))throw TypeError("listener must be a function");
            if (!this._events || !this._events[t])return this;
            if (n = this._events[t], a = n.length, i = -1, n === e || r(n.listener) && n.listener === e)delete this._events[t], this._events.removeListener && this.emit("removeListener", t, e); else if (o(n)) {
                for (s = a; s-- > 0;)if (n[s] === e || n[s].listener && n[s].listener === e) {
                    i = s;
                    break
                }
                if (i < 0)return this;
                1 === n.length ? (n.length = 0, delete this._events[t]) : n.splice(i, 1), this._events.removeListener && this.emit("removeListener", t, e)
            }
            return this
        }, n.prototype.removeAllListeners = function (t) {
            var e, n;
            if (!this._events)return this;
            if (!this._events.removeListener)return 0 === arguments.length ? this._events = {} : this._events[t] && delete this._events[t], this;
            if (0 === arguments.length) {
                for (e in this._events)"removeListener" !== e && this.removeAllListeners(e);
                return this.removeAllListeners("removeListener"), this._events = {}, this
            }
            if (n = this._events[t], r(n))this.removeListener(t, n); else if (n)for (; n.length;)this.removeListener(t, n[n.length - 1]);
            return delete this._events[t], this
        }, n.prototype.listeners = function (t) {
            return this._events && this._events[t] ? r(this._events[t]) ? [this._events[t]] : this._events[t].slice() : []
        }, n.prototype.listenerCount = function (t) {
            if (this._events) {
                var e = this._events[t];
                if (r(e))return 1;
                if (e)return e.length
            }
            return 0
        }, n.listenerCount = function (t, e) {
            return t.listenerCount(e)
        }
    }, function (t, e) {
        "function" == typeof Object.create ? t.exports = function (t, e) {
            t.super_ = e, t.prototype = Object.create(e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            })
        } : t.exports = function (t, e) {
            t.super_ = e;
            var n = function () {
            };
            n.prototype = e.prototype, t.prototype = new n, t.prototype.constructor = t
        }
    }, function (t, e, n) {
        e = t.exports = n(35), e.Stream = e, e.Readable = e, e.Writable = n(45), e.Duplex = n(44), e.Transform = n(50), e.PassThrough = n(51)
    }, function (t, e, n) {
        (function (e, r) {
            "use strict";
            function i(t) {
                return z.from(t)
            }

            function o(t) {
                return z.isBuffer(t) || t instanceof D
            }

            function a(t, e, n) {
                if ("function" == typeof t.prependListener)return t.prependListener(e, n);
                t._events && t._events[e] ? M(t._events[e]) ? t._events[e].unshift(n) : t._events[e] = [n, t._events[e]] : t.on(e, n)
            }

            function s(t, e) {
                L = L || n(44), t = t || {}, this.objectMode = !!t.objectMode, e instanceof L && (this.objectMode = this.objectMode || !!t.readableObjectMode);
                var r = t.highWaterMark, i = this.objectMode ? 16 : 16384;
                this.highWaterMark = r || 0 === r ? r : i, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new G, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (j || (j = n(49).StringDecoder), this.decoder = new j(t.encoding), this.encoding = t.encoding)
            }

            function u(t) {
                if (L = L || n(44), !(this instanceof u))return new u(t);
                this._readableState = new s(t, this), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), F.call(this)
            }

            function l(t, e, n, r, o) {
                var a = t._readableState;
                if (null === e)a.reading = !1, g(t, a); else {
                    var s;
                    o || (s = f(a, e)), s ? t.emit("error", s) : a.objectMode || e && e.length > 0 ? ("string" == typeof e || a.objectMode || Object.getPrototypeOf(e) === z.prototype || (e = i(e)), r ? a.endEmitted ? t.emit("error", new Error("stream.unshift() after end event")) : c(t, a, e, !0) : a.ended ? t.emit("error", new Error("stream.push() after EOF")) : (a.reading = !1, a.decoder && !n ? (e = a.decoder.write(e), a.objectMode || 0 !== e.length ? c(t, a, e, !1) : b(t, a)) : c(t, a, e, !1))) : r || (a.reading = !1)
                }
                return h(a)
            }

            function c(t, e, n, r) {
                e.flowing && 0 === e.length && !e.sync ? (t.emit("data", n), t.read(0)) : (e.length += e.objectMode ? 1 : n.length, r ? e.buffer.unshift(n) : e.buffer.push(n), e.needReadable && y(t)), b(t, e)
            }

            function f(t, e) {
                var n;
                return o(e) || "string" == typeof e || void 0 === e || t.objectMode || (n = new TypeError("Invalid non-string/buffer chunk")), n
            }

            function h(t) {
                return !t.ended && (t.needReadable || t.length < t.highWaterMark || 0 === t.length)
            }

            function p(t) {
                return t >= q ? t = q : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t
            }

            function d(t, e) {
                return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t !== t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = p(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0))
            }

            function g(t, e) {
                if (!e.ended) {
                    if (e.decoder) {
                        var n = e.decoder.end();
                        n && n.length && (e.buffer.push(n), e.length += e.objectMode ? 1 : n.length)
                    }
                    e.ended = !0, y(t)
                }
            }

            function y(t) {
                var e = t._readableState;
                e.needReadable = !1, e.emittedReadable || (W("emitReadable", e.flowing), e.emittedReadable = !0, e.sync ? B(v, t) : v(t))
            }

            function v(t) {
                W("emit readable"), t.emit("readable"), S(t)
            }

            function b(t, e) {
                e.readingMore || (e.readingMore = !0, B(m, t, e))
            }

            function m(t, e) {
                for (var n = e.length; !e.reading && !e.flowing && !e.ended && e.length < e.highWaterMark && (W("maybeReadMore read 0"), t.read(0), n !== e.length);)n = e.length;
                e.readingMore = !1
            }

            function w(t) {
                return function () {
                    var e = t._readableState;
                    W("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && R(t, "data") && (e.flowing = !0, S(t))
                }
            }

            function x(t) {
                W("readable nexttick read 0"), t.read(0)
            }

            function _(t, e) {
                e.resumeScheduled || (e.resumeScheduled = !0, B(k, t, e))
            }

            function k(t, e) {
                e.reading || (W("resume read 0"), t.read(0)), e.resumeScheduled = !1, e.awaitDrain = 0, t.emit("resume"), S(t), e.flowing && !e.reading && t.read(0)
            }

            function S(t) {
                var e = t._readableState;
                for (W("flow", e.flowing); e.flowing && null !== t.read(););
            }

            function C(t, e) {
                if (0 === e.length)return null;
                var n;
                return e.objectMode ? n = e.buffer.shift() : !t || t >= e.length ? (n = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.head.data : e.buffer.concat(e.length), e.buffer.clear()) : n = A(t, e.buffer, e.decoder), n
            }

            function A(t, e, n) {
                var r;
                return t < e.head.data.length ? (r = e.head.data.slice(0, t), e.head.data = e.head.data.slice(t)) : r = t === e.head.data.length ? e.shift() : n ? P(t, e) : E(t, e), r
            }

            function P(t, e) {
                var n = e.head, r = 1, i = n.data;
                for (t -= i.length; n = n.next;) {
                    var o = n.data, a = t > o.length ? o.length : t;
                    if (a === o.length ? i += o : i += o.slice(0, t), 0 === (t -= a)) {
                        a === o.length ? (++r, n.next ? e.head = n.next : e.head = e.tail = null) : (e.head = n, n.data = o.slice(a));
                        break
                    }
                    ++r
                }
                return e.length -= r, i
            }

            function E(t, e) {
                var n = z.allocUnsafe(t), r = e.head, i = 1;
                for (r.data.copy(n), t -= r.data.length; r = r.next;) {
                    var o = r.data, a = t > o.length ? o.length : t;
                    if (o.copy(n, n.length - t, 0, a), 0 === (t -= a)) {
                        a === o.length ? (++i, r.next ? e.head = r.next : e.head = e.tail = null) : (e.head = r, r.data = o.slice(a));
                        break
                    }
                    ++i
                }
                return e.length -= i, n
            }

            function I(t) {
                var e = t._readableState;
                if (e.length > 0)throw new Error('"endReadable()" called on non-empty stream');
                e.endEmitted || (e.ended = !0, B(T, e, t))
            }

            function T(t, e) {
                t.endEmitted || 0 !== t.length || (t.endEmitted = !0, e.readable = !1, e.emit("end"))
            }

            function O(t, e) {
                for (var n = 0, r = t.length; n < r; n++)if (t[n] === e)return n;
                return -1
            }

            var B = n(37);
            t.exports = u;
            var L, M = n(5);
            u.ReadableState = s;
            var R = (n(32).EventEmitter, function (t, e) {
                return t.listeners(e).length
            }), F = n(38), z = n(39).Buffer, D = e.Uint8Array || function () {
                }, N = n(40);
            N.inherits = n(33);
            var U = n(41), W = void 0;
            W = U && U.debuglog ? U.debuglog("stream") : function () {
            };
            var j, G = n(42), V = n(43);
            N.inherits(u, F);
            var H = ["error", "close", "destroy", "pause", "resume"];
            Object.defineProperty(u.prototype, "destroyed", {
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed
                }, set: function (t) {
                    this._readableState && (this._readableState.destroyed = t)
                }
            }), u.prototype.destroy = V.destroy, u.prototype._undestroy = V.undestroy, u.prototype._destroy = function (t, e) {
                this.push(null), e(t)
            }, u.prototype.push = function (t, e) {
                var n, r = this._readableState;
                return r.objectMode ? n = !0 : "string" == typeof t && (e = e || r.defaultEncoding, e !== r.encoding && (t = z.from(t, e), e = ""), n = !0), l(this, t, e, !1, n)
            }, u.prototype.unshift = function (t) {
                return l(this, t, null, !0, !1)
            }, u.prototype.isPaused = function () {
                return !1 === this._readableState.flowing
            }, u.prototype.setEncoding = function (t) {
                return j || (j = n(49).StringDecoder), this._readableState.decoder = new j(t), this._readableState.encoding = t, this
            };
            var q = 8388608;
            u.prototype.read = function (t) {
                W("read", t), t = parseInt(t, 10);
                var e = this._readableState, n = t;
                if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended))return W("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? I(this) : y(this), null;
                if (0 === (t = d(t, e)) && e.ended)return 0 === e.length && I(this), null;
                var r = e.needReadable;
                W("need readable", r), (0 === e.length || e.length - t < e.highWaterMark) && (r = !0, W("length less than watermark", r)), e.ended || e.reading ? (r = !1, W("reading or ended", r)) : r && (W("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = d(n, e)));
                var i;
                return i = t > 0 ? C(t, e) : null, null === i ? (e.needReadable = !0, t = 0) : e.length -= t, 0 === e.length && (e.ended || (e.needReadable = !0), n !== t && e.ended && I(this)), null !== i && this.emit("data", i), i
            }, u.prototype._read = function (t) {
                this.emit("error", new Error("_read() is not implemented"))
            }, u.prototype.pipe = function (t, e) {
                function n(t, e) {
                    W("onunpipe"), t === h && e && !1 === e.hasUnpiped && (e.hasUnpiped = !0, o())
                }

                function i() {
                    W("onend"), t.end()
                }

                function o() {
                    W("cleanup"), t.removeListener("close", l), t.removeListener("finish", c), t.removeListener("drain", y), t.removeListener("error", u), t.removeListener("unpipe", n), h.removeListener("end", i), h.removeListener("end", f), h.removeListener("data", s), v = !0, !p.awaitDrain || t._writableState && !t._writableState.needDrain || y()
                }

                function s(e) {
                    W("ondata"), b = !1, !1 !== t.write(e) || b || ((1 === p.pipesCount && p.pipes === t || p.pipesCount > 1 && -1 !== O(p.pipes, t)) && !v && (W("false write response, pause", h._readableState.awaitDrain), h._readableState.awaitDrain++, b = !0), h.pause())
                }

                function u(e) {
                    W("onerror", e), f(), t.removeListener("error", u), 0 === R(t, "error") && t.emit("error", e)
                }

                function l() {
                    t.removeListener("finish", c), f()
                }

                function c() {
                    W("onfinish"), t.removeListener("close", l), f()
                }

                function f() {
                    W("unpipe"), h.unpipe(t)
                }

                var h = this, p = this._readableState;
                switch (p.pipesCount) {
                    case 0:
                        p.pipes = t;
                        break;
                    case 1:
                        p.pipes = [p.pipes, t];
                        break;
                    default:
                        p.pipes.push(t)
                }
                p.pipesCount += 1, W("pipe count=%d opts=%j", p.pipesCount, e);
                var d = (!e || !1 !== e.end) && t !== r.stdout && t !== r.stderr, g = d ? i : f;
                p.endEmitted ? B(g) : h.once("end", g), t.on("unpipe", n);
                var y = w(h);
                t.on("drain", y);
                var v = !1, b = !1;
                return h.on("data", s), a(t, "error", u), t.once("close", l), t.once("finish", c), t.emit("pipe", h), p.flowing || (W("pipe resume"), h.resume()), t
            }, u.prototype.unpipe = function (t) {
                var e = this._readableState, n = {hasUnpiped: !1};
                if (0 === e.pipesCount)return this;
                if (1 === e.pipesCount)return t && t !== e.pipes ? this : (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, n), this);
                if (!t) {
                    var r = e.pipes, i = e.pipesCount;
                    e.pipes = null, e.pipesCount = 0, e.flowing = !1;
                    for (var o = 0; o < i; o++)r[o].emit("unpipe", this, n);
                    return this
                }
                var a = O(e.pipes, t);
                return -1 === a ? this : (e.pipes.splice(a, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, n), this)
            }, u.prototype.on = function (t, e) {
                var n = F.prototype.on.call(this, t, e);
                if ("data" === t)!1 !== this._readableState.flowing && this.resume(); else if ("readable" === t) {
                    var r = this._readableState;
                    r.endEmitted || r.readableListening || (r.readableListening = r.needReadable = !0, r.emittedReadable = !1, r.reading ? r.length && y(this) : B(x, this))
                }
                return n
            }, u.prototype.addListener = u.prototype.on, u.prototype.resume = function () {
                var t = this._readableState;
                return t.flowing || (W("resume"), t.flowing = !0, _(this, t)), this
            }, u.prototype.pause = function () {
                return W("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (W("pause"), this._readableState.flowing = !1, this.emit("pause")), this
            }, u.prototype.wrap = function (t) {
                var e = this._readableState, n = !1, r = this;
                t.on("end", function () {
                    if (W("wrapped end"), e.decoder && !e.ended) {
                        var t = e.decoder.end();
                        t && t.length && r.push(t)
                    }
                    r.push(null)
                }), t.on("data", function (i) {
                    if (W("wrapped data"), e.decoder && (i = e.decoder.write(i)), (!e.objectMode || null !== i && void 0 !== i) && (e.objectMode || i && i.length)) {
                        r.push(i) || (n = !0, t.pause())
                    }
                });
                for (var i in t)void 0 === this[i] && "function" == typeof t[i] && (this[i] = function (e) {
                    return function () {
                        return t[e].apply(t, arguments)
                    }
                }(i));
                for (var o = 0; o < H.length; o++)t.on(H[o], r.emit.bind(r, H[o]));
                return r._read = function (e) {
                    W("wrapped _read", e), n && (n = !1, t.resume())
                }, r
            }, u._fromList = C
        }).call(e, function () {
            return this
        }(), n(36))
    }, function (t, e) {
        function n() {
            throw new Error("setTimeout has not been defined")
        }

        function r() {
            throw new Error("clearTimeout has not been defined")
        }

        function i(t) {
            if (c === setTimeout)return setTimeout(t, 0);
            if ((c === n || !c) && setTimeout)return c = setTimeout, setTimeout(t, 0);
            try {
                return c(t, 0)
            } catch (e) {
                try {
                    return c.call(null, t, 0)
                } catch (e) {
                    return c.call(this, t, 0)
                }
            }
        }

        function o(t) {
            if (f === clearTimeout)return clearTimeout(t);
            if ((f === r || !f) && clearTimeout)return f = clearTimeout, clearTimeout(t);
            try {
                return f(t)
            } catch (e) {
                try {
                    return f.call(null, t)
                } catch (e) {
                    return f.call(this, t)
                }
            }
        }

        function a() {
            g && p && (g = !1, p.length ? d = p.concat(d) : y = -1, d.length && s())
        }

        function s() {
            if (!g) {
                var t = i(a);
                g = !0;
                for (var e = d.length; e;) {
                    for (p = d, d = []; ++y < e;)p && p[y].run();
                    y = -1, e = d.length
                }
                p = null, g = !1, o(t)
            }
        }

        function u(t, e) {
            this.fun = t, this.array = e
        }

        function l() {
        }

        var c, f, h = t.exports = {};
        !function () {
            try {
                c = "function" == typeof setTimeout ? setTimeout : n
            } catch (t) {
                c = n
            }
            try {
                f = "function" == typeof clearTimeout ? clearTimeout : r
            } catch (t) {
                f = r
            }
        }();
        var p, d = [], g = !1, y = -1;
        h.nextTick = function (t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1)for (var n = 1; n < arguments.length; n++)e[n - 1] = arguments[n];
            d.push(new u(t, e)), 1 !== d.length || g || i(s)
        }, u.prototype.run = function () {
            this.fun.apply(null, this.array)
        }, h.title = "browser", h.browser = !0, h.env = {}, h.argv = [], h.version = "", h.versions = {}, h.on = l, h.addListener = l, h.once = l, h.off = l, h.removeListener = l, h.removeAllListeners = l, h.emit = l, h.prependListener = l, h.prependOnceListener = l, h.listeners = function (t) {
            return []
        }, h.binding = function (t) {
            throw new Error("process.binding is not supported")
        }, h.cwd = function () {
            return "/"
        }, h.chdir = function (t) {
            throw new Error("process.chdir is not supported")
        }, h.umask = function () {
            return 0
        }
    }, function (t, e, n) {
        (function (e) {
            "use strict";
            function n(t, n, r, i) {
                if ("function" != typeof t)throw new TypeError('"callback" argument must be a function');
                var o, a, s = arguments.length;
                switch (s) {
                    case 0:
                    case 1:
                        return e.nextTick(t);
                    case 2:
                        return e.nextTick(function () {
                            t.call(null, n)
                        });
                    case 3:
                        return e.nextTick(function () {
                            t.call(null, n, r)
                        });
                    case 4:
                        return e.nextTick(function () {
                            t.call(null, n, r, i)
                        });
                    default:
                        for (o = new Array(s - 1), a = 0; a < o.length;)o[a++] = arguments[a];
                        return e.nextTick(function () {
                            t.apply(null, o)
                        })
                }
            }

            !e.version || 0 === e.version.indexOf("v0.") || 0 === e.version.indexOf("v1.") && 0 !== e.version.indexOf("v1.8.") ? t.exports = n : t.exports = e.nextTick
        }).call(e, n(36))
    }, function (t, e, n) {
        t.exports = n(32).EventEmitter
    }, function (t, e, n) {
        function r(t, e) {
            for (var n in t)e[n] = t[n]
        }

        function i(t, e, n) {
            return a(t, e, n)
        }

        var o = n(2), a = o.Buffer;
        a.from && a.alloc && a.allocUnsafe && a.allocUnsafeSlow ? t.exports = o : (r(o, e), e.Buffer = i), r(a, i), i.from = function (t, e, n) {
            if ("number" == typeof t)throw new TypeError("Argument must not be a number");
            return a(t, e, n)
        }, i.alloc = function (t, e, n) {
            if ("number" != typeof t)throw new TypeError("Argument must be a number");
            var r = a(t);
            return void 0 !== e ? "string" == typeof n ? r.fill(e, n) : r.fill(e) : r.fill(0), r
        }, i.allocUnsafe = function (t) {
            if ("number" != typeof t)throw new TypeError("Argument must be a number");
            return a(t)
        }, i.allocUnsafeSlow = function (t) {
            if ("number" != typeof t)throw new TypeError("Argument must be a number");
            return o.SlowBuffer(t)
        }
    }, function (t, e, n) {
        (function (t) {
            function n(t) {
                return Array.isArray ? Array.isArray(t) : "[object Array]" === y(t)
            }

            function r(t) {
                return "boolean" == typeof t
            }

            function i(t) {
                return null === t
            }

            function o(t) {
                return null == t
            }

            function a(t) {
                return "number" == typeof t
            }

            function s(t) {
                return "string" == typeof t
            }

            function u(t) {
                return "symbol" == typeof t
            }

            function l(t) {
                return void 0 === t
            }

            function c(t) {
                return "[object RegExp]" === y(t)
            }

            function f(t) {
                return "object" == typeof t && null !== t
            }

            function h(t) {
                return "[object Date]" === y(t)
            }

            function p(t) {
                return "[object Error]" === y(t) || t instanceof Error
            }

            function d(t) {
                return "function" == typeof t
            }

            function g(t) {
                return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" == typeof t || void 0 === t
            }

            function y(t) {
                return Object.prototype.toString.call(t)
            }

            e.isArray = n, e.isBoolean = r, e.isNull = i, e.isNullOrUndefined = o, e.isNumber = a, e.isString = s, e.isSymbol = u, e.isUndefined = l, e.isRegExp = c, e.isObject = f, e.isDate = h, e.isError = p, e.isFunction = d, e.isPrimitive = g, e.isBuffer = t.isBuffer
        }).call(e, n(2).Buffer)
    }, function (t, e) {
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))throw new TypeError("Cannot call a class as a function")
        }

        function i(t, e, n) {
            t.copy(e, n)
        }

        var o = n(39).Buffer;
        t.exports = function () {
            function t() {
                r(this, t), this.head = null, this.tail = null, this.length = 0
            }

            return t.prototype.push = function (t) {
                var e = {data: t, next: null};
                this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length
            }, t.prototype.unshift = function (t) {
                var e = {data: t, next: this.head};
                0 === this.length && (this.tail = e), this.head = e, ++this.length
            }, t.prototype.shift = function () {
                if (0 !== this.length) {
                    var t = this.head.data;
                    return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t
                }
            }, t.prototype.clear = function () {
                this.head = this.tail = null, this.length = 0
            }, t.prototype.join = function (t) {
                if (0 === this.length)return "";
                for (var e = this.head, n = "" + e.data; e = e.next;)n += t + e.data;
                return n
            }, t.prototype.concat = function (t) {
                if (0 === this.length)return o.alloc(0);
                if (1 === this.length)return this.head.data;
                for (var e = o.allocUnsafe(t >>> 0), n = this.head, r = 0; n;)i(n.data, e, r), r += n.data.length, n = n.next;
                return e
            }, t
        }()
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            var n = this, r = this._readableState && this._readableState.destroyed, i = this._writableState && this._writableState.destroyed;
            if (r || i)return void(e ? e(t) : !t || this._writableState && this._writableState.errorEmitted || a(o, this, t));
            this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t || null, function (t) {
                !e && t ? (a(o, n, t), n._writableState && (n._writableState.errorEmitted = !0)) : e && e(t)
            })
        }

        function i() {
            this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1)
        }

        function o(t, e) {
            t.emit("error", e)
        }

        var a = n(37);
        t.exports = {destroy: r, undestroy: i}
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            if (!(this instanceof r))return new r(t);
            l.call(this, t), c.call(this, t), t && !1 === t.readable && (this.readable = !1), t && !1 === t.writable && (this.writable = !1), this.allowHalfOpen = !0, t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1), this.once("end", i)
        }

        function i() {
            this.allowHalfOpen || this._writableState.ended || a(o, this)
        }

        function o(t) {
            t.end()
        }

        var a = n(37), s = Object.keys || function (t) {
                var e = [];
                for (var n in t)e.push(n);
                return e
            };
        t.exports = r;
        var u = n(40);
        u.inherits = n(33);
        var l = n(35), c = n(45);
        u.inherits(r, l);
        for (var f = s(c.prototype), h = 0; h < f.length; h++) {
            var p = f[h];
            r.prototype[p] || (r.prototype[p] = c.prototype[p])
        }
        Object.defineProperty(r.prototype, "destroyed", {
            get: function () {
                return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed)
            }, set: function (t) {
                void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t)
            }
        }), r.prototype._destroy = function (t, e) {
            this.push(null), this.end(), a(e, t)
        }
    }, function (t, e, n) {
        (function (e, r, i) {
            "use strict";
            function o(t) {
                var e = this;
                this.next = null, this.entry = null, this.finish = function () {
                    P(e, t)
                }
            }

            function a(t) {
                return M.from(t)
            }

            function s(t) {
                return M.isBuffer(t) || t instanceof R
            }

            function u() {
            }

            function l(t, e) {
                I = I || n(44), t = t || {}, this.objectMode = !!t.objectMode, e instanceof I && (this.objectMode = this.objectMode || !!t.writableObjectMode);
                var r = t.highWaterMark, i = this.objectMode ? 16 : 16384;
                this.highWaterMark = r || 0 === r ? r : i, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                var a = !1 === t.decodeStrings;
                this.decodeStrings = !a, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (t) {
                    b(e, t)
                }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new o(this)
            }

            function c(t) {
                if (I = I || n(44), !(z.call(c, this) || this instanceof I))return new c(t);
                this._writableState = new l(t, this), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), L.call(this)
            }

            function f(t, e) {
                var n = new Error("write after end");
                t.emit("error", n), E(e, n)
            }

            function h(t, e, n, r) {
                var i = !0, o = !1;
                return null === n ? o = new TypeError("May not write null values to stream") : "string" == typeof n || void 0 === n || e.objectMode || (o = new TypeError("Invalid non-string/buffer chunk")), o && (t.emit("error", o), E(r, o), i = !1), i
            }

            function p(t, e, n) {
                return t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = M.from(e, n)), e
            }

            function d(t, e, n, r, i, o) {
                if (!n) {
                    var a = p(e, r, i);
                    r !== a && (n = !0, i = "buffer", r = a)
                }
                var s = e.objectMode ? 1 : r.length;
                e.length += s;
                var u = e.length < e.highWaterMark;
                if (u || (e.needDrain = !0), e.writing || e.corked) {
                    var l = e.lastBufferedRequest;
                    e.lastBufferedRequest = {
                        chunk: r,
                        encoding: i,
                        isBuf: n,
                        callback: o,
                        next: null
                    }, l ? l.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1
                } else g(t, e, !1, s, r, i, o);
                return u
            }

            function g(t, e, n, r, i, o, a) {
                e.writelen = r, e.writecb = a, e.writing = !0, e.sync = !0, n ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1
            }

            function y(t, e, n, r, i) {
                --e.pendingcb, n ? (E(i, r), E(C, t, e), t._writableState.errorEmitted = !0, t.emit("error", r)) : (i(r), t._writableState.errorEmitted = !0, t.emit("error", r), C(t, e))
            }

            function v(t) {
                t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0
            }

            function b(t, e) {
                var n = t._writableState, r = n.sync, i = n.writecb;
                if (v(n), e)y(t, n, r, e, i); else {
                    var o = _(n);
                    o || n.corked || n.bufferProcessing || !n.bufferedRequest || x(t, n), r ? T(m, t, n, o, i) : m(t, n, o, i)
                }
            }

            function m(t, e, n, r) {
                n || w(t, e), e.pendingcb--, r(), C(t, e)
            }

            function w(t, e) {
                0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"))
            }

            function x(t, e) {
                e.bufferProcessing = !0;
                var n = e.bufferedRequest;
                if (t._writev && n && n.next) {
                    var r = e.bufferedRequestCount, i = new Array(r), a = e.corkedRequestsFree;
                    a.entry = n;
                    for (var s = 0, u = !0; n;)i[s] = n, n.isBuf || (u = !1), n = n.next, s += 1;
                    i.allBuffers = u, g(t, e, !0, e.length, i, "", a.finish), e.pendingcb++, e.lastBufferedRequest = null, a.next ? (e.corkedRequestsFree = a.next, a.next = null) : e.corkedRequestsFree = new o(e)
                } else {
                    for (; n;) {
                        var l = n.chunk, c = n.encoding, f = n.callback;
                        if (g(t, e, !1, e.objectMode ? 1 : l.length, l, c, f), n = n.next, e.writing)break
                    }
                    null === n && (e.lastBufferedRequest = null)
                }
                e.bufferedRequestCount = 0, e.bufferedRequest = n, e.bufferProcessing = !1
            }

            function _(t) {
                return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing
            }

            function k(t, e) {
                t._final(function (n) {
                    e.pendingcb--, n && t.emit("error", n), e.prefinished = !0, t.emit("prefinish"), C(t, e)
                })
            }

            function S(t, e) {
                e.prefinished || e.finalCalled || ("function" == typeof t._final ? (e.pendingcb++, e.finalCalled = !0, E(k, t, e)) : (e.prefinished = !0, t.emit("prefinish")))
            }

            function C(t, e) {
                var n = _(e);
                return n && (S(t, e), 0 === e.pendingcb && (e.finished = !0, t.emit("finish"))), n
            }

            function A(t, e, n) {
                e.ending = !0, C(t, e), n && (e.finished ? E(n) : t.once("finish", n)), e.ended = !0, t.writable = !1
            }

            function P(t, e, n) {
                var r = t.entry;
                for (t.entry = null; r;) {
                    var i = r.callback;
                    e.pendingcb--, i(n), r = r.next
                }
                e.corkedRequestsFree ? e.corkedRequestsFree.next = t : e.corkedRequestsFree = t
            }

            var E = n(37);
            t.exports = c;
            var I, T = !e.browser && ["v0.10", "v0.9."].indexOf(e.version.slice(0, 5)) > -1 ? r : E;
            c.WritableState = l;
            var O = n(40);
            O.inherits = n(33);
            var B = {deprecate: n(48)}, L = n(38), M = n(39).Buffer, R = i.Uint8Array || function () {
                }, F = n(43);
            O.inherits(c, L), l.prototype.getBuffer = function () {
                for (var t = this.bufferedRequest, e = []; t;)e.push(t), t = t.next;
                return e
            }, function () {
                try {
                    Object.defineProperty(l.prototype, "buffer", {
                        get: B.deprecate(function () {
                            return this.getBuffer()
                        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                    })
                } catch (t) {
                }
            }();
            var z;
            "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (z = Function.prototype[Symbol.hasInstance], Object.defineProperty(c, Symbol.hasInstance, {
                value: function (t) {
                    return !!z.call(this, t) || t && t._writableState instanceof l
                }
            })) : z = function (t) {
                return t instanceof this
            }, c.prototype.pipe = function () {
                this.emit("error", new Error("Cannot pipe, not readable"))
            }, c.prototype.write = function (t, e, n) {
                var r = this._writableState, i = !1, o = s(t) && !r.objectMode;
                return o && !M.isBuffer(t) && (t = a(t)), "function" == typeof e && (n = e, e = null), o ? e = "buffer" : e || (e = r.defaultEncoding), "function" != typeof n && (n = u), r.ended ? f(this, n) : (o || h(this, r, t, n)) && (r.pendingcb++, i = d(this, r, o, t, e, n)), i
            }, c.prototype.cork = function () {
                this._writableState.corked++
            }, c.prototype.uncork = function () {
                var t = this._writableState;
                t.corked && (t.corked--, t.writing || t.corked || t.finished || t.bufferProcessing || !t.bufferedRequest || x(this, t))
            }, c.prototype.setDefaultEncoding = function (t) {
                if ("string" == typeof t && (t = t.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1))throw new TypeError("Unknown encoding: " + t);
                return this._writableState.defaultEncoding = t, this
            }, c.prototype._write = function (t, e, n) {
                n(new Error("_write() is not implemented"))
            }, c.prototype._writev = null, c.prototype.end = function (t, e, n) {
                var r = this._writableState;
                "function" == typeof t ? (n = t, t = null, e = null) : "function" == typeof e && (n = e, e = null), null !== t && void 0 !== t && this.write(t, e), r.corked && (r.corked = 1, this.uncork()), r.ending || r.finished || A(this, r, n)
            }, Object.defineProperty(c.prototype, "destroyed", {
                get: function () {
                    return void 0 !== this._writableState && this._writableState.destroyed
                }, set: function (t) {
                    this._writableState && (this._writableState.destroyed = t)
                }
            }), c.prototype.destroy = F.destroy, c.prototype._undestroy = F.undestroy, c.prototype._destroy = function (t, e) {
                this.end(), e(t)
            }
        }).call(e, n(36), n(46).setImmediate, function () {
            return this
        }())
    }, function (t, e, n) {
        function r(t, e) {
            this._id = t, this._clearFn = e
        }

        var i = Function.prototype.apply;
        e.setTimeout = function () {
            return new r(i.call(setTimeout, window, arguments), clearTimeout)
        }, e.setInterval = function () {
            return new r(i.call(setInterval, window, arguments), clearInterval)
        }, e.clearTimeout = e.clearInterval = function (t) {
            t && t.close()
        }, r.prototype.unref = r.prototype.ref = function () {
        }, r.prototype.close = function () {
            this._clearFn.call(window, this._id)
        }, e.enroll = function (t, e) {
            clearTimeout(t._idleTimeoutId), t._idleTimeout = e
        }, e.unenroll = function (t) {
            clearTimeout(t._idleTimeoutId), t._idleTimeout = -1
        }, e._unrefActive = e.active = function (t) {
            clearTimeout(t._idleTimeoutId);
            var e = t._idleTimeout;
            e >= 0 && (t._idleTimeoutId = setTimeout(function () {
                t._onTimeout && t._onTimeout()
            }, e))
        }, n(47), e.setImmediate = setImmediate, e.clearImmediate = clearImmediate
    }, function (t, e, n) {
        (function (t, e) {
            !function (t, n) {
                "use strict";
                function r(t) {
                    "function" != typeof t && (t = new Function("" + t));
                    for (var e = new Array(arguments.length - 1), n = 0; n < e.length; n++)e[n] = arguments[n + 1];
                    var r = {callback: t, args: e};
                    return l[u] = r, s(u), u++
                }

                function i(t) {
                    delete l[t]
                }

                function o(t) {
                    var e = t.callback, r = t.args;
                    switch (r.length) {
                        case 0:
                            e();
                            break;
                        case 1:
                            e(r[0]);
                            break;
                        case 2:
                            e(r[0], r[1]);
                            break;
                        case 3:
                            e(r[0], r[1], r[2]);
                            break;
                        default:
                            e.apply(n, r)
                    }
                }

                function a(t) {
                    if (c)setTimeout(a, 0, t); else {
                        var e = l[t];
                        if (e) {
                            c = !0;
                            try {
                                o(e)
                            } finally {
                                i(t), c = !1
                            }
                        }
                    }
                }

                if (!t.setImmediate) {
                    var s, u = 1, l = {}, c = !1, f = t.document, h = Object.getPrototypeOf && Object.getPrototypeOf(t);
                    h = h && h.setTimeout ? h : t, "[object process]" === {}.toString.call(t.process) ? function () {
                        s = function (t) {
                            e.nextTick(function () {
                                a(t)
                            })
                        }
                    }() : function () {
                        if (t.postMessage && !t.importScripts) {
                            var e = !0, n = t.onmessage;
                            return t.onmessage = function () {
                                e = !1
                            }, t.postMessage("", "*"), t.onmessage = n, e
                        }
                    }() ? function () {
                        var e = "setImmediate$" + Math.random() + "$", n = function (n) {
                            n.source === t && "string" == typeof n.data && 0 === n.data.indexOf(e) && a(+n.data.slice(e.length))
                        };
                        t.addEventListener ? t.addEventListener("message", n, !1) : t.attachEvent("onmessage", n), s = function (n) {
                            t.postMessage(e + n, "*")
                        }
                    }() : t.MessageChannel ? function () {
                        var t = new MessageChannel;
                        t.port1.onmessage = function (t) {
                            a(t.data)
                        }, s = function (e) {
                            t.port2.postMessage(e)
                        }
                    }() : f && "onreadystatechange" in f.createElement("script") ? function () {
                        var t = f.documentElement;
                        s = function (e) {
                            var n = f.createElement("script");
                            n.onreadystatechange = function () {
                                a(e), n.onreadystatechange = null, t.removeChild(n), n = null
                            }, t.appendChild(n)
                        }
                    }() : function () {
                        s = function (t) {
                            setTimeout(a, 0, t)
                        }
                    }(), h.setImmediate = r, h.clearImmediate = i
                }
            }("undefined" == typeof self ? void 0 === t ? this : t : self)
        }).call(e, function () {
            return this
        }(), n(36))
    }, function (t, e) {
        (function (e) {
            function n(t, e) {
                function n() {
                    if (!i) {
                        if (r("throwDeprecation"))throw new Error(e);
                        r("traceDeprecation"), i = !0
                    }
                    return t.apply(this, arguments)
                }

                if (r("noDeprecation"))return t;
                var i = !1;
                return n
            }

            function r(t) {
                try {
                    if (!e.localStorage)return !1
                } catch (t) {
                    return !1
                }
                var n = e.localStorage[t];
                return null != n && "true" === String(n).toLowerCase()
            }

            t.exports = n
        }).call(e, function () {
            return this
        }())
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            if (!t)return "utf8";
            for (var e; ;)switch (t) {
                case"utf8":
                case"utf-8":
                    return "utf8";
                case"ucs2":
                case"ucs-2":
                case"utf16le":
                case"utf-16le":
                    return "utf16le";
                case"latin1":
                case"binary":
                    return "latin1";
                case"base64":
                case"ascii":
                case"hex":
                    return t;
                default:
                    if (e)return;
                    t = ("" + t).toLowerCase(), e = !0
            }
        }

        function i(t) {
            var e = r(t);
            if ("string" != typeof e && (b.isEncoding === m || !m(t)))throw new Error("Unknown encoding: " + t);
            return e || t
        }

        function o(t) {
            this.encoding = i(t);
            var e;
            switch (this.encoding) {
                case"utf16le":
                    this.text = h, this.end = p, e = 4;
                    break;
                case"utf8":
                    this.fillLast = l, e = 4;
                    break;
                case"base64":
                    this.text = d, this.end = g, e = 3;
                    break;
                default:
                    return this.write = y, void(this.end = v)
            }
            this.lastNeed = 0, this.lastTotal = 0, this.lastChar = b.allocUnsafe(e)
        }

        function a(t) {
            return t <= 127 ? 0 : t >> 5 == 6 ? 2 : t >> 4 == 14 ? 3 : t >> 3 == 30 ? 4 : -1
        }

        function s(t, e, n) {
            var r = e.length - 1;
            if (r < n)return 0;
            var i = a(e[r]);
            return i >= 0 ? (i > 0 && (t.lastNeed = i - 1), i) : --r < n ? 0 : (i = a(e[r])) >= 0 ? (i > 0 && (t.lastNeed = i - 2), i) : --r < n ? 0 : (i = a(e[r]), i >= 0 ? (i > 0 && (2 === i ? i = 0 : t.lastNeed = i - 3), i) : 0)
        }

        function u(t, e, n) {
            if (128 != (192 & e[0]))return t.lastNeed = 0, "�".repeat(n);
            if (t.lastNeed > 1 && e.length > 1) {
                if (128 != (192 & e[1]))return t.lastNeed = 1, "�".repeat(n + 1);
                if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2]))return t.lastNeed = 2, "�".repeat(n + 2)
            }
        }

        function l(t) {
            var e = this.lastTotal - this.lastNeed, n = u(this, t, e);
            return void 0 !== n ? n : this.lastNeed <= t.length ? (t.copy(this.lastChar, e, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t.copy(this.lastChar, e, 0, t.length), void(this.lastNeed -= t.length))
        }

        function c(t, e) {
            var n = s(this, t, e);
            if (!this.lastNeed)return t.toString("utf8", e);
            this.lastTotal = n;
            var r = t.length - (n - this.lastNeed);
            return t.copy(this.lastChar, 0, r), t.toString("utf8", e, r)
        }

        function f(t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + "�".repeat(this.lastTotal - this.lastNeed) : e
        }

        function h(t, e) {
            if ((t.length - e) % 2 == 0) {
                var n = t.toString("utf16le", e);
                if (n) {
                    var r = n.charCodeAt(n.length - 1);
                    if (r >= 55296 && r <= 56319)return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1], n.slice(0, -1)
                }
                return n
            }
            return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], t.toString("utf16le", e, t.length - 1)
        }

        function p(t) {
            var e = t && t.length ? this.write(t) : "";
            if (this.lastNeed) {
                var n = this.lastTotal - this.lastNeed;
                return e + this.lastChar.toString("utf16le", 0, n)
            }
            return e
        }

        function d(t, e) {
            var n = (t.length - e) % 3;
            return 0 === n ? t.toString("base64", e) : (this.lastNeed = 3 - n, this.lastTotal = 3, 1 === n ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - n))
        }

        function g(t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e
        }

        function y(t) {
            return t.toString(this.encoding)
        }

        function v(t) {
            return t && t.length ? this.write(t) : ""
        }

        var b = n(39).Buffer, m = b.isEncoding || function (t) {
                switch ((t = "" + t) && t.toLowerCase()) {
                    case"hex":
                    case"utf8":
                    case"utf-8":
                    case"ascii":
                    case"binary":
                    case"base64":
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                    case"raw":
                        return !0;
                    default:
                        return !1
                }
            };
        e.StringDecoder = o, o.prototype.write = function (t) {
            if (0 === t.length)return "";
            var e, n;
            if (this.lastNeed) {
                if (void 0 === (e = this.fillLast(t)))return "";
                n = this.lastNeed, this.lastNeed = 0
            } else n = 0;
            return n < t.length ? e ? e + this.text(t, n) : this.text(t, n) : e || ""
        }, o.prototype.end = f, o.prototype.text = c, o.prototype.fillLast = function (t) {
            if (this.lastNeed <= t.length)return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
            t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length
        }
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            this.afterTransform = function (e, n) {
                return i(t, e, n)
            }, this.needTransform = !1, this.transforming = !1, this.writecb = null, this.writechunk = null, this.writeencoding = null
        }

        function i(t, e, n) {
            var r = t._transformState;
            r.transforming = !1;
            var i = r.writecb;
            if (!i)return t.emit("error", new Error("write callback called multiple times"));
            r.writechunk = null, r.writecb = null, null !== n && void 0 !== n && t.push(n), i(e);
            var o = t._readableState;
            o.reading = !1, (o.needReadable || o.length < o.highWaterMark) && t._read(o.highWaterMark)
        }

        function o(t) {
            if (!(this instanceof o))return new o(t);
            s.call(this, t), this._transformState = new r(this);
            var e = this;
            this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.once("prefinish", function () {
                "function" == typeof this._flush ? this._flush(function (t, n) {
                    a(e, t, n)
                }) : a(e)
            })
        }

        function a(t, e, n) {
            if (e)return t.emit("error", e);
            null !== n && void 0 !== n && t.push(n);
            var r = t._writableState, i = t._transformState;
            if (r.length)throw new Error("Calling transform done when ws.length != 0");
            if (i.transforming)throw new Error("Calling transform done when still transforming");
            return t.push(null)
        }

        t.exports = o;
        var s = n(44), u = n(40);
        u.inherits = n(33), u.inherits(o, s), o.prototype.push = function (t, e) {
            return this._transformState.needTransform = !1, s.prototype.push.call(this, t, e)
        }, o.prototype._transform = function (t, e, n) {
            throw new Error("_transform() is not implemented")
        }, o.prototype._write = function (t, e, n) {
            var r = this._transformState;
            if (r.writecb = n, r.writechunk = t, r.writeencoding = e, !r.transforming) {
                var i = this._readableState;
                (r.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark)
            }
        }, o.prototype._read = function (t) {
            var e = this._transformState;
            null !== e.writechunk && e.writecb && !e.transforming ? (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = !0
        }, o.prototype._destroy = function (t, e) {
            var n = this;
            s.prototype._destroy.call(this, t, function (t) {
                e(t), n.emit("close")
            })
        }
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            if (!(this instanceof r))return new r(t);
            i.call(this, t)
        }

        t.exports = r;
        var i = n(50), o = n(40);
        o.inherits = n(33), o.inherits(r, i), r.prototype._transform = function (t, e, n) {
            n(null, t)
        }
    }, function (t, e, n) {
        t.exports = n(45)
    }, function (t, e, n) {
        t.exports = n(44)
    }, function (t, e, n) {
        t.exports = n(34).Transform
    }, function (t, e, n) {
        t.exports = n(34).PassThrough
    }, function (t, e, n) {
        (function (e, n) {
            "use strict";
            function r() {
                this.fileSystem = {}, this.baseSystem = {}
            }

            function i(t) {
                return 0 === t.indexOf(n) && (t = t.substring(n.length)), 0 === t.indexOf("/") && (t = t.substring(1)), t
            }

            r.prototype.readFileSync = function (t) {
                t = i(t);
                var n = this.baseSystem[t];
                if (n)return new e(n, "base64");
                var r = this.fileSystem[t];
                if (r)return r;
                throw"File '" + t + "' not found in virtual file system"
            }, r.prototype.writeFileSync = function (t, e) {
                this.fileSystem[i(t)] = e
            }, r.prototype.bindFS = function (t) {
                this.baseSystem = t || {}
            }, t.exports = new r
        }).call(e, n(2).Buffer, "/")
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i;
                r = function () {
                    function t() {
                    }

                    var n, r, o, a;
                    return o = function (t, e) {
                        return (Array(e + 1).join("0") + t).slice(-e)
                    }, r = /[\n\r\t\b\f\(\)\\]/g, n = {
                        "\n": "\\n",
                        "\r": "\\r",
                        "\t": "\\t",
                        "\b": "\\b",
                        "\f": "\\f",
                        "\\": "\\\\",
                        "(": "\\(",
                        ")": "\\)"
                    }, a = function (t) {
                        var e, n, r, i, o;
                        if (1 & (i = t.length))throw new Error("Buffer length must be even");
                        for (n = r = 0, o = i - 1; r < o; n = r += 2)e = t[n], t[n] = t[n + 1], t[n + 1] = e;
                        return t
                    }, t.convert = function (s) {
                        var u, l, c, f, h, p, d, g, y;
                        if ("string" == typeof s)return "/" + s;
                        if (s instanceof String) {
                            for (g = s, c = !1, l = f = 0, d = g.length; f < d; l = f += 1)if (g.charCodeAt(l) > 127) {
                                c = !0;
                                break
                            }
                            return c && (g = a(new e("\ufeff" + g, "utf16le")).toString("binary")), "(" + (g = g.replace(r, function (t) {
                                return n[t]
                            })) + ")"
                        }
                        if (e.isBuffer(s))return "<" + s.toString("hex") + ">";
                        if (s instanceof i)return s.toString();
                        if (s instanceof Date)return "(D:" + o(s.getUTCFullYear(), 4) + o(s.getUTCMonth() + 1, 2) + o(s.getUTCDate(), 2) + o(s.getUTCHours(), 2) + o(s.getUTCMinutes(), 2) + o(s.getUTCSeconds(), 2) + "Z)";
                        if (Array.isArray(s))return "[" + function () {
                                var e, n, r;
                                for (r = [], e = 0, n = s.length; e < n; e++)u = s[e], r.push(t.convert(u));
                                return r
                            }().join(" ") + "]";
                        if ("[object Object]" === {}.toString.call(s)) {
                            p = ["<<"];
                            for (h in s)y = s[h], p.push("/" + h + " " + t.convert(y));
                            return p.push(">>"), p.join("\n")
                        }
                        return "number" == typeof s ? t.number(s) : "" + s
                    }, t.number = function (t) {
                        if (t > -1e21 && t < 1e21)return Math.round(1e6 * t) / 1e6;
                        throw new Error("unsupported number: " + t)
                    }, t
                }(), t.exports = r, i = n(58)
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i, o, a, s = function (t, e) {
                    return function () {
                        return t.apply(e, arguments)
                    }
                }, u = function (t, e) {
                    function n() {
                        this.constructor = t
                    }

                    for (var r in e)l.call(e, r) && (t[r] = e[r]);
                    return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                }, l = {}.hasOwnProperty;
                a = n(59), o = n(31), i = function (t) {
                    function n(t, e, r) {
                        this.document = t, this.id = e, this.data = null != r ? r : {}, this.finalize = s(this.finalize, this), n.__super__.constructor.call(this, {decodeStrings: !1}), this.gen = 0, this.deflate = null, this.compress = this.document.compress && !this.data.Filter, this.uncompressedLength = 0, this.chunks = []
                    }

                    return u(n, t), n.prototype.initDeflate = function () {
                        return this.data.Filter = "FlateDecode", this.deflate = a.createDeflate(), this.deflate.on("data", function (t) {
                            return function (e) {
                                return t.chunks.push(e), t.data.Length += e.length
                            }
                        }(this)), this.deflate.on("end", this.finalize)
                    }, n.prototype._write = function (t, n, r) {
                        var i;
                        return e.isBuffer(t) || (t = new e(t + "\n", "binary")), this.uncompressedLength += t.length, null == (i = this.data).Length && (i.Length = 0), this.compress ? (this.deflate || this.initDeflate(), this.deflate.write(t)) : (this.chunks.push(t), this.data.Length += t.length), r()
                    }, n.prototype.end = function (t) {
                        return n.__super__.end.apply(this, arguments), this.deflate ? this.deflate.end() : this.finalize()
                    }, n.prototype.finalize = function () {
                        var t, e, n, i;
                        if (this.offset = this.document._offset, this.document._write(this.id + " " + this.gen + " obj"), this.document._write(r.convert(this.data)), this.chunks.length) {
                            for (this.document._write("stream"), i = this.chunks, e = 0, n = i.length; e < n; e++)t = i[e], this.document._write(t);
                            this.chunks.length = 0, this.document._write("\nendstream")
                        }
                        return this.document._write("endobj"), this.document._refEnd(this)
                    }, n.prototype.toString = function () {
                        return this.id + " " + this.gen + " R"
                    }, n
                }(o.Writable), t.exports = i, r = n(57)
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        (function (t, r) {
            function i(e, n, r) {
                function i() {
                    for (var t; null !== (t = e.read());)s.push(t), u += t.length;
                    e.once("readable", i)
                }

                function o(t) {
                    e.removeListener("end", a), e.removeListener("readable", i), r(t)
                }

                function a() {
                    var n = t.concat(s, u);
                    s = [], r(null, n), e.close()
                }

                var s = [], u = 0;
                e.on("error", o), e.on("end", a), e.end(n), i()
            }

            function o(e, n) {
                if ("string" == typeof n && (n = new t(n)), !t.isBuffer(n))throw new TypeError("Not a string or buffer");
                var r = g.Z_FINISH;
                return e._processChunk(n, r)
            }

            function a(t) {
                if (!(this instanceof a))return new a(t);
                p.call(this, t, g.DEFLATE)
            }

            function s(t) {
                if (!(this instanceof s))return new s(t);
                p.call(this, t, g.INFLATE)
            }

            function u(t) {
                if (!(this instanceof u))return new u(t);
                p.call(this, t, g.GZIP)
            }

            function l(t) {
                if (!(this instanceof l))return new l(t);
                p.call(this, t, g.GUNZIP)
            }

            function c(t) {
                if (!(this instanceof c))return new c(t);
                p.call(this, t, g.DEFLATERAW)
            }

            function f(t) {
                if (!(this instanceof f))return new f(t);
                p.call(this, t, g.INFLATERAW)
            }

            function h(t) {
                if (!(this instanceof h))return new h(t);
                p.call(this, t, g.UNZIP)
            }

            function p(n, r) {
                if (this._opts = n = n || {}, this._chunkSize = n.chunkSize || e.Z_DEFAULT_CHUNK, d.call(this, n), n.flush && n.flush !== g.Z_NO_FLUSH && n.flush !== g.Z_PARTIAL_FLUSH && n.flush !== g.Z_SYNC_FLUSH && n.flush !== g.Z_FULL_FLUSH && n.flush !== g.Z_FINISH && n.flush !== g.Z_BLOCK)throw new Error("Invalid flush flag: " + n.flush);
                if (this._flushFlag = n.flush || g.Z_NO_FLUSH, n.chunkSize && (n.chunkSize < e.Z_MIN_CHUNK || n.chunkSize > e.Z_MAX_CHUNK))throw new Error("Invalid chunk size: " + n.chunkSize);
                if (n.windowBits && (n.windowBits < e.Z_MIN_WINDOWBITS || n.windowBits > e.Z_MAX_WINDOWBITS))throw new Error("Invalid windowBits: " + n.windowBits);
                if (n.level && (n.level < e.Z_MIN_LEVEL || n.level > e.Z_MAX_LEVEL))throw new Error("Invalid compression level: " + n.level);
                if (n.memLevel && (n.memLevel < e.Z_MIN_MEMLEVEL || n.memLevel > e.Z_MAX_MEMLEVEL))throw new Error("Invalid memLevel: " + n.memLevel);
                if (n.strategy && n.strategy != e.Z_FILTERED && n.strategy != e.Z_HUFFMAN_ONLY && n.strategy != e.Z_RLE && n.strategy != e.Z_FIXED && n.strategy != e.Z_DEFAULT_STRATEGY)throw new Error("Invalid strategy: " + n.strategy);
                if (n.dictionary && !t.isBuffer(n.dictionary))throw new Error("Invalid dictionary: it should be a Buffer instance");
                this._binding = new g.Zlib(r);
                var i = this;
                this._hadError = !1, this._binding.onerror = function (t, n) {
                    i._binding = null, i._hadError = !0;
                    var r = new Error(t);
                    r.errno = n, r.code = e.codes[n], i.emit("error", r)
                };
                var o = e.Z_DEFAULT_COMPRESSION;
                "number" == typeof n.level && (o = n.level);
                var a = e.Z_DEFAULT_STRATEGY;
                "number" == typeof n.strategy && (a = n.strategy), this._binding.init(n.windowBits || e.Z_DEFAULT_WINDOWBITS, o, n.memLevel || e.Z_DEFAULT_MEMLEVEL, a, n.dictionary), this._buffer = new t(this._chunkSize), this._offset = 0, this._closed = !1, this._level = o, this._strategy = a, this.once("end", this.close)
            }

            var d = n(54), g = n(60), y = n(72), v = n(75).ok;
            g.Z_MIN_WINDOWBITS = 8, g.Z_MAX_WINDOWBITS = 15, g.Z_DEFAULT_WINDOWBITS = 15, g.Z_MIN_CHUNK = 64, g.Z_MAX_CHUNK = 1 / 0, g.Z_DEFAULT_CHUNK = 16384, g.Z_MIN_MEMLEVEL = 1, g.Z_MAX_MEMLEVEL = 9, g.Z_DEFAULT_MEMLEVEL = 8, g.Z_MIN_LEVEL = -1, g.Z_MAX_LEVEL = 9, g.Z_DEFAULT_LEVEL = g.Z_DEFAULT_COMPRESSION, Object.keys(g).forEach(function (t) {
                t.match(/^Z/) && (e[t] = g[t])
            }), e.codes = {
                Z_OK: g.Z_OK,
                Z_STREAM_END: g.Z_STREAM_END,
                Z_NEED_DICT: g.Z_NEED_DICT,
                Z_ERRNO: g.Z_ERRNO,
                Z_STREAM_ERROR: g.Z_STREAM_ERROR,
                Z_DATA_ERROR: g.Z_DATA_ERROR,
                Z_MEM_ERROR: g.Z_MEM_ERROR,
                Z_BUF_ERROR: g.Z_BUF_ERROR,
                Z_VERSION_ERROR: g.Z_VERSION_ERROR
            }, Object.keys(e.codes).forEach(function (t) {
                e.codes[e.codes[t]] = t
            }), e.Deflate = a, e.Inflate = s, e.Gzip = u, e.Gunzip = l, e.DeflateRaw = c, e.InflateRaw = f, e.Unzip = h, e.createDeflate = function (t) {
                return new a(t)
            }, e.createInflate = function (t) {
                return new s(t)
            }, e.createDeflateRaw = function (t) {
                return new c(t)
            }, e.createInflateRaw = function (t) {
                return new f(t)
            }, e.createGzip = function (t) {
                return new u(t)
            }, e.createGunzip = function (t) {
                return new l(t)
            }, e.createUnzip = function (t) {
                return new h(t)
            }, e.deflate = function (t, e, n) {
                return "function" == typeof e && (n = e, e = {}), i(new a(e), t, n)
            }, e.deflateSync = function (t, e) {
                return o(new a(e), t)
            }, e.gzip = function (t, e, n) {
                return "function" == typeof e && (n = e, e = {}), i(new u(e), t, n)
            }, e.gzipSync = function (t, e) {
                return o(new u(e), t)
            }, e.deflateRaw = function (t, e, n) {
                return "function" == typeof e && (n = e, e = {}), i(new c(e), t, n)
            }, e.deflateRawSync = function (t, e) {
                return o(new c(e), t)
            }, e.unzip = function (t, e, n) {
                return "function" == typeof e && (n = e, e = {}), i(new h(e), t, n)
            }, e.unzipSync = function (t, e) {
                return o(new h(e), t)
            }, e.inflate = function (t, e, n) {
                return "function" == typeof e && (n = e, e = {}), i(new s(e), t, n)
            }, e.inflateSync = function (t, e) {
                return o(new s(e), t)
            }, e.gunzip = function (t, e, n) {
                return "function" == typeof e && (n = e, e = {}), i(new l(e), t, n)
            }, e.gunzipSync = function (t, e) {
                return o(new l(e), t)
            }, e.inflateRaw = function (t, e, n) {
                return "function" == typeof e && (n = e, e = {}), i(new f(e), t, n)
            }, e.inflateRawSync = function (t, e) {
                return o(new f(e), t)
            }, y.inherits(p, d), p.prototype.params = function (t, n, i) {
                if (t < e.Z_MIN_LEVEL || t > e.Z_MAX_LEVEL)throw new RangeError("Invalid compression level: " + t);
                if (n != e.Z_FILTERED && n != e.Z_HUFFMAN_ONLY && n != e.Z_RLE && n != e.Z_FIXED && n != e.Z_DEFAULT_STRATEGY)throw new TypeError("Invalid strategy: " + n);
                if (this._level !== t || this._strategy !== n) {
                    var o = this;
                    this.flush(g.Z_SYNC_FLUSH, function () {
                        o._binding.params(t, n),
                        o._hadError || (o._level = t, o._strategy = n, i && i())
                    })
                } else r.nextTick(i)
            }, p.prototype.reset = function () {
                return this._binding.reset()
            }, p.prototype._flush = function (e) {
                this._transform(new t(0), "", e)
            }, p.prototype.flush = function (e, n) {
                var i = this._writableState;
                if (("function" == typeof e || void 0 === e && !n) && (n = e, e = g.Z_FULL_FLUSH), i.ended)n && r.nextTick(n); else if (i.ending)n && this.once("end", n); else if (i.needDrain) {
                    var o = this;
                    this.once("drain", function () {
                        o.flush(n)
                    })
                } else this._flushFlag = e, this.write(new t(0), "", n)
            }, p.prototype.close = function (t) {
                if (t && r.nextTick(t), !this._closed) {
                    this._closed = !0, this._binding.close();
                    var e = this;
                    r.nextTick(function () {
                        e.emit("close")
                    })
                }
            }, p.prototype._transform = function (e, n, r) {
                var i, o = this._writableState, a = o.ending || o.ended, s = a && (!e || o.length === e.length);
                if (null === !e && !t.isBuffer(e))return r(new Error("invalid input"));
                s ? i = g.Z_FINISH : (i = this._flushFlag, e.length >= o.length && (this._flushFlag = this._opts.flush || g.Z_NO_FLUSH));
                this._processChunk(e, i, r)
            }, p.prototype._processChunk = function (e, n, r) {
                function i(c, p) {
                    if (!u._hadError) {
                        var d = a - p;
                        if (v(d >= 0, "have should not go down"), d > 0) {
                            var g = u._buffer.slice(u._offset, u._offset + d);
                            u._offset += d, l ? u.push(g) : (f.push(g), h += g.length)
                        }
                        if ((0 === p || u._offset >= u._chunkSize) && (a = u._chunkSize, u._offset = 0, u._buffer = new t(u._chunkSize)), 0 === p) {
                            if (s += o - c, o = c, !l)return !0;
                            var y = u._binding.write(n, e, s, o, u._buffer, u._offset, u._chunkSize);
                            return y.callback = i, void(y.buffer = e)
                        }
                        if (!l)return !1;
                        r()
                    }
                }

                var o = e && e.length, a = this._chunkSize - this._offset, s = 0, u = this, l = "function" == typeof r;
                if (!l) {
                    var c, f = [], h = 0;
                    this.on("error", function (t) {
                        c = t
                    });
                    do {
                        var p = this._binding.writeSync(n, e, s, o, this._buffer, this._offset, a)
                    } while (!this._hadError && i(p[0], p[1]));
                    if (this._hadError)throw c;
                    var d = t.concat(f, h);
                    return this.close(), d
                }
                var g = this._binding.write(n, e, s, o, this._buffer, this._offset, a);
                g.buffer = e, g.callback = i
            }, y.inherits(a, p), y.inherits(s, p), y.inherits(u, p), y.inherits(l, p), y.inherits(c, p), y.inherits(f, p), y.inherits(h, p)
        }).call(e, n(2).Buffer, n(36))
    }, function (t, e, n) {
        (function (t, r) {
            function i(t) {
                if (t < e.DEFLATE || t > e.UNZIP)throw new TypeError("Bad argument");
                this.mode = t, this.init_done = !1, this.write_in_progress = !1, this.pending_close = !1, this.windowBits = 0, this.level = 0, this.memLevel = 0, this.strategy = 0, this.dictionary = null
            }

            function o(t, e) {
                for (var n = 0; n < t.length; n++)this[e + n] = t[n]
            }

            var a = n(61), s = n(62), u = n(63), l = n(68), c = n(71);
            for (var f in c)e[f] = c[f];
            e.NONE = 0, e.DEFLATE = 1, e.INFLATE = 2, e.GZIP = 3, e.GUNZIP = 4, e.DEFLATERAW = 5, e.INFLATERAW = 6, e.UNZIP = 7, i.prototype.init = function (t, n, r, i, o) {
                switch (this.windowBits = t, this.level = n, this.memLevel = r, this.strategy = i, this.mode !== e.GZIP && this.mode !== e.GUNZIP || (this.windowBits += 16), this.mode === e.UNZIP && (this.windowBits += 32), this.mode !== e.DEFLATERAW && this.mode !== e.INFLATERAW || (this.windowBits = -this.windowBits), this.strm = new s, this.mode) {
                    case e.DEFLATE:
                    case e.GZIP:
                    case e.DEFLATERAW:
                        var a = u.deflateInit2(this.strm, this.level, e.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
                        break;
                    case e.INFLATE:
                    case e.GUNZIP:
                    case e.INFLATERAW:
                    case e.UNZIP:
                        var a = l.inflateInit2(this.strm, this.windowBits);
                        break;
                    default:
                        throw new Error("Unknown mode " + this.mode)
                }
                if (a !== e.Z_OK)return void this._error(a);
                this.write_in_progress = !1, this.init_done = !0
            }, i.prototype.params = function () {
                throw new Error("deflateParams Not supported")
            }, i.prototype._writeCheck = function () {
                if (!this.init_done)throw new Error("write before init");
                if (this.mode === e.NONE)throw new Error("already finalized");
                if (this.write_in_progress)throw new Error("write already in progress");
                if (this.pending_close)throw new Error("close is pending")
            }, i.prototype.write = function (e, n, r, i, o, a, s) {
                this._writeCheck(), this.write_in_progress = !0;
                var u = this;
                return t.nextTick(function () {
                    u.write_in_progress = !1;
                    var t = u._write(e, n, r, i, o, a, s);
                    u.callback(t[0], t[1]), u.pending_close && u.close()
                }), this
            }, i.prototype.writeSync = function (t, e, n, r, i, o, a) {
                return this._writeCheck(), this._write(t, e, n, r, i, o, a)
            }, i.prototype._write = function (t, n, i, a, s, c, f) {
                if (this.write_in_progress = !0, t !== e.Z_NO_FLUSH && t !== e.Z_PARTIAL_FLUSH && t !== e.Z_SYNC_FLUSH && t !== e.Z_FULL_FLUSH && t !== e.Z_FINISH && t !== e.Z_BLOCK)throw new Error("Invalid flush value");
                null == n && (n = new r(0), a = 0, i = 0), s._set ? s.set = s._set : s.set = o;
                var h = this.strm;
                switch (h.avail_in = a, h.input = n, h.next_in = i, h.avail_out = f, h.output = s, h.next_out = c, this.mode) {
                    case e.DEFLATE:
                    case e.GZIP:
                    case e.DEFLATERAW:
                        var p = u.deflate(h, t);
                        break;
                    case e.UNZIP:
                    case e.INFLATE:
                    case e.GUNZIP:
                    case e.INFLATERAW:
                        var p = l.inflate(h, t);
                        break;
                    default:
                        throw new Error("Unknown mode " + this.mode)
                }
                return p !== e.Z_STREAM_END && p !== e.Z_OK && this._error(p), this.write_in_progress = !1, [h.avail_in, h.avail_out]
            }, i.prototype.close = function () {
                if (this.write_in_progress)return void(this.pending_close = !0);
                this.pending_close = !1, this.mode === e.DEFLATE || this.mode === e.GZIP || this.mode === e.DEFLATERAW ? u.deflateEnd(this.strm) : l.inflateEnd(this.strm), this.mode = e.NONE
            }, i.prototype.reset = function () {
                switch (this.mode) {
                    case e.DEFLATE:
                    case e.DEFLATERAW:
                        var t = u.deflateReset(this.strm);
                        break;
                    case e.INFLATE:
                    case e.INFLATERAW:
                        var t = l.inflateReset(this.strm)
                }
                t !== e.Z_OK && this._error(t)
            }, i.prototype._error = function (t) {
                this.onerror(a[t] + ": " + this.strm.msg, t), this.write_in_progress = !1, this.pending_close && this.close()
            }, e.Zlib = i
        }).call(e, n(36), n(2).Buffer)
    }, function (t, e) {
        "use strict";
        t.exports = {
            2: "need dictionary",
            1: "stream end",
            0: "",
            "-1": "file error",
            "-2": "stream error",
            "-3": "data error",
            "-4": "insufficient memory",
            "-5": "buffer error",
            "-6": "incompatible version"
        }
    }, function (t, e) {
        "use strict";
        function n() {
            this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0
        }

        t.exports = n
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            return t.msg = M[e], e
        }

        function i(t) {
            return (t << 1) - (t > 4 ? 9 : 0)
        }

        function o(t) {
            for (var e = t.length; --e >= 0;)t[e] = 0
        }

        function a(t) {
            var e = t.state, n = e.pending;
            n > t.avail_out && (n = t.avail_out), 0 !== n && (T.arraySet(t.output, e.pending_buf, e.pending_out, n, t.next_out), t.next_out += n, e.pending_out += n, t.total_out += n, t.avail_out -= n, e.pending -= n, 0 === e.pending && (e.pending_out = 0))
        }

        function s(t, e) {
            O._tr_flush_block(t, t.block_start >= 0 ? t.block_start : -1, t.strstart - t.block_start, e), t.block_start = t.strstart, a(t.strm)
        }

        function u(t, e) {
            t.pending_buf[t.pending++] = e
        }

        function l(t, e) {
            t.pending_buf[t.pending++] = e >>> 8 & 255, t.pending_buf[t.pending++] = 255 & e
        }

        function c(t, e, n, r) {
            var i = t.avail_in;
            return i > r && (i = r), 0 === i ? 0 : (t.avail_in -= i, T.arraySet(e, t.input, t.next_in, i, n), 1 === t.state.wrap ? t.adler = B(t.adler, e, i, n) : 2 === t.state.wrap && (t.adler = L(t.adler, e, i, n)), t.next_in += i, t.total_in += i, i)
        }

        function f(t, e) {
            var n, r, i = t.max_chain_length, o = t.strstart, a = t.prev_length, s = t.nice_match, u = t.strstart > t.w_size - lt ? t.strstart - (t.w_size - lt) : 0, l = t.window, c = t.w_mask, f = t.prev, h = t.strstart + ut, p = l[o + a - 1], d = l[o + a];
            t.prev_length >= t.good_match && (i >>= 2), s > t.lookahead && (s = t.lookahead);
            do {
                if (n = e, l[n + a] === d && l[n + a - 1] === p && l[n] === l[o] && l[++n] === l[o + 1]) {
                    o += 2, n++;
                    do {
                    } while (l[++o] === l[++n] && l[++o] === l[++n] && l[++o] === l[++n] && l[++o] === l[++n] && l[++o] === l[++n] && l[++o] === l[++n] && l[++o] === l[++n] && l[++o] === l[++n] && o < h);
                    if (r = ut - (h - o), o = h - ut, r > a) {
                        if (t.match_start = e, a = r, r >= s)break;
                        p = l[o + a - 1], d = l[o + a]
                    }
                }
            } while ((e = f[e & c]) > u && 0 != --i);
            return a <= t.lookahead ? a : t.lookahead
        }

        function h(t) {
            var e, n, r, i, o, a = t.w_size;
            do {
                if (i = t.window_size - t.lookahead - t.strstart, t.strstart >= a + (a - lt)) {
                    T.arraySet(t.window, t.window, a, a, 0), t.match_start -= a, t.strstart -= a, t.block_start -= a, n = t.hash_size, e = n;
                    do {
                        r = t.head[--e], t.head[e] = r >= a ? r - a : 0
                    } while (--n);
                    n = a, e = n;
                    do {
                        r = t.prev[--e], t.prev[e] = r >= a ? r - a : 0
                    } while (--n);
                    i += a
                }
                if (0 === t.strm.avail_in)break;
                if (n = c(t.strm, t.window, t.strstart + t.lookahead, i), t.lookahead += n, t.lookahead + t.insert >= st)for (o = t.strstart - t.insert, t.ins_h = t.window[o], t.ins_h = (t.ins_h << t.hash_shift ^ t.window[o + 1]) & t.hash_mask; t.insert && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[o + st - 1]) & t.hash_mask, t.prev[o & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = o, o++, t.insert--, !(t.lookahead + t.insert < st)););
            } while (t.lookahead < lt && 0 !== t.strm.avail_in)
        }

        function p(t, e) {
            var n = 65535;
            for (n > t.pending_buf_size - 5 && (n = t.pending_buf_size - 5); ;) {
                if (t.lookahead <= 1) {
                    if (h(t), 0 === t.lookahead && e === R)return bt;
                    if (0 === t.lookahead)break
                }
                t.strstart += t.lookahead, t.lookahead = 0;
                var r = t.block_start + n;
                if ((0 === t.strstart || t.strstart >= r) && (t.lookahead = t.strstart - r, t.strstart = r, s(t, !1), 0 === t.strm.avail_out))return bt;
                if (t.strstart - t.block_start >= t.w_size - lt && (s(t, !1), 0 === t.strm.avail_out))return bt
            }
            return t.insert = 0, e === D ? (s(t, !0), 0 === t.strm.avail_out ? wt : xt) : (t.strstart > t.block_start && (s(t, !1), t.strm.avail_out), bt)
        }

        function d(t, e) {
            for (var n, r; ;) {
                if (t.lookahead < lt) {
                    if (h(t), t.lookahead < lt && e === R)return bt;
                    if (0 === t.lookahead)break
                }
                if (n = 0, t.lookahead >= st && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + st - 1]) & t.hash_mask, n = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), 0 !== n && t.strstart - n <= t.w_size - lt && (t.match_length = f(t, n)), t.match_length >= st)if (r = O._tr_tally(t, t.strstart - t.match_start, t.match_length - st), t.lookahead -= t.match_length, t.match_length <= t.max_lazy_match && t.lookahead >= st) {
                    t.match_length--;
                    do {
                        t.strstart++, t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + st - 1]) & t.hash_mask, n = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart
                    } while (0 != --t.match_length);
                    t.strstart++
                } else t.strstart += t.match_length, t.match_length = 0, t.ins_h = t.window[t.strstart], t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + 1]) & t.hash_mask; else r = O._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++;
                if (r && (s(t, !1), 0 === t.strm.avail_out))return bt
            }
            return t.insert = t.strstart < st - 1 ? t.strstart : st - 1, e === D ? (s(t, !0), 0 === t.strm.avail_out ? wt : xt) : t.last_lit && (s(t, !1), 0 === t.strm.avail_out) ? bt : mt
        }

        function g(t, e) {
            for (var n, r, i; ;) {
                if (t.lookahead < lt) {
                    if (h(t), t.lookahead < lt && e === R)return bt;
                    if (0 === t.lookahead)break
                }
                if (n = 0, t.lookahead >= st && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + st - 1]) & t.hash_mask, n = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), t.prev_length = t.match_length, t.prev_match = t.match_start, t.match_length = st - 1, 0 !== n && t.prev_length < t.max_lazy_match && t.strstart - n <= t.w_size - lt && (t.match_length = f(t, n), t.match_length <= 5 && (t.strategy === q || t.match_length === st && t.strstart - t.match_start > 4096) && (t.match_length = st - 1)), t.prev_length >= st && t.match_length <= t.prev_length) {
                    i = t.strstart + t.lookahead - st, r = O._tr_tally(t, t.strstart - 1 - t.prev_match, t.prev_length - st), t.lookahead -= t.prev_length - 1, t.prev_length -= 2;
                    do {
                        ++t.strstart <= i && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + st - 1]) & t.hash_mask, n = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart)
                    } while (0 != --t.prev_length);
                    if (t.match_available = 0, t.match_length = st - 1, t.strstart++, r && (s(t, !1), 0 === t.strm.avail_out))return bt
                } else if (t.match_available) {
                    if (r = O._tr_tally(t, 0, t.window[t.strstart - 1]), r && s(t, !1), t.strstart++, t.lookahead--, 0 === t.strm.avail_out)return bt
                } else t.match_available = 1, t.strstart++, t.lookahead--
            }
            return t.match_available && (r = O._tr_tally(t, 0, t.window[t.strstart - 1]), t.match_available = 0), t.insert = t.strstart < st - 1 ? t.strstart : st - 1, e === D ? (s(t, !0), 0 === t.strm.avail_out ? wt : xt) : t.last_lit && (s(t, !1), 0 === t.strm.avail_out) ? bt : mt
        }

        function y(t, e) {
            for (var n, r, i, o, a = t.window; ;) {
                if (t.lookahead <= ut) {
                    if (h(t), t.lookahead <= ut && e === R)return bt;
                    if (0 === t.lookahead)break
                }
                if (t.match_length = 0, t.lookahead >= st && t.strstart > 0 && (i = t.strstart - 1, (r = a[i]) === a[++i] && r === a[++i] && r === a[++i])) {
                    o = t.strstart + ut;
                    do {
                    } while (r === a[++i] && r === a[++i] && r === a[++i] && r === a[++i] && r === a[++i] && r === a[++i] && r === a[++i] && r === a[++i] && i < o);
                    t.match_length = ut - (o - i), t.match_length > t.lookahead && (t.match_length = t.lookahead)
                }
                if (t.match_length >= st ? (n = O._tr_tally(t, 1, t.match_length - st), t.lookahead -= t.match_length, t.strstart += t.match_length, t.match_length = 0) : (n = O._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++), n && (s(t, !1), 0 === t.strm.avail_out))return bt
            }
            return t.insert = 0, e === D ? (s(t, !0), 0 === t.strm.avail_out ? wt : xt) : t.last_lit && (s(t, !1), 0 === t.strm.avail_out) ? bt : mt
        }

        function v(t, e) {
            for (var n; ;) {
                if (0 === t.lookahead && (h(t), 0 === t.lookahead)) {
                    if (e === R)return bt;
                    break
                }
                if (t.match_length = 0, n = O._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++, n && (s(t, !1), 0 === t.strm.avail_out))return bt
            }
            return t.insert = 0, e === D ? (s(t, !0), 0 === t.strm.avail_out ? wt : xt) : t.last_lit && (s(t, !1), 0 === t.strm.avail_out) ? bt : mt
        }

        function b(t, e, n, r, i) {
            this.good_length = t, this.max_lazy = e, this.nice_length = n, this.max_chain = r, this.func = i
        }

        function m(t) {
            t.window_size = 2 * t.w_size, o(t.head), t.max_lazy_match = I[t.level].max_lazy, t.good_match = I[t.level].good_length, t.nice_match = I[t.level].nice_length, t.max_chain_length = I[t.level].max_chain, t.strstart = 0, t.block_start = 0, t.lookahead = 0, t.insert = 0, t.match_length = t.prev_length = st - 1, t.match_available = 0, t.ins_h = 0
        }

        function w() {
            this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = Q, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new T.Buf16(2 * ot), this.dyn_dtree = new T.Buf16(2 * (2 * rt + 1)), this.bl_tree = new T.Buf16(2 * (2 * it + 1)), o(this.dyn_ltree), o(this.dyn_dtree), o(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new T.Buf16(at + 1), this.heap = new T.Buf16(2 * nt + 1), o(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new T.Buf16(2 * nt + 1), o(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0
        }

        function x(t) {
            var e;
            return t && t.state ? (t.total_in = t.total_out = 0, t.data_type = J, e = t.state, e.pending = 0, e.pending_out = 0, e.wrap < 0 && (e.wrap = -e.wrap), e.status = e.wrap ? ft : yt, t.adler = 2 === e.wrap ? 0 : 1, e.last_flush = R, O._tr_init(e), U) : r(t, j)
        }

        function _(t) {
            var e = x(t);
            return e === U && m(t.state), e
        }

        function k(t, e) {
            return t && t.state ? 2 !== t.state.wrap ? j : (t.state.gzhead = e, U) : j
        }

        function S(t, e, n, i, o, a) {
            if (!t)return j;
            var s = 1;
            if (e === H && (e = 6), i < 0 ? (s = 0, i = -i) : i > 15 && (s = 2, i -= 16), o < 1 || o > $ || n !== Q || i < 8 || i > 15 || e < 0 || e > 9 || a < 0 || a > X)return r(t, j);
            8 === i && (i = 9);
            var u = new w;
            return t.state = u, u.strm = t, u.wrap = s, u.gzhead = null, u.w_bits = i, u.w_size = 1 << u.w_bits, u.w_mask = u.w_size - 1, u.hash_bits = o + 7, u.hash_size = 1 << u.hash_bits, u.hash_mask = u.hash_size - 1, u.hash_shift = ~~((u.hash_bits + st - 1) / st), u.window = new T.Buf8(2 * u.w_size), u.head = new T.Buf16(u.hash_size), u.prev = new T.Buf16(u.w_size), u.lit_bufsize = 1 << o + 6, u.pending_buf_size = 4 * u.lit_bufsize, u.pending_buf = new T.Buf8(u.pending_buf_size), u.d_buf = 1 * u.lit_bufsize, u.l_buf = 3 * u.lit_bufsize, u.level = e, u.strategy = a, u.method = n, _(t)
        }

        function C(t, e) {
            return S(t, e, Q, tt, et, K)
        }

        function A(t, e) {
            var n, s, c, f;
            if (!t || !t.state || e > N || e < 0)return t ? r(t, j) : j;
            if (s = t.state, !t.output || !t.input && 0 !== t.avail_in || s.status === vt && e !== D)return r(t, 0 === t.avail_out ? V : j);
            if (s.strm = t, n = s.last_flush, s.last_flush = e, s.status === ft)if (2 === s.wrap)t.adler = 0, u(s, 31), u(s, 139), u(s, 8), s.gzhead ? (u(s, (s.gzhead.text ? 1 : 0) + (s.gzhead.hcrc ? 2 : 0) + (s.gzhead.extra ? 4 : 0) + (s.gzhead.name ? 8 : 0) + (s.gzhead.comment ? 16 : 0)), u(s, 255 & s.gzhead.time), u(s, s.gzhead.time >> 8 & 255), u(s, s.gzhead.time >> 16 & 255), u(s, s.gzhead.time >> 24 & 255), u(s, 9 === s.level ? 2 : s.strategy >= Z || s.level < 2 ? 4 : 0), u(s, 255 & s.gzhead.os), s.gzhead.extra && s.gzhead.extra.length && (u(s, 255 & s.gzhead.extra.length), u(s, s.gzhead.extra.length >> 8 & 255)), s.gzhead.hcrc && (t.adler = L(t.adler, s.pending_buf, s.pending, 0)), s.gzindex = 0, s.status = ht) : (u(s, 0), u(s, 0), u(s, 0), u(s, 0), u(s, 0), u(s, 9 === s.level ? 2 : s.strategy >= Z || s.level < 2 ? 4 : 0), u(s, _t), s.status = yt); else {
                var h = Q + (s.w_bits - 8 << 4) << 8, p = -1;
                p = s.strategy >= Z || s.level < 2 ? 0 : s.level < 6 ? 1 : 6 === s.level ? 2 : 3, h |= p << 6, 0 !== s.strstart && (h |= ct), h += 31 - h % 31, s.status = yt, l(s, h), 0 !== s.strstart && (l(s, t.adler >>> 16), l(s, 65535 & t.adler)), t.adler = 1
            }
            if (s.status === ht)if (s.gzhead.extra) {
                for (c = s.pending; s.gzindex < (65535 & s.gzhead.extra.length) && (s.pending !== s.pending_buf_size || (s.gzhead.hcrc && s.pending > c && (t.adler = L(t.adler, s.pending_buf, s.pending - c, c)), a(t), c = s.pending, s.pending !== s.pending_buf_size));)u(s, 255 & s.gzhead.extra[s.gzindex]), s.gzindex++;
                s.gzhead.hcrc && s.pending > c && (t.adler = L(t.adler, s.pending_buf, s.pending - c, c)), s.gzindex === s.gzhead.extra.length && (s.gzindex = 0, s.status = pt)
            } else s.status = pt;
            if (s.status === pt)if (s.gzhead.name) {
                c = s.pending;
                do {
                    if (s.pending === s.pending_buf_size && (s.gzhead.hcrc && s.pending > c && (t.adler = L(t.adler, s.pending_buf, s.pending - c, c)), a(t), c = s.pending, s.pending === s.pending_buf_size)) {
                        f = 1;
                        break
                    }
                    f = s.gzindex < s.gzhead.name.length ? 255 & s.gzhead.name.charCodeAt(s.gzindex++) : 0, u(s, f)
                } while (0 !== f);
                s.gzhead.hcrc && s.pending > c && (t.adler = L(t.adler, s.pending_buf, s.pending - c, c)), 0 === f && (s.gzindex = 0, s.status = dt)
            } else s.status = dt;
            if (s.status === dt)if (s.gzhead.comment) {
                c = s.pending;
                do {
                    if (s.pending === s.pending_buf_size && (s.gzhead.hcrc && s.pending > c && (t.adler = L(t.adler, s.pending_buf, s.pending - c, c)), a(t), c = s.pending, s.pending === s.pending_buf_size)) {
                        f = 1;
                        break
                    }
                    f = s.gzindex < s.gzhead.comment.length ? 255 & s.gzhead.comment.charCodeAt(s.gzindex++) : 0, u(s, f)
                } while (0 !== f);
                s.gzhead.hcrc && s.pending > c && (t.adler = L(t.adler, s.pending_buf, s.pending - c, c)), 0 === f && (s.status = gt)
            } else s.status = gt;
            if (s.status === gt && (s.gzhead.hcrc ? (s.pending + 2 > s.pending_buf_size && a(t), s.pending + 2 <= s.pending_buf_size && (u(s, 255 & t.adler), u(s, t.adler >> 8 & 255), t.adler = 0, s.status = yt)) : s.status = yt), 0 !== s.pending) {
                if (a(t), 0 === t.avail_out)return s.last_flush = -1, U
            } else if (0 === t.avail_in && i(e) <= i(n) && e !== D)return r(t, V);
            if (s.status === vt && 0 !== t.avail_in)return r(t, V);
            if (0 !== t.avail_in || 0 !== s.lookahead || e !== R && s.status !== vt) {
                var d = s.strategy === Z ? v(s, e) : s.strategy === Y ? y(s, e) : I[s.level].func(s, e);
                if (d !== wt && d !== xt || (s.status = vt), d === bt || d === wt)return 0 === t.avail_out && (s.last_flush = -1), U;
                if (d === mt && (e === F ? O._tr_align(s) : e !== N && (O._tr_stored_block(s, 0, 0, !1), e === z && (o(s.head), 0 === s.lookahead && (s.strstart = 0, s.block_start = 0, s.insert = 0))), a(t), 0 === t.avail_out))return s.last_flush = -1, U
            }
            return e !== D ? U : s.wrap <= 0 ? W : (2 === s.wrap ? (u(s, 255 & t.adler), u(s, t.adler >> 8 & 255), u(s, t.adler >> 16 & 255), u(s, t.adler >> 24 & 255), u(s, 255 & t.total_in), u(s, t.total_in >> 8 & 255), u(s, t.total_in >> 16 & 255), u(s, t.total_in >> 24 & 255)) : (l(s, t.adler >>> 16), l(s, 65535 & t.adler)), a(t), s.wrap > 0 && (s.wrap = -s.wrap), 0 !== s.pending ? U : W)
        }

        function P(t) {
            var e;
            return t && t.state ? (e = t.state.status) !== ft && e !== ht && e !== pt && e !== dt && e !== gt && e !== yt && e !== vt ? r(t, j) : (t.state = null, e === yt ? r(t, G) : U) : j
        }

        function E(t, e) {
            var n, r, i, a, s, u, l, c, f = e.length;
            if (!t || !t.state)return j;
            if (n = t.state, 2 === (a = n.wrap) || 1 === a && n.status !== ft || n.lookahead)return j;
            for (1 === a && (t.adler = B(t.adler, e, f, 0)), n.wrap = 0, f >= n.w_size && (0 === a && (o(n.head), n.strstart = 0, n.block_start = 0, n.insert = 0), c = new T.Buf8(n.w_size), T.arraySet(c, e, f - n.w_size, n.w_size, 0), e = c, f = n.w_size), s = t.avail_in, u = t.next_in, l = t.input, t.avail_in = f, t.next_in = 0, t.input = e, h(n); n.lookahead >= st;) {
                r = n.strstart, i = n.lookahead - (st - 1);
                do {
                    n.ins_h = (n.ins_h << n.hash_shift ^ n.window[r + st - 1]) & n.hash_mask, n.prev[r & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = r, r++
                } while (--i);
                n.strstart = r, n.lookahead = st - 1, h(n)
            }
            return n.strstart += n.lookahead, n.block_start = n.strstart, n.insert = n.lookahead, n.lookahead = 0, n.match_length = n.prev_length = st - 1, n.match_available = 0, t.next_in = u, t.input = l, t.avail_in = s, n.wrap = a, U
        }

        var I, T = n(64), O = n(65), B = n(66), L = n(67), M = n(61), R = 0, F = 1, z = 3, D = 4, N = 5, U = 0, W = 1, j = -2, G = -3, V = -5, H = -1, q = 1, Z = 2, Y = 3, X = 4, K = 0, J = 2, Q = 8, $ = 9, tt = 15, et = 8, nt = 286, rt = 30, it = 19, ot = 2 * nt + 1, at = 15, st = 3, ut = 258, lt = ut + st + 1, ct = 32, ft = 42, ht = 69, pt = 73, dt = 91, gt = 103, yt = 113, vt = 666, bt = 1, mt = 2, wt = 3, xt = 4, _t = 3;
        I = [new b(0, 0, 0, 0, p), new b(4, 4, 8, 4, d), new b(4, 5, 16, 8, d), new b(4, 6, 32, 32, d), new b(4, 4, 16, 16, g), new b(8, 16, 32, 32, g), new b(8, 16, 128, 128, g), new b(8, 32, 128, 256, g), new b(32, 128, 258, 1024, g), new b(32, 258, 258, 4096, g)], e.deflateInit = C, e.deflateInit2 = S, e.deflateReset = _, e.deflateResetKeep = x, e.deflateSetHeader = k, e.deflate = A, e.deflateEnd = P, e.deflateSetDictionary = E, e.deflateInfo = "pako deflate (from Nodeca project)"
    }, function (t, e) {
        "use strict";
        var n = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
        e.assign = function (t) {
            for (var e = Array.prototype.slice.call(arguments, 1); e.length;) {
                var n = e.shift();
                if (n) {
                    if ("object" != typeof n)throw new TypeError(n + "must be non-object");
                    for (var r in n)n.hasOwnProperty(r) && (t[r] = n[r])
                }
            }
            return t
        }, e.shrinkBuf = function (t, e) {
            return t.length === e ? t : t.subarray ? t.subarray(0, e) : (t.length = e, t)
        };
        var r = {
            arraySet: function (t, e, n, r, i) {
                if (e.subarray && t.subarray)return void t.set(e.subarray(n, n + r), i);
                for (var o = 0; o < r; o++)t[i + o] = e[n + o]
            }, flattenChunks: function (t) {
                var e, n, r, i, o, a;
                for (r = 0, e = 0, n = t.length; e < n; e++)r += t[e].length;
                for (a = new Uint8Array(r), i = 0, e = 0, n = t.length; e < n; e++)o = t[e], a.set(o, i), i += o.length;
                return a
            }
        }, i = {
            arraySet: function (t, e, n, r, i) {
                for (var o = 0; o < r; o++)t[i + o] = e[n + o]
            }, flattenChunks: function (t) {
                return [].concat.apply([], t)
            }
        };
        e.setTyped = function (t) {
            t ? (e.Buf8 = Uint8Array, e.Buf16 = Uint16Array, e.Buf32 = Int32Array, e.assign(e, r)) : (e.Buf8 = Array, e.Buf16 = Array, e.Buf32 = Array, e.assign(e, i))
        }, e.setTyped(n)
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            for (var e = t.length; --e >= 0;)t[e] = 0
        }

        function i(t, e, n, r, i) {
            this.static_tree = t, this.extra_bits = e, this.extra_base = n, this.elems = r, this.max_length = i, this.has_stree = t && t.length
        }

        function o(t, e) {
            this.dyn_tree = t, this.max_code = 0, this.stat_desc = e
        }

        function a(t) {
            return t < 256 ? ot[t] : ot[256 + (t >>> 7)]
        }

        function s(t, e) {
            t.pending_buf[t.pending++] = 255 & e, t.pending_buf[t.pending++] = e >>> 8 & 255
        }

        function u(t, e, n) {
            t.bi_valid > Z - n ? (t.bi_buf |= e << t.bi_valid & 65535, s(t, t.bi_buf), t.bi_buf = e >> Z - t.bi_valid, t.bi_valid += n - Z) : (t.bi_buf |= e << t.bi_valid & 65535, t.bi_valid += n)
        }

        function l(t, e, n) {
            u(t, n[2 * e], n[2 * e + 1])
        }

        function c(t, e) {
            var n = 0;
            do {
                n |= 1 & t, t >>>= 1, n <<= 1
            } while (--e > 0);
            return n >>> 1
        }

        function f(t) {
            16 === t.bi_valid ? (s(t, t.bi_buf), t.bi_buf = 0, t.bi_valid = 0) : t.bi_valid >= 8 && (t.pending_buf[t.pending++] = 255 & t.bi_buf, t.bi_buf >>= 8, t.bi_valid -= 8)
        }

        function h(t, e) {
            var n, r, i, o, a, s, u = e.dyn_tree, l = e.max_code, c = e.stat_desc.static_tree, f = e.stat_desc.has_stree, h = e.stat_desc.extra_bits, p = e.stat_desc.extra_base, d = e.stat_desc.max_length, g = 0;
            for (o = 0; o <= q; o++)t.bl_count[o] = 0;
            for (u[2 * t.heap[t.heap_max] + 1] = 0, n = t.heap_max + 1; n < H; n++)r = t.heap[n], o = u[2 * u[2 * r + 1] + 1] + 1, o > d && (o = d, g++), u[2 * r + 1] = o, r > l || (t.bl_count[o]++, a = 0, r >= p && (a = h[r - p]), s = u[2 * r], t.opt_len += s * (o + a), f && (t.static_len += s * (c[2 * r + 1] + a)));
            if (0 !== g) {
                do {
                    for (o = d - 1; 0 === t.bl_count[o];)o--;
                    t.bl_count[o]--, t.bl_count[o + 1] += 2, t.bl_count[d]--, g -= 2
                } while (g > 0);
                for (o = d; 0 !== o; o--)for (r = t.bl_count[o]; 0 !== r;)(i = t.heap[--n]) > l || (u[2 * i + 1] !== o && (t.opt_len += (o - u[2 * i + 1]) * u[2 * i], u[2 * i + 1] = o), r--)
            }
        }

        function p(t, e, n) {
            var r, i, o = new Array(q + 1), a = 0;
            for (r = 1; r <= q; r++)o[r] = a = a + n[r - 1] << 1;
            for (i = 0; i <= e; i++) {
                var s = t[2 * i + 1];
                0 !== s && (t[2 * i] = c(o[s]++, s))
            }
        }

        function d() {
            var t, e, n, r, o, a = new Array(q + 1);
            for (n = 0, r = 0; r < U - 1; r++)for (st[r] = n, t = 0; t < 1 << $[r]; t++)at[n++] = r;
            for (at[n - 1] = r, o = 0, r = 0; r < 16; r++)for (ut[r] = o, t = 0; t < 1 << tt[r]; t++)ot[o++] = r;
            for (o >>= 7; r < G; r++)for (ut[r] = o << 7, t = 0; t < 1 << tt[r] - 7; t++)ot[256 + o++] = r;
            for (e = 0; e <= q; e++)a[e] = 0;
            for (t = 0; t <= 143;)rt[2 * t + 1] = 8, t++, a[8]++;
            for (; t <= 255;)rt[2 * t + 1] = 9, t++, a[9]++;
            for (; t <= 279;)rt[2 * t + 1] = 7, t++, a[7]++;
            for (; t <= 287;)rt[2 * t + 1] = 8, t++, a[8]++;
            for (p(rt, j + 1, a), t = 0; t < G; t++)it[2 * t + 1] = 5, it[2 * t] = c(t, 5);
            lt = new i(rt, $, W + 1, j, q), ct = new i(it, tt, 0, G, q), ft = new i(new Array(0), et, 0, V, Y)
        }

        function g(t) {
            var e;
            for (e = 0; e < j; e++)t.dyn_ltree[2 * e] = 0;
            for (e = 0; e < G; e++)t.dyn_dtree[2 * e] = 0;
            for (e = 0; e < V; e++)t.bl_tree[2 * e] = 0;
            t.dyn_ltree[2 * X] = 1, t.opt_len = t.static_len = 0, t.last_lit = t.matches = 0
        }

        function y(t) {
            t.bi_valid > 8 ? s(t, t.bi_buf) : t.bi_valid > 0 && (t.pending_buf[t.pending++] = t.bi_buf), t.bi_buf = 0, t.bi_valid = 0
        }

        function v(t, e, n, r) {
            y(t), r && (s(t, n), s(t, ~n)), B.arraySet(t.pending_buf, t.window, e, n, t.pending), t.pending += n
        }

        function b(t, e, n, r) {
            var i = 2 * e, o = 2 * n;
            return t[i] < t[o] || t[i] === t[o] && r[e] <= r[n]
        }

        function m(t, e, n) {
            for (var r = t.heap[n], i = n << 1; i <= t.heap_len && (i < t.heap_len && b(e, t.heap[i + 1], t.heap[i], t.depth) && i++, !b(e, r, t.heap[i], t.depth));)t.heap[n] = t.heap[i], n = i, i <<= 1;
            t.heap[n] = r
        }

        function w(t, e, n) {
            var r, i, o, s, c = 0;
            if (0 !== t.last_lit)do {
                r = t.pending_buf[t.d_buf + 2 * c] << 8 | t.pending_buf[t.d_buf + 2 * c + 1], i = t.pending_buf[t.l_buf + c], c++, 0 === r ? l(t, i, e) : (o = at[i], l(t, o + W + 1, e), s = $[o], 0 !== s && (i -= st[o], u(t, i, s)), r--, o = a(r), l(t, o, n), 0 !== (s = tt[o]) && (r -= ut[o], u(t, r, s)))
            } while (c < t.last_lit);
            l(t, X, e)
        }

        function x(t, e) {
            var n, r, i, o = e.dyn_tree, a = e.stat_desc.static_tree, s = e.stat_desc.has_stree, u = e.stat_desc.elems, l = -1;
            for (t.heap_len = 0, t.heap_max = H, n = 0; n < u; n++)0 !== o[2 * n] ? (t.heap[++t.heap_len] = l = n, t.depth[n] = 0) : o[2 * n + 1] = 0;
            for (; t.heap_len < 2;)i = t.heap[++t.heap_len] = l < 2 ? ++l : 0, o[2 * i] = 1, t.depth[i] = 0, t.opt_len--, s && (t.static_len -= a[2 * i + 1]);
            for (e.max_code = l, n = t.heap_len >> 1; n >= 1; n--)m(t, o, n);
            i = u;
            do {
                n = t.heap[1], t.heap[1] = t.heap[t.heap_len--], m(t, o, 1), r = t.heap[1], t.heap[--t.heap_max] = n, t.heap[--t.heap_max] = r, o[2 * i] = o[2 * n] + o[2 * r], t.depth[i] = (t.depth[n] >= t.depth[r] ? t.depth[n] : t.depth[r]) + 1, o[2 * n + 1] = o[2 * r + 1] = i, t.heap[1] = i++, m(t, o, 1)
            } while (t.heap_len >= 2);
            t.heap[--t.heap_max] = t.heap[1], h(t, e), p(o, l, t.bl_count)
        }

        function _(t, e, n) {
            var r, i, o = -1, a = e[1], s = 0, u = 7, l = 4;
            for (0 === a && (u = 138, l = 3), e[2 * (n + 1) + 1] = 65535, r = 0; r <= n; r++)i = a, a = e[2 * (r + 1) + 1], ++s < u && i === a || (s < l ? t.bl_tree[2 * i] += s : 0 !== i ? (i !== o && t.bl_tree[2 * i]++, t.bl_tree[2 * K]++) : s <= 10 ? t.bl_tree[2 * J]++ : t.bl_tree[2 * Q]++, s = 0, o = i, 0 === a ? (u = 138, l = 3) : i === a ? (u = 6, l = 3) : (u = 7, l = 4))
        }

        function k(t, e, n) {
            var r, i, o = -1, a = e[1], s = 0, c = 7, f = 4;
            for (0 === a && (c = 138, f = 3), r = 0; r <= n; r++)if (i = a, a = e[2 * (r + 1) + 1], !(++s < c && i === a)) {
                if (s < f)do {
                    l(t, i, t.bl_tree)
                } while (0 != --s); else 0 !== i ? (i !== o && (l(t, i, t.bl_tree), s--), l(t, K, t.bl_tree), u(t, s - 3, 2)) : s <= 10 ? (l(t, J, t.bl_tree), u(t, s - 3, 3)) : (l(t, Q, t.bl_tree), u(t, s - 11, 7));
                s = 0, o = i, 0 === a ? (c = 138, f = 3) : i === a ? (c = 6, f = 3) : (c = 7, f = 4)
            }
        }

        function S(t) {
            var e;
            for (_(t, t.dyn_ltree, t.l_desc.max_code), _(t, t.dyn_dtree, t.d_desc.max_code), x(t, t.bl_desc), e = V - 1; e >= 3 && 0 === t.bl_tree[2 * nt[e] + 1]; e--);
            return t.opt_len += 3 * (e + 1) + 5 + 5 + 4, e
        }

        function C(t, e, n, r) {
            var i;
            for (u(t, e - 257, 5), u(t, n - 1, 5), u(t, r - 4, 4), i = 0; i < r; i++)u(t, t.bl_tree[2 * nt[i] + 1], 3);
            k(t, t.dyn_ltree, e - 1), k(t, t.dyn_dtree, n - 1)
        }

        function A(t) {
            var e, n = 4093624447;
            for (e = 0; e <= 31; e++, n >>>= 1)if (1 & n && 0 !== t.dyn_ltree[2 * e])return M;
            if (0 !== t.dyn_ltree[18] || 0 !== t.dyn_ltree[20] || 0 !== t.dyn_ltree[26])return R;
            for (e = 32; e < W; e++)if (0 !== t.dyn_ltree[2 * e])return R;
            return M
        }

        function P(t) {
            ht || (d(), ht = !0), t.l_desc = new o(t.dyn_ltree, lt), t.d_desc = new o(t.dyn_dtree, ct), t.bl_desc = new o(t.bl_tree, ft), t.bi_buf = 0, t.bi_valid = 0, g(t)
        }

        function E(t, e, n, r) {
            u(t, (z << 1) + (r ? 1 : 0), 3), v(t, e, n, !0)
        }

        function I(t) {
            u(t, D << 1, 3), l(t, X, rt), f(t)
        }

        function T(t, e, n, r) {
            var i, o, a = 0;
            t.level > 0 ? (t.strm.data_type === F && (t.strm.data_type = A(t)), x(t, t.l_desc), x(t, t.d_desc), a = S(t), i = t.opt_len + 3 + 7 >>> 3, (o = t.static_len + 3 + 7 >>> 3) <= i && (i = o)) : i = o = n + 5, n + 4 <= i && -1 !== e ? E(t, e, n, r) : t.strategy === L || o === i ? (u(t, (D << 1) + (r ? 1 : 0), 3), w(t, rt, it)) : (u(t, (N << 1) + (r ? 1 : 0), 3), C(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, a + 1), w(t, t.dyn_ltree, t.dyn_dtree)), g(t), r && y(t)
        }

        function O(t, e, n) {
            return t.pending_buf[t.d_buf + 2 * t.last_lit] = e >>> 8 & 255, t.pending_buf[t.d_buf + 2 * t.last_lit + 1] = 255 & e, t.pending_buf[t.l_buf + t.last_lit] = 255 & n, t.last_lit++, 0 === e ? t.dyn_ltree[2 * n]++ : (t.matches++, e--, t.dyn_ltree[2 * (at[n] + W + 1)]++, t.dyn_dtree[2 * a(e)]++), t.last_lit === t.lit_bufsize - 1
        }

        var B = n(64), L = 4, M = 0, R = 1, F = 2, z = 0, D = 1, N = 2, U = 29, W = 256, j = W + 1 + U, G = 30, V = 19, H = 2 * j + 1, q = 15, Z = 16, Y = 7, X = 256, K = 16, J = 17, Q = 18, $ = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], tt = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], et = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], nt = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], rt = new Array(2 * (j + 2));
        r(rt);
        var it = new Array(2 * G);
        r(it);
        var ot = new Array(512);
        r(ot);
        var at = new Array(256);
        r(at);
        var st = new Array(U);
        r(st);
        var ut = new Array(G);
        r(ut);
        var lt, ct, ft, ht = !1;
        e._tr_init = P, e._tr_stored_block = E, e._tr_flush_block = T, e._tr_tally = O, e._tr_align = I
    }, function (t, e) {
        "use strict";
        function n(t, e, n, r) {
            for (var i = 65535 & t | 0, o = t >>> 16 & 65535 | 0, a = 0; 0 !== n;) {
                a = n > 2e3 ? 2e3 : n, n -= a;
                do {
                    i = i + e[r++] | 0, o = o + i | 0
                } while (--a);
                i %= 65521, o %= 65521
            }
            return i | o << 16 | 0
        }

        t.exports = n
    }, function (t, e) {
        "use strict";
        function n(t, e, n, i) {
            var o = r, a = i + n;
            t ^= -1;
            for (var s = i; s < a; s++)t = t >>> 8 ^ o[255 & (t ^ e[s])];
            return -1 ^ t
        }

        var r = function () {
            for (var t, e = [], n = 0; n < 256; n++) {
                t = n;
                for (var r = 0; r < 8; r++)t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
                e[n] = t
            }
            return e
        }();
        t.exports = n
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            return (t >>> 24 & 255) + (t >>> 8 & 65280) + ((65280 & t) << 8) + ((255 & t) << 24)
        }

        function i() {
            this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new b.Buf16(320), this.work = new b.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0
        }

        function o(t) {
            var e;
            return t && t.state ? (e = t.state, t.total_in = t.total_out = e.total = 0, t.msg = "", e.wrap && (t.adler = 1 & e.wrap), e.mode = z, e.last = 0, e.havedict = 0, e.dmax = 32768, e.head = null, e.hold = 0, e.bits = 0, e.lencode = e.lendyn = new b.Buf32(gt), e.distcode = e.distdyn = new b.Buf32(yt), e.sane = 1, e.back = -1, I) : B
        }

        function a(t) {
            var e;
            return t && t.state ? (e = t.state, e.wsize = 0, e.whave = 0, e.wnext = 0, o(t)) : B
        }

        function s(t, e) {
            var n, r;
            return t && t.state ? (r = t.state, e < 0 ? (n = 0, e = -e) : (n = 1 + (e >> 4), e < 48 && (e &= 15)), e && (e < 8 || e > 15) ? B : (null !== r.window && r.wbits !== e && (r.window = null), r.wrap = n, r.wbits = e, a(t))) : B
        }

        function u(t, e) {
            var n, r;
            return t ? (r = new i, t.state = r, r.window = null, n = s(t, e), n !== I && (t.state = null), n) : B
        }

        function l(t) {
            return u(t, vt)
        }

        function c(t) {
            if (bt) {
                var e;
                for (y = new b.Buf32(512), v = new b.Buf32(32), e = 0; e < 144;)t.lens[e++] = 8;
                for (; e < 256;)t.lens[e++] = 9;
                for (; e < 280;)t.lens[e++] = 7;
                for (; e < 288;)t.lens[e++] = 8;
                for (_(S, t.lens, 0, 288, y, 0, t.work, {bits: 9}), e = 0; e < 32;)t.lens[e++] = 5;
                _(C, t.lens, 0, 32, v, 0, t.work, {bits: 5}), bt = !1
            }
            t.lencode = y, t.lenbits = 9, t.distcode = v, t.distbits = 5
        }

        function f(t, e, n, r) {
            var i, o = t.state;
            return null === o.window && (o.wsize = 1 << o.wbits, o.wnext = 0, o.whave = 0, o.window = new b.Buf8(o.wsize)), r >= o.wsize ? (b.arraySet(o.window, e, n - o.wsize, o.wsize, 0), o.wnext = 0, o.whave = o.wsize) : (i = o.wsize - o.wnext, i > r && (i = r), b.arraySet(o.window, e, n - r, i, o.wnext), r -= i, r ? (b.arraySet(o.window, e, n - r, r, 0), o.wnext = r, o.whave = o.wsize) : (o.wnext += i, o.wnext === o.wsize && (o.wnext = 0), o.whave < o.wsize && (o.whave += i))), 0
        }

        function h(t, e) {
            var n, i, o, a, s, u, l, h, p, d, g, y, v, gt, yt, vt, bt, mt, wt, xt, _t, kt, St, Ct, At = 0, Pt = new b.Buf8(4), Et = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
            if (!t || !t.state || !t.output || !t.input && 0 !== t.avail_in)return B;
            n = t.state, n.mode === Y && (n.mode = X), s = t.next_out, o = t.output, l = t.avail_out, a = t.next_in, i = t.input, u = t.avail_in, h = n.hold, p = n.bits, d = u, g = l, kt = I;
            t:for (; ;)switch (n.mode) {
                case z:
                    if (0 === n.wrap) {
                        n.mode = X;
                        break
                    }
                    for (; p < 16;) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    if (2 & n.wrap && 35615 === h) {
                        n.check = 0, Pt[0] = 255 & h, Pt[1] = h >>> 8 & 255, n.check = w(n.check, Pt, 2, 0), h = 0, p = 0, n.mode = D;
                        break
                    }
                    if (n.flags = 0, n.head && (n.head.done = !1), !(1 & n.wrap) || (((255 & h) << 8) + (h >> 8)) % 31) {
                        t.msg = "incorrect header check", n.mode = ht;
                        break
                    }
                    if ((15 & h) !== F) {
                        t.msg = "unknown compression method", n.mode = ht;
                        break
                    }
                    if (h >>>= 4, p -= 4, _t = 8 + (15 & h), 0 === n.wbits)n.wbits = _t; else if (_t > n.wbits) {
                        t.msg = "invalid window size", n.mode = ht;
                        break
                    }
                    n.dmax = 1 << _t, t.adler = n.check = 1, n.mode = 512 & h ? q : Y, h = 0, p = 0;
                    break;
                case D:
                    for (; p < 16;) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    if (n.flags = h, (255 & n.flags) !== F) {
                        t.msg = "unknown compression method", n.mode = ht;
                        break
                    }
                    if (57344 & n.flags) {
                        t.msg = "unknown header flags set", n.mode = ht;
                        break
                    }
                    n.head && (n.head.text = h >> 8 & 1), 512 & n.flags && (Pt[0] = 255 & h, Pt[1] = h >>> 8 & 255, n.check = w(n.check, Pt, 2, 0)), h = 0, p = 0, n.mode = N;
                case N:
                    for (; p < 32;) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    n.head && (n.head.time = h), 512 & n.flags && (Pt[0] = 255 & h, Pt[1] = h >>> 8 & 255, Pt[2] = h >>> 16 & 255, Pt[3] = h >>> 24 & 255, n.check = w(n.check, Pt, 4, 0)), h = 0, p = 0, n.mode = U;
                case U:
                    for (; p < 16;) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    n.head && (n.head.xflags = 255 & h, n.head.os = h >> 8), 512 & n.flags && (Pt[0] = 255 & h, Pt[1] = h >>> 8 & 255, n.check = w(n.check, Pt, 2, 0)), h = 0, p = 0, n.mode = W;
                case W:
                    if (1024 & n.flags) {
                        for (; p < 16;) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        n.length = h, n.head && (n.head.extra_len = h), 512 & n.flags && (Pt[0] = 255 & h, Pt[1] = h >>> 8 & 255, n.check = w(n.check, Pt, 2, 0)), h = 0, p = 0
                    } else n.head && (n.head.extra = null);
                    n.mode = j;
                case j:
                    if (1024 & n.flags && (y = n.length, y > u && (y = u), y && (n.head && (_t = n.head.extra_len - n.length, n.head.extra || (n.head.extra = new Array(n.head.extra_len)), b.arraySet(n.head.extra, i, a, y, _t)), 512 & n.flags && (n.check = w(n.check, i, y, a)), u -= y, a += y, n.length -= y), n.length))break t;
                    n.length = 0, n.mode = G;
                case G:
                    if (2048 & n.flags) {
                        if (0 === u)break t;
                        y = 0;
                        do {
                            _t = i[a + y++], n.head && _t && n.length < 65536 && (n.head.name += String.fromCharCode(_t))
                        } while (_t && y < u);
                        if (512 & n.flags && (n.check = w(n.check, i, y, a)), u -= y, a += y, _t)break t
                    } else n.head && (n.head.name = null);
                    n.length = 0, n.mode = V;
                case V:
                    if (4096 & n.flags) {
                        if (0 === u)break t;
                        y = 0;
                        do {
                            _t = i[a + y++], n.head && _t && n.length < 65536 && (n.head.comment += String.fromCharCode(_t))
                        } while (_t && y < u);
                        if (512 & n.flags && (n.check = w(n.check, i, y, a)), u -= y, a += y, _t)break t
                    } else n.head && (n.head.comment = null);
                    n.mode = H;
                case H:
                    if (512 & n.flags) {
                        for (; p < 16;) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        if (h !== (65535 & n.check)) {
                            t.msg = "header crc mismatch", n.mode = ht;
                            break
                        }
                        h = 0, p = 0
                    }
                    n.head && (n.head.hcrc = n.flags >> 9 & 1, n.head.done = !0), t.adler = n.check = 0, n.mode = Y;
                    break;
                case q:
                    for (; p < 32;) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    t.adler = n.check = r(h), h = 0, p = 0, n.mode = Z;
                case Z:
                    if (0 === n.havedict)return t.next_out = s, t.avail_out = l, t.next_in = a, t.avail_in = u, n.hold = h, n.bits = p, O;
                    t.adler = n.check = 1, n.mode = Y;
                case Y:
                    if (e === P || e === E)break t;
                case X:
                    if (n.last) {
                        h >>>= 7 & p, p -= 7 & p, n.mode = lt;
                        break
                    }
                    for (; p < 3;) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    switch (n.last = 1 & h, h >>>= 1, p -= 1, 3 & h) {
                        case 0:
                            n.mode = K;
                            break;
                        case 1:
                            if (c(n), n.mode = nt, e === E) {
                                h >>>= 2, p -= 2;
                                break t
                            }
                            break;
                        case 2:
                            n.mode = $;
                            break;
                        case 3:
                            t.msg = "invalid block type", n.mode = ht
                    }
                    h >>>= 2, p -= 2;
                    break;
                case K:
                    for (h >>>= 7 & p, p -= 7 & p; p < 32;) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    if ((65535 & h) != (h >>> 16 ^ 65535)) {
                        t.msg = "invalid stored block lengths", n.mode = ht;
                        break
                    }
                    if (n.length = 65535 & h, h = 0, p = 0, n.mode = J, e === E)break t;
                case J:
                    n.mode = Q;
                case Q:
                    if (y = n.length) {
                        if (y > u && (y = u), y > l && (y = l), 0 === y)break t;
                        b.arraySet(o, i, a, y, s), u -= y, a += y, l -= y, s += y, n.length -= y;
                        break
                    }
                    n.mode = Y;
                    break;
                case $:
                    for (; p < 14;) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    if (n.nlen = 257 + (31 & h), h >>>= 5, p -= 5, n.ndist = 1 + (31 & h), h >>>= 5, p -= 5, n.ncode = 4 + (15 & h), h >>>= 4, p -= 4, n.nlen > 286 || n.ndist > 30) {
                        t.msg = "too many length or distance symbols", n.mode = ht;
                        break
                    }
                    n.have = 0, n.mode = tt;
                case tt:
                    for (; n.have < n.ncode;) {
                        for (; p < 3;) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        n.lens[Et[n.have++]] = 7 & h, h >>>= 3, p -= 3
                    }
                    for (; n.have < 19;)n.lens[Et[n.have++]] = 0;
                    if (n.lencode = n.lendyn, n.lenbits = 7, St = {bits: n.lenbits}, kt = _(k, n.lens, 0, 19, n.lencode, 0, n.work, St), n.lenbits = St.bits, kt) {
                        t.msg = "invalid code lengths set", n.mode = ht;
                        break
                    }
                    n.have = 0, n.mode = et;
                case et:
                    for (; n.have < n.nlen + n.ndist;) {
                        for (; At = n.lencode[h & (1 << n.lenbits) - 1], yt = At >>> 24, vt = At >>> 16 & 255, bt = 65535 & At, !(yt <= p);) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        if (bt < 16)h >>>= yt, p -= yt, n.lens[n.have++] = bt; else {
                            if (16 === bt) {
                                for (Ct = yt + 2; p < Ct;) {
                                    if (0 === u)break t;
                                    u--, h += i[a++] << p, p += 8
                                }
                                if (h >>>= yt, p -= yt, 0 === n.have) {
                                    t.msg = "invalid bit length repeat", n.mode = ht;
                                    break
                                }
                                _t = n.lens[n.have - 1], y = 3 + (3 & h), h >>>= 2, p -= 2
                            } else if (17 === bt) {
                                for (Ct = yt + 3; p < Ct;) {
                                    if (0 === u)break t;
                                    u--, h += i[a++] << p, p += 8
                                }
                                h >>>= yt, p -= yt, _t = 0, y = 3 + (7 & h), h >>>= 3, p -= 3
                            } else {
                                for (Ct = yt + 7; p < Ct;) {
                                    if (0 === u)break t;
                                    u--, h += i[a++] << p, p += 8
                                }
                                h >>>= yt, p -= yt, _t = 0, y = 11 + (127 & h), h >>>= 7, p -= 7
                            }
                            if (n.have + y > n.nlen + n.ndist) {
                                t.msg = "invalid bit length repeat", n.mode = ht;
                                break
                            }
                            for (; y--;)n.lens[n.have++] = _t
                        }
                    }
                    if (n.mode === ht)break;
                    if (0 === n.lens[256]) {
                        t.msg = "invalid code -- missing end-of-block", n.mode = ht;
                        break
                    }
                    if (n.lenbits = 9, St = {bits: n.lenbits}, kt = _(S, n.lens, 0, n.nlen, n.lencode, 0, n.work, St), n.lenbits = St.bits, kt) {
                        t.msg = "invalid literal/lengths set", n.mode = ht;
                        break
                    }
                    if (n.distbits = 6, n.distcode = n.distdyn, St = {bits: n.distbits}, kt = _(C, n.lens, n.nlen, n.ndist, n.distcode, 0, n.work, St), n.distbits = St.bits, kt) {
                        t.msg = "invalid distances set", n.mode = ht;
                        break
                    }
                    if (n.mode = nt, e === E)break t;
                case nt:
                    n.mode = rt;
                case rt:
                    if (u >= 6 && l >= 258) {
                        t.next_out = s, t.avail_out = l, t.next_in = a, t.avail_in = u, n.hold = h, n.bits = p, x(t, g), s = t.next_out, o = t.output, l = t.avail_out, a = t.next_in, i = t.input, u = t.avail_in, h = n.hold, p = n.bits, n.mode === Y && (n.back = -1);
                        break
                    }
                    for (n.back = 0; At = n.lencode[h & (1 << n.lenbits) - 1], yt = At >>> 24, vt = At >>> 16 & 255, bt = 65535 & At, !(yt <= p);) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    if (vt && 0 == (240 & vt)) {
                        for (mt = yt, wt = vt, xt = bt; At = n.lencode[xt + ((h & (1 << mt + wt) - 1) >> mt)], yt = At >>> 24, vt = At >>> 16 & 255, bt = 65535 & At, !(mt + yt <= p);) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        h >>>= mt, p -= mt, n.back += mt
                    }
                    if (h >>>= yt, p -= yt, n.back += yt, n.length = bt, 0 === vt) {
                        n.mode = ut;
                        break
                    }
                    if (32 & vt) {
                        n.back = -1, n.mode = Y;
                        break
                    }
                    if (64 & vt) {
                        t.msg = "invalid literal/length code", n.mode = ht;
                        break
                    }
                    n.extra = 15 & vt, n.mode = it;
                case it:
                    if (n.extra) {
                        for (Ct = n.extra; p < Ct;) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        n.length += h & (1 << n.extra) - 1, h >>>= n.extra, p -= n.extra, n.back += n.extra
                    }
                    n.was = n.length, n.mode = ot;
                case ot:
                    for (; At = n.distcode[h & (1 << n.distbits) - 1], yt = At >>> 24, vt = At >>> 16 & 255, bt = 65535 & At, !(yt <= p);) {
                        if (0 === u)break t;
                        u--, h += i[a++] << p, p += 8
                    }
                    if (0 == (240 & vt)) {
                        for (mt = yt, wt = vt, xt = bt; At = n.distcode[xt + ((h & (1 << mt + wt) - 1) >> mt)], yt = At >>> 24, vt = At >>> 16 & 255, bt = 65535 & At, !(mt + yt <= p);) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        h >>>= mt, p -= mt, n.back += mt
                    }
                    if (h >>>= yt, p -= yt, n.back += yt, 64 & vt) {
                        t.msg = "invalid distance code", n.mode = ht;
                        break
                    }
                    n.offset = bt, n.extra = 15 & vt, n.mode = at;
                case at:
                    if (n.extra) {
                        for (Ct = n.extra; p < Ct;) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        n.offset += h & (1 << n.extra) - 1, h >>>= n.extra, p -= n.extra, n.back += n.extra
                    }
                    if (n.offset > n.dmax) {
                        t.msg = "invalid distance too far back", n.mode = ht;
                        break
                    }
                    n.mode = st;
                case st:
                    if (0 === l)break t;
                    if (y = g - l, n.offset > y) {
                        if ((y = n.offset - y) > n.whave && n.sane) {
                            t.msg = "invalid distance too far back", n.mode = ht;
                            break
                        }
                        y > n.wnext ? (y -= n.wnext, v = n.wsize - y) : v = n.wnext - y, y > n.length && (y = n.length), gt = n.window
                    } else gt = o, v = s - n.offset, y = n.length;
                    y > l && (y = l), l -= y, n.length -= y;
                    do {
                        o[s++] = gt[v++]
                    } while (--y);
                    0 === n.length && (n.mode = rt);
                    break;
                case ut:
                    if (0 === l)break t;
                    o[s++] = n.length, l--, n.mode = rt;
                    break;
                case lt:
                    if (n.wrap) {
                        for (; p < 32;) {
                            if (0 === u)break t;
                            u--, h |= i[a++] << p, p += 8
                        }
                        if (g -= l, t.total_out += g, n.total += g, g && (t.adler = n.check = n.flags ? w(n.check, o, g, s - g) : m(n.check, o, g, s - g)), g = l, (n.flags ? h : r(h)) !== n.check) {
                            t.msg = "incorrect data check", n.mode = ht;
                            break
                        }
                        h = 0, p = 0
                    }
                    n.mode = ct;
                case ct:
                    if (n.wrap && n.flags) {
                        for (; p < 32;) {
                            if (0 === u)break t;
                            u--, h += i[a++] << p, p += 8
                        }
                        if (h !== (4294967295 & n.total)) {
                            t.msg = "incorrect length check", n.mode = ht;
                            break
                        }
                        h = 0, p = 0
                    }
                    n.mode = ft;
                case ft:
                    kt = T;
                    break t;
                case ht:
                    kt = L;
                    break t;
                case pt:
                    return M;
                case dt:
                default:
                    return B
            }
            return t.next_out = s, t.avail_out = l, t.next_in = a, t.avail_in = u, n.hold = h, n.bits = p, (n.wsize || g !== t.avail_out && n.mode < ht && (n.mode < lt || e !== A)) && f(t, t.output, t.next_out, g - t.avail_out) ? (n.mode = pt, M) : (d -= t.avail_in, g -= t.avail_out, t.total_in += d, t.total_out += g, n.total += g, n.wrap && g && (t.adler = n.check = n.flags ? w(n.check, o, g, t.next_out - g) : m(n.check, o, g, t.next_out - g)), t.data_type = n.bits + (n.last ? 64 : 0) + (n.mode === Y ? 128 : 0) + (n.mode === nt || n.mode === J ? 256 : 0), (0 === d && 0 === g || e === A) && kt === I && (kt = R), kt)
        }

        function p(t) {
            if (!t || !t.state)return B;
            var e = t.state;
            return e.window && (e.window = null), t.state = null, I
        }

        function d(t, e) {
            var n;
            return t && t.state ? (n = t.state, 0 == (2 & n.wrap) ? B : (n.head = e, e.done = !1, I)) : B
        }

        function g(t, e) {
            var n, r, i = e.length;
            return t && t.state ? (n = t.state, 0 !== n.wrap && n.mode !== Z ? B : n.mode === Z && (r = 1, (r = m(r, e, i, 0)) !== n.check) ? L : f(t, e, i, i) ? (n.mode = pt, M) : (n.havedict = 1, I)) : B
        }

        var y, v, b = n(64), m = n(66), w = n(67), x = n(69), _ = n(70), k = 0, S = 1, C = 2, A = 4, P = 5, E = 6, I = 0, T = 1, O = 2, B = -2, L = -3, M = -4, R = -5, F = 8, z = 1, D = 2, N = 3, U = 4, W = 5, j = 6, G = 7, V = 8, H = 9, q = 10, Z = 11, Y = 12, X = 13, K = 14, J = 15, Q = 16, $ = 17, tt = 18, et = 19, nt = 20, rt = 21, it = 22, ot = 23, at = 24, st = 25, ut = 26, lt = 27, ct = 28, ft = 29, ht = 30, pt = 31, dt = 32, gt = 852, yt = 592, vt = 15, bt = !0;
        e.inflateReset = a, e.inflateReset2 = s, e.inflateResetKeep = o, e.inflateInit = l, e.inflateInit2 = u, e.inflate = h, e.inflateEnd = p, e.inflateGetHeader = d, e.inflateSetDictionary = g, e.inflateInfo = "pako inflate (from Nodeca project)"
    }, function (t, e) {
        "use strict";
        t.exports = function (t, e) {
            var n, r, i, o, a, s, u, l, c, f, h, p, d, g, y, v, b, m, w, x, _, k, S, C, A;
            n = t.state, r = t.next_in, C = t.input, i = r + (t.avail_in - 5), o = t.next_out, A = t.output, a = o - (e - t.avail_out), s = o + (t.avail_out - 257), u = n.dmax, l = n.wsize, c = n.whave, f = n.wnext, h = n.window, p = n.hold, d = n.bits, g = n.lencode, y = n.distcode, v = (1 << n.lenbits) - 1, b = (1 << n.distbits) - 1;
            t:do {
                d < 15 && (p += C[r++] << d, d += 8, p += C[r++] << d, d += 8), m = g[p & v];
                e:for (; ;) {
                    if (w = m >>> 24, p >>>= w, d -= w, 0 === (w = m >>> 16 & 255))A[o++] = 65535 & m; else {
                        if (!(16 & w)) {
                            if (0 == (64 & w)) {
                                m = g[(65535 & m) + (p & (1 << w) - 1)];
                                continue e
                            }
                            if (32 & w) {
                                n.mode = 12;
                                break t
                            }
                            t.msg = "invalid literal/length code", n.mode = 30;
                            break t
                        }
                        x = 65535 & m, w &= 15, w && (d < w && (p += C[r++] << d, d += 8), x += p & (1 << w) - 1, p >>>= w, d -= w), d < 15 && (p += C[r++] << d, d += 8, p += C[r++] << d, d += 8), m = y[p & b];
                        n:for (; ;) {
                            if (w = m >>> 24, p >>>= w, d -= w, !(16 & (w = m >>> 16 & 255))) {
                                if (0 == (64 & w)) {
                                    m = y[(65535 & m) + (p & (1 << w) - 1)];
                                    continue n
                                }
                                t.msg = "invalid distance code", n.mode = 30;
                                break t
                            }
                            if (_ = 65535 & m, w &= 15, d < w && (p += C[r++] << d, (d += 8) < w && (p += C[r++] << d, d += 8)), (_ += p & (1 << w) - 1) > u) {
                                t.msg = "invalid distance too far back", n.mode = 30;
                                break t
                            }
                            if (p >>>= w, d -= w, w = o - a, _ > w) {
                                if ((w = _ - w) > c && n.sane) {
                                    t.msg = "invalid distance too far back", n.mode = 30;
                                    break t
                                }
                                if (k = 0, S = h, 0 === f) {
                                    if (k += l - w, w < x) {
                                        x -= w;
                                        do {
                                            A[o++] = h[k++]
                                        } while (--w);
                                        k = o - _, S = A
                                    }
                                } else if (f < w) {
                                    if (k += l + f - w, (w -= f) < x) {
                                        x -= w;
                                        do {
                                            A[o++] = h[k++]
                                        } while (--w);
                                        if (k = 0, f < x) {
                                            w = f, x -= w;
                                            do {
                                                A[o++] = h[k++]
                                            } while (--w);
                                            k = o - _, S = A
                                        }
                                    }
                                } else if (k += f - w, w < x) {
                                    x -= w;
                                    do {
                                        A[o++] = h[k++]
                                    } while (--w);
                                    k = o - _, S = A
                                }
                                for (; x > 2;)A[o++] = S[k++], A[o++] = S[k++], A[o++] = S[k++], x -= 3;
                                x && (A[o++] = S[k++], x > 1 && (A[o++] = S[k++]))
                            } else {
                                k = o - _;
                                do {
                                    A[o++] = A[k++], A[o++] = A[k++], A[o++] = A[k++], x -= 3
                                } while (x > 2);
                                x && (A[o++] = A[k++], x > 1 && (A[o++] = A[k++]))
                            }
                            break
                        }
                    }
                    break
                }
            } while (r < i && o < s);
            x = d >> 3, r -= x, d -= x << 3, p &= (1 << d) - 1, t.next_in = r, t.next_out = o, t.avail_in = r < i ? i - r + 5 : 5 - (r - i), t.avail_out = o < s ? s - o + 257 : 257 - (o - s), n.hold = p, n.bits = d
        }
    }, function (t, e, n) {
        "use strict";
        var r = n(64), i = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], o = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], a = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], s = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        t.exports = function (t, e, n, u, l, c, f, h) {
            var p, d, g, y, v, b, m, w, x, _ = h.bits, k = 0, S = 0, C = 0, A = 0, P = 0, E = 0, I = 0, T = 0, O = 0, B = 0, L = null, M = 0, R = new r.Buf16(16), F = new r.Buf16(16), z = null, D = 0;
            for (k = 0; k <= 15; k++)R[k] = 0;
            for (S = 0; S < u; S++)R[e[n + S]]++;
            for (P = _, A = 15; A >= 1 && 0 === R[A]; A--);
            if (P > A && (P = A), 0 === A)return l[c++] = 20971520, l[c++] = 20971520, h.bits = 1, 0;
            for (C = 1; C < A && 0 === R[C]; C++);
            for (P < C && (P = C), T = 1, k = 1; k <= 15; k++)if (T <<= 1, (T -= R[k]) < 0)return -1;
            if (T > 0 && (0 === t || 1 !== A))return -1;
            for (F[1] = 0, k = 1; k < 15; k++)F[k + 1] = F[k] + R[k];
            for (S = 0; S < u; S++)0 !== e[n + S] && (f[F[e[n + S]]++] = S);
            if (0 === t ? (L = z = f, b = 19) : 1 === t ? (L = i, M -= 257, z = o, D -= 257, b = 256) : (L = a, z = s, b = -1), B = 0, S = 0, k = C, v = c, E = P, I = 0, g = -1, O = 1 << P, y = O - 1, 1 === t && O > 852 || 2 === t && O > 592)return 1;
            for (var N = 0; ;) {
                N++, m = k - I, f[S] < b ? (w = 0, x = f[S]) : f[S] > b ? (w = z[D + f[S]], x = L[M + f[S]]) : (w = 96, x = 0), p = 1 << k - I, d = 1 << E, C = d;
                do {
                    d -= p, l[v + (B >> I) + d] = m << 24 | w << 16 | x | 0
                } while (0 !== d);
                for (p = 1 << k - 1; B & p;)p >>= 1;
                if (0 !== p ? (B &= p - 1, B += p) : B = 0, S++, 0 == --R[k]) {
                    if (k === A)break;
                    k = e[n + f[S]]
                }
                if (k > P && (B & y) !== g) {
                    for (0 === I && (I = P), v += C, E = k - I, T = 1 << E; E + I < A && !((T -= R[E + I]) <= 0);)E++, T <<= 1;
                    if (O += 1 << E, 1 === t && O > 852 || 2 === t && O > 592)return 1;
                    g = B & y, l[g] = P << 24 | E << 16 | v - c | 0
                }
            }
            return 0 !== B && (l[v + B] = k - I << 24 | 64 << 16 | 0), h.bits = P, 0
        }
    }, function (t, e) {
        "use strict";
        t.exports = {
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            Z_BUF_ERROR: -5,
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,
            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,
            Z_BINARY: 0,
            Z_TEXT: 1,
            Z_UNKNOWN: 2,
            Z_DEFLATED: 8
        }
    }, function (t, e, n) {
        (function (t, r) {
            function i(t, n) {
                var r = {seen: [], stylize: a};
                return arguments.length >= 3 && (r.depth = arguments[2]), arguments.length >= 4 && (r.colors = arguments[3]), g(n) ? r.showHidden = n : n && e._extend(r, n), x(r.showHidden) && (r.showHidden = !1), x(r.depth) && (r.depth = 2), x(r.colors) && (r.colors = !1), x(r.customInspect) && (r.customInspect = !0), r.colors && (r.stylize = o), u(r, t, r.depth)
            }

            function o(t, e) {
                var n = i.styles[e];
                return n ? "[" + i.colors[n][0] + "m" + t + "[" + i.colors[n][1] + "m" : t
            }

            function a(t, e) {
                return t
            }

            function s(t) {
                var e = {};
                return t.forEach(function (t, n) {
                    e[t] = !0
                }), e
            }

            function u(t, n, r) {
                if (t.customInspect && n && A(n.inspect) && n.inspect !== e.inspect && (!n.constructor || n.constructor.prototype !== n)) {
                    var i = n.inspect(r, t);
                    return m(i) || (i = u(t, i, r)), i
                }
                var o = l(t, n);
                if (o)return o;
                var a = Object.keys(n), g = s(a);
                if (t.showHidden && (a = Object.getOwnPropertyNames(n)), C(n) && (a.indexOf("message") >= 0 || a.indexOf("description") >= 0))return c(n);
                if (0 === a.length) {
                    if (A(n)) {
                        var y = n.name ? ": " + n.name : "";
                        return t.stylize("[Function" + y + "]", "special")
                    }
                    if (_(n))return t.stylize(RegExp.prototype.toString.call(n), "regexp");
                    if (S(n))return t.stylize(Date.prototype.toString.call(n), "date");
                    if (C(n))return c(n)
                }
                var v = "", b = !1, w = ["{", "}"];
                if (d(n) && (b = !0, w = ["[", "]"]), A(n)) {
                    v = " [Function" + (n.name ? ": " + n.name : "") + "]"
                }
                if (_(n) && (v = " " + RegExp.prototype.toString.call(n)), S(n) && (v = " " + Date.prototype.toUTCString.call(n)), C(n) && (v = " " + c(n)), 0 === a.length && (!b || 0 == n.length))return w[0] + v + w[1];
                if (r < 0)return _(n) ? t.stylize(RegExp.prototype.toString.call(n), "regexp") : t.stylize("[Object]", "special");
                t.seen.push(n);
                var x;
                return x = b ? f(t, n, r, g, a) : a.map(function (e) {
                    return h(t, n, r, g, e, b)
                }), t.seen.pop(), p(x, v, w)
            }

            function l(t, e) {
                if (x(e))return t.stylize("undefined", "undefined");
                if (m(e)) {
                    var n = "'" + JSON.stringify(e).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                    return t.stylize(n, "string")
                }
                return b(e) ? t.stylize("" + e, "number") : g(e) ? t.stylize("" + e, "boolean") : y(e) ? t.stylize("null", "null") : void 0
            }

            function c(t) {
                return "[" + Error.prototype.toString.call(t) + "]"
            }

            function f(t, e, n, r, i) {
                for (var o = [], a = 0, s = e.length; a < s; ++a)I(e, String(a)) ? o.push(h(t, e, n, r, String(a), !0)) : o.push("");
                return i.forEach(function (i) {
                    i.match(/^\d+$/) || o.push(h(t, e, n, r, i, !0))
                }), o
            }

            function h(t, e, n, r, i, o) {
                var a, s, l;
                if (l = Object.getOwnPropertyDescriptor(e, i) || {value: e[i]}, l.get ? s = l.set ? t.stylize("[Getter/Setter]", "special") : t.stylize("[Getter]", "special") : l.set && (s = t.stylize("[Setter]", "special")), I(r, i) || (a = "[" + i + "]"), s || (t.seen.indexOf(l.value) < 0 ? (s = y(n) ? u(t, l.value, null) : u(t, l.value, n - 1), s.indexOf("\n") > -1 && (s = o ? s.split("\n").map(function (t) {
                        return "  " + t
                    }).join("\n").substr(2) : "\n" + s.split("\n").map(function (t) {
                        return "   " + t
                    }).join("\n"))) : s = t.stylize("[Circular]", "special")), x(a)) {
                    if (o && i.match(/^\d+$/))return s;
                    a = JSON.stringify("" + i), a.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a = a.substr(1, a.length - 2), a = t.stylize(a, "name")) : (a = a.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a = t.stylize(a, "string"))
                }
                return a + ": " + s
            }

            function p(t, e, n) {
                var r = 0;
                return t.reduce(function (t, e) {
                    return r++, e.indexOf("\n") >= 0 && r++, t + e.replace(/\u001b\[\d\d?m/g, "").length + 1
                }, 0) > 60 ? n[0] + ("" === e ? "" : e + "\n ") + " " + t.join(",\n  ") + " " + n[1] : n[0] + e + " " + t.join(", ") + " " + n[1]
            }

            function d(t) {
                return Array.isArray(t)
            }

            function g(t) {
                return "boolean" == typeof t
            }

            function y(t) {
                return null === t
            }

            function v(t) {
                return null == t
            }

            function b(t) {
                return "number" == typeof t
            }

            function m(t) {
                return "string" == typeof t
            }

            function w(t) {
                return "symbol" == typeof t
            }

            function x(t) {
                return void 0 === t
            }

            function _(t) {
                return k(t) && "[object RegExp]" === E(t)
            }

            function k(t) {
                return "object" == typeof t && null !== t
            }

            function S(t) {
                return k(t) && "[object Date]" === E(t)
            }

            function C(t) {
                return k(t) && ("[object Error]" === E(t) || t instanceof Error)
            }

            function A(t) {
                return "function" == typeof t
            }

            function P(t) {
                return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" == typeof t || void 0 === t
            }

            function E(t) {
                return Object.prototype.toString.call(t)
            }

            function I(t, e) {
                return Object.prototype.hasOwnProperty.call(t, e)
            }

            var T = /%[sdj%]/g;
            e.format = function (t) {
                if (!m(t)) {
                    for (var e = [], n = 0; n < arguments.length; n++)e.push(i(arguments[n]));
                    return e.join(" ")
                }
                for (var n = 1, r = arguments, o = r.length, a = String(t).replace(T, function (t) {
                    if ("%%" === t)return "%";
                    if (n >= o)return t;
                    switch (t) {
                        case"%s":
                            return String(r[n++]);
                        case"%d":
                            return Number(r[n++]);
                        case"%j":
                            try {
                                return JSON.stringify(r[n++])
                            } catch (t) {
                                return "[Circular]"
                            }
                        default:
                            return t
                    }
                }), s = r[n]; n < o; s = r[++n])y(s) || !k(s) ? a += " " + s : a += " " + i(s);
                return a
            }, e.deprecate = function (n, i) {
                function o() {
                    if (!a) {
                        if (r.throwDeprecation)throw new Error(i);
                        r.traceDeprecation, a = !0
                    }
                    return n.apply(this, arguments)
                }

                if (x(t.process))return function () {
                    return e.deprecate(n, i).apply(this, arguments)
                };
                if (!0 === r.noDeprecation)return n;
                var a = !1;
                return o
            };
            var O, B = {};
            e.debuglog = function (t) {
                if (x(O) && (O = r.env.NODE_DEBUG || ""), t = t.toUpperCase(), !B[t])if (new RegExp("\\b" + t + "\\b", "i").test(O)) {
                    r.pid;
                    B[t] = function () {
                        e.format.apply(e, arguments)
                    }
                } else B[t] = function () {
                };
                return B[t]
            }, e.inspect = i, i.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
            }, i.styles = {
                special: "cyan",
                number: "yellow",
                boolean: "yellow",
                undefined: "grey",
                null: "bold",
                string: "green",
                date: "magenta",
                regexp: "red"
            }, e.isArray = d, e.isBoolean = g, e.isNull = y, e.isNullOrUndefined = v, e.isNumber = b, e.isString = m, e.isSymbol = w, e.isUndefined = x, e.isRegExp = _, e.isObject = k, e.isDate = S, e.isError = C, e.isFunction = A, e.isPrimitive = P, e.isBuffer = n(73);
            e.log = function () {
            }, e.inherits = n(74), e._extend = function (t, e) {
                if (!e || !k(e))return t;
                for (var n = Object.keys(e), r = n.length; r--;)t[n[r]] = e[n[r]];
                return t
            }
        }).call(e, function () {
            return this
        }(), n(36))
    }, function (t, e) {
        t.exports = function (t) {
            return t && "object" == typeof t && "function" == typeof t.copy && "function" == typeof t.fill && "function" == typeof t.readUInt8
        }
    }, function (t, e) {
        "function" == typeof Object.create ? t.exports = function (t, e) {
            t.super_ = e, t.prototype = Object.create(e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            })
        } : t.exports = function (t, e) {
            t.super_ = e;
            var n = function () {
            };
            n.prototype = e.prototype, t.prototype = new n, t.prototype.constructor = t
        }
    }, function (t, e, n) {
        (function (e) {
            "use strict";
            function r(t, e) {
                if (t === e)return 0;
                for (var n = t.length, r = e.length, i = 0, o = Math.min(n, r); i < o; ++i)if (t[i] !== e[i]) {
                    n = t[i], r = e[i];
                    break
                }
                return n < r ? -1 : r < n ? 1 : 0
            }

            function i(t) {
                return e.Buffer && "function" == typeof e.Buffer.isBuffer ? e.Buffer.isBuffer(t) : !(null == t || !t._isBuffer)
            }

            function o(t) {
                return Object.prototype.toString.call(t)
            }

            function a(t) {
                return !i(t) && ("function" == typeof e.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : !!t && (t instanceof DataView || !!(t.buffer && t.buffer instanceof ArrayBuffer))))
            }

            function s(t) {
                if (w.isFunction(t)) {
                    if (k)return t.name;
                    var e = t.toString(), n = e.match(C);
                    return n && n[1]
                }
            }

            function u(t, e) {
                return "string" == typeof t ? t.length < e ? t : t.slice(0, e) : t
            }

            function l(t) {
                if (k || !w.isFunction(t))return w.inspect(t);
                var e = s(t);
                return "[Function" + (e ? ": " + e : "") + "]"
            }

            function c(t) {
                return u(l(t.actual), 128) + " " + t.operator + " " + u(l(t.expected), 128)
            }

            function f(t, e, n, r, i) {
                throw new S.AssertionError({message: n, actual: t, expected: e, operator: r, stackStartFunction: i})
            }

            function h(t, e) {
                t || f(t, !0, e, "==", S.ok)
            }

            function p(t, e, n, s) {
                if (t === e)return !0;
                if (i(t) && i(e))return 0 === r(t, e);
                if (w.isDate(t) && w.isDate(e))return t.getTime() === e.getTime();
                if (w.isRegExp(t) && w.isRegExp(e))return t.source === e.source && t.global === e.global && t.multiline === e.multiline && t.lastIndex === e.lastIndex && t.ignoreCase === e.ignoreCase;
                if (null !== t && "object" == typeof t || null !== e && "object" == typeof e) {
                    if (a(t) && a(e) && o(t) === o(e) && !(t instanceof Float32Array || t instanceof Float64Array))return 0 === r(new Uint8Array(t.buffer), new Uint8Array(e.buffer));
                    if (i(t) !== i(e))return !1;
                    s = s || {actual: [], expected: []};
                    var u = s.actual.indexOf(t);
                    return -1 !== u && u === s.expected.indexOf(e) || (s.actual.push(t), s.expected.push(e), g(t, e, n, s))
                }
                return n ? t === e : t == e
            }

            function d(t) {
                return "[object Arguments]" == Object.prototype.toString.call(t)
            }

            function g(t, e, n, r) {
                if (null === t || void 0 === t || null === e || void 0 === e)return !1;
                if (w.isPrimitive(t) || w.isPrimitive(e))return t === e;
                if (n && Object.getPrototypeOf(t) !== Object.getPrototypeOf(e))return !1;
                var i = d(t), o = d(e);
                if (i && !o || !i && o)return !1;
                if (i)return t = _.call(t), e = _.call(e), p(t, e, n);
                var a, s, u = A(t), l = A(e);
                if (u.length !== l.length)return !1;
                for (u.sort(), l.sort(), s = u.length - 1; s >= 0; s--)if (u[s] !== l[s])return !1;
                for (s = u.length - 1; s >= 0; s--)if (a = u[s], !p(t[a], e[a], n, r))return !1;
                return !0
            }

            function y(t, e, n) {
                p(t, e, !0) && f(t, e, n, "notDeepStrictEqual", y)
            }

            function v(t, e) {
                if (!t || !e)return !1;
                if ("[object RegExp]" == Object.prototype.toString.call(e))return e.test(t);
                try {
                    if (t instanceof e)return !0
                } catch (t) {
                }
                return !Error.isPrototypeOf(e) && !0 === e.call({}, t)
            }

            function b(t) {
                var e;
                try {
                    t()
                } catch (t) {
                    e = t
                }
                return e
            }

            function m(t, e, n, r) {
                var i;
                if ("function" != typeof e)throw new TypeError('"block" argument must be a function');
                "string" == typeof n && (r = n, n = null), i = b(e), r = (n && n.name ? " (" + n.name + ")." : ".") + (r ? " " + r : "."), t && !i && f(i, n, "Missing expected exception" + r);
                var o = "string" == typeof r, a = !t && w.isError(i), s = !t && i && !n;
                if ((a && o && v(i, n) || s) && f(i, n, "Got unwanted exception" + r), t && i && n && !v(i, n) || !t && i)throw i
            }

            var w = n(72), x = Object.prototype.hasOwnProperty, _ = Array.prototype.slice, k = function () {
                return "foo" === function () {
                    }.name
            }(), S = t.exports = h, C = /\s*function\s+([^\(\s]*)\s*/;
            S.AssertionError = function (t) {
                this.name = "AssertionError", this.actual = t.actual, this.expected = t.expected, this.operator = t.operator, t.message ? (this.message = t.message, this.generatedMessage = !1) : (this.message = c(this), this.generatedMessage = !0);
                var e = t.stackStartFunction || f;
                if (Error.captureStackTrace)Error.captureStackTrace(this, e); else {
                    var n = new Error;
                    if (n.stack) {
                        var r = n.stack, i = s(e), o = r.indexOf("\n" + i);
                        if (o >= 0) {
                            var a = r.indexOf("\n", o + 1);
                            r = r.substring(a + 1)
                        }
                        this.stack = r
                    }
                }
            }, w.inherits(S.AssertionError, Error), S.fail = f, S.ok = h, S.equal = function (t, e, n) {
                t != e && f(t, e, n, "==", S.equal)
            }, S.notEqual = function (t, e, n) {
                t == e && f(t, e, n, "!=", S.notEqual)
            }, S.deepEqual = function (t, e, n) {
                p(t, e, !1) || f(t, e, n, "deepEqual", S.deepEqual)
            }, S.deepStrictEqual = function (t, e, n) {
                p(t, e, !0) || f(t, e, n, "deepStrictEqual", S.deepStrictEqual)
            }, S.notDeepEqual = function (t, e, n) {
                p(t, e, !1) && f(t, e, n, "notDeepEqual", S.notDeepEqual)
            }, S.notDeepStrictEqual = y, S.strictEqual = function (t, e, n) {
                t !== e && f(t, e, n, "===", S.strictEqual)
            }, S.notStrictEqual = function (t, e, n) {
                t === e && f(t, e, n, "!==", S.notStrictEqual)
            }, S.throws = function (t, e, n) {
                m(!0, t, e, n)
            }, S.doesNotThrow = function (t, e, n) {
                m(!1, t, e, n)
            }, S.ifError = function (t) {
                if (t)throw t
            };
            var A = Object.keys || function (t) {
                    var e = [];
                    for (var n in t)x.call(t, n) && e.push(n);
                    return e
                }
        }).call(e, function () {
            return this
        }())
    }, function (t, e) {
        (function () {
            var e;
            e = function () {
                function t(t, r) {
                    var i;
                    this.document = t, null == r && (r = {}), this.size = r.size || "letter", this.layout = r.layout || "portrait", "number" == typeof r.margin ? this.margins = {
                        top: r.margin,
                        left: r.margin,
                        bottom: r.margin,
                        right: r.margin
                    } : this.margins = r.margins || e, i = Array.isArray(this.size) ? this.size : n[this.size.toUpperCase()], this.width = i["portrait" === this.layout ? 0 : 1], this.height = i["portrait" === this.layout ? 1 : 0], this.content = this.document.ref(), this.resources = this.document.ref({ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"]}), Object.defineProperties(this, {
                        fonts: {
                            get: function (t) {
                                return function () {
                                    var e;
                                    return null != (e = t.resources.data).Font ? e.Font : e.Font = {}
                                }
                            }(this)
                        }, xobjects: {
                            get: function (t) {
                                return function () {
                                    var e;
                                    return null != (e = t.resources.data).XObject ? e.XObject : e.XObject = {}
                                }
                            }(this)
                        }, ext_gstates: {
                            get: function (t) {
                                return function () {
                                    var e;
                                    return null != (e = t.resources.data).ExtGState ? e.ExtGState : e.ExtGState = {}
                                }
                            }(this)
                        }, patterns: {
                            get: function (t) {
                                return function () {
                                    var e;
                                    return null != (e = t.resources.data).Pattern ? e.Pattern : e.Pattern = {}
                                }
                            }(this)
                        }, annotations: {
                            get: function (t) {
                                return function () {
                                    var e;
                                    return null != (e = t.dictionary.data).Annots ? e.Annots : e.Annots = []
                                }
                            }(this)
                        }
                    }), this.dictionary = this.document.ref({
                        Type: "Page",
                        Parent: this.document._root.data.Pages,
                        MediaBox: [0, 0, this.width, this.height],
                        Contents: this.content,
                        Resources: this.resources
                    })
                }

                var e, n;
                return t.prototype.maxY = function () {
                    return this.height - this.margins.bottom
                }, t.prototype.write = function (t) {
                    return this.content.write(t)
                }, t.prototype.end = function () {
                    return this.dictionary.end(), this.resources.end(), this.content.end()
                }, e = {top: 72, left: 72, bottom: 72, right: 72}, n = {
                    "4A0": [4767.87, 6740.79],
                    "2A0": [3370.39, 4767.87],
                    A0: [2383.94, 3370.39],
                    A1: [1683.78, 2383.94],
                    A2: [1190.55, 1683.78],
                    A3: [841.89, 1190.55],
                    A4: [595.28, 841.89],
                    A5: [419.53, 595.28],
                    A6: [297.64, 419.53],
                    A7: [209.76, 297.64],
                    A8: [147.4, 209.76],
                    A9: [104.88, 147.4],
                    A10: [73.7, 104.88],
                    B0: [2834.65, 4008.19],
                    B1: [2004.09, 2834.65],
                    B2: [1417.32, 2004.09],
                    B3: [1000.63, 1417.32],
                    B4: [708.66, 1000.63],
                    B5: [498.9, 708.66],
                    B6: [354.33, 498.9],
                    B7: [249.45, 354.33],
                    B8: [175.75, 249.45],
                    B9: [124.72, 175.75],
                    B10: [87.87, 124.72],
                    C0: [2599.37, 3676.54],
                    C1: [1836.85, 2599.37],
                    C2: [1298.27, 1836.85],
                    C3: [918.43, 1298.27],
                    C4: [649.13, 918.43],
                    C5: [459.21, 649.13],
                    C6: [323.15, 459.21],
                    C7: [229.61, 323.15],
                    C8: [161.57, 229.61],
                    C9: [113.39, 161.57],
                    C10: [79.37, 113.39],
                    RA0: [2437.8, 3458.27],
                    RA1: [1729.13, 2437.8],
                    RA2: [1218.9, 1729.13],
                    RA3: [864.57, 1218.9],
                    RA4: [609.45, 864.57],
                    SRA0: [2551.18, 3628.35],
                    SRA1: [1814.17, 2551.18],
                    SRA2: [1275.59, 1814.17],
                    SRA3: [907.09, 1275.59],
                    SRA4: [637.8, 907.09],
                    EXECUTIVE: [521.86, 756],
                    FOLIO: [612, 936],
                    LEGAL: [612, 1008],
                    LETTER: [612, 792],
                    TABLOID: [792, 1224]
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r, i, o, a;
            a = n(78), e = a.PDFGradient, r = a.PDFLinearGradient, i = a.PDFRadialGradient, t.exports = {
                initColor: function () {
                    return this._opacityRegistry = {}, this._opacityCount = 0, this._gradCount = 0
                }, _normalizeColor: function (t) {
                    var n, r;
                    return t instanceof e ? t : ("string" == typeof t && ("#" === t.charAt(0) ? (4 === t.length && (t = t.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, "#$1$1$2$2$3$3")), n = parseInt(t.slice(1), 16), t = [n >> 16, n >> 8 & 255, 255 & n]) : o[t] && (t = o[t])), Array.isArray(t) ? (3 === t.length ? t = function () {
                        var e, n, i;
                        for (i = [], e = 0, n = t.length; e < n; e++)r = t[e], i.push(r / 255);
                        return i
                    }() : 4 === t.length && (t = function () {
                        var e, n, i;
                        for (i = [], e = 0, n = t.length; e < n; e++)r = t[e], i.push(r / 100);
                        return i
                    }()), t) : null)
                }, _setColor: function (t, n) {
                    var r, i;
                    return !!(t = this._normalizeColor(t)) && (r = n ? "SCN" : "scn", t instanceof e ? (this._setColorSpace("Pattern", n), t.apply(r)) : (i = 4 === t.length ? "DeviceCMYK" : "DeviceRGB", this._setColorSpace(i, n), t = t.join(" "), this.addContent(t + " " + r)), !0)
                }, _setColorSpace: function (t, e) {
                    var n;
                    return n = e ? "CS" : "cs", this.addContent("/" + t + " " + n)
                }, fillColor: function (t, e) {
                    var n;
                    return n = this._setColor(t, !1), n && this.fillOpacity(e), this._fillColor = [t, e], this
                }, strokeColor: function (t, e) {
                    var n;
                    return n = this._setColor(t, !0), n && this.strokeOpacity(e), this
                }, opacity: function (t) {
                    return this._doOpacity(t, t), this
                }, fillOpacity: function (t) {
                    return this._doOpacity(t, null), this
                }, strokeOpacity: function (t) {
                    return this._doOpacity(null, t), this
                }, _doOpacity: function (t, e) {
                    var n, r, i, o, a;
                    if (null != t || null != e)return null != t && (t = Math.max(0, Math.min(1, t))), null != e && (e = Math.max(0, Math.min(1, e))), i = t + "_" + e, this._opacityRegistry[i] ? (a = this._opacityRegistry[i], n = a[0], o = a[1]) : (n = {Type: "ExtGState"}, null != t && (n.ca = t), null != e && (n.CA = e), n = this.ref(n), n.end(), r = ++this._opacityCount, o = "Gs" + r, this._opacityRegistry[i] = [n, o]), this.page.ext_gstates[o] = n, this.addContent("/" + o + " gs")
                }, linearGradient: function (t, e, n, i) {
                    return new r(this, t, e, n, i)
                }, radialGradient: function (t, e, n, r, o, a) {
                    return new i(this, t, e, n, r, o, a)
                }
            }, o = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                grey: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
            }
        }).call(this)
    }, function (t, e) {
        (function () {
            var e, n, r, i = function (t, e) {
                function n() {
                    this.constructor = t
                }

                for (var r in e)o.call(e, r) && (t[r] = e[r]);
                return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
            }, o = {}.hasOwnProperty;
            e = function () {
                function t(t) {
                    this.doc = t, this.stops = [], this.embedded = !1, this.transform = [1, 0, 0, 1, 0, 0], this._colorSpace = "DeviceRGB"
                }

                return t.prototype.stop = function (t, e, n) {
                    return null == n && (n = 1), n = Math.max(0, Math.min(1, n)), this.stops.push([t, this.doc._normalizeColor(e), n]), this
                }, t.prototype.setTransform = function (t, e, n, r, i, o) {
                    return this.transform = [t, e, n, r, i, o], this
                }, t.prototype.embed = function (t) {
                    var e, n, r, i, o, a, s, u, l, c, f, h, p, d, g, y, v, b, m, w;
                    if (0 !== this.stops.length) {
                        for (this.embedded = !0, this.matrix = t, c = this.stops[this.stops.length - 1], c[0] < 1 && this.stops.push([1, c[1], c[2]]), e = [], n = [], m = [], s = u = 0, g = this.stops.length - 1; 0 <= g ? u < g : u > g; s = 0 <= g ? ++u : --u)n.push(0, 1), s + 2 !== this.stops.length && e.push(this.stops[s + 1][0]), r = this.doc.ref({
                            FunctionType: 2,
                            Domain: [0, 1],
                            C0: this.stops[s + 0][1],
                            C1: this.stops[s + 1][1],
                            N: 1
                        }), m.push(r), r.end();
                        if (1 === m.length ? r = m[0] : (r = this.doc.ref({
                                FunctionType: 3,
                                Domain: [0, 1],
                                Functions: m,
                                Bounds: e,
                                Encode: n
                            }), r.end()), this.id = "Sh" + ++this.doc._gradCount, v = this.shader(r), v.end(), d = this.doc.ref({
                                Type: "Pattern",
                                PatternType: 2,
                                Shading: v,
                                Matrix: function () {
                                    var t, e, n, r;
                                    for (n = this.matrix, r = [], t = 0, e = n.length; t < e; t++)w = n[t], r.push(+w.toFixed(5));
                                    return r
                                }.call(this)
                            }), d.end(), this.stops.some(function (t) {
                                return t[2] < 1
                            })) {
                            for (o = this.opacityGradient(), o._colorSpace = "DeviceGray", y = this.stops, l = 0, f = y.length; l < f; l++)b = y[l], o.stop(b[0], [b[2]]);
                            o = o.embed(this.matrix), p = [0, 0, this.doc.page.width, this.doc.page.height], i = this.doc.ref({
                                Type: "XObject",
                                Subtype: "Form",
                                FormType: 1,
                                BBox: p,
                                Group: {Type: "Group", S: "Transparency", CS: "DeviceGray"},
                                Resources: {ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"], Pattern: {Sh1: o}}
                            }), i.write("/Pattern cs /Sh1 scn"), i.end(p.join(" ") + " re f"), a = this.doc.ref({
                                Type: "ExtGState",
                                SMask: {Type: "Mask", S: "Luminosity", G: i}
                            }), a.end(), h = this.doc.ref({
                                Type: "Pattern",
                                PatternType: 1,
                                PaintType: 1,
                                TilingType: 2,
                                BBox: p,
                                XStep: p[2],
                                YStep: p[3],
                                Resources: {
                                    ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                                    Pattern: {Sh1: d},
                                    ExtGState: {Gs1: a}
                                }
                            }), h.write("/Gs1 gs /Pattern cs /Sh1 scn"), h.end(p.join(" ") + " re f"), this.doc.page.patterns[this.id] = h
                        } else this.doc.page.patterns[this.id] = d;
                        return d
                    }
                }, t.prototype.apply = function (t) {
                    var e, n, r, i, o, a, s, u, l, c, f, h, p, d, g;
                    return d = this.doc._ctm.slice(), i = d[0], o = d[1], u = d[2], f = d[3], h = d[4], p = d[5], g = this.transform, a = g[0], s = g[1], l = g[2], c = g[3], e = g[4], n = g[5], r = [i * a + u * s, o * a + f * s, i * l + u * c, o * l + f * c, i * e + u * n + h, o * e + f * n + p], this.embedded && r.join(" ") === this.matrix.join(" ") || this.embed(r), this.doc.addContent("/" + this.id + " " + t)
                }, t
            }(), n = function (t) {
                function e(t, n, r, i, o) {
                    this.doc = t, this.x1 = n, this.y1 = r, this.x2 = i, this.y2 = o, e.__super__.constructor.apply(this, arguments)
                }

                return i(e, t), e.prototype.shader = function (t) {
                    return this.doc.ref({
                        ShadingType: 2,
                        ColorSpace: this._colorSpace,
                        Coords: [this.x1, this.y1, this.x2, this.y2],
                        Function: t,
                        Extend: [!0, !0]
                    })
                }, e.prototype.opacityGradient = function () {
                    return new e(this.doc, this.x1, this.y1, this.x2, this.y2)
                }, e
            }(e), r = function (t) {
                function e(t, n, r, i, o, a, s) {
                    this.doc = t, this.x1 = n, this.y1 = r, this.r1 = i, this.x2 = o, this.y2 = a, this.r2 = s, e.__super__.constructor.apply(this, arguments)
                }

                return i(e, t), e.prototype.shader = function (t) {
                    return this.doc.ref({
                        ShadingType: 3,
                        ColorSpace: this._colorSpace,
                        Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],
                        Function: t,
                        Extend: [!0, !0]
                    })
                }, e.prototype.opacityGradient = function () {
                    return new e(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2)
                }, e
            }(e), t.exports = {PDFGradient: e, PDFLinearGradient: n, PDFRadialGradient: r}
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r, i, o = [].slice;
            r = n(80), i = n(57).number, e = (Math.sqrt(2) - 1) / 3 * 4, t.exports = {
                initVector: function () {
                    return this._ctm = [1, 0, 0, 1, 0, 0], this._ctmStack = []
                }, save: function () {
                    return this._ctmStack.push(this._ctm.slice()), this.addContent("q")
                }, restore: function () {
                    return this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0], this.addContent("Q")
                }, closePath: function () {
                    return this.addContent("h")
                }, lineWidth: function (t) {
                    return this.addContent(i(t) + " w")
                }, _CAP_STYLES: {BUTT: 0, ROUND: 1, SQUARE: 2}, lineCap: function (t) {
                    return "string" == typeof t && (t = this._CAP_STYLES[t.toUpperCase()]), this.addContent(t + " J")
                }, _JOIN_STYLES: {MITER: 0, ROUND: 1, BEVEL: 2}, lineJoin: function (t) {
                    return "string" == typeof t && (t = this._JOIN_STYLES[t.toUpperCase()]), this.addContent(t + " j")
                }, miterLimit: function (t) {
                    return this.addContent(i(t) + " M")
                }, dash: function (t, e) {
                    var n, r, o, a;
                    return null == e && (e = {}), null == t ? this : Array.isArray(t) ? (t = function () {
                        var e, n, r;
                        for (r = [], e = 0, n = t.length; e < n; e++)a = t[e], r.push(i(a));
                        return r
                    }().join(" "), n = e.phase || 0, this.addContent("[" + t + "] " + i(n) + " d")) : (o = null != (r = e.space) ? r : t, n = e.phase || 0, this.addContent("[" + i(t) + " " + i(o) + "] " + i(n) + " d"))
                }, undash: function () {
                    return this.addContent("[] 0 d")
                }, moveTo: function (t, e) {
                    return this.addContent(i(t) + " " + i(e) + " m")
                }, lineTo: function (t, e) {
                    return this.addContent(i(t) + " " + i(e) + " l")
                }, bezierCurveTo: function (t, e, n, r, o, a) {
                    return this.addContent(i(t) + " " + i(e) + " " + i(n) + " " + i(r) + " " + i(o) + " " + i(a) + " c")
                }, quadraticCurveTo: function (t, e, n, r) {
                    return this.addContent(i(t) + " " + i(e) + " " + i(n) + " " + i(r) + " v")
                }, rect: function (t, e, n, r) {
                    return this.addContent(i(t) + " " + i(e) + " " + i(n) + " " + i(r) + " re")
                }, roundedRect: function (t, n, r, i, o) {
                    var a;
                    return null == o && (o = 0), o = Math.min(o, .5 * r, .5 * i), a = o * (1 - e), this.moveTo(t + o, n), this.lineTo(t + r - o, n), this.bezierCurveTo(t + r - a, n, t + r, n + a, t + r, n + o), this.lineTo(t + r, n + i - o), this.bezierCurveTo(t + r, n + i - a, t + r - a, n + i, t + r - o, n + i), this.lineTo(t + o, n + i), this.bezierCurveTo(t + a, n + i, t, n + i - a, t, n + i - o), this.lineTo(t, n + o), this.bezierCurveTo(t, n + a, t + a, n, t + o, n), this.closePath()
                }, ellipse: function (t, n, r, i) {
                    var o, a, s, u, l, c;
                    return null == i && (i = r), t -= r, n -= i, o = r * e, a = i * e, s = t + 2 * r, l = n + 2 * i, u = t + r, c = n + i, this.moveTo(t, c), this.bezierCurveTo(t, c - a, u - o, n, u, n), this.bezierCurveTo(u + o, n, s, c - a, s, c), this.bezierCurveTo(s, c + a, u + o, l, u, l), this.bezierCurveTo(u - o, l, t, c + a, t, c), this.closePath()
                }, circle: function (t, e, n) {
                    return this.ellipse(t, e, n)
                }, arc: function (t, n, r, i, o, a) {
                    var s, u, l, c, f, h, p, d, g, y, v, b, m, w, x, _, k, S;
                    for (null == a && (a = !1), u = 2 * Math.PI, s = .5 * Math.PI, y = o - i, Math.abs(y) > u ? y = u : 0 !== y && a !== y < 0 && (m = a ? -1 : 1, y = m * u + y), _ = Math.ceil(Math.abs(y) / s), S = y / _, w = S / s * e * r, g = i, v = -Math.sin(g) * w, b = Math.cos(g) * w, l = t + Math.cos(g) * r, c = n + Math.sin(g) * r, this.moveTo(l, c), x = 0, k = _; 0 <= k ? x < k : x > k; 0 <= k ? ++x : --x)f = l + v, h = c + b, g += S, l = t + Math.cos(g) * r, c = n + Math.sin(g) * r, v = -Math.sin(g) * w, b = Math.cos(g) * w, p = l - v, d = c - b, this.bezierCurveTo(f, h, p, d, l, c);
                    return this
                }, polygon: function () {
                    var t, e, n, r;
                    for (r = 1 <= arguments.length ? o.call(arguments, 0) : [], this.moveTo.apply(this, r.shift()), t = 0, e = r.length; t < e; t++)n = r[t], this.lineTo.apply(this, n);
                    return this.closePath()
                }, path: function (t) {
                    return r.apply(this, t), this
                }, _windingRule: function (t) {
                    return /even-?odd/.test(t) ? "*" : ""
                }, fill: function (t, e) {
                    return /(even-?odd)|(non-?zero)/.test(t) && (e = t, t = null), t && this.fillColor(t), this.addContent("f" + this._windingRule(e))
                }, stroke: function (t) {
                    return t && this.strokeColor(t), this.addContent("S")
                }, fillAndStroke: function (t, e, n) {
                    var r;
                    return null == e && (e = t), r = /(even-?odd)|(non-?zero)/, r.test(t) && (n = t, t = null), r.test(e) && (n = e, e = t), t && (this.fillColor(t), this.strokeColor(e)), this.addContent("B" + this._windingRule(n))
                }, clip: function (t) {
                    return this.addContent("W" + this._windingRule(t) + " n")
                }, transform: function (t, e, n, r, o, a) {
                    var s, u, l, c, f, h, p, d, g;
                    return s = this._ctm, u = s[0], l = s[1], c = s[2], f = s[3], h = s[4], p = s[5], s[0] = u * t + c * e, s[1] = l * t + f * e, s[2] = u * n + c * r, s[3] = l * n + f * r, s[4] = u * o + c * a + h, s[5] = l * o + f * a + p, g = function () {
                        var s, u, l, c;
                        for (l = [t, e, n, r, o, a], c = [], s = 0, u = l.length; s < u; s++)d = l[s], c.push(i(d));
                        return c
                    }().join(" "), this.addContent(g + " cm")
                }, translate: function (t, e) {
                    return this.transform(1, 0, 0, 1, t, e)
                }, rotate: function (t, e) {
                    var n, r, i, o, a, s, u, l;
                    return null == e && (e = {}), r = t * Math.PI / 180, n = Math.cos(r), o = Math.sin(r), a = u = 0, null != e.origin && (i = e.origin, a = i[0], u = i[1], s = a * n - u * o, l = a * o + u * n, a -= s, u -= l), this.transform(n, o, -o, n, a, u)
                }, scale: function (t, e, n) {
                    var r, i, o;
                    return null == e && (e = t), null == n && (n = {}), "object" == typeof e && (n = e, e = t), i = o = 0, null != n.origin && (r = n.origin, i = r[0], o = r[1], i -= t * i, o -= e * o), this.transform(t, 0, 0, e, i, o)
                }
            }
        }).call(this)
    }, function (t, e) {
        (function () {
            var e;
            e = function () {
                function t() {
                }

                var e, n, r, i, o, a, s, u, l, c, f, h, p;
                return t.apply = function (t, n) {
                    var r;
                    return r = a(n), e(r, t)
                }, o = {
                    A: 7,
                    a: 7,
                    C: 6,
                    c: 6,
                    H: 1,
                    h: 1,
                    L: 2,
                    l: 2,
                    M: 2,
                    m: 2,
                    Q: 4,
                    q: 4,
                    S: 4,
                    s: 4,
                    T: 2,
                    t: 2,
                    V: 1,
                    v: 1,
                    Z: 0,
                    z: 0
                }, a = function (t) {
                    var e, n, r, i, a, s, u, l, c;
                    for (c = [], e = [], i = "", a = !1, l = 0, s = 0, u = t.length; s < u; s++)if (n = t[s], null != o[n])l = o[n], r && (i.length > 0 && (e[e.length] = +i), c[c.length] = {
                        cmd: r,
                        args: e
                    }, e = [], i = "", a = !1), r = n; else if (" " === n || "," === n || "-" === n && i.length > 0 && "e" !== i[i.length - 1] || "." === n && a) {
                        if (0 === i.length)continue;
                        e.length === l ? (c[c.length] = {
                            cmd: r,
                            args: e
                        }, e = [+i], "M" === r && (r = "L"), "m" === r && (r = "l")) : e[e.length] = +i, a = "." === n, i = "-" === n || "." === n ? n : ""
                    } else i += n, "." === n && (a = !0);
                    return i.length > 0 && (e.length === l ? (c[c.length] = {
                        cmd: r,
                        args: e
                    }, e = [+i], "M" === r && (r = "L"), "m" === r && (r = "l")) : e[e.length] = +i), c[c.length] = {
                        cmd: r,
                        args: e
                    }, c
                }, r = i = s = u = h = p = 0, e = function (t, e) {
                    var n, o, a, c, f;
                    for (r = i = s = u = h = p = 0, o = a = 0, c = t.length; a < c; o = ++a)n = t[o], "function" == typeof l[f = n.cmd] && l[f](e, n.args);
                    return r = i = s = u = 0
                }, l = {
                    M: function (t, e) {
                        return r = e[0], i = e[1], s = u = null, h = r, p = i, t.moveTo(r, i)
                    }, m: function (t, e) {
                        return r += e[0], i += e[1], s = u = null, h = r, p = i, t.moveTo(r, i)
                    }, C: function (t, e) {
                        return r = e[4], i = e[5], s = e[2], u = e[3], t.bezierCurveTo.apply(t, e)
                    }, c: function (t, e) {
                        return t.bezierCurveTo(e[0] + r, e[1] + i, e[2] + r, e[3] + i, e[4] + r, e[5] + i), s = r + e[2], u = i + e[3], r += e[4], i += e[5]
                    }, S: function (t, e) {
                        return null === s && (s = r, u = i), t.bezierCurveTo(r - (s - r), i - (u - i), e[0], e[1], e[2], e[3]), s = e[0], u = e[1], r = e[2], i = e[3]
                    }, s: function (t, e) {
                        return null === s && (s = r, u = i), t.bezierCurveTo(r - (s - r), i - (u - i), r + e[0], i + e[1], r + e[2], i + e[3]), s = r + e[0], u = i + e[1], r += e[2], i += e[3]
                    }, Q: function (t, e) {
                        return s = e[0], u = e[1], r = e[2], i = e[3], t.quadraticCurveTo(e[0], e[1], r, i)
                    }, q: function (t, e) {
                        return t.quadraticCurveTo(e[0] + r, e[1] + i, e[2] + r, e[3] + i), s = r + e[0], u = i + e[1], r += e[2], i += e[3]
                    }, T: function (t, e) {
                        return null === s ? (s = r, u = i) : (s = r - (s - r), u = i - (u - i)), t.quadraticCurveTo(s, u, e[0], e[1]), s = r - (s - r), u = i - (u - i), r = e[0], i = e[1]
                    }, t: function (t, e) {
                        return null === s ? (s = r, u = i) : (s = r - (s - r), u = i - (u - i)), t.quadraticCurveTo(s, u, r + e[0], i + e[1]), r += e[0], i += e[1]
                    }, A: function (t, e) {
                        return f(t, r, i, e), r = e[5], i = e[6]
                    }, a: function (t, e) {
                        return e[5] += r, e[6] += i, f(t, r, i, e), r = e[5], i = e[6]
                    }, L: function (t, e) {
                        return r = e[0], i = e[1], s = u = null, t.lineTo(r, i)
                    }, l: function (t, e) {
                        return r += e[0], i += e[1], s = u = null, t.lineTo(r, i)
                    }, H: function (t, e) {
                        return r = e[0], s = u = null, t.lineTo(r, i)
                    }, h: function (t, e) {
                        return r += e[0], s = u = null, t.lineTo(r, i)
                    }, V: function (t, e) {
                        return i = e[0], s = u = null, t.lineTo(r, i)
                    }, v: function (t, e) {
                        return i += e[0], s = u = null, t.lineTo(r, i)
                    }, Z: function (t) {
                        return t.closePath(), r = h, i = p
                    }, z: function (t) {
                        return t.closePath(), r = h, i = p
                    }
                }, f = function (t, e, r, i) {
                    var o, a, s, u, l, f, h, p, d, g, y, v, b;
                    for (d = i[0], g = i[1], p = i[2], l = i[3], b = i[4], a = i[5], s = i[6], v = n(a, s, d, g, l, b, p, e, r), h = [], u = 0, f = v.length; u < f; u++)y = v[u], o = c.apply(null, y), h.push(t.bezierCurveTo.apply(t, o));
                    return h
                }, n = function (t, e, n, r, i, o, a, l, c) {
                    var f, h, p, d, g, y, v, b, m, w, x, _, k, S, C, A, P, E, I, T, O, B, L, M, R, F, z;
                    for (A = a * (Math.PI / 180), C = Math.sin(A), g = Math.cos(A), n = Math.abs(n), r = Math.abs(r), s = g * (l - t) * .5 + C * (c - e) * .5, u = g * (c - e) * .5 - C * (l - t) * .5, m = s * s / (n * n) + u * u / (r * r), m > 1 && (m = Math.sqrt(m), n *= m, r *= m), f = g / n, h = C / n, p = -C / r, d = g / r, B = f * l + h * c, R = p * l + d * c, L = f * t + h * e, F = p * t + d * e, y = (L - B) * (L - B) + (F - R) * (F - R), S = 1 / y - .25, S < 0 && (S = 0), k = Math.sqrt(S), o === i && (k = -k), M = .5 * (B + L) - k * (F - R), z = .5 * (R + F) + k * (L - B), P = Math.atan2(R - z, B - M), E = Math.atan2(F - z, L - M), O = E - P, O < 0 && 1 === o ? O += 2 * Math.PI : O > 0 && 0 === o && (O -= 2 * Math.PI), _ = Math.ceil(Math.abs(O / (.5 * Math.PI + .001))), x = [], v = b = 0, w = _; 0 <= w ? b < w : b > w; v = 0 <= w ? ++b : --b)I = P + v * O / _, T = P + (v + 1) * O / _, x[v] = [M, z, I, T, n, r, C, g];
                    return x
                }, c = function (t, e, n, r, i, o, a, s) {
                    var u, l, c, f, h, p, d, g, y, v, b, m;
                    return u = s * i, l = -a * o, c = a * i, f = s * o, p = .5 * (r - n), h = 8 / 3 * Math.sin(.5 * p) * Math.sin(.5 * p) / Math.sin(p), d = t + Math.cos(n) - h * Math.sin(n), v = e + Math.sin(n) + h * Math.cos(n), y = t + Math.cos(r), m = e + Math.sin(r), g = y + h * Math.sin(r), b = m - h * Math.cos(r), [u * d + l * v, c * d + f * v, u * g + l * b, c * g + f * b, u * y + l * m, c * y + f * m]
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e;
            e = n(82), t.exports = {
                initFonts: function () {
                    this._fontFamilies = {}, this._fontCount = 0, this._fontSize = 12, this._font = null, this._registeredFonts = {}
                }, font: function (t, n, r) {
                    var i, o, a, s;
                    return "number" == typeof n && (r = n, n = null), "string" == typeof t && this._registeredFonts[t] ? (i = t, s = this._registeredFonts[t], t = s.src, n = s.family) : "string" != typeof(i = n || t) && (i = null), null != r && this.fontSize(r), (o = this._fontFamilies[i]) ? (this._font = o, this) : (a = "F" + ++this._fontCount, this._font = e.open(this, t, n, a), (o = this._fontFamilies[this._font.name]) ? (this._font = o, this) : (i && (this._fontFamilies[i] = this._font), this._font.name && (this._fontFamilies[this._font.name] = this._font), this))
                }, fontSize: function (t) {
                    return this._fontSize = t, this
                }, currentLineHeight: function (t) {
                    return null == t && (t = !1), this._font.lineHeight(this._fontSize, t)
                }, registerFont: function (t, e, n) {
                    return this._registeredFonts[t] = {src: e, family: n}, this
                }
            }
        }).call(this)
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i, o, a;
                a = n(83), i = function () {
                    function t() {
                        throw new Error("Cannot construct a PDFFont directly.")
                    }

                    return t.open = function (t, n, i, s) {
                        var u;
                        if ("string" == typeof n) {
                            if (o.isStandardFont(n))return new o(t, n, s);
                            u = a.openSync(n, i)
                        } else e.isBuffer(n) ? u = a.create(n, i) : n instanceof Uint8Array ? u = a.create(new e(n), i) : n instanceof ArrayBuffer && (u = a.create(new e(new Uint8Array(n)), i));
                        if (null == u)throw new Error("Not a supported font format or standard PDF font.");
                        return new r(t, u, s)
                    }, t.prototype.encode = function (t) {
                        throw new Error("Must be implemented by subclasses")
                    }, t.prototype.widthOfString = function (t) {
                        throw new Error("Must be implemented by subclasses")
                    }, t.prototype.ref = function () {
                        return null != this.dictionary ? this.dictionary : this.dictionary = this.document.ref()
                    }, t.prototype.finalize = function () {
                        if (!this.embedded && null != this.dictionary)return this.embed(), this.embedded = !0
                    }, t.prototype.embed = function () {
                        throw new Error("Must be implemented by subclasses")
                    }, t.prototype.lineHeight = function (t, e) {
                        var n;
                        return null == e && (e = !1), n = e ? this.lineGap : 0, (this.ascender + n - this.descender) / 1e3 * t
                    }, t
                }(), t.exports = i, o = n(285), r = n(287)
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        (function (e, r) {
            "use strict";
            function i(t) {
                return t && "object" == typeof t && "default" in t ? t.default : t
            }

            function o(t, e, n) {
                if (n.get) {
                    var r = n.get;
                    n.get = function () {
                        var t = r.call(this);
                        return ut(this, e, {value: t}), t
                    }
                } else if ("function" == typeof n.value) {
                    var i = n.value;
                    return {
                        get: function () {
                            function t() {
                                for (var t = arguments.length, e = Array(t), r = 0; r < t; r++)e[r] = arguments[r];
                                var o = e.length > 0 ? e[0] : "value";
                                if (n.has(o))return n.get(o);
                                var a = i.apply(this, e);
                                return n.set(o, a), a
                            }

                            var n = new ft;
                            return ut(this, e, {value: t}), t
                        }
                    }
                }
            }

            function a(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                return 1 === t && qt[n] ? qt[n] : Ht[t][e]
            }

            function s(t) {
                var e = new nt.Struct({
                    lookupType: nt.uint16,
                    flags: Ie,
                    subTableCount: nt.uint16,
                    subTables: new nt.Array(new nt.Pointer(nt.uint16, t), "subTableCount"),
                    markFilteringSet: new nt.Optional(nt.uint16, function (t) {
                        return t.flags.flags.useMarkFilteringSet
                    })
                });
                return new nt.LazyArray(new nt.Pointer(nt.uint16, e), nt.uint16)
            }

            function u() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : nt.uint16, n = vt({
                    newState: nt.uint16,
                    flags: nt.uint16
                }, t), r = new nt.Struct(n), i = new di(new nt.Array(nt.uint16, function (t) {
                    return t.nClasses
                }));
                return new nt.Struct({
                    nClasses: nt.uint32,
                    classTable: new nt.Pointer(nt.uint32, new gi(e)),
                    stateArray: new nt.Pointer(nt.uint32, i),
                    entryTable: new nt.Pointer(nt.uint32, new di(r))
                })
            }

            function l() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : nt.uint16, new nt.Struct({
                    version: function () {
                        return 8
                    }, firstGlyph: nt.uint16, values: new nt.Array(nt.uint8, nt.uint16)
                })), n = vt({
                    newStateOffset: nt.uint16, newState: function (t) {
                        return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses
                    }, flags: nt.uint16
                }, t), r = new nt.Struct(n), i = new di(new nt.Array(nt.uint8, function (t) {
                    return t.nClasses
                }));
                return new nt.Struct({
                    nClasses: nt.uint16,
                    classTable: new nt.Pointer(nt.uint16, e),
                    stateArray: new nt.Pointer(nt.uint16, i),
                    entryTable: new nt.Pointer(nt.uint16, new di(r))
                })
            }

            function c(t, e) {
                for (var n = 0, r = t.length - 1; n <= r;) {
                    var i = n + r >> 1, o = e(t[i]);
                    if (o < 0)r = i - 1; else {
                        if (!(o > 0))return i;
                        n = i + 1
                    }
                }
                return -1
            }

            function f(t, e) {
                for (var n = []; t < e;)n.push(t++);
                return n
            }

            function h(t, e, n, r, i) {
                var o = {};
                return Object.keys(r).forEach(function (t) {
                    o[t] = r[t]
                }), o.enumerable = !!o.enumerable, o.configurable = !!o.configurable, ("value" in o || o.initializer) && (o.writable = !0), o = n.slice().reverse().reduce(function (n, r) {
                    return r(t, e, n) || n
                }, o), i && void 0 !== o.initializer && (o.value = o.initializer ? o.initializer.call(i) : void 0, o.initializer = void 0), void 0 === o.initializer && (Object.defineProperty(t, e, o), o = null), o
            }

            function p(t) {
                return ro[t]
            }

            function d(t) {
                for (var e = t.length, n = 0; n < e;) {
                    var r = t.charCodeAt(n++);
                    if (55296 <= r && r <= 56319 && n < e) {
                        var i = t.charCodeAt(n);
                        56320 <= i && i <= 57343 && (n++, r = ((1023 & r) << 10) + (1023 & i) + 65536)
                    }
                    var o = xt.getScript(r);
                    if ("Common" !== o && "Inherited" !== o && "Unknown" !== o)return no[o]
                }
                return no.Unknown
            }

            function g(t) {
                for (var e = 0; e < t.length; e++) {
                    var n = t[e], r = xt.getScript(n);
                    if ("Common" !== r && "Inherited" !== r && "Unknown" !== r)return no[r]
                }
                return no.Unknown
            }

            function y(t) {
                return fo[t] ? "rtl" : "ltr"
            }

            function v(t) {
                var e = {};
                for (var n in t) {
                    var r = void 0;
                    (r = vo[n]) && (null == e[r[0]] && (e[r[0]] = {}), e[r[0]][r[1]] = t[n])
                }
                return e
            }

            function b(t) {
                var e = t[0], n = t[1];
                if (isNaN(e))var r = go[e] && go[e].code; else var r = e;
                if (isNaN(n))var i = go[e] && go[e][n]; else var i = n;
                return [r, i]
            }

            function m(t) {
                var e = {};
                if (Array.isArray(t))for (var n = 0; n < t.length; n++) {
                    var r = void 0, i = b(t[n]);
                    (r = mo[i[0]] && mo[i[0]][i[1]]) && (e[r] = !0)
                } else if ("object" === (void 0 === t ? "undefined" : st(t)))for (var o in t) {
                    var a = t[o];
                    for (var s in a) {
                        var u = void 0, l = b([o, s]);
                        a[s] && (u = mo[l[0]] && mo[l[0]][l[1]]) && (e[u] = !0)
                    }
                }
                return at(e)
            }

            function w(t, e, n) {
                var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], o = t.splice(n[0] - (n[1] - 1), n[1]);
                i && o.reverse();
                var a = t.splice.apply(t, [e[0], e[1]].concat(o));
                return r && a.reverse(), t.splice.apply(t, [n[0] - (e[1] - 1), 0].concat(a)), t
            }

            function x(t, e, n, r) {
                switch (e) {
                    case 0:
                        return t;
                    case 1:
                        return w(t, [n, 1], [r, 0]);
                    case 2:
                        return w(t, [n, 0], [r, 1]);
                    case 3:
                        return w(t, [n, 1], [r, 1]);
                    case 4:
                        return w(t, [n, 2], [r, 0]);
                    case 5:
                        return w(t, [n, 2], [r, 0], !0, !1);
                    case 6:
                        return w(t, [n, 0], [r, 2]);
                    case 7:
                        return w(t, [n, 0], [r, 2], !1, !0);
                    case 8:
                        return w(t, [n, 1], [r, 2]);
                    case 9:
                        return w(t, [n, 1], [r, 2], !1, !0);
                    case 10:
                        return w(t, [n, 2], [r, 1]);
                    case 11:
                        return w(t, [n, 2], [r, 1], !0, !1);
                    case 12:
                        return w(t, [n, 2], [r, 2]);
                    case 13:
                        return w(t, [n, 2], [r, 2], !0, !1);
                    case 14:
                        return w(t, [n, 2], [r, 2], !1, !0);
                    case 15:
                        return w(t, [n, 2], [r, 2], !0, !0);
                    default:
                        throw new Error("Unknown verb: " + e)
                }
            }

            function _(t) {
                var e = Go.get(t);
                if (e)return e - 1;
                var n = xt.getCategory(t);
                return "Mn" === n || "Me" === n || "Cf" === n ? Ho.Transparent : Ho.Non_Joining
            }

            function k(t) {
                return ha(t) ? _a : pa(t) ? ka : da(t) ? Sa : va(t) ? Ca : ya(t) ? Aa : ga(t) ? Pa : xa
            }

            function S(t, e, n) {
                return new $o(t, t.glyphForCodePoint(e).id, [e], n)
            }

            function C(t, e, n) {
                var r = t[e], i = r.codePoints[0], o = i - ea, a = oa + o % sa;
                o = o / sa | 0;
                var s = ra + o / aa | 0, u = ia + o % aa;
                if (!n.hasGlyphForCodePoint(s) || !n.hasGlyphForCodePoint(u) || a !== oa && !n.hasGlyphForCodePoint(a))return e;
                var l = S(n, s, r.features);
                l.features.ljmo = !0;
                var c = S(n, u, r.features);
                c.features.vjmo = !0;
                var f = [l, c];
                if (a > oa) {
                    var h = S(n, a, r.features);
                    h.features.tjmo = !0, f.push(h)
                }
                return t.splice.apply(t, [e, 1].concat(f)), e + f.length - 1
            }

            function A(t, e, n) {
                var r = t[e], i = t[e].codePoints[0], o = k(i), a = t[e - 1].codePoints[0], s = k(a), u = void 0, l = void 0, c = void 0, f = void 0;
                if (s === Ca && o === Sa)u = a, f = r; else {
                    o === ka ? (l = t[e - 1], c = r) : (l = t[e - 2], c = t[e - 1], f = r);
                    var h = l.codePoints[0], p = c.codePoints[0];
                    ba(h) && ma(p) && (u = ea + ((h - ra) * aa + (p - ia)) * sa)
                }
                var d = f && f.codePoints[0] || oa;
                if (null != u && (d === oa || wa(d))) {
                    var g = u + (d - oa);
                    if (n.hasGlyphForCodePoint(g)) {
                        var y = s === ka ? 3 : 2;
                        return t.splice(e - y + 1, y, S(n, g, r.features)), e - y + 1
                    }
                }
                return l && (l.features.ljmo = !0), c && (c.features.vjmo = !0), f && (f.features.tjmo = !0), s === Ca ? (C(t, e - 1, n), e + 1) : e
            }

            function P(t) {
                switch (k(t)) {
                    case Ca:
                    case Aa:
                        return 1;
                    case ka:
                        return 2;
                    case Sa:
                        return 3
                }
            }

            function E(t, e, n) {
                var r = t[e], i = t[e].codePoints[0];
                if (0 !== n.glyphForCodePoint(i).advanceWidth) {
                    var o = t[e - 1].codePoints[0], a = P(o);
                    return t.splice(e, 1), t.splice(e - a, 0, r)
                }
            }

            function I(t, e, n) {
                var r = t[e], i = t[e].codePoints[0];
                if (n.hasGlyphForCodePoint(fa)) {
                    var o = S(n, fa, r.features), a = 0 === n.glyphForCodePoint(i).advanceWidth ? e : e + 1;
                    t.splice(a, 0, o), e++
                }
                return e
            }

            function T(t) {
                return Ja.get(t.codePoints[0]) >> 8
            }

            function O(t) {
                return 1 << (255 & Ja.get(t.codePoints[0]))
            }

            function B(t, e) {
                for (var n = 0, r = 0, i = Qa.match(e.map(T)), o = Array.isArray(i), a = 0, i = o ? i : it(i); ;) {
                    var s;
                    if (o) {
                        if (a >= i.length)break;
                        s = i[a++]
                    } else {
                        if (a = i.next(), a.done)break;
                        s = a.value
                    }
                    var u = s, l = u[0], c = u[1], f = u[2];
                    if (l > r) {
                        ++n;
                        for (var h = r; h < l; h++)e[h].shaperInfo = new ts(Ga.X, Va.End, "non_indic_cluster", n)
                    }
                    ++n;
                    for (var p = l; p <= c; p++)e[p].shaperInfo = new ts(1 << T(e[p]), O(e[p]), f[0], n);
                    r = c + 1
                }
                if (r < e.length) {
                    ++n;
                    for (var d = r; d < e.length; d++)e[d].shaperInfo = new ts(Ga.X, Va.End, "non_indic_cluster", n)
                }
            }

            function L(t) {
                return t.shaperInfo.category & Ha
            }

            function M(t) {
                return t.shaperInfo.category & qa
            }

            function R(t) {
                return t.shaperInfo.category & Za
            }

            function F(t, e) {
                for (var n = t, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                    var o, a;
                    if (r) {
                        if (i >= n.length)break;
                        a = n[i++]
                    } else {
                        if (i = n.next(), i.done)break;
                        a = i.value
                    }
                    a.features = (o = {}, o[e] = !0, o)
                }
                return t[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([e], t), 1 === t.length
            }

            function z(t, e, n) {
                var r = [n, e, n];
                return F(r.slice(0, 2), "blwf") || F(r.slice(1, 3), "blwf") ? Va.Below_C : F(r.slice(0, 2), "pstf") || F(r.slice(1, 3), "pstf") ? Va.Post_C : F(r.slice(0, 2), "pref") || F(r.slice(1, 3), "pref") ? Va.Post_C : Va.Base_C
            }

            function D(t, e, n) {
                var r = n.indicConfig, i = t._layoutEngine.engine.GSUBProcessor.features, o = t.glyphForCodePoint(9676).id, a = t.glyphForCodePoint(r.virama).id;
                if (a)for (var s = new $o(t, a, [r.virama]), u = 0; u < e.length; u++)e[u].shaperInfo.position === Va.Base_C && (e[u].shaperInfo.position = z(t, e[u].copy(), s));
                for (var l = 0, c = U(e, 0); l < e.length; l = c, c = U(e, l)) {
                    var f = e[l].shaperInfo, h = (f.category, f.syllableType);
                    if ("symbol_cluster" !== h && "non_indic_cluster" !== h) {
                        if ("broken_cluster" === h && o) {
                            var p = new $o(t, o, [9676]);
                            p.shaperInfo = new ts(1 << T(p), O(p), e[l].shaperInfo.syllableType, e[l].shaperInfo.syllable);
                            for (var d = l; d < c && e[d].shaperInfo.category === Ga.Repha;)d++;
                            e.splice(d++, 0, p), c++
                        }
                        var g = c, y = l, v = !1;
                        if (r.rephPos !== Va.Ra_To_Become_Reph && i.rphf && l + 3 <= c && ("Implicit" === r.rephMode && !M(e[l + 2]) || "Explicit" === r.rephMode && e[l + 2].shaperInfo.category === Ga.ZWJ)) {
                            var b = [e[l].copy(), e[l + 1].copy(), e[l + 2].copy()];
                            if (F(b.slice(0, 2), "rphf") || "Explicit" === r.rephMode && F(b, "rphf")) {
                                for (y += 2; y < c && M(e[y]);)y++;
                                g = l, v = !0
                            }
                        } else if ("Log_Repha" === r.rephMode && e[l].shaperInfo.category === Ga.Repha) {
                            for (y++; y < c && M(e[y]);)y++;
                            g = l, v = !0
                        }
                        switch (r.basePos) {
                            case"Last":
                                var m = c, w = !1;
                                do {
                                    var x = e[--m].shaperInfo;
                                    if (L(e[m])) {
                                        if (x.position !== Va.Below_C && (x.position !== Va.Post_C || w)) {
                                            g = m;
                                            break
                                        }
                                        x.position === Va.Below_C && (w = !0), g = m
                                    } else if (l < m && x.category === Ga.ZWJ && e[m - 1].shaperInfo.category === Ga.H)break
                                } while (m > y);
                                break;
                            case"First":
                                g = l;
                                for (var _ = g + 1; _ < c; _++)L(e[_]) && (e[_].shaperInfo.position = Va.Below_C)
                        }
                        v && g === l && y - g <= 2 && (v = !1);
                        for (var k = l; k < g; k++) {
                            var S = e[k].shaperInfo;
                            S.position = Math.min(Va.Pre_C, S.position)
                        }
                        g < c && (e[g].shaperInfo.position = Va.Base_C);
                        for (var C = g + 1; C < c; C++)if (e[C].shaperInfo.category === Ga.M) {
                            for (var A = C + 1; A < c; A++)if (L(e[A])) {
                                e[A].shaperInfo.position = Va.Final_C;
                                break
                            }
                            break
                        }
                        if (v && (e[l].shaperInfo.position = Va.Ra_To_Become_Reph), n.isOldSpec)for (var P = "Malayalam" !== n.unicodeScript, E = g + 1; E < c; E++)if (e[E].shaperInfo.category === Ga.H) {
                            var I = void 0;
                            for (I = c - 1; I > E && !(L(e[I]) || P && e[I].shaperInfo.category === Ga.H); I--);
                            if (e[I].shaperInfo.category !== Ga.H && I > E) {
                                var B = e[E];
                                e.splice.apply(e, [E, 0].concat(e.splice(E + 1, I - E))), e[I] = B
                            }
                            break
                        }
                        for (var R = Va.Start, D = l; D < c; D++) {
                            var N = e[D].shaperInfo;
                            if (N.category & (qa | Ga.N | Ga.RS | Ga.CM | Za & N.category)) {
                                if (N.position = R, N.category === Ga.H && N.position === Va.Pre_M)for (var W = D; W > l; W--)if (e[W - 1].shaperInfo.position !== Va.Pre_M) {
                                    N.position = e[W - 1].shaperInfo.position;
                                    break
                                }
                            } else N.position !== Va.SMVD && (R = N.position)
                        }
                        for (var j = g, G = g + 1; G < c; G++)if (L(e[G])) {
                            for (var V = j + 1; V < G; V++)e[V].shaperInfo.position < Va.SMVD && (e[V].shaperInfo.position = e[G].shaperInfo.position);
                            j = G
                        } else e[G].shaperInfo.category === Ga.M && (j = G);
                        var H = e.slice(l, c);
                        H.sort(function (t, e) {
                            return t.shaperInfo.position - e.shaperInfo.position
                        }), e.splice.apply(e, [l, H.length].concat(H));
                        for (var q = l; q < c; q++)if (e[q].shaperInfo.position === Va.Base_C) {
                            g = q;
                            break
                        }
                        for (var Z = l; Z < c && e[Z].shaperInfo.position === Va.Ra_To_Become_Reph; Z++)e[Z].features.rphf = !0;
                        for (var Y = !n.isOldSpec && "Pre_And_Post" === r.blwfMode, X = l; X < g; X++)e[X].features.half = !0, Y && (e[X].features.blwf = !0);
                        for (var K = g + 1; K < c; K++)e[K].features.abvf = !0, e[K].features.pstf = !0, e[K].features.blwf = !0;
                        if (n.isOldSpec && "Devanagari" === n.unicodeScript)for (var J = l; J + 1 < g; J++)e[J].shaperInfo.category !== Ga.Ra || e[J + 1].shaperInfo.category !== Ga.H || J + 1 !== g && e[J + 2].shaperInfo.category !== Ga.ZWJ || (e[J].features.blwf = !0, e[J + 1].features.blwf = !0);
                        if (i.pref && g + 2 < c)for (var Q = g + 1; Q + 2 - 1 < c; Q++) {
                            var $ = [e[Q].copy(), e[Q + 1].copy()];
                            if (F($, "pref")) {
                                for (var tt = 0; tt < 2; tt++)e[Q++].features.pref = !0;
                                if (i.cfar)for (; Q < c; Q++)e[Q].features.cfar = !0;
                                break
                            }
                        }
                        for (var et = l + 1; et < c; et++)if (M(e[et])) {
                            var nt = e[et].shaperInfo.category === Ga.ZWNJ, rt = et;
                            do {
                                rt--, nt && delete e[rt].features.half
                            } while (rt > l && !L(e[rt]))
                        }
                    }
                }
            }

            function N(t, e, n) {
                for (var r = n.indicConfig, i = t._layoutEngine.engine.GSUBProcessor.features, o = 0, a = U(e, 0); o < e.length; o = a, a = U(e, o)) {
                    for (var s = !!i.pref, u = o; u < a; u++)if (e[u].shaperInfo.position >= Va.Base_C) {
                        if (s && u + 1 < a)for (var l = u + 1; l < a; l++)if (e[l].features.pref) {
                            if (!e[l].substituted || !e[l].isLigated || e[l].isMultiplied) {
                                for (u = l; u < a && R(e[u]);)u++;
                                e[u].shaperInfo.position = Va.BASE_C, s = !1
                            }
                            break
                        }
                        if ("Malayalam" === n.unicodeScript)for (var c = u + 1; c < a; c++) {
                            for (; c < a && M(e[c]);)c++;
                            if (c === a || !R(e[c]))break;
                            for (c++; c < a && M(e[c]);)c++;
                            c < a && L(e[c]) && e[c].shaperInfo.position === Va.Below_C && (u = c, e[u].shaperInfo.position = Va.Base_C)
                        }
                        o < u && e[u].shaperInfo.position > Va.Base_C && u--;
                        break
                    }
                    if (u === a && o < u && e[u - 1].shaperInfo.category === Ga.ZWJ && u--, u < a)for (; o < u && e[u].shaperInfo.category & (Ga.N | Za);)u--;
                    if (o + 1 < a && o < u) {
                        var f = u === a ? u - 2 : u - 1;
                        if ("Malayalam" !== n.unicodeScript && "Tamil" !== n.unicodeScript) {
                            for (; f > o && !(e[f].shaperInfo.category & (Ga.M | Za));)f--;
                            R(e[f]) && e[f].shaperInfo.position !== Va.Pre_M ? f + 1 < a && M(e[f + 1]) && f++ : f = o
                        }
                        if (o < f && e[f].shaperInfo.position !== Va.Pre_M)for (var h = f; h > o; h--)if (e[h - 1].shaperInfo.position === Va.Pre_M) {
                            var p = h - 1;
                            p < u && u <= f && u--;
                            var d = e[p];
                            e.splice.apply(e, [p, 0].concat(e.splice(p + 1, f - p))), e[f] = d, f--
                        }
                    }
                    if (o + 1 < a && e[o].shaperInfo.position === Va.Ra_To_Become_Reph && e[o].shaperInfo.category === Ga.Repha !== (e[o].isLigated && !e[o].isMultiplied)) {
                        var g = void 0, y = r.rephPos, v = !1;
                        if (y !== Va.After_Post) {
                            for (g = o + 1; g < u && !R(e[g]);)g++;
                            if (g < u && R(e[g]) && (g + 1 < u && M(e[g + 1]) && g++, v = !0), !v && y === Va.After_Main) {
                                for (g = u; g + 1 < a && e[g + 1].shaperInfo.position <= Va.After_Main;)g++;
                                v = g < a
                            }
                            if (!v && y === Va.After_Sub) {
                                for (g = u; g + 1 < a && !(e[g + 1].shaperInfo.position & (Va.Post_C | Va.After_Post | Va.SMVD));)g++;
                                v = g < a
                            }
                        }
                        if (!v) {
                            for (g = o + 1; g < u && !R(e[g]);)g++;
                            g < u && R(e[g]) && (g + 1 < u && M(e[g + 1]) && g++, v = !0)
                        }
                        if (!v) {
                            for (g = a - 1; g > o && e[g].shaperInfo.position === Va.SMVD;)g--;
                            if (R(e[g]))for (var b = u + 1; b < g; b++)e[b].shaperInfo.category === Ga.M && g--
                        }
                        var m = e[o];
                        e.splice.apply(e, [o, 0].concat(e.splice(o + 1, g - o))), e[g] = m, o < u && u <= g && u--
                    }
                    if (s && u + 1 < a)for (var w = u + 1; w < a; w++)if (e[w].features.pref) {
                        if (e[w].isLigated && !e[w].isMultiplied) {
                            var x = u;
                            if ("Malayalam" !== n.unicodeScript && "Tamil" !== n.unicodeScript) {
                                for (; x > o && !(e[x - 1].shaperInfo.category & (Ga.M | Za));)x--;
                                if (x > o && e[x - 1].shaperInfo.category === Ga.M)for (var _ = w, k = u + 1; k < _; k++)if (e[k].shaperInfo.category === Ga.M) {
                                    x--;
                                    break
                                }
                            }
                            x > o && R(e[x - 1]) && x < a && M(e[x]) && x++;
                            var S = w, C = e[S];
                            e.splice.apply(e, [x + 1, 0].concat(e.splice(x, S - x))), e[x] = C, x <= u && u < S && u++
                        }
                        break
                    }
                    e[o].shaperInfo.position !== Va.Pre_M || o && /Cf|Mn/.test(xt.getCategory(e[o - 1].codePoints[0])) || (e[o].features.init = !0)
                }
            }

            function U(t, e) {
                if (e >= t.length)return e;
                for (var n = t[e].shaperInfo.syllable; ++e < t.length && t[e].shaperInfo.syllable === n;);
                return e
            }

            function W(t) {
                return rs.get(t.codePoints[0])
            }

            function j(t, e) {
                for (var n = 0, r = is.match(e.map(W)), i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                    var a;
                    if (i) {
                        if (o >= r.length)break;
                        a = r[o++]
                    } else {
                        if (o = r.next(), o.done)break;
                        a = o.value
                    }
                    var s = a, u = s[0], l = s[1], c = s[2];
                    ++n;
                    for (var f = u; f <= l; f++)e[f].shaperInfo = new as(es[W(e[f])], c[0], n);
                    for (var h = "R" === e[u].shaperInfo.category ? 1 : Math.min(3, l - u), p = u; p < u + h; p++)e[p].features.rphf = !0
                }
            }

            function G(t, e) {
                for (var n = e, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                    var o;
                    if (r) {
                        if (i >= n.length)break;
                        o = n[i++]
                    } else {
                        if (i = n.next(), i.done)break;
                        o = i.value
                    }
                    o.substituted = !1
                }
            }

            function V(t, e) {
                for (var n = e, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                    var o;
                    if (r) {
                        if (i >= n.length)break;
                        o = n[i++]
                    } else {
                        if (i = n.next(), i.done)break;
                        o = i.value
                    }
                    var a = o;
                    a.substituted && a.features.rphf && (a.shaperInfo.category = "R")
                }
            }

            function H(t, e) {
                for (var n = e, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                    var o;
                    if (r) {
                        if (i >= n.length)break;
                        o = n[i++]
                    } else {
                        if (i = n.next(), i.done)break;
                        o = i.value
                    }
                    var a = o;
                    a.substituted && (a.shaperInfo.category = "VPre")
                }
            }

            function q(t, e) {
                for (var n = t.glyphForCodePoint(9676).id, r = 0, i = Z(e, 0); r < e.length; r = i, i = Z(e, r)) {
                    var o = void 0, a = void 0, s = e[r].shaperInfo, u = s.syllableType;
                    if ("virama_terminated_cluster" === u || "standard_cluster" === u || "broken_cluster" === u) {
                        if ("broken_cluster" === u && n) {
                            var l = new $o(t, n, [9676]);
                            for (l.shaperInfo = s, o = r; o < i && "R" === e[o].shaperInfo.category; o++);
                            e.splice(++o, 0, l), i++
                        }
                        if ("R" === s.category && i - r > 1)for (o = r + 1; o < i; o++)if (s = e[o].shaperInfo, X(s) || Y(e[o])) {
                            Y(e[o]) && o--, e.splice.apply(e, [r, 0].concat(e.splice(r + 1, o - r), [e[o]]));
                            break
                        }
                        for (o = r, a = i; o < i; o++)s = e[o].shaperInfo, X(s) || Y(e[o]) ? a = Y(e[o]) ? o + 1 : o : ("VPre" === s.category || "VMPre" === s.category) && a < o && e.splice.apply(e, [a, 1, e[o]].concat(e.splice(a, o - a)))
                    }
                }
            }

            function Z(t, e) {
                if (e >= t.length)return e;
                for (var n = t[e].shaperInfo.syllable; ++e < t.length && t[e].shaperInfo.syllable === n;);
                return e
            }

            function Y(t) {
                return "H" === t.shaperInfo.category && !t.isLigated
            }

            function X(t) {
                return "B" === t.category || "GB" === t.category
            }

            function K(t) {
                Array.isArray(t) || (t = [t]);
                for (var e = t, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                    var i;
                    if (n) {
                        if (r >= e.length)break;
                        i = e[r++]
                    } else {
                        if (r = e.next(), r.done)break;
                        i = r.value
                    }
                    var o = i, a = ss[o];
                    if (a)return a
                }
                return jo
            }

            function J(t, e, n, r, i) {
                var o = {};
                return Object.keys(r).forEach(function (t) {
                    o[t] = r[t]
                }), o.enumerable = !!o.enumerable, o.configurable = !!o.configurable, ("value" in o || o.initializer) && (o.writable = !0), o = n.slice().reverse().reduce(function (n, r) {
                    return r(t, e, n) || n
                }, o), i && void 0 !== o.initializer && (o.value = o.initializer ? o.initializer.call(i) : void 0, o.initializer = void 0), void 0 === o.initializer && (Object.defineProperty(t, e, o), o = null), o
            }

            function Q(t, e, n, r, i) {
                var o = {};
                return Object.keys(r).forEach(function (t) {
                    o[t] = r[t]
                }), o.enumerable = !!o.enumerable, o.configurable = !!o.configurable, ("value" in o || o.initializer) && (o.writable = !0), o = n.slice().reverse().reduce(function (n, r) {
                    return r(t, e, n) || n
                }, o), i && void 0 !== o.initializer && (o.value = o.initializer ? o.initializer.call(i) : void 0, o.initializer = void 0), void 0 === o.initializer && (Object.defineProperty(t, e, o), o = null), o
            }

            function $(t) {
                var e = t.readUInt8();
                return e === Zs ? t.readUInt16BE() : e === Xs ? t.readUInt8() + Ks : e === Ys ? t.readUInt8() + 2 * Ks : e
            }

            function tt(t, e) {
                return 1 & t ? e : -e
            }

            function et(t, e, n) {
                for (var r = void 0, i = r = 0, o = [], a = 0; a < n; a++) {
                    var s = 0, u = 0, l = t.readUInt8(), c = !(l >> 7);
                    if ((l &= 127) < 10)s = 0, u = tt(l, ((14 & l) << 7) + e.readUInt8()); else if (l < 20)s = tt(l, ((l - 10 & 14) << 7) + e.readUInt8()), u = 0; else if (l < 84) {
                        var f = l - 20, h = e.readUInt8();
                        s = tt(l, 1 + (48 & f) + (h >> 4)), u = tt(l >> 1, 1 + ((12 & f) << 2) + (15 & h))
                    } else if (l < 120) {
                        var f = l - 84;
                        s = tt(l, 1 + (f / 12 << 8) + e.readUInt8()), u = tt(l >> 1, 1 + (f % 12 >> 2 << 8) + e.readUInt8())
                    } else if (l < 124) {
                        var h = e.readUInt8(), p = e.readUInt8();
                        s = tt(l, (h << 4) + (p >> 4)), u = tt(l >> 1, ((15 & p) << 8) + e.readUInt8())
                    } else s = tt(l, e.readUInt16BE()), u = tt(l >> 1, e.readUInt16BE());
                    i += s, r += u, o.push(new xs(c, !1, i, r))
                }
                return o
            }

            var nt = i(n(84)), rt = i(n(122)), it = i(n(148)), ot = i(n(181)), at = i(n(185)), st = i(n(188)), ut = i(n(205)), lt = i(n(208)), ct = i(n(209)), ft = i(n(210)), ht = i(n(227)), pt = i(n(228)), dt = n(110), gt = i(n(236)), yt = i(n(239)), vt = i(n(242)), bt = i(n(246)), mt = i(n(249)), wt = i(n(254)), xt = i(n(258)), _t = i(n(17)), kt = i(n(260)), St = i(n(269)), Ct = i(n(272)), At = i(n(18)), Pt = i(n(273)), Et = {};
            Et.logErrors = !1;
            var It = [];
            Et.registerFormat = function (t) {
                It.push(t)
            }, Et.openSync = function (t, e) {
                var r = n(56).readFileSync(t);
                return Et.create(r, e)
            }, Et.open = function (t, e, r) {
                "function" == typeof e && (r = e, e = null), n(56).readFile(t, function (t, n) {
                    if (t)return r(t);
                    try {
                        var i = Et.create(n, e)
                    } catch (t) {
                        return r(t)
                    }
                    return r(null, i)
                })
            }, Et.create = function (t, e) {
                for (var n = 0; n < It.length; n++) {
                    var r = It[n];
                    if (r.probe(t)) {
                        var i = new r(new nt.DecodeStream(t));
                        return e ? i.getFont(e) : i
                    }
                }
                throw new Error("Unknown font format")
            };
            var Tt = new nt.Struct({
                firstCode: nt.uint16,
                entryCount: nt.uint16,
                idDelta: nt.int16,
                idRangeOffset: nt.uint16
            }), Ot = new nt.Struct({
                startCharCode: nt.uint32,
                endCharCode: nt.uint32,
                glyphID: nt.uint32
            }), Bt = new nt.Struct({
                startUnicodeValue: nt.uint24,
                additionalCount: nt.uint8
            }), Lt = new nt.Struct({
                unicodeValue: nt.uint24,
                glyphID: nt.uint16
            }), Mt = new nt.Array(Bt, nt.uint32), Rt = new nt.Array(Lt, nt.uint32), Ft = new nt.Struct({
                varSelector: nt.uint24,
                defaultUVS: new nt.Pointer(nt.uint32, Mt, {type: "parent"}),
                nonDefaultUVS: new nt.Pointer(nt.uint32, Rt, {type: "parent"})
            }), zt = new nt.VersionedStruct(nt.uint16, {
                0: {length: nt.uint16, language: nt.uint16, codeMap: new nt.LazyArray(nt.uint8, 256)},
                2: {
                    length: nt.uint16,
                    language: nt.uint16,
                    subHeaderKeys: new nt.Array(nt.uint16, 256),
                    subHeaderCount: function (t) {
                        return Math.max.apply(Math, t.subHeaderKeys)
                    },
                    subHeaders: new nt.LazyArray(Tt, "subHeaderCount"),
                    glyphIndexArray: new nt.LazyArray(nt.uint16, "subHeaderCount")
                },
                4: {
                    length: nt.uint16,
                    language: nt.uint16,
                    segCountX2: nt.uint16,
                    segCount: function (t) {
                        return t.segCountX2 >> 1
                    },
                    searchRange: nt.uint16,
                    entrySelector: nt.uint16,
                    rangeShift: nt.uint16,
                    endCode: new nt.LazyArray(nt.uint16, "segCount"),
                    reservedPad: new nt.Reserved(nt.uint16),
                    startCode: new nt.LazyArray(nt.uint16, "segCount"),
                    idDelta: new nt.LazyArray(nt.int16, "segCount"),
                    idRangeOffset: new nt.LazyArray(nt.uint16, "segCount"),
                    glyphIndexArray: new nt.LazyArray(nt.uint16, function (t) {
                        return (t.length - t._currentOffset) / 2
                    })
                },
                6: {
                    length: nt.uint16,
                    language: nt.uint16,
                    firstCode: nt.uint16,
                    entryCount: nt.uint16,
                    glyphIndices: new nt.LazyArray(nt.uint16, "entryCount")
                },
                8: {
                    reserved: new nt.Reserved(nt.uint16),
                    length: nt.uint32,
                    language: nt.uint16,
                    is32: new nt.LazyArray(nt.uint8, 8192),
                    nGroups: nt.uint32,
                    groups: new nt.LazyArray(Ot, "nGroups")
                },
                10: {
                    reserved: new nt.Reserved(nt.uint16),
                    length: nt.uint32,
                    language: nt.uint32,
                    firstCode: nt.uint32,
                    entryCount: nt.uint32,
                    glyphIndices: new nt.LazyArray(nt.uint16, "numChars")
                },
                12: {
                    reserved: new nt.Reserved(nt.uint16),
                    length: nt.uint32,
                    language: nt.uint32,
                    nGroups: nt.uint32,
                    groups: new nt.LazyArray(Ot, "nGroups")
                },
                13: {
                    reserved: new nt.Reserved(nt.uint16),
                    length: nt.uint32,
                    language: nt.uint32,
                    nGroups: nt.uint32,
                    groups: new nt.LazyArray(Ot, "nGroups")
                },
                14: {length: nt.uint32, numRecords: nt.uint32, varSelectors: new nt.LazyArray(Ft, "numRecords")}
            }), Dt = new nt.Struct({
                platformID: nt.uint16,
                encodingID: nt.uint16,
                table: new nt.Pointer(nt.uint32, zt, {type: "parent", lazy: !0})
            }), Nt = new nt.Struct({
                version: nt.uint16,
                numSubtables: nt.uint16,
                tables: new nt.Array(Dt, "numSubtables")
            }), Ut = new nt.Struct({
                version: nt.int32,
                revision: nt.int32,
                checkSumAdjustment: nt.uint32,
                magicNumber: nt.uint32,
                flags: nt.uint16,
                unitsPerEm: nt.uint16,
                created: new nt.Array(nt.int32, 2),
                modified: new nt.Array(nt.int32, 2),
                xMin: nt.int16,
                yMin: nt.int16,
                xMax: nt.int16,
                yMax: nt.int16,
                macStyle: new nt.Bitfield(nt.uint16, ["bold", "italic", "underline", "outline", "shadow", "condensed", "extended"]),
                lowestRecPPEM: nt.uint16,
                fontDirectionHint: nt.int16,
                indexToLocFormat: nt.int16,
                glyphDataFormat: nt.int16
            }), Wt = new nt.Struct({
                version: nt.int32,
                ascent: nt.int16,
                descent: nt.int16,
                lineGap: nt.int16,
                advanceWidthMax: nt.uint16,
                minLeftSideBearing: nt.int16,
                minRightSideBearing: nt.int16,
                xMaxExtent: nt.int16,
                caretSlopeRise: nt.int16,
                caretSlopeRun: nt.int16,
                caretOffset: nt.int16,
                reserved: new nt.Reserved(nt.int16, 4),
                metricDataFormat: nt.int16,
                numberOfMetrics: nt.uint16
            }), jt = new nt.Struct({
                advance: nt.uint16,
                bearing: nt.int16
            }), Gt = new nt.Struct({
                metrics: new nt.LazyArray(jt, function (t) {
                    return t.parent.hhea.numberOfMetrics
                }), bearings: new nt.LazyArray(nt.int16, function (t) {
                    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics
                })
            }), Vt = new nt.Struct({
                version: nt.int32,
                numGlyphs: nt.uint16,
                maxPoints: nt.uint16,
                maxContours: nt.uint16,
                maxComponentPoints: nt.uint16,
                maxComponentContours: nt.uint16,
                maxZones: nt.uint16,
                maxTwilightPoints: nt.uint16,
                maxStorage: nt.uint16,
                maxFunctionDefs: nt.uint16,
                maxInstructionDefs: nt.uint16,
                maxStackElements: nt.uint16,
                maxSizeOfInstructions: nt.uint16,
                maxComponentElements: nt.uint16,
                maxComponentDepth: nt.uint16
            }), Ht = [["utf16be", "utf16be", "utf16be", "utf16be", "utf16be", "utf16be"], ["macroman", "shift-jis", "big5", "euc-kr", "iso-8859-6", "iso-8859-8", "macgreek", "maccyrillic", "symbol", "Devanagari", "Gurmukhi", "Gujarati", "Oriya", "Bengali", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhalese", "Burmese", "Khmer", "macthai", "Laotian", "Georgian", "Armenian", "gb-2312-80", "Tibetan", "Mongolian", "Geez", "maccenteuro", "Vietnamese", "Sindhi"], ["ascii"], ["symbol", "utf16be", "shift-jis", "gb18030", "big5", "wansung", "johab", null, null, null, "utf16be"]], qt = {
                15: "maciceland",
                17: "macturkish",
                18: "maccroatian",
                24: "maccenteuro",
                25: "maccenteuro",
                26: "maccenteuro",
                27: "maccenteuro",
                28: "maccenteuro",
                30: "maciceland",
                37: "macromania",
                38: "maccenteuro",
                39: "maccenteuro",
                40: "maccenteuro",
                143: "macinuit",
                146: "macgaelic"
            }, Zt = [[], {
                0: "en",
                30: "fo",
                60: "ks",
                90: "rw",
                1: "fr",
                31: "fa",
                61: "ku",
                91: "rn",
                2: "de",
                32: "ru",
                62: "sd",
                92: "ny",
                3: "it",
                33: "zh",
                63: "bo",
                93: "mg",
                4: "nl",
                34: "nl-BE",
                64: "ne",
                94: "eo",
                5: "sv",
                35: "ga",
                65: "sa",
                128: "cy",
                6: "es",
                36: "sq",
                66: "mr",
                129: "eu",
                7: "da",
                37: "ro",
                67: "bn",
                130: "ca",
                8: "pt",
                38: "cz",
                68: "as",
                131: "la",
                9: "no",
                39: "sk",
                69: "gu",
                132: "qu",
                10: "he",
                40: "si",
                70: "pa",
                133: "gn",
                11: "ja",
                41: "yi",
                71: "or",
                134: "ay",
                12: "ar",
                42: "sr",
                72: "ml",
                135: "tt",
                13: "fi",
                43: "mk",
                73: "kn",
                136: "ug",
                14: "el",
                44: "bg",
                74: "ta",
                137: "dz",
                15: "is",
                45: "uk",
                75: "te",
                138: "jv",
                16: "mt",
                46: "be",
                76: "si",
                139: "su",
                17: "tr",
                47: "uz",
                77: "my",
                140: "gl",
                18: "hr",
                48: "kk",
                78: "km",
                141: "af",
                19: "zh-Hant",
                49: "az-Cyrl",
                79: "lo",
                142: "br",
                20: "ur",
                50: "az-Arab",
                80: "vi",
                143: "iu",
                21: "hi",
                51: "hy",
                81: "id",
                144: "gd",
                22: "th",
                52: "ka",
                82: "tl",
                145: "gv",
                23: "ko",
                53: "mo",
                83: "ms",
                146: "ga",
                24: "lt",
                54: "ky",
                84: "ms-Arab",
                147: "to",
                25: "pl",
                55: "tg",
                85: "am",
                148: "el-polyton",
                26: "hu",
                56: "tk",
                86: "ti",
                149: "kl",
                27: "es",
                57: "mn-CN",
                87: "om",
                150: "az",
                28: "lv",
                58: "mn",
                88: "so",
                151: "nn",
                29: "se",
                59: "ps",
                89: "sw"
            }, [], {
                1078: "af",
                16393: "en-IN",
                1159: "rw",
                1074: "tn",
                1052: "sq",
                6153: "en-IE",
                1089: "sw",
                1115: "si",
                1156: "gsw",
                8201: "en-JM",
                1111: "kok",
                1051: "sk",
                1118: "am",
                17417: "en-MY",
                1042: "ko",
                1060: "sl",
                5121: "ar-DZ",
                5129: "en-NZ",
                1088: "ky",
                11274: "es-AR",
                15361: "ar-BH",
                13321: "en-PH",
                1108: "lo",
                16394: "es-BO",
                3073: "ar",
                18441: "en-SG",
                1062: "lv",
                13322: "es-CL",
                2049: "ar-IQ",
                7177: "en-ZA",
                1063: "lt",
                9226: "es-CO",
                11265: "ar-JO",
                11273: "en-TT",
                2094: "dsb",
                5130: "es-CR",
                13313: "ar-KW",
                2057: "en-GB",
                1134: "lb",
                7178: "es-DO",
                12289: "ar-LB",
                1033: "en",
                1071: "mk",
                12298: "es-EC",
                4097: "ar-LY",
                12297: "en-ZW",
                2110: "ms-BN",
                17418: "es-SV",
                6145: "ary",
                1061: "et",
                1086: "ms",
                4106: "es-GT",
                8193: "ar-OM",
                1080: "fo",
                1100: "ml",
                18442: "es-HN",
                16385: "ar-QA",
                1124: "fil",
                1082: "mt",
                2058: "es-MX",
                1025: "ar-SA",
                1035: "fi",
                1153: "mi",
                19466: "es-NI",
                10241: "ar-SY",
                2060: "fr-BE",
                1146: "arn",
                6154: "es-PA",
                7169: "aeb",
                3084: "fr-CA",
                1102: "mr",
                15370: "es-PY",
                14337: "ar-AE",
                1036: "fr",
                1148: "moh",
                10250: "es-PE",
                9217: "ar-YE",
                5132: "fr-LU",
                1104: "mn",
                20490: "es-PR",
                1067: "hy",
                6156: "fr-MC",
                2128: "mn-CN",
                3082: "es",
                1101: "as",
                4108: "fr-CH",
                1121: "ne",
                1034: "es",
                2092: "az-Cyrl",
                1122: "fy",
                1044: "nb",
                21514: "es-US",
                1068: "az",
                1110: "gl",
                2068: "nn",
                14346: "es-UY",
                1133: "ba",
                1079: "ka",
                1154: "oc",
                8202: "es-VE",
                1069: "eu",
                3079: "de-AT",
                1096: "or",
                2077: "sv-FI",
                1059: "be",
                1031: "de",
                1123: "ps",
                1053: "sv",
                2117: "bn",
                5127: "de-LI",
                1045: "pl",
                1114: "syr",
                1093: "bn-IN",
                4103: "de-LU",
                1046: "pt",
                1064: "tg",
                8218: "bs-Cyrl",
                2055: "de-CH",
                2070: "pt-PT",
                2143: "tzm",
                5146: "bs",
                1032: "el",
                1094: "pa",
                1097: "ta",
                1150: "br",
                1135: "kl",
                1131: "qu-BO",
                1092: "tt",
                1026: "bg",
                1095: "gu",
                2155: "qu-EC",
                1098: "te",
                1027: "ca",
                1128: "ha",
                3179: "qu",
                1054: "th",
                3076: "zh-HK",
                1037: "he",
                1048: "ro",
                1105: "bo",
                5124: "zh-MO",
                1081: "hi",
                1047: "rm",
                1055: "tr",
                2052: "zh",
                1038: "hu",
                1049: "ru",
                1090: "tk",
                4100: "zh-SG",
                1039: "is",
                9275: "smn",
                1152: "ug",
                1028: "zh-TW",
                1136: "ig",
                4155: "smj-NO",
                1058: "uk",
                1155: "co",
                1057: "id",
                5179: "smj",
                1070: "hsb",
                1050: "hr",
                1117: "iu",
                3131: "se-FI",
                1056: "ur",
                4122: "hr-BA",
                2141: "iu-Latn",
                1083: "se",
                2115: "uz-Cyrl",
                1029: "cs",
                2108: "ga",
                2107: "se-SE",
                1091: "uz",
                1030: "da",
                1076: "xh",
                8251: "sms",
                1066: "vi",
                1164: "prs",
                1077: "zu",
                6203: "sma-NO",
                1106: "cy",
                1125: "dv",
                1040: "it",
                7227: "sms",
                1160: "wo",
                2067: "nl-BE",
                2064: "it-CH",
                1103: "sa",
                1157: "sah",
                1043: "nl",
                1041: "ja",
                7194: "sr-Cyrl-BA",
                1144: "ii",
                3081: "en-AU",
                1099: "kn",
                3098: "sr",
                1130: "yo",
                10249: "en-BZ",
                1087: "kk",
                6170: "sr-Latn-BA",
                4105: "en-CA",
                1107: "km",
                2074: "sr-Latn",
                9225: "en-029",
                1158: "quc",
                1132: "nso"
            }], Yt = new nt.Struct({
                platformID: nt.uint16,
                encodingID: nt.uint16,
                languageID: nt.uint16,
                nameID: nt.uint16,
                length: nt.uint16,
                string: new nt.Pointer(nt.uint16, new nt.String("length", function (t) {
                    return a(t.platformID, t.encodingID, t.languageID)
                }), {type: "parent", relativeTo: "parent.stringOffset", allowNull: !1})
            }), Xt = new nt.Struct({
                length: nt.uint16,
                tag: new nt.Pointer(nt.uint16, new nt.String("length", "utf16be"), {
                    type: "parent",
                    relativeTo: "stringOffset"
                })
            }), NameTable = new nt.VersionedStruct(nt.uint16, {
                0: {
                    count: nt.uint16,
                    stringOffset: nt.uint16,
                    records: new nt.Array(Yt, "count")
                },
                1: {
                    count: nt.uint16,
                    stringOffset: nt.uint16,
                    records: new nt.Array(Yt, "count"),
                    langTagCount: nt.uint16,
                    langTags: new nt.Array(Xt, "langTagCount")
                }
            }), Kt = ["copyright", "fontFamily", "fontSubfamily", "uniqueSubfamily", "fullName", "version", "postscriptName", "trademark", "manufacturer", "designer", "description", "vendorURL", "designerURL", "license", "licenseURL", null, "preferredFamily", "preferredSubfamily", "compatibleFull", "sampleText", "postscriptCIDFontName", "wwsFamilyName", "wwsSubfamilyName"];
            NameTable.process = function (t) {
                for (var e = {}, n = this.records, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                    var o;
                    if (r) {
                        if (i >= n.length)break;
                        o = n[i++]
                    } else {
                        if (i = n.next(), i.done)break;
                        o = i.value
                    }
                    var a = o, s = Zt[a.platformID][a.languageID];
                    null == s && null != this.langTags && a.languageID >= 32768 && (s = this.langTags[a.languageID - 32768].tag), null == s && (s = a.platformID + "-" + a.languageID);
                    var u = a.nameID >= 256 ? "fontFeatures" : Kt[a.nameID] || a.nameID;
                    null == e[u] && (e[u] = {});
                    var l = e[u];
                    a.nameID >= 256 && (l = l[a.nameID] || (l[a.nameID] = {})), "string" != typeof a.string && "string" == typeof l[s] || (l[s] = a.string)
                }
                this.records = e
            }, NameTable.preEncode = function () {
                if (!Array.isArray(this.records)) {
                    this.version = 0;
                    var t = [];
                    for (var n in this.records) {
                        var r = this.records[n];
                        "fontFeatures" !== n && (t.push({
                            platformID: 3,
                            encodingID: 1,
                            languageID: 1033,
                            nameID: Kt.indexOf(n),
                            length: e.byteLength(r.en, "utf16le"),
                            string: r.en
                        }), "postscriptName" === n && t.push({
                            platformID: 1,
                            encodingID: 0,
                            languageID: 0,
                            nameID: Kt.indexOf(n),
                            length: r.en.length,
                            string: r.en
                        }))
                    }
                    this.records = t, this.count = t.length, this.stringOffset = NameTable.size(this, null, !1)
                }
            };
            var Jt = new nt.VersionedStruct(nt.uint16, {
                header: {
                    xAvgCharWidth: nt.int16,
                    usWeightClass: nt.uint16,
                    usWidthClass: nt.uint16,
                    fsType: new nt.Bitfield(nt.uint16, [null, "noEmbedding", "viewOnly", "editable", null, null, null, null, "noSubsetting", "bitmapOnly"]),
                    ySubscriptXSize: nt.int16,
                    ySubscriptYSize: nt.int16,
                    ySubscriptXOffset: nt.int16,
                    ySubscriptYOffset: nt.int16,
                    ySuperscriptXSize: nt.int16,
                    ySuperscriptYSize: nt.int16,
                    ySuperscriptXOffset: nt.int16,
                    ySuperscriptYOffset: nt.int16,
                    yStrikeoutSize: nt.int16,
                    yStrikeoutPosition: nt.int16,
                    sFamilyClass: nt.int16,
                    panose: new nt.Array(nt.uint8, 10),
                    ulCharRange: new nt.Array(nt.uint32, 4),
                    vendorID: new nt.String(4),
                    fsSelection: new nt.Bitfield(nt.uint16, ["italic", "underscore", "negative", "outlined", "strikeout", "bold", "regular", "useTypoMetrics", "wws", "oblique"]),
                    usFirstCharIndex: nt.uint16,
                    usLastCharIndex: nt.uint16
                },
                0: {},
                1: {
                    typoAscender: nt.int16,
                    typoDescender: nt.int16,
                    typoLineGap: nt.int16,
                    winAscent: nt.uint16,
                    winDescent: nt.uint16,
                    codePageRange: new nt.Array(nt.uint32, 2)
                },
                2: {
                    typoAscender: nt.int16,
                    typoDescender: nt.int16,
                    typoLineGap: nt.int16,
                    winAscent: nt.uint16,
                    winDescent: nt.uint16,
                    codePageRange: new nt.Array(nt.uint32, 2),
                    xHeight: nt.int16,
                    capHeight: nt.int16,
                    defaultChar: nt.uint16,
                    breakChar: nt.uint16,
                    maxContent: nt.uint16
                },
                5: {
                    typoAscender: nt.int16,
                    typoDescender: nt.int16,
                    typoLineGap: nt.int16,
                    winAscent: nt.uint16,
                    winDescent: nt.uint16,
                    codePageRange: new nt.Array(nt.uint32, 2),
                    xHeight: nt.int16,
                    capHeight: nt.int16,
                    defaultChar: nt.uint16,
                    breakChar: nt.uint16,
                    maxContent: nt.uint16,
                    usLowerOpticalPointSize: nt.uint16,
                    usUpperOpticalPointSize: nt.uint16
                }
            }), Qt = Jt.versions;
            Qt[3] = Qt[4] = Qt[2];
            var $t = new nt.VersionedStruct(nt.fixed32, {
                header: {
                    italicAngle: nt.fixed32,
                    underlinePosition: nt.int16,
                    underlineThickness: nt.int16,
                    isFixedPitch: nt.uint32,
                    minMemType42: nt.uint32,
                    maxMemType42: nt.uint32,
                    minMemType1: nt.uint32,
                    maxMemType1: nt.uint32
                },
                1: {},
                2: {
                    numberOfGlyphs: nt.uint16,
                    glyphNameIndex: new nt.Array(nt.uint16, "numberOfGlyphs"),
                    names: new nt.Array(new nt.String(nt.uint8))
                },
                2.5: {numberOfGlyphs: nt.uint16, offsets: new nt.Array(nt.uint8, "numberOfGlyphs")},
                3: {},
                4: {
                    map: new nt.Array(nt.uint32, function (t) {
                        return t.parent.maxp.numGlyphs
                    })
                }
            }), te = new nt.Struct({controlValues: new nt.Array(nt.int16)}), ee = new nt.Struct({instructions: new nt.Array(nt.uint8)}), ne = new nt.VersionedStruct("head.indexToLocFormat", {
                0: {offsets: new nt.Array(nt.uint16)},
                1: {offsets: new nt.Array(nt.uint32)}
            });
            ne.process = function () {
                if (0 === this.version)for (var t = 0; t < this.offsets.length; t++)this.offsets[t] <<= 1
            }, ne.preEncode = function () {
                if (null == this.version && (this.version = this.offsets[this.offsets.length - 1] > 65535 ? 1 : 0, 0 === this.version))for (var t = 0; t < this.offsets.length; t++)this.offsets[t] >>>= 1
            };
            var re, ie = new nt.Struct({controlValueProgram: new nt.Array(nt.uint8)}), oe = new nt.Array(new nt.Buffer), ae = function () {
                function t(e) {
                    lt(this, t), this.type = e
                }

                return t.prototype.getCFFVersion = function (t) {
                    for (; t && !t.hdrSize;)t = t.parent;
                    return t ? t.version : -1
                }, t.prototype.decode = function (t, e) {
                    var n = this.getCFFVersion(e), r = n >= 2 ? t.readUInt32BE() : t.readUInt16BE();
                    if (0 === r)return [];
                    var i = t.readUInt8(), o = void 0;
                    if (1 === i)o = nt.uint8; else if (2 === i)o = nt.uint16; else if (3 === i)o = nt.uint24; else {
                        if (4 !== i)throw new Error("Bad offset size in CFFIndex: " + i + " " + t.pos);
                        o = nt.uint32
                    }
                    for (var a = [], s = t.pos + (r + 1) * i - 1, u = o.decode(t), l = 0; l < r; l++) {
                        var c = o.decode(t);
                        if (null != this.type) {
                            var f = t.pos;
                            t.pos = s + u, e.length = c - u, a.push(this.type.decode(t, e)), t.pos = f
                        } else a.push({offset: s + u, length: c - u});
                        u = c
                    }
                    return t.pos = s + u, a
                }, t.prototype.size = function (t, e) {
                    var n = 2;
                    if (0 === t.length)return n;
                    for (var r = this.type || new nt.Buffer, i = 1, o = 0; o < t.length; o++) {
                        var a = t[o];
                        i += r.size(a, e)
                    }
                    var s = void 0;
                    if (i <= 255)s = nt.uint8; else if (i <= 65535)s = nt.uint16; else if (i <= 16777215)s = nt.uint24; else {
                        if (!(i <= 4294967295))throw new Error("Bad offset in CFFIndex");
                        s = nt.uint32
                    }
                    return n += 1 + s.size() * (t.length + 1), n += i - 1, n
                }, t.prototype.encode = function (t, e, n) {
                    if (t.writeUInt16BE(e.length), 0 !== e.length) {
                        for (var r = this.type || new nt.Buffer, i = [], o = 1, a = e, s = Array.isArray(a), u = 0, a = s ? a : it(a); ;) {
                            var l;
                            if (s) {
                                if (u >= a.length)break;
                                l = a[u++]
                            } else {
                                if (u = a.next(), u.done)break;
                                l = u.value
                            }
                            var c = l, f = r.size(c, n);
                            i.push(f), o += f
                        }
                        var h = void 0;
                        if (o <= 255)h = nt.uint8; else if (o <= 65535)h = nt.uint16; else if (o <= 16777215)h = nt.uint24; else {
                            if (!(o <= 4294967295))throw new Error("Bad offset in CFFIndex");
                            h = nt.uint32
                        }
                        t.writeUInt8(h.size()), o = 1, h.encode(t, o);
                        for (var p = i, d = Array.isArray(p), g = 0, p = d ? p : it(p); ;) {
                            var y;
                            if (d) {
                                if (g >= p.length)break;
                                y = p[g++]
                            } else {
                                if (g = p.next(), g.done)break;
                                y = g.value
                            }
                            o += y, h.encode(t, o)
                        }
                        for (var v = e, b = Array.isArray(v), m = 0, v = b ? v : it(v); ;) {
                            var w;
                            if (b) {
                                if (m >= v.length)break;
                                w = v[m++]
                            } else {
                                if (m = v.next(), m.done)break;
                                w = m.value
                            }
                            var x = w;
                            r.encode(t, x, n)
                        }
                    }
                }, t
            }(), se = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"], ue = {
                ".": 10,
                E: 11,
                "E-": 12,
                "-": 14
            }, le = function () {
                function t() {
                    lt(this, t)
                }

                return t.decode = function (t, e) {
                    if (32 <= e && e <= 246)return e - 139;
                    if (247 <= e && e <= 250)return 256 * (e - 247) + t.readUInt8() + 108;
                    if (251 <= e && e <= 254)return 256 * -(e - 251) - t.readUInt8() - 108;
                    if (28 === e)return t.readInt16BE();
                    if (29 === e)return t.readInt32BE();
                    if (30 === e) {
                        for (var n = ""; ;) {
                            var r = t.readUInt8(), i = r >> 4;
                            if (15 === i)break;
                            n += se[i];
                            var o = 15 & r;
                            if (15 === o)break;
                            n += se[o]
                        }
                        return parseFloat(n)
                    }
                    return null
                }, t.size = function (t) {
                    if (t.forceLarge && (t = 32768), (0 | t) !== t) {
                        var e = "" + t;
                        return 1 + Math.ceil((e.length + 1) / 2)
                    }
                    return -107 <= t && t <= 107 ? 1 : 108 <= t && t <= 1131 || -1131 <= t && t <= -108 ? 2 : -32768 <= t && t <= 32767 ? 3 : 5
                }, t.encode = function (t, e) {
                    var n = Number(e);
                    if (e.forceLarge)return t.writeUInt8(29), t.writeInt32BE(n);
                    if ((0 | n) === n)return -107 <= n && n <= 107 ? t.writeUInt8(n + 139) : 108 <= n && n <= 1131 ? (n -= 108, t.writeUInt8(247 + (n >> 8)), t.writeUInt8(255 & n)) : -1131 <= n && n <= -108 ? (n = -n - 108, t.writeUInt8(251 + (n >> 8)), t.writeUInt8(255 & n)) : -32768 <= n && n <= 32767 ? (t.writeUInt8(28), t.writeInt16BE(n)) : (t.writeUInt8(29), t.writeInt32BE(n));
                    t.writeUInt8(30);
                    for (var r = "" + n, i = 0; i < r.length; i += 2) {
                        var o = r[i], a = ue[o] || +o;
                        if (i === r.length - 1)var s = 15; else var u = r[i + 1], s = ue[u] || +u;
                        t.writeUInt8(a << 4 | 15 & s)
                    }
                    return 15 !== s ? t.writeUInt8(240) : void 0
                }, t
            }(), ce = function () {
                function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    lt(this, t), this.ops = e, this.fields = {};
                    for (var n = e, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                        var o;
                        if (r) {
                            if (i >= n.length)break;
                            o = n[i++]
                        } else {
                            if (i = n.next(), i.done)break;
                            o = i.value
                        }
                        var a = o, s = Array.isArray(a[0]) ? a[0][0] << 8 | a[0][1] : a[0];
                        this.fields[s] = a
                    }
                }

                return t.prototype.decodeOperands = function (t, e, n, r) {
                    var i = this;
                    if (Array.isArray(t))return r.map(function (r, o) {
                        return i.decodeOperands(t[o], e, n, [r])
                    });
                    if (null != t.decode)return t.decode(e, n, r);
                    switch (t) {
                        case"number":
                        case"offset":
                        case"sid":
                            return r[0];
                        case"boolean":
                            return !!r[0];
                        default:
                            return r
                    }
                }, t.prototype.encodeOperands = function (t, e, n, r) {
                    var i = this;
                    return Array.isArray(t) ? r.map(function (r, o) {
                        return i.encodeOperands(t[o], e, n, r)[0]
                    }) : null != t.encode ? t.encode(e, r, n) : "number" == typeof r ? [r] : "boolean" == typeof r ? [+r] : Array.isArray(r) ? r : [r]
                }, t.prototype.decode = function (t, e) {
                    var n = t.pos + e.length, r = {}, i = [];
                    gt(r, {parent: {value: e}, _startOffset: {value: t.pos}});
                    for (var o in this.fields) {
                        var a = this.fields[o];
                        r[a[1]] = a[3]
                    }
                    for (; t.pos < n;) {
                        var s = t.readUInt8();
                        if (s < 28) {
                            12 === s && (s = s << 8 | t.readUInt8());
                            var u = this.fields[s];
                            if (!u)throw new Error("Unknown operator " + s);
                            var l = this.decodeOperands(u[2], t, r, i);
                            null != l && (l instanceof dt.PropertyDescriptor ? ut(r, u[1], l) : r[u[1]] = l), i = []
                        } else i.push(le.decode(t, s))
                    }
                    return r
                }, t.prototype.size = function (t, e) {
                    var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], r = {
                        parent: e,
                        val: t,
                        pointerSize: 0,
                        startOffset: e.startOffset || 0
                    }, i = 0;
                    for (var o in this.fields) {
                        var a = this.fields[o], s = t[a[1]];
                        if (null != s && !yt(s, a[3])) {
                            for (var u = this.encodeOperands(a[2], null, r, s), l = u, c = Array.isArray(l), f = 0, l = c ? l : it(l); ;) {
                                var h;
                                if (c) {
                                    if (f >= l.length)break;
                                    h = l[f++]
                                } else {
                                    if (f = l.next(), f.done)break;
                                    h = f.value
                                }
                                var p = h;
                                i += le.size(p)
                            }
                            i += (Array.isArray(a[0]) ? a[0] : [a[0]]).length
                        }
                    }
                    return n && (i += r.pointerSize), i
                }, t.prototype.encode = function (t, e, n) {
                    var r = {pointers: [], startOffset: t.pos, parent: n, val: e, pointerSize: 0};
                    r.pointerOffset = t.pos + this.size(e, r, !1);
                    for (var i = this.ops, o = Array.isArray(i), a = 0, i = o ? i : it(i); ;) {
                        var s;
                        if (o) {
                            if (a >= i.length)break;
                            s = i[a++]
                        } else {
                            if (a = i.next(), a.done)break;
                            s = a.value
                        }
                        var u = s, l = e[u[1]];
                        if (null != l && !yt(l, u[3])) {
                            for (var c = this.encodeOperands(u[2], t, r, l), f = c, h = Array.isArray(f), p = 0, f = h ? f : it(f); ;) {
                                var d;
                                if (h) {
                                    if (p >= f.length)break;
                                    d = f[p++]
                                } else {
                                    if (p = f.next(), p.done)break;
                                    d = p.value
                                }
                                var g = d;
                                le.encode(t, g)
                            }
                            for (var y = Array.isArray(u[0]) ? u[0] : [u[0]], v = y, b = Array.isArray(v), m = 0, v = b ? v : it(v); ;) {
                                var w;
                                if (b) {
                                    if (m >= v.length)break;
                                    w = v[m++]
                                } else {
                                    if (m = v.next(), m.done)break;
                                    w = m.value
                                }
                                var x = w;
                                t.writeUInt8(x)
                            }
                        }
                    }
                    for (var _ = 0; _ < r.pointers.length;) {
                        var k = r.pointers[_++];
                        k.type.encode(t, k.val, k.parent)
                    }
                }, t
            }(), fe = function (t) {
                function e(n) {
                    var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    return lt(this, e), null == r.type && (r.type = "global"), ht(this, t.call(this, null, n, r))
                }

                return pt(e, t), e.prototype.decode = function (e, n, r) {
                    return this.offsetType = {
                        decode: function () {
                            return r[0]
                        }
                    }, t.prototype.decode.call(this, e, n, r)
                }, e.prototype.encode = function (e, n, r) {
                    if (!e)return this.offsetType = {
                        size: function () {
                            return 0
                        }
                    }, this.size(n, r), [new he(0)];
                    var i = null;
                    return this.offsetType = {
                        encode: function (t, e) {
                            return i = e
                        }
                    }, t.prototype.encode.call(this, e, n, r), [new he(i)]
                }, e
            }(nt.Pointer), he = function () {
                function t(e) {
                    lt(this, t), this.val = e, this.forceLarge = !0
                }

                return t.prototype.valueOf = function () {
                    return this.val
                }, t
            }(), pe = function () {
                function t() {
                    lt(this, t)
                }

                return t.decode = function (t, e, n) {
                    for (var r = n.pop(); n.length > r;)n.pop()
                }, t
            }(), de = new ce([[6, "BlueValues", "delta", null], [7, "OtherBlues", "delta", null], [8, "FamilyBlues", "delta", null], [9, "FamilyOtherBlues", "delta", null], [[12, 9], "BlueScale", "number", .039625], [[12, 10], "BlueShift", "number", 7], [[12, 11], "BlueFuzz", "number", 1], [10, "StdHW", "number", null], [11, "StdVW", "number", null], [[12, 12], "StemSnapH", "delta", null], [[12, 13], "StemSnapV", "delta", null], [[12, 14], "ForceBold", "boolean", !1], [[12, 17], "LanguageGroup", "number", 0], [[12, 18], "ExpansionFactor", "number", .06], [[12, 19], "initialRandomSeed", "number", 0], [20, "defaultWidthX", "number", 0], [21, "nominalWidthX", "number", 0], [22, "vsindex", "number", 0], [23, "blend", pe, null], [19, "Subrs", new fe(new ae, {
                type: "local"
            }), null]]), ge = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], ye = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], ve = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], be = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron"], me = [".notdef", "space", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], we = [".notdef", "space", "dollaroldstyle", "dollarsuperior", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "hyphensuperior", "colonmonetary", "onefitted", "rupiah", "centoldstyle", "figuredash", "hypheninferior", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior"], xe = new nt.Struct({
                reserved: new nt.Reserved(nt.uint16),
                reqFeatureIndex: nt.uint16,
                featureCount: nt.uint16,
                featureIndexes: new nt.Array(nt.uint16, "featureCount")
            }), _e = new nt.Struct({
                tag: new nt.String(4),
                langSys: new nt.Pointer(nt.uint16, xe, {type: "parent"})
            }), ke = new nt.Struct({
                defaultLangSys: new nt.Pointer(nt.uint16, xe),
                count: nt.uint16,
                langSysRecords: new nt.Array(_e, "count")
            }), Se = new nt.Struct({
                tag: new nt.String(4),
                script: new nt.Pointer(nt.uint16, ke, {type: "parent"})
            }), Ce = new nt.Array(Se, nt.uint16), Ae = new nt.Struct({
                featureParams: nt.uint16,
                lookupCount: nt.uint16,
                lookupListIndexes: new nt.Array(nt.uint16, "lookupCount")
            }), Pe = new nt.Struct({
                tag: new nt.String(4),
                feature: new nt.Pointer(nt.uint16, Ae, {type: "parent"})
            }), Ee = new nt.Array(Pe, nt.uint16), Ie = new nt.Struct({
                markAttachmentType: nt.uint8,
                flags: new nt.Bitfield(nt.uint8, ["rightToLeft", "ignoreBaseGlyphs", "ignoreLigatures", "ignoreMarks", "useMarkFilteringSet"])
            }), Te = new nt.Struct({
                start: nt.uint16,
                end: nt.uint16,
                startCoverageIndex: nt.uint16
            }), Oe = new nt.VersionedStruct(nt.uint16, {
                1: {
                    glyphCount: nt.uint16,
                    glyphs: new nt.Array(nt.uint16, "glyphCount")
                }, 2: {rangeCount: nt.uint16, rangeRecords: new nt.Array(Te, "rangeCount")}
            }), Be = new nt.Struct({
                start: nt.uint16,
                end: nt.uint16,
                class: nt.uint16
            }), Le = new nt.VersionedStruct(nt.uint16, {
                1: {
                    startGlyph: nt.uint16,
                    glyphCount: nt.uint16,
                    classValueArray: new nt.Array(nt.uint16, "glyphCount")
                }, 2: {classRangeCount: nt.uint16, classRangeRecord: new nt.Array(Be, "classRangeCount")}
            }), Me = new nt.Struct({
                a: nt.uint16,
                b: nt.uint16,
                deltaFormat: nt.uint16
            }), Re = new nt.Struct({
                sequenceIndex: nt.uint16,
                lookupListIndex: nt.uint16
            }), Fe = new nt.Struct({
                glyphCount: nt.uint16,
                lookupCount: nt.uint16,
                input: new nt.Array(nt.uint16, function (t) {
                    return t.glyphCount - 1
                }),
                lookupRecords: new nt.Array(Re, "lookupCount")
            }), ze = new nt.Array(new nt.Pointer(nt.uint16, Fe), nt.uint16), De = new nt.Struct({
                glyphCount: nt.uint16,
                lookupCount: nt.uint16,
                classes: new nt.Array(nt.uint16, function (t) {
                    return t.glyphCount - 1
                }),
                lookupRecords: new nt.Array(Re, "lookupCount")
            }), Ne = new nt.Array(new nt.Pointer(nt.uint16, De), nt.uint16), Ue = new nt.VersionedStruct(nt.uint16, {
                1: {
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    ruleSetCount: nt.uint16,
                    ruleSets: new nt.Array(new nt.Pointer(nt.uint16, ze), "ruleSetCount")
                },
                2: {
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    classDef: new nt.Pointer(nt.uint16, Le),
                    classSetCnt: nt.uint16,
                    classSet: new nt.Array(new nt.Pointer(nt.uint16, Ne), "classSetCnt")
                },
                3: {
                    glyphCount: nt.uint16,
                    lookupCount: nt.uint16,
                    coverages: new nt.Array(new nt.Pointer(nt.uint16, Oe), "glyphCount"),
                    lookupRecords: new nt.Array(Re, "lookupCount")
                }
            }), We = new nt.Struct({
                backtrackGlyphCount: nt.uint16,
                backtrack: new nt.Array(nt.uint16, "backtrackGlyphCount"),
                inputGlyphCount: nt.uint16,
                input: new nt.Array(nt.uint16, function (t) {
                    return t.inputGlyphCount - 1
                }),
                lookaheadGlyphCount: nt.uint16,
                lookahead: new nt.Array(nt.uint16, "lookaheadGlyphCount"),
                lookupCount: nt.uint16,
                lookupRecords: new nt.Array(Re, "lookupCount")
            }), je = new nt.Array(new nt.Pointer(nt.uint16, We), nt.uint16), Ge = new nt.VersionedStruct(nt.uint16, {
                1: {
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    chainCount: nt.uint16,
                    chainRuleSets: new nt.Array(new nt.Pointer(nt.uint16, je), "chainCount")
                },
                2: {
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    backtrackClassDef: new nt.Pointer(nt.uint16, Le),
                    inputClassDef: new nt.Pointer(nt.uint16, Le),
                    lookaheadClassDef: new nt.Pointer(nt.uint16, Le),
                    chainCount: nt.uint16,
                    chainClassSet: new nt.Array(new nt.Pointer(nt.uint16, je), "chainCount")
                },
                3: {
                    backtrackGlyphCount: nt.uint16,
                    backtrackCoverage: new nt.Array(new nt.Pointer(nt.uint16, Oe), "backtrackGlyphCount"),
                    inputGlyphCount: nt.uint16,
                    inputCoverage: new nt.Array(new nt.Pointer(nt.uint16, Oe), "inputGlyphCount"),
                    lookaheadGlyphCount: nt.uint16,
                    lookaheadCoverage: new nt.Array(new nt.Pointer(nt.uint16, Oe), "lookaheadGlyphCount"),
                    lookupCount: nt.uint16,
                    lookupRecords: new nt.Array(Re, "lookupCount")
                }
            }), Ve = new nt.Fixed(16, "BE", 14), He = new nt.Struct({
                startCoord: Ve,
                peakCoord: Ve,
                endCoord: Ve
            }), qe = new nt.Struct({
                axisCount: nt.uint16,
                regionCount: nt.uint16,
                variationRegions: new nt.Array(new nt.Array(He, "axisCount"), "regionCount")
            }), Ze = new nt.Struct({
                shortDeltas: new nt.Array(nt.int16, function (t) {
                    return t.parent.shortDeltaCount
                }), regionDeltas: new nt.Array(nt.int8, function (t) {
                    return t.parent.regionIndexCount - t.parent.shortDeltaCount
                }), deltas: function (t) {
                    return t.shortDeltas.concat(t.regionDeltas)
                }
            }), Ye = new nt.Struct({
                itemCount: nt.uint16,
                shortDeltaCount: nt.uint16,
                regionIndexCount: nt.uint16,
                regionIndexes: new nt.Array(nt.uint16, "regionIndexCount"),
                deltaSets: new nt.Array(Ze, "itemCount")
            }), Xe = new nt.Struct({
                format: nt.uint16,
                variationRegionList: new nt.Pointer(nt.uint32, qe),
                variationDataCount: nt.uint16,
                itemVariationData: new nt.Array(new nt.Pointer(nt.uint32, Ye), "variationDataCount")
            }), Ke = new nt.VersionedStruct(nt.uint16, {1: (re = {axisIndex: nt.uint16}, re.axisIndex = nt.uint16, re.filterRangeMinValue = Ve, re.filterRangeMaxValue = Ve, re)}), Je = new nt.Struct({
                conditionCount: nt.uint16,
                conditionTable: new nt.Array(new nt.Pointer(nt.uint32, Ke), "conditionCount")
            }), Qe = new nt.Struct({
                featureIndex: nt.uint16,
                alternateFeatureTable: new nt.Pointer(nt.uint32, Ae, {type: "parent"})
            }), $e = new nt.Struct({
                version: nt.fixed32,
                substitutionCount: nt.uint16,
                substitutions: new nt.Array(Qe, "substitutionCount")
            }), tn = new nt.Struct({
                conditionSet: new nt.Pointer(nt.uint32, Je, {type: "parent"}),
                featureTableSubstitution: new nt.Pointer(nt.uint32, $e, {type: "parent"})
            }), en = new nt.Struct({
                majorVersion: nt.uint16,
                minorVersion: nt.uint16,
                featureVariationRecordCount: nt.uint32,
                featureVariationRecords: new nt.Array(tn, "featureVariationRecordCount")
            }), nn = function () {
                function t(e, n) {
                    lt(this, t), this.predefinedOps = e, this.type = n
                }

                return t.prototype.decode = function (t, e, n) {
                    return this.predefinedOps[n[0]] ? this.predefinedOps[n[0]] : this.type.decode(t, e, n)
                }, t.prototype.size = function (t, e) {
                    return this.type.size(t, e)
                }, t.prototype.encode = function (t, e, n) {
                    var r = this.predefinedOps.indexOf(e);
                    return -1 !== r ? r : this.type.encode(t, e, n)
                }, t
            }(), rn = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.call(this, "UInt8"))
                }

                return pt(e, t), e.prototype.decode = function (t) {
                    return 127 & nt.uint8.decode(t)
                }, e
            }(nt.Number), on = new nt.Struct({first: nt.uint16, nLeft: nt.uint8}), an = new nt.Struct({
                first: nt.uint16,
                nLeft: nt.uint16
            }), sn = new nt.VersionedStruct(new rn, {
                0: {nCodes: nt.uint8, codes: new nt.Array(nt.uint8, "nCodes")},
                1: {nRanges: nt.uint8, ranges: new nt.Array(on, "nRanges")}
            }), un = new nn([ye, ve], new fe(sn, {lazy: !0})), ln = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.prototype.decode = function (t, e) {
                    for (var n = dt.resolveLength(this.length, t, e), r = 0, i = []; r < n;) {
                        var o = this.type.decode(t, e);
                        o.offset = r, r += o.nLeft + 1, i.push(o)
                    }
                    return i
                }, e
            }(nt.Array), cn = new nt.VersionedStruct(nt.uint8, {
                0: {
                    glyphs: new nt.Array(nt.uint16, function (t) {
                        return t.parent.CharStrings.length - 1
                    })
                }, 1: {
                    ranges: new ln(on, function (t) {
                        return t.parent.CharStrings.length - 1
                    })
                }, 2: {
                    ranges: new ln(an, function (t) {
                        return t.parent.CharStrings.length - 1
                    })
                }
            }), fn = new nn([be, me, we], new fe(cn, {lazy: !0})), hn = new nt.Struct({
                first: nt.uint16,
                fd: nt.uint8
            }), pn = new nt.Struct({
                first: nt.uint32,
                fd: nt.uint16
            }), dn = new nt.VersionedStruct(nt.uint8, {
                0: {
                    fds: new nt.Array(nt.uint8, function (t) {
                        return t.parent.CharStrings.length
                    })
                },
                3: {nRanges: nt.uint16, ranges: new nt.Array(hn, "nRanges"), sentinel: nt.uint16},
                4: {nRanges: nt.uint32, ranges: new nt.Array(pn, "nRanges"), sentinel: nt.uint32}
            }), gn = new fe(de), yn = function () {
                function t() {
                    lt(this, t)
                }

                return t.prototype.decode = function (t, e, n) {
                    return e.length = n[0], gn.decode(t, e, [n[1]])
                }, t.prototype.size = function (t, e) {
                    return [de.size(t, e, !1), gn.size(t, e)[0]]
                }, t.prototype.encode = function (t, e, n) {
                    return [de.size(e, n, !1), gn.encode(t, e, n)[0]]
                }, t
            }(), vn = new ce([[18, "Private", new yn, null], [[12, 38], "FontName", "sid", null]]), bn = new ce([[[12, 30], "ROS", ["sid", "sid", "number"], null], [0, "version", "sid", null], [1, "Notice", "sid", null], [[12, 0], "Copyright", "sid", null], [2, "FullName", "sid", null], [3, "FamilyName", "sid", null], [4, "Weight", "sid", null], [[12, 1], "isFixedPitch", "boolean", !1], [[12, 2], "ItalicAngle", "number", 0], [[12, 3], "UnderlinePosition", "number", -100], [[12, 4], "UnderlineThickness", "number", 50], [[12, 5], "PaintType", "number", 0], [[12, 6], "CharstringType", "number", 2], [[12, 7], "FontMatrix", "array", [.001, 0, 0, .001, 0, 0]], [13, "UniqueID", "number", null], [5, "FontBBox", "array", [0, 0, 0, 0]], [[12, 8], "StrokeWidth", "number", 0], [14, "XUID", "array", null], [15, "charset", fn, be], [16, "Encoding", un, ye], [17, "CharStrings", new fe(new ae), null], [18, "Private", new yn, null], [[12, 20], "SyntheticBase", "number", null], [[12, 21], "PostScript", "sid", null], [[12, 22], "BaseFontName", "sid", null], [[12, 23], "BaseFontBlend", "delta", null], [[12, 31], "CIDFontVersion", "number", 0], [[12, 32], "CIDFontRevision", "number", 0], [[12, 33], "CIDFontType", "number", 0], [[12, 34], "CIDCount", "number", 8720], [[12, 35], "UIDBase", "number", null], [[12, 37], "FDSelect", new fe(dn), null], [[12, 36], "FDArray", new fe(new ae(vn)), null], [[12, 38], "FontName", "sid", null]]), mn = new nt.Struct({
                length: nt.uint16,
                itemVariationStore: Xe
            }), wn = new ce([[[12, 7], "FontMatrix", "array", [.001, 0, 0, .001, 0, 0]], [17, "CharStrings", new fe(new ae), null], [[12, 37], "FDSelect", new fe(dn), null], [[12, 36], "FDArray", new fe(new ae(vn)), null], [24, "vstore", new fe(mn), null], [25, "maxstack", "number", 193]]), xn = new nt.VersionedStruct(nt.fixed16, {
                1: {
                    hdrSize: nt.uint8,
                    offSize: nt.uint8,
                    nameIndex: new ae(new nt.String("length")),
                    topDictIndex: new ae(bn),
                    stringIndex: new ae(new nt.String("length")),
                    globalSubrIndex: new ae
                }, 2: {hdrSize: nt.uint8, length: nt.uint16, topDict: wn, globalSubrIndex: new ae}
            }), _n = function () {
                function t(e) {
                    lt(this, t), this.stream = e, this.decode()
                }

                return t.decode = function (e) {
                    return new t(e)
                }, t.prototype.decode = function () {
                    var t = (this.stream.pos, xn.decode(this.stream));
                    for (var e in t) {
                        var n = t[e];
                        this[e] = n
                    }
                    if (this.version < 2) {
                        if (1 !== this.topDictIndex.length)throw new Error("Only a single font is allowed in CFF");
                        this.topDict = this.topDictIndex[0]
                    }
                    return this.isCIDFont = null != this.topDict.ROS, this
                }, t.prototype.string = function (t) {
                    return this.version >= 2 ? null : t < ge.length ? ge[t] : this.stringIndex[t - ge.length]
                }, t.prototype.getCharString = function (t) {
                    return this.stream.pos = this.topDict.CharStrings[t].offset, this.stream.readBuffer(this.topDict.CharStrings[t].length)
                }, t.prototype.getGlyphName = function (t) {
                    if (this.version >= 2)return null;
                    if (this.isCIDFont)return null;
                    var e = this.topDict.charset;
                    if (Array.isArray(e))return e[t];
                    if (0 === t)return ".notdef";
                    switch (t -= 1, e.version) {
                        case 0:
                            return this.string(e.glyphs[t]);
                        case 1:
                        case 2:
                            for (var n = 0; n < e.ranges.length; n++) {
                                var r = e.ranges[n];
                                if (r.offset <= t && t <= r.offset + r.nLeft)return this.string(r.first + (t - r.offset))
                            }
                    }
                    return null
                }, t.prototype.fdForGlyph = function (t) {
                    if (!this.topDict.FDSelect)return null;
                    switch (this.topDict.FDSelect.version) {
                        case 0:
                            return this.topDict.FDSelect.fds[t];
                        case 3:
                        case 4:
                            for (var e = this.topDict.FDSelect.ranges, n = 0, r = e.length - 1; n <= r;) {
                                var i = n + r >> 1;
                                if (t < e[i].first)r = i - 1; else {
                                    if (!(i < r && t > e[i + 1].first))return e[i].fd;
                                    n = i + 1
                                }
                            }
                        default:
                            throw new Error("Unknown FDSelect version: " + this.topDict.FDSelect.version)
                    }
                }, t.prototype.privateDictForGlyph = function (t) {
                    if (this.topDict.FDSelect) {
                        var e = this.fdForGlyph(t);
                        return this.topDict.FDArray[e] ? this.topDict.FDArray[e].Private : null
                    }
                    return this.version < 2 ? this.topDict.Private : this.topDict.FDArray[0].Private
                }, ct(t, [{
                    key: "postscriptName", get: function () {
                        return this.version < 2 ? this.nameIndex[0] : null
                    }
                }, {
                    key: "fullName", get: function () {
                        return this.string(this.topDict.FullName)
                    }
                }, {
                    key: "familyName", get: function () {
                        return this.string(this.topDict.FamilyName)
                    }
                }]), t
            }(), kn = new nt.Struct({
                glyphIndex: nt.uint16,
                vertOriginY: nt.int16
            }), Sn = new nt.Struct({
                majorVersion: nt.uint16,
                minorVersion: nt.uint16,
                defaultVertOriginY: nt.int16,
                numVertOriginYMetrics: nt.uint16,
                metrics: new nt.Array(kn, "numVertOriginYMetrics")
            }), Cn = new nt.Struct({
                height: nt.uint8,
                width: nt.uint8,
                horiBearingX: nt.int8,
                horiBearingY: nt.int8,
                horiAdvance: nt.uint8,
                vertBearingX: nt.int8,
                vertBearingY: nt.int8,
                vertAdvance: nt.uint8
            }), An = new nt.Struct({
                height: nt.uint8,
                width: nt.uint8,
                bearingX: nt.int8,
                bearingY: nt.int8,
                advance: nt.uint8
            }), Pn = new nt.Struct({glyph: nt.uint16, xOffset: nt.int8, yOffset: nt.int8}), En = function t() {
                lt(this, t)
            }, In = function t() {
                lt(this, t)
            }, Tn = (new nt.VersionedStruct("version", {
                1: {metrics: An, data: En},
                2: {metrics: An, data: In},
                5: {data: In},
                6: {metrics: Cn, data: En},
                7: {metrics: Cn, data: In},
                8: {
                    metrics: An,
                    pad: new nt.Reserved(nt.uint8),
                    numComponents: nt.uint16,
                    components: new nt.Array(Pn, "numComponents")
                },
                9: {
                    metrics: Cn,
                    pad: new nt.Reserved(nt.uint8),
                    numComponents: nt.uint16,
                    components: new nt.Array(Pn, "numComponents")
                },
                17: {metrics: An, dataLen: nt.uint32, data: new nt.Buffer("dataLen")},
                18: {metrics: Cn, dataLen: nt.uint32, data: new nt.Buffer("dataLen")},
                19: {dataLen: nt.uint32, data: new nt.Buffer("dataLen")}
            }), new nt.Struct({
                ascender: nt.int8,
                descender: nt.int8,
                widthMax: nt.uint8,
                caretSlopeNumerator: nt.int8,
                caretSlopeDenominator: nt.int8,
                caretOffset: nt.int8,
                minOriginSB: nt.int8,
                minAdvanceSB: nt.int8,
                maxBeforeBL: nt.int8,
                minAfterBL: nt.int8,
                pad: new nt.Reserved(nt.int8, 2)
            })), On = new nt.Struct({
                glyphCode: nt.uint16,
                offset: nt.uint16
            }), Bn = new nt.VersionedStruct(nt.uint16, {
                header: {imageFormat: nt.uint16, imageDataOffset: nt.uint32},
                1: {
                    offsetArray: new nt.Array(nt.uint32, function (t) {
                        return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1
                    })
                },
                2: {imageSize: nt.uint32, bigMetrics: Cn},
                3: {
                    offsetArray: new nt.Array(nt.uint16, function (t) {
                        return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1
                    })
                },
                4: {
                    numGlyphs: nt.uint32, glyphArray: new nt.Array(On, function (t) {
                        return t.numGlyphs + 1
                    })
                },
                5: {
                    imageSize: nt.uint32,
                    bigMetrics: Cn,
                    numGlyphs: nt.uint32,
                    glyphCodeArray: new nt.Array(nt.uint16, "numGlyphs")
                }
            }), Ln = new nt.Struct({
                firstGlyphIndex: nt.uint16,
                lastGlyphIndex: nt.uint16,
                subtable: new nt.Pointer(nt.uint32, Bn)
            }), Mn = new nt.Struct({
                indexSubTableArray: new nt.Pointer(nt.uint32, new nt.Array(Ln, 1), {type: "parent"}),
                indexTablesSize: nt.uint32,
                numberOfIndexSubTables: nt.uint32,
                colorRef: nt.uint32,
                hori: Tn,
                vert: Tn,
                startGlyphIndex: nt.uint16,
                endGlyphIndex: nt.uint16,
                ppemX: nt.uint8,
                ppemY: nt.uint8,
                bitDepth: nt.uint8,
                flags: new nt.Bitfield(nt.uint8, ["horizontal", "vertical"])
            }), Rn = new nt.Struct({
                version: nt.uint32,
                numSizes: nt.uint32,
                sizes: new nt.Array(Mn, "numSizes")
            }), Fn = new nt.Struct({
                ppem: nt.uint16,
                resolution: nt.uint16,
                imageOffsets: new nt.Array(new nt.Pointer(nt.uint32, "void"), function (t) {
                    return t.parent.parent.maxp.numGlyphs + 1
                })
            }), zn = new nt.Struct({
                version: nt.uint16,
                flags: new nt.Bitfield(nt.uint16, ["renderOutlines"]),
                numImgTables: nt.uint32,
                imageTables: new nt.Array(new nt.Pointer(nt.uint32, Fn), "numImgTables")
            }), Dn = new nt.Struct({gid: nt.uint16, paletteIndex: nt.uint16}), Nn = new nt.Struct({
                gid: nt.uint16,
                firstLayerIndex: nt.uint16,
                numLayers: nt.uint16
            }), Un = new nt.Struct({
                version: nt.uint16,
                numBaseGlyphRecords: nt.uint16,
                baseGlyphRecord: new nt.Pointer(nt.uint32, new nt.Array(Nn, "numBaseGlyphRecords")),
                layerRecords: new nt.Pointer(nt.uint32, new nt.Array(Dn, "numLayerRecords"), {lazy: !0}),
                numLayerRecords: nt.uint16
            }), Wn = new nt.Struct({
                blue: nt.uint8,
                green: nt.uint8,
                red: nt.uint8,
                alpha: nt.uint8
            }), jn = new nt.VersionedStruct(nt.uint16, {
                header: {
                    numPaletteEntries: nt.uint16,
                    numPalettes: nt.uint16,
                    numColorRecords: nt.uint16,
                    colorRecords: new nt.Pointer(nt.uint32, new nt.Array(Wn, "numColorRecords")),
                    colorRecordIndices: new nt.Array(nt.uint16, "numPalettes")
                },
                0: {},
                1: {
                    offsetPaletteTypeArray: new nt.Pointer(nt.uint32, new nt.Array(nt.uint32, "numPalettes")),
                    offsetPaletteLabelArray: new nt.Pointer(nt.uint32, new nt.Array(nt.uint16, "numPalettes")),
                    offsetPaletteEntryLabelArray: new nt.Pointer(nt.uint32, new nt.Array(nt.uint16, "numPaletteEntries"))
                }
            }), Gn = new nt.VersionedStruct(nt.uint16, {
                1: {coordinate: nt.int16},
                2: {coordinate: nt.int16, referenceGlyph: nt.uint16, baseCoordPoint: nt.uint16},
                3: {coordinate: nt.int16, deviceTable: new nt.Pointer(nt.uint16, Me)}
            }), Vn = new nt.Struct({
                defaultIndex: nt.uint16,
                baseCoordCount: nt.uint16,
                baseCoords: new nt.Array(new nt.Pointer(nt.uint16, Gn), "baseCoordCount")
            }), Hn = new nt.Struct({
                tag: new nt.String(4),
                minCoord: new nt.Pointer(nt.uint16, Gn, {type: "parent"}),
                maxCoord: new nt.Pointer(nt.uint16, Gn, {type: "parent"})
            }), qn = new nt.Struct({
                minCoord: new nt.Pointer(nt.uint16, Gn),
                maxCoord: new nt.Pointer(nt.uint16, Gn),
                featMinMaxCount: nt.uint16,
                featMinMaxRecords: new nt.Array(Hn, "featMinMaxCount")
            }), Zn = new nt.Struct({
                tag: new nt.String(4),
                minMax: new nt.Pointer(nt.uint16, qn, {type: "parent"})
            }), Yn = new nt.Struct({
                baseValues: new nt.Pointer(nt.uint16, Vn),
                defaultMinMax: new nt.Pointer(nt.uint16, qn),
                baseLangSysCount: nt.uint16,
                baseLangSysRecords: new nt.Array(Zn, "baseLangSysCount")
            }), Xn = new nt.Struct({
                tag: new nt.String(4),
                script: new nt.Pointer(nt.uint16, Yn, {type: "parent"})
            }), Kn = new nt.Array(Xn, nt.uint16), Jn = new nt.Array(new nt.String(4), nt.uint16), Qn = new nt.Struct({
                baseTagList: new nt.Pointer(nt.uint16, Jn),
                baseScriptList: new nt.Pointer(nt.uint16, Kn)
            }), $n = new nt.VersionedStruct(nt.uint32, {
                header: {
                    horizAxis: new nt.Pointer(nt.uint16, Qn),
                    vertAxis: new nt.Pointer(nt.uint16, Qn)
                }, 65536: {}, 65537: {itemVariationStore: new nt.Pointer(nt.uint32, Xe)}
            }), tr = new nt.Array(nt.uint16, nt.uint16), er = new nt.Struct({
                coverage: new nt.Pointer(nt.uint16, Oe),
                glyphCount: nt.uint16,
                attachPoints: new nt.Array(new nt.Pointer(nt.uint16, tr), "glyphCount")
            }), nr = new nt.VersionedStruct(nt.uint16, {
                1: {coordinate: nt.int16},
                2: {caretValuePoint: nt.uint16},
                3: {coordinate: nt.int16, deviceTable: new nt.Pointer(nt.uint16, Me)}
            }), rr = new nt.Array(new nt.Pointer(nt.uint16, nr), nt.uint16), ir = new nt.Struct({
                coverage: new nt.Pointer(nt.uint16, Oe),
                ligGlyphCount: nt.uint16,
                ligGlyphs: new nt.Array(new nt.Pointer(nt.uint16, rr), "ligGlyphCount")
            }), or = new nt.Struct({
                markSetTableFormat: nt.uint16,
                markSetCount: nt.uint16,
                coverage: new nt.Array(new nt.Pointer(nt.uint32, Oe), "markSetCount")
            }), ar = new nt.VersionedStruct(nt.uint32, {
                header: {
                    glyphClassDef: new nt.Pointer(nt.uint16, Le),
                    attachList: new nt.Pointer(nt.uint16, er),
                    ligCaretList: new nt.Pointer(nt.uint16, ir),
                    markAttachClassDef: new nt.Pointer(nt.uint16, Le)
                },
                65536: {},
                65538: {markGlyphSetsDef: new nt.Pointer(nt.uint16, or)},
                65539: {
                    markGlyphSetsDef: new nt.Pointer(nt.uint16, or),
                    itemVariationStore: new nt.Pointer(nt.uint32, Xe)
                }
            }), sr = new nt.Bitfield(nt.uint16, ["xPlacement", "yPlacement", "xAdvance", "yAdvance", "xPlaDevice", "yPlaDevice", "xAdvDevice", "yAdvDevice"]), ur = {
                xPlacement: nt.int16,
                yPlacement: nt.int16,
                xAdvance: nt.int16,
                yAdvance: nt.int16,
                xPlaDevice: new nt.Pointer(nt.uint16, Me, {type: "global", relativeTo: "rel"}),
                yPlaDevice: new nt.Pointer(nt.uint16, Me, {type: "global", relativeTo: "rel"}),
                xAdvDevice: new nt.Pointer(nt.uint16, Me, {
                    type: "global", relativeTo: "rel"
                }),
                yAdvDevice: new nt.Pointer(nt.uint16, Me, {type: "global", relativeTo: "rel"})
            }, lr = function () {
                function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "valueFormat";
                    lt(this, t), this.key = e
                }

                return t.prototype.buildStruct = function (t) {
                    for (var e = t; !e[this.key] && e.parent;)e = e.parent;
                    if (e[this.key]) {
                        var n = {};
                        n.rel = function () {
                            return e._startOffset
                        };
                        var r = e[this.key];
                        for (var i in r)r[i] && (n[i] = ur[i]);
                        return new nt.Struct(n)
                    }
                }, t.prototype.size = function (t, e) {
                    return this.buildStruct(e).size(t, e)
                }, t.prototype.decode = function (t, e) {
                    var n = this.buildStruct(e).decode(t, e);
                    return delete n.rel, n
                }, t
            }(), cr = new nt.Struct({
                secondGlyph: nt.uint16,
                value1: new lr("valueFormat1"),
                value2: new lr("valueFormat2")
            }), fr = new nt.Array(cr, nt.uint16), hr = new nt.Struct({
                value1: new lr("valueFormat1"),
                value2: new lr("valueFormat2")
            }), pr = new nt.VersionedStruct(nt.uint16, {
                1: {xCoordinate: nt.int16, yCoordinate: nt.int16},
                2: {xCoordinate: nt.int16, yCoordinate: nt.int16, anchorPoint: nt.uint16},
                3: {
                    xCoordinate: nt.int16,
                    yCoordinate: nt.int16,
                    xDeviceTable: new nt.Pointer(nt.uint16, Me),
                    yDeviceTable: new nt.Pointer(nt.uint16, Me)
                }
            }), dr = new nt.Struct({
                entryAnchor: new nt.Pointer(nt.uint16, pr, {type: "parent"}),
                exitAnchor: new nt.Pointer(nt.uint16, pr, {type: "parent"})
            }), gr = new nt.Struct({
                class: nt.uint16,
                markAnchor: new nt.Pointer(nt.uint16, pr, {type: "parent"})
            }), yr = new nt.Array(gr, nt.uint16), vr = new nt.Array(new nt.Pointer(nt.uint16, pr), function (t) {
                return t.parent.classCount
            }), br = new nt.Array(vr, nt.uint16), mr = new nt.Array(new nt.Pointer(nt.uint16, pr), function (t) {
                return t.parent.parent.classCount
            }), wr = new nt.Array(mr, nt.uint16), xr = new nt.Array(new nt.Pointer(nt.uint16, wr), nt.uint16), _r = new nt.VersionedStruct("lookupType", {
                1: new nt.VersionedStruct(nt.uint16, {
                    1: {
                        coverage: new nt.Pointer(nt.uint16, Oe),
                        valueFormat: sr,
                        value: new lr
                    },
                    2: {
                        coverage: new nt.Pointer(nt.uint16, Oe),
                        valueFormat: sr,
                        valueCount: nt.uint16,
                        values: new nt.LazyArray(new lr, "valueCount")
                    }
                }),
                2: new nt.VersionedStruct(nt.uint16, {
                    1: {
                        coverage: new nt.Pointer(nt.uint16, Oe),
                        valueFormat1: sr,
                        valueFormat2: sr,
                        pairSetCount: nt.uint16,
                        pairSets: new nt.LazyArray(new nt.Pointer(nt.uint16, fr), "pairSetCount")
                    },
                    2: {
                        coverage: new nt.Pointer(nt.uint16, Oe),
                        valueFormat1: sr,
                        valueFormat2: sr,
                        classDef1: new nt.Pointer(nt.uint16, Le),
                        classDef2: new nt.Pointer(nt.uint16, Le),
                        class1Count: nt.uint16,
                        class2Count: nt.uint16,
                        classRecords: new nt.LazyArray(new nt.LazyArray(hr, "class2Count"), "class1Count")
                    }
                }),
                3: {
                    format: nt.uint16,
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    entryExitCount: nt.uint16,
                    entryExitRecords: new nt.Array(dr, "entryExitCount")
                },
                4: {
                    format: nt.uint16,
                    markCoverage: new nt.Pointer(nt.uint16, Oe),
                    baseCoverage: new nt.Pointer(nt.uint16, Oe),
                    classCount: nt.uint16,
                    markArray: new nt.Pointer(nt.uint16, yr),
                    baseArray: new nt.Pointer(nt.uint16, br)
                },
                5: {
                    format: nt.uint16,
                    markCoverage: new nt.Pointer(nt.uint16, Oe),
                    ligatureCoverage: new nt.Pointer(nt.uint16, Oe),
                    classCount: nt.uint16,
                    markArray: new nt.Pointer(nt.uint16, yr),
                    ligatureArray: new nt.Pointer(nt.uint16, xr)
                },
                6: {
                    format: nt.uint16,
                    mark1Coverage: new nt.Pointer(nt.uint16, Oe),
                    mark2Coverage: new nt.Pointer(nt.uint16, Oe),
                    classCount: nt.uint16,
                    mark1Array: new nt.Pointer(nt.uint16, yr),
                    mark2Array: new nt.Pointer(nt.uint16, br)
                },
                7: Ue,
                8: Ge,
                9: {posFormat: nt.uint16, lookupType: nt.uint16, extension: new nt.Pointer(nt.uint32, _r)}
            });
            _r.versions[9].extension.type = _r;
            var kr = new nt.VersionedStruct(nt.uint32, {
                header: {
                    scriptList: new nt.Pointer(nt.uint16, Ce),
                    featureList: new nt.Pointer(nt.uint16, Ee),
                    lookupList: new nt.Pointer(nt.uint16, new s(_r))
                }, 65536: {}, 65537: {featureVariations: new nt.Pointer(nt.uint32, en)}
            }), Sr = new nt.Array(nt.uint16, nt.uint16), Cr = Sr, Ar = new nt.Struct({
                glyph: nt.uint16,
                compCount: nt.uint16,
                components: new nt.Array(nt.uint16, function (t) {
                    return t.compCount - 1
                })
            }), Pr = new nt.Array(new nt.Pointer(nt.uint16, Ar), nt.uint16), Er = new nt.VersionedStruct("lookupType", {
                1: new nt.VersionedStruct(nt.uint16, {
                    1: {
                        coverage: new nt.Pointer(nt.uint16, Oe),
                        deltaGlyphID: nt.int16
                    },
                    2: {
                        coverage: new nt.Pointer(nt.uint16, Oe),
                        glyphCount: nt.uint16,
                        substitute: new nt.LazyArray(nt.uint16, "glyphCount")
                    }
                }),
                2: {
                    substFormat: nt.uint16,
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    count: nt.uint16,
                    sequences: new nt.LazyArray(new nt.Pointer(nt.uint16, Sr), "count")
                },
                3: {
                    substFormat: nt.uint16,
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    count: nt.uint16,
                    alternateSet: new nt.LazyArray(new nt.Pointer(nt.uint16, Cr), "count")
                },
                4: {
                    substFormat: nt.uint16,
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    count: nt.uint16,
                    ligatureSets: new nt.LazyArray(new nt.Pointer(nt.uint16, Pr), "count")
                },
                5: Ue,
                6: Ge,
                7: {substFormat: nt.uint16, lookupType: nt.uint16, extension: new nt.Pointer(nt.uint32, Er)},
                8: {
                    substFormat: nt.uint16,
                    coverage: new nt.Pointer(nt.uint16, Oe),
                    backtrackCoverage: new nt.Array(new nt.Pointer(nt.uint16, Oe), "backtrackGlyphCount"),
                    lookaheadGlyphCount: nt.uint16,
                    lookaheadCoverage: new nt.Array(new nt.Pointer(nt.uint16, Oe), "lookaheadGlyphCount"),
                    glyphCount: nt.uint16,
                    substitutes: new nt.Array(nt.uint16, "glyphCount")
                }
            });
            Er.versions[7].extension.type = Er;
            var Ir = new nt.VersionedStruct(nt.uint32, {
                header: {
                    scriptList: new nt.Pointer(nt.uint16, Ce),
                    featureList: new nt.Pointer(nt.uint16, Ee),
                    lookupList: new nt.Pointer(nt.uint16, new s(Er))
                }, 65536: {}, 65537: {featureVariations: new nt.Pointer(nt.uint32, en)}
            }), Tr = new nt.Array(nt.uint16, nt.uint16), Or = new nt.Struct({
                shrinkageEnableGSUB: new nt.Pointer(nt.uint16, Tr),
                shrinkageDisableGSUB: new nt.Pointer(nt.uint16, Tr),
                shrinkageEnableGPOS: new nt.Pointer(nt.uint16, Tr),
                shrinkageDisableGPOS: new nt.Pointer(nt.uint16, Tr),
                shrinkageJstfMax: new nt.Pointer(nt.uint16, new s(_r)),
                extensionEnableGSUB: new nt.Pointer(nt.uint16, Tr),
                extensionDisableGSUB: new nt.Pointer(nt.uint16, Tr),
                extensionEnableGPOS: new nt.Pointer(nt.uint16, Tr),
                extensionDisableGPOS: new nt.Pointer(nt.uint16, Tr),
                extensionJstfMax: new nt.Pointer(nt.uint16, new s(_r))
            }), Br = new nt.Array(new nt.Pointer(nt.uint16, Or), nt.uint16), Lr = new nt.Struct({
                tag: new nt.String(4),
                jstfLangSys: new nt.Pointer(nt.uint16, Br)
            }), Mr = new nt.Struct({
                extenderGlyphs: new nt.Pointer(nt.uint16, new nt.Array(nt.uint16, nt.uint16)),
                defaultLangSys: new nt.Pointer(nt.uint16, Br),
                langSysCount: nt.uint16,
                langSysRecords: new nt.Array(Lr, "langSysCount")
            }), Rr = new nt.Struct({
                tag: new nt.String(4),
                script: new nt.Pointer(nt.uint16, Mr, {type: "parent"})
            }), Fr = new nt.Struct({
                version: nt.uint32,
                scriptCount: nt.uint16,
                scriptList: new nt.Array(Rr, "scriptCount")
            }), zr = function () {
                function t(e) {
                    lt(this, t), this._size = e
                }

                return t.prototype.decode = function (t, e) {
                    switch (this.size(0, e)) {
                        case 1:
                            return t.readUInt8();
                        case 2:
                            return t.readUInt16BE();
                        case 3:
                            return t.readUInt24BE();
                        case 4:
                            return t.readUInt32BE()
                    }
                }, t.prototype.size = function (t, e) {
                    return dt.resolveLength(this._size, null, e)
                }, t
            }(), Dr = new nt.Struct({
                entry: new zr(function (t) {
                    return 1 + ((48 & t.parent.entryFormat) >> 4)
                }), outerIndex: function (t) {
                    return t.entry >> 1 + (15 & t.parent.entryFormat)
                }, innerIndex: function (t) {
                    return t.entry & (1 << 1 + (15 & t.parent.entryFormat)) - 1
                }
            }), Nr = new nt.Struct({
                entryFormat: nt.uint16,
                mapCount: nt.uint16,
                mapData: new nt.Array(Dr, "mapCount")
            }), Ur = new nt.Struct({
                majorVersion: nt.uint16,
                minorVersion: nt.uint16,
                itemVariationStore: new nt.Pointer(nt.uint32, Xe),
                advanceWidthMapping: new nt.Pointer(nt.uint32, Nr),
                LSBMapping: new nt.Pointer(nt.uint32, Nr),
                RSBMapping: new nt.Pointer(nt.uint32, Nr)
            }), Wr = new nt.Struct({
                format: nt.uint32,
                length: nt.uint32,
                offset: nt.uint32
            }), jr = new nt.Struct({
                reserved: new nt.Reserved(nt.uint16, 2),
                cbSignature: nt.uint32,
                signature: new nt.Buffer("cbSignature")
            }), Gr = new nt.Struct({
                ulVersion: nt.uint32,
                usNumSigs: nt.uint16,
                usFlag: nt.uint16,
                signatures: new nt.Array(Wr, "usNumSigs"),
                signatureBlocks: new nt.Array(jr, "usNumSigs")
            }), Vr = new nt.Struct({
                rangeMaxPPEM: nt.uint16,
                rangeGaspBehavior: new nt.Bitfield(nt.uint16, ["grayscale", "gridfit", "symmetricSmoothing", "symmetricGridfit"])
            }), Hr = new nt.Struct({
                version: nt.uint16,
                numRanges: nt.uint16,
                gaspRanges: new nt.Array(Vr, "numRanges")
            }), qr = new nt.Struct({
                pixelSize: nt.uint8,
                maximumWidth: nt.uint8,
                widths: new nt.Array(nt.uint8, function (t) {
                    return t.parent.parent.maxp.numGlyphs
                })
            }), Zr = new nt.Struct({
                version: nt.uint16,
                numRecords: nt.int16,
                sizeDeviceRecord: nt.int32,
                records: new nt.Array(qr, "numRecords")
            }), Yr = new nt.Struct({
                left: nt.uint16,
                right: nt.uint16,
                value: nt.int16
            }), Xr = new nt.Struct({
                firstGlyph: nt.uint16,
                nGlyphs: nt.uint16,
                offsets: new nt.Array(nt.uint16, "nGlyphs"),
                max: function (t) {
                    return t.offsets.length && Math.max.apply(Math, t.offsets)
                }
            }), Kr = new nt.Struct({
                off: function (t) {
                    return t._startOffset - t.parent.parent._startOffset
                }, len: function (t) {
                    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2)
                }, values: new nt.LazyArray(nt.int16, "len")
            }), Jr = new nt.VersionedStruct("format", {
                0: {
                    nPairs: nt.uint16,
                    searchRange: nt.uint16,
                    entrySelector: nt.uint16,
                    rangeShift: nt.uint16,
                    pairs: new nt.Array(Yr, "nPairs")
                },
                2: {
                    rowWidth: nt.uint16,
                    leftTable: new nt.Pointer(nt.uint16, Xr, {type: "parent"}),
                    rightTable: new nt.Pointer(nt.uint16, Xr, {type: "parent"}),
                    array: new nt.Pointer(nt.uint16, Kr, {type: "parent"})
                },
                3: {
                    glyphCount: nt.uint16,
                    kernValueCount: nt.uint8,
                    leftClassCount: nt.uint8,
                    rightClassCount: nt.uint8,
                    flags: nt.uint8,
                    kernValue: new nt.Array(nt.int16, "kernValueCount"),
                    leftClass: new nt.Array(nt.uint8, "glyphCount"),
                    rightClass: new nt.Array(nt.uint8, "glyphCount"),
                    kernIndex: new nt.Array(nt.uint8, function (t) {
                        return t.leftClassCount * t.rightClassCount
                    })
                }
            }), Qr = new nt.VersionedStruct("version", {
                0: {
                    subVersion: nt.uint16,
                    length: nt.uint16,
                    format: nt.uint8,
                    coverage: new nt.Bitfield(nt.uint8, ["horizontal", "minimum", "crossStream", "override"]),
                    subtable: Jr,
                    padding: new nt.Reserved(nt.uint8, function (t) {
                        return t.length - t._currentOffset
                    })
                },
                1: {
                    length: nt.uint32,
                    coverage: new nt.Bitfield(nt.uint8, [null, null, null, null, null, "variation", "crossStream", "vertical"]),
                    format: nt.uint8,
                    tupleIndex: nt.uint16,
                    subtable: Jr,
                    padding: new nt.Reserved(nt.uint8, function (t) {
                        return t.length - t._currentOffset
                    })
                }
            }), $r = new nt.VersionedStruct(nt.uint16, {
                0: {nTables: nt.uint16, tables: new nt.Array(Qr, "nTables")},
                1: {reserved: new nt.Reserved(nt.uint16), nTables: nt.uint32, tables: new nt.Array(Qr, "nTables")}
            }), ti = new nt.Struct({
                version: nt.uint16,
                numGlyphs: nt.uint16,
                yPels: new nt.Array(nt.uint8, "numGlyphs")
            }), ei = new nt.Struct({
                version: nt.uint16,
                fontNumber: nt.uint32,
                pitch: nt.uint16,
                xHeight: nt.uint16,
                style: nt.uint16,
                typeFamily: nt.uint16,
                capHeight: nt.uint16,
                symbolSet: nt.uint16,
                typeface: new nt.String(16),
                characterComplement: new nt.String(8),
                fileName: new nt.String(6),
                strokeWeight: new nt.String(1),
                widthType: new nt.String(1),
                serifStyle: nt.uint8,
                reserved: new nt.Reserved(nt.uint8)
            }), ni = new nt.Struct({
                bCharSet: nt.uint8,
                xRatio: nt.uint8,
                yStartRatio: nt.uint8,
                yEndRatio: nt.uint8
            }), ri = new nt.Struct({
                yPelHeight: nt.uint16,
                yMax: nt.int16,
                yMin: nt.int16
            }), ii = new nt.Struct({
                recs: nt.uint16,
                startsz: nt.uint8,
                endsz: nt.uint8,
                entries: new nt.Array(ri, "recs")
            }), oi = new nt.Struct({
                version: nt.uint16,
                numRecs: nt.uint16,
                numRatios: nt.uint16,
                ratioRanges: new nt.Array(ni, "numRatios"),
                offsets: new nt.Array(nt.uint16, "numRatios"),
                groups: new nt.Array(ii, "numRecs")
            }), ai = new nt.Struct({
                version: nt.uint16,
                ascent: nt.int16,
                descent: nt.int16,
                lineGap: nt.int16,
                advanceHeightMax: nt.int16,
                minTopSideBearing: nt.int16,
                minBottomSideBearing: nt.int16,
                yMaxExtent: nt.int16,
                caretSlopeRise: nt.int16,
                caretSlopeRun: nt.int16,
                caretOffset: nt.int16,
                reserved: new nt.Reserved(nt.int16, 4),
                metricDataFormat: nt.int16,
                numberOfMetrics: nt.uint16
            }), si = new nt.Struct({
                advance: nt.uint16,
                bearing: nt.int16
            }), ui = new nt.Struct({
                metrics: new nt.LazyArray(si, function (t) {
                    return t.parent.vhea.numberOfMetrics
                }), bearings: new nt.LazyArray(nt.int16, function (t) {
                    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics
                })
            }), li = new nt.Fixed(16, "BE", 14), ci = new nt.Struct({
                fromCoord: li,
                toCoord: li
            }), fi = new nt.Struct({
                pairCount: nt.uint16,
                correspondence: new nt.Array(ci, "pairCount")
            }), hi = new nt.Struct({
                version: nt.fixed32,
                axisCount: nt.uint32,
                segment: new nt.Array(fi, "axisCount")
            }), pi = function () {
                function t(e, n, r) {
                    lt(this, t), this.type = e, this.stream = n, this.parent = r, this.base = this.stream.pos, this._items = []
                }

                return t.prototype.getItem = function (t) {
                    if (null == this._items[t]) {
                        var e = this.stream.pos;
                        this.stream.pos = this.base + this.type.size(null, this.parent) * t, this._items[t] = this.type.decode(this.stream, this.parent), this.stream.pos = e
                    }
                    return this._items[t]
                }, t.prototype.inspect = function () {
                    return "[UnboundedArray " + this.type.constructor.name + "]"
                }, t
            }(), di = function (t) {
                function e(n) {
                    return lt(this, e), ht(this, t.call(this, n, 0))
                }

                return pt(e, t), e.prototype.decode = function (t, e) {
                    return new pi(this.type, t, e)
                }, e
            }(nt.Array), gi = function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : nt.uint16;
                t = new (function () {
                    function t(e) {
                        lt(this, t), this.type = e
                    }

                    return t.prototype.decode = function (t, e) {
                        return e = e.parent.parent, this.type.decode(t, e)
                    }, t.prototype.size = function (t, e) {
                        return e = e.parent.parent, this.type.size(t, e)
                    }, t.prototype.encode = function (t, e, n) {
                        return n = n.parent.parent, this.type.encode(t, e, n)
                    }, t
                }())(t);
                var e = new nt.Struct({
                    unitSize: nt.uint16,
                    nUnits: nt.uint16,
                    searchRange: nt.uint16,
                    entrySelector: nt.uint16,
                    rangeShift: nt.uint16
                }), n = new nt.Struct({
                    lastGlyph: nt.uint16,
                    firstGlyph: nt.uint16,
                    value: t
                }), r = new nt.Struct({
                    lastGlyph: nt.uint16,
                    firstGlyph: nt.uint16,
                    values: new nt.Pointer(nt.uint16, new nt.Array(t, function (t) {
                        return t.lastGlyph - t.firstGlyph + 1
                    }), {type: "parent"})
                }), i = new nt.Struct({glyph: nt.uint16, value: t});
                return new nt.VersionedStruct(nt.uint16, {
                    0: {values: new di(t)},
                    2: {
                        binarySearchHeader: e, segments: new nt.Array(n, function (t) {
                            return t.binarySearchHeader.nUnits
                        })
                    },
                    4: {
                        binarySearchHeader: e, segments: new nt.Array(r, function (t) {
                            return t.binarySearchHeader.nUnits
                        })
                    },
                    6: {
                        binarySearchHeader: e, segments: new nt.Array(i, function (t) {
                            return t.binarySearchHeader.nUnits
                        })
                    },
                    8: {firstGlyph: nt.uint16, count: nt.uint16, values: new nt.Array(t, "count")}
                })
            }, yi = new nt.VersionedStruct("format", {
                0: {deltas: new nt.Array(nt.int16, 32)},
                1: {deltas: new nt.Array(nt.int16, 32), mappingData: new gi(nt.uint16)},
                2: {standardGlyph: nt.uint16, controlPoints: new nt.Array(nt.uint16, 32)},
                3: {
                    standardGlyph: nt.uint16,
                    controlPoints: new nt.Array(nt.uint16, 32),
                    mappingData: new gi(nt.uint16)
                }
            }), vi = new nt.Struct({
                version: nt.fixed32,
                format: nt.uint16,
                defaultBaseline: nt.uint16,
                subtable: yi
            }), bi = new nt.Struct({
                setting: nt.uint16, nameIndex: nt.int16, name: function (t) {
                    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]
                }
            }), mi = new nt.Struct({
                feature: nt.uint16,
                nSettings: nt.uint16,
                settingTable: new nt.Pointer(nt.uint32, new nt.Array(bi, "nSettings"), {type: "parent"}),
                featureFlags: new nt.Bitfield(nt.uint8, [null, null, null, null, null, null, "hasDefault", "exclusive"]),
                defaultSetting: nt.uint8,
                nameIndex: nt.int16,
                name: function (t) {
                    return t.parent.parent.name.records.fontFeatures[t.nameIndex]
                }
            }), wi = new nt.Struct({
                version: nt.fixed32,
                featureNameCount: nt.uint16,
                reserved1: new nt.Reserved(nt.uint16),
                reserved2: new nt.Reserved(nt.uint32),
                featureNames: new nt.Array(mi, "featureNameCount")
            }), xi = new nt.Struct({
                axisTag: new nt.String(4),
                minValue: nt.fixed32,
                defaultValue: nt.fixed32,
                maxValue: nt.fixed32,
                flags: nt.uint16,
                nameID: nt.uint16,
                name: function (t) {
                    return t.parent.parent.name.records.fontFeatures[t.nameID]
                }
            }), _i = new nt.Struct({
                nameID: nt.uint16, name: function (t) {
                    return t.parent.parent.name.records.fontFeatures[t.nameID]
                }, flags: nt.uint16, coord: new nt.Array(nt.fixed32, function (t) {
                    return t.parent.axisCount
                }), postscriptNameID: new nt.Optional(nt.uint16, function (t) {
                    return t.parent.instanceSize - t._currentOffset > 0
                })
            }), ki = new nt.Struct({
                version: nt.fixed32,
                offsetToData: nt.uint16,
                countSizePairs: nt.uint16,
                axisCount: nt.uint16,
                axisSize: nt.uint16,
                instanceCount: nt.uint16,
                instanceSize: nt.uint16,
                axis: new nt.Array(xi, "axisCount"),
                instance: new nt.Array(_i, "instanceCount")
            }), Si = new nt.Fixed(16, "BE", 14), Ci = function () {
                function t() {
                    lt(this, t)
                }

                return t.decode = function (t, e) {
                    return e.flags ? t.readUInt32BE() : 2 * t.readUInt16BE()
                }, t
            }(), Ai = new nt.Struct({
                version: nt.uint16,
                reserved: new nt.Reserved(nt.uint16),
                axisCount: nt.uint16,
                globalCoordCount: nt.uint16,
                globalCoords: new nt.Pointer(nt.uint32, new nt.Array(new nt.Array(Si, "axisCount"), "globalCoordCount")),
                glyphCount: nt.uint16,
                flags: nt.uint16,
                offsetToData: nt.uint32,
                offsets: new nt.Array(new nt.Pointer(Ci, "void", {
                    relativeTo: "offsetToData",
                    allowNull: !1
                }), function (t) {
                    return t.glyphCount + 1
                })
            }), Pi = new nt.Struct({
                length: nt.uint16,
                coverage: nt.uint16,
                subFeatureFlags: nt.uint32,
                stateTable: new l
            }), Ei = new nt.Struct({
                justClass: nt.uint32,
                beforeGrowLimit: nt.fixed32,
                beforeShrinkLimit: nt.fixed32,
                afterGrowLimit: nt.fixed32,
                afterShrinkLimit: nt.fixed32,
                growFlags: nt.uint16,
                shrinkFlags: nt.uint16
            }), Ii = new nt.Array(Ei, nt.uint32), Ti = new nt.VersionedStruct("actionType", {
                0: {
                    lowerLimit: nt.fixed32,
                    upperLimit: nt.fixed32,
                    order: nt.uint16,
                    glyphs: new nt.Array(nt.uint16, nt.uint16)
                },
                1: {addGlyph: nt.uint16},
                2: {substThreshold: nt.fixed32, addGlyph: nt.uint16, substGlyph: nt.uint16},
                3: {},
                4: {
                    variationAxis: nt.uint32,
                    minimumLimit: nt.fixed32,
                    noStretchValue: nt.fixed32,
                    maximumLimit: nt.fixed32
                },
                5: {flags: nt.uint16, glyph: nt.uint16}
            }), Oi = new nt.Struct({
                actionClass: nt.uint16,
                actionType: nt.uint16,
                actionLength: nt.uint32,
                actionData: Ti,
                padding: new nt.Reserved(nt.uint8, function (t) {
                    return t.actionLength - t._currentOffset
                })
            }), Bi = new nt.Array(Oi, nt.uint32), Li = new nt.Struct({lookupTable: new gi(new nt.Pointer(nt.uint16, Bi))}), Mi = new nt.Struct({
                classTable: new nt.Pointer(nt.uint16, Pi, {type: "parent"}),
                wdcOffset: nt.uint16,
                postCompensationTable: new nt.Pointer(nt.uint16, Li, {type: "parent"}),
                widthDeltaClusters: new gi(new nt.Pointer(nt.uint16, Ii, {type: "parent", relativeTo: "wdcOffset"}))
            }), Ri = new nt.Struct({
                version: nt.uint32,
                format: nt.uint16,
                horizontal: new nt.Pointer(nt.uint16, Mi),
                vertical: new nt.Pointer(nt.uint16, Mi)
            }), Fi = {action: nt.uint16}, zi = {
                markIndex: nt.uint16,
                currentIndex: nt.uint16
            }, Di = {
                currentInsertIndex: nt.uint16,
                markedInsertIndex: nt.uint16
            }, Ni = new nt.Struct({items: new di(new nt.Pointer(nt.uint32, new gi))}), Ui = new nt.VersionedStruct("type", {
                0: {stateTable: new u},
                1: {stateTable: new u(zi), substitutionTable: new nt.Pointer(nt.uint32, Ni)},
                2: {
                    stateTable: new u(Fi),
                    ligatureActions: new nt.Pointer(nt.uint32, new di(nt.uint32)),
                    components: new nt.Pointer(nt.uint32, new di(nt.uint16)),
                    ligatureList: new nt.Pointer(nt.uint32, new di(nt.uint16))
                },
                4: {lookupTable: new gi},
                5: {stateTable: new u(Di), insertionActions: new nt.Pointer(nt.uint32, new di(nt.uint16))}
            }), Wi = new nt.Struct({
                length: nt.uint32,
                coverage: nt.uint24,
                type: nt.uint8,
                subFeatureFlags: nt.uint32,
                table: Ui,
                padding: new nt.Reserved(nt.uint8, function (t) {
                    return t.length - t._currentOffset
                })
            }), ji = new nt.Struct({
                featureType: nt.uint16,
                featureSetting: nt.uint16,
                enableFlags: nt.uint32,
                disableFlags: nt.uint32
            }), Gi = new nt.Struct({
                defaultFlags: nt.uint32,
                chainLength: nt.uint32,
                nFeatureEntries: nt.uint32,
                nSubtables: nt.uint32,
                features: new nt.Array(ji, "nFeatureEntries"),
                subtables: new nt.Array(Wi, "nSubtables")
            }), Vi = new nt.Struct({
                version: nt.uint16,
                unused: new nt.Reserved(nt.uint16),
                nChains: nt.uint32,
                chains: new nt.Array(Gi, "nChains")
            }), Hi = new nt.Struct({
                left: nt.int16,
                top: nt.int16,
                right: nt.int16,
                bottom: nt.int16
            }), qi = new nt.Struct({version: nt.fixed32, format: nt.uint16, lookupTable: new gi(Hi)}), Zi = {};
            Zi.cmap = Nt, Zi.head = Ut, Zi.hhea = Wt, Zi.hmtx = Gt, Zi.maxp = Vt, Zi.name = NameTable, Zi["OS/2"] = Jt, Zi.post = $t, Zi.fpgm = ee, Zi.loca = ne, Zi.prep = ie, Zi["cvt "] = te, Zi.glyf = oe, Zi["CFF "] = _n, Zi.CFF2 = _n, Zi.VORG = Sn, Zi.EBLC = Rn, Zi.CBLC = Zi.EBLC, Zi.sbix = zn, Zi.COLR = Un, Zi.CPAL = jn, Zi.BASE = $n, Zi.GDEF = ar, Zi.GPOS = kr, Zi.GSUB = Ir, Zi.JSTF = Fr, Zi.HVAR = Ur, Zi.DSIG = Gr, Zi.gasp = Hr, Zi.hdmx = Zr, Zi.kern = $r, Zi.LTSH = ti, Zi.PCLT = ei, Zi.VDMX = oi, Zi.vhea = ai, Zi.vmtx = ui, Zi.avar = hi, Zi.bsln = vi, Zi.feat = wi, Zi.fvar = ki, Zi.gvar = Ai, Zi.just = Ri, Zi.morx = Vi, Zi.opbd = qi;
            var Yi = new nt.Struct({
                tag: new nt.String(4),
                checkSum: nt.uint32,
                offset: new nt.Pointer(nt.uint32, "void", {type: "global"}),
                length: nt.uint32
            }), Xi = new nt.Struct({
                tag: new nt.String(4),
                numTables: nt.uint16,
                searchRange: nt.uint16,
                entrySelector: nt.uint16,
                rangeShift: nt.uint16,
                tables: new nt.Array(Yi, "numTables")
            });
            Xi.process = function () {
                for (var t = {}, e = this.tables, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                    var i;
                    if (n) {
                        if (r >= e.length)break;
                        i = e[r++]
                    } else {
                        if (r = e.next(), r.done)break;
                        i = r.value
                    }
                    var o = i;
                    t[o.tag] = o
                }
                this.tables = t
            }, Xi.preEncode = function (t) {
                var e = [];
                for (var n in this.tables) {
                    var r = this.tables[n];
                    r && e.push({tag: n, checkSum: 0, offset: new nt.VoidPointer(Zi[n], r), length: Zi[n].size(r)})
                }
                this.tag = "true", this.numTables = e.length, this.tables = e, this.searchRange = 16 * Math.floor(Math.log(this.numTables) / Math.LN2), this.entrySelector = Math.floor(this.searchRange / Math.LN2), this.rangeShift = 16 * this.numTables - this.searchRange
            };
            var Ki;
            try {
                var Ji = n(87)
            } catch (t) {
            }
            var Qi = (Ki = function () {
                function t(e) {
                    if (lt(this, t), this.encoding = null, this.cmap = this.findSubtable(e, [[3, 10], [0, 6], [0, 4], [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]), !this.cmap && Ji)for (var n = e.tables, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                        var o;
                        if (r) {
                            if (i >= n.length)break;
                            o = n[i++]
                        } else {
                            if (i = n.next(), i.done)break;
                            o = i.value
                        }
                        var s = o, u = a(s.platformID, s.encodingID, s.table.language - 1);
                        Ji.encodingExists(u) && (this.cmap = s.table, this.encoding = u)
                    }
                    if (!this.cmap)throw new Error("Could not find a supported cmap table");
                    this.uvs = this.findSubtable(e, [[0, 5]]), this.uvs && 14 !== this.uvs.version && (this.uvs = null)
                }

                return t.prototype.findSubtable = function (t, e) {
                    for (var n = e, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                        var o;
                        if (r) {
                            if (i >= n.length)break;
                            o = n[i++]
                        } else {
                            if (i = n.next(), i.done)break;
                            o = i.value
                        }
                        for (var a = o, s = a[0], u = a[1], l = t.tables, c = Array.isArray(l), f = 0, l = c ? l : it(l); ;) {
                            var h;
                            if (c) {
                                if (f >= l.length)break;
                                h = l[f++]
                            } else {
                                if (f = l.next(), f.done)break;
                                h = f.value
                            }
                            var p = h;
                            if (p.platformID === s && p.encodingID === u)return p.table
                        }
                    }
                    return null
                }, t.prototype.lookup = function (t, e) {
                    if (this.encoding) {
                        var n = Ji.encode(bt(t), this.encoding);
                        t = 0;
                        for (var r = 0; r < n.length; r++)t = t << 8 | n[r]
                    } else if (e) {
                        var i = this.getVariationSelector(t, e);
                        if (i)return i
                    }
                    var o = this.cmap;
                    switch (o.version) {
                        case 0:
                            return o.codeMap.get(t) || 0;
                        case 4:
                            for (var a = 0, s = o.segCount - 1; a <= s;) {
                                var u = a + s >> 1;
                                if (t < o.startCode.get(u))s = u - 1; else {
                                    if (!(t > o.endCode.get(u))) {
                                        var l = o.idRangeOffset.get(u), c = void 0;
                                        if (0 === l)c = t + o.idDelta.get(u); else {
                                            var f = l / 2 + (t - o.startCode.get(u)) - (o.segCount - u);
                                            c = o.glyphIndexArray.get(f) || 0, 0 !== c && (c += o.idDelta.get(u))
                                        }
                                        return 65535 & c
                                    }
                                    a = u + 1
                                }
                            }
                            return 0;
                        case 8:
                            throw new Error("TODO: cmap format 8");
                        case 6:
                        case 10:
                            return o.glyphIndices.get(t - o.firstCode) || 0;
                        case 12:
                        case 13:
                            for (var h = 0, p = o.nGroups - 1; h <= p;) {
                                var d = h + p >> 1, g = o.groups.get(d);
                                if (t < g.startCharCode)p = d - 1; else {
                                    if (!(t > g.endCharCode))return 12 === o.version ? g.glyphID + (t - g.startCharCode) : g.glyphID;
                                    h = d + 1
                                }
                            }
                            return 0;
                        case 14:
                            throw new Error("TODO: cmap format 14");
                        default:
                            throw new Error("Unknown cmap format " + o.version)
                    }
                }, t.prototype.getVariationSelector = function (t, e) {
                    if (!this.uvs)return 0;
                    var n = this.uvs.varSelectors.toArray(), r = c(n, function (t) {
                        return e - t.varSelector
                    }), i = n[r];
                    return -1 !== r && i.defaultUVS && (r = c(i.defaultUVS, function (e) {
                        return t < e.startUnicodeValue ? -1 : t > e.startUnicodeValue + e.additionalCount ? 1 : 0
                    })), -1 !== r && i.nonDefaultUVS && -1 !== (r = c(i.nonDefaultUVS, function (e) {
                        return t - e.unicodeValue
                    })) ? i.nonDefaultUVS[r].glyphID : 0
                }, t.prototype.getCharacterSet = function () {
                    var t = this.cmap;
                    switch (t.version) {
                        case 0:
                            return f(0, t.codeMap.length);
                        case 4:
                            for (var e = [], n = t.endCode.toArray(), r = 0; r < n.length; r++) {
                                var i = n[r] + 1, o = t.startCode.get(r);
                                e.push.apply(e, f(o, i))
                            }
                            return e;
                        case 8:
                            throw new Error("TODO: cmap format 8");
                        case 6:
                        case 10:
                            return f(t.firstCode, t.firstCode + t.glyphIndices.length);
                        case 12:
                        case 13:
                            for (var a = [], s = t.groups.toArray(), u = Array.isArray(s), l = 0, s = u ? s : it(s); ;) {
                                var c;
                                if (u) {
                                    if (l >= s.length)break;
                                    c = s[l++]
                                } else {
                                    if (l = s.next(), l.done)break;
                                    c = l.value
                                }
                                var h = c;
                                a.push.apply(a, f(h.startCharCode, h.endCharCode + 1))
                            }
                            return a;
                        case 14:
                            throw new Error("TODO: cmap format 14");
                        default:
                            throw new Error("Unknown cmap format " + t.version)
                    }
                }, t.prototype.codePointsForGlyph = function (t) {
                    var e = this.cmap;
                    switch (e.version) {
                        case 0:
                            for (var n = [], r = 0; r < 256; r++)e.codeMap.get(r) === t && n.push(r);
                            return n;
                        case 4:
                            for (var i = [], o = 0; o < e.segCount; o++)for (var a = e.endCode.get(o), s = e.startCode.get(o), u = e.idRangeOffset.get(o), l = e.idDelta.get(o), c = s; c <= a; c++) {
                                var h = 0;
                                if (0 === u)h = c + l; else {
                                    var p = u / 2 + (c - s) - (e.segCount - o);
                                    h = e.glyphIndexArray.get(p) || 0, 0 !== h && (h += l)
                                }
                                h === t && i.push(c)
                            }
                            return i;
                        case 12:
                            for (var d = [], g = e.groups.toArray(), y = Array.isArray(g), v = 0, g = y ? g : it(g); ;) {
                                var b;
                                if (y) {
                                    if (v >= g.length)break;
                                    b = g[v++]
                                } else {
                                    if (v = g.next(), v.done)break;
                                    b = v.value
                                }
                                var m = b;
                                t >= m.glyphID && t <= m.glyphID + (m.endCharCode - m.startCharCode) && d.push(m.startCharCode + (t - m.glyphID))
                            }
                            return d;
                        case 13:
                            for (var w = [], x = e.groups.toArray(), _ = Array.isArray(x), k = 0, x = _ ? x : it(x); ;) {
                                var S;
                                if (_) {
                                    if (k >= x.length)break;
                                    S = x[k++]
                                } else {
                                    if (k = x.next(), k.done)break;
                                    S = k.value
                                }
                                var C = S;
                                t === C.glyphID && w.push.apply(w, f(C.startCharCode, C.endCharCode + 1))
                            }
                            return w;
                        default:
                            throw new Error("Unknown cmap format " + e.version)
                    }
                }, t
            }(), h(Ki.prototype, "getCharacterSet", [o], rt(Ki.prototype, "getCharacterSet"), Ki.prototype), h(Ki.prototype, "codePointsForGlyph", [o], rt(Ki.prototype, "codePointsForGlyph"), Ki.prototype), Ki), $i = function () {
                function t(e) {
                    lt(this, t), this.kern = e.kern
                }

                return t.prototype.process = function (t, e) {
                    for (var n = 0; n < t.length - 1; n++) {
                        var r = t[n].id, i = t[n + 1].id;
                        e[n].xAdvance += this.getKerning(r, i)
                    }
                }, t.prototype.getKerning = function (t, e) {
                    for (var n = 0, r = this.kern.tables, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a;
                        if (!s.coverage.crossStream) {
                            switch (s.version) {
                                case 0:
                                    if (!s.coverage.horizontal)continue;
                                    break;
                                case 1:
                                    if (s.coverage.vertical || s.coverage.variation)continue;
                                    break;
                                default:
                                    throw new Error("Unsupported kerning table version " + s.version)
                            }
                            var u = 0, l = s.subtable;
                            switch (s.format) {
                                case 0:
                                    var f = c(l.pairs, function (n) {
                                        return t - n.left || e - n.right
                                    });
                                    f >= 0 && (u = l.pairs[f].value);
                                    break;
                                case 2:
                                    var h = 0, p = 0;
                                    h = t >= l.leftTable.firstGlyph && t < l.leftTable.firstGlyph + l.leftTable.nGlyphs ? l.leftTable.offsets[t - l.leftTable.firstGlyph] : l.array.off, e >= l.rightTable.firstGlyph && e < l.rightTable.firstGlyph + l.rightTable.nGlyphs && (p = l.rightTable.offsets[e - l.rightTable.firstGlyph]);
                                    var d = (h + p - l.array.off) / 2;
                                    u = l.array.values.get(d);
                                    break;
                                case 3:
                                    if (t >= l.glyphCount || e >= l.glyphCount)return 0;
                                    u = l.kernValue[l.kernIndex[l.leftClass[t] * l.rightClassCount + l.rightClass[e]]];
                                    break;
                                default:
                                    throw new Error("Unsupported kerning sub-table format " + s.format)
                            }
                            s.coverage.override ? n = u : n += u
                        }
                    }
                    return n
                }, t
            }(), to = function () {
                function t(e) {
                    lt(this, t), this.font = e
                }

                return t.prototype.positionGlyphs = function (t, e) {
                    for (var n = 0, r = 0, i = 0; i < t.length; i++) {
                        t[i].isMark ? r = i : (n !== r && this.positionCluster(t, e, n, r), n = r = i)
                    }
                    return n !== r && this.positionCluster(t, e, n, r), e
                }, t.prototype.positionCluster = function (t, e, n, r) {
                    var i = t[n], o = i.cbox.copy();
                    i.codePoints.length > 1 && (o.minX += (i.codePoints.length - 1) * o.width / i.codePoints.length);
                    for (var a = -e[n].xAdvance, s = 0, u = this.font.unitsPerEm / 16, l = n + 1; l <= r; l++) {
                        var c = t[l], f = c.cbox, h = e[l], p = this.getCombiningClass(c.codePoints[0]);
                        if ("Not_Reordered" !== p) {
                            switch (h.xOffset = h.yOffset = 0, p) {
                                case"Double_Above":
                                case"Double_Below":
                                    h.xOffset += o.minX - f.width / 2 - f.minX;
                                    break;
                                case"Attached_Below_Left":
                                case"Below_Left":
                                case"Above_Left":
                                    h.xOffset += o.minX - f.minX;
                                    break;
                                case"Attached_Above_Right":
                                case"Below_Right":
                                case"Above_Right":
                                    h.xOffset += o.maxX - f.width - f.minX;
                                    break;
                                default:
                                    h.xOffset += o.minX + (o.width - f.width) / 2 - f.minX
                            }
                            switch (p) {
                                case"Double_Below":
                                case"Below_Left":
                                case"Below":
                                case"Below_Right":
                                case"Attached_Below_Left":
                                case"Attached_Below":
                                    "Attached_Below_Left" !== p && "Attached_Below" !== p || (o.minY += u), h.yOffset = -o.minY - f.maxY, o.minY += f.height;
                                    break;
                                case"Double_Above":
                                case"Above_Left":
                                case"Above":
                                case"Above_Right":
                                case"Attached_Above":
                                case"Attached_Above_Right":
                                    "Attached_Above" !== p && "Attached_Above_Right" !== p || (o.maxY += u), h.yOffset = o.maxY - f.minY, o.maxY += f.height
                            }
                            h.xAdvance = h.yAdvance = 0, h.xOffset += a, h.yOffset += s
                        } else a -= h.xAdvance, s -= h.yAdvance
                    }
                }, t.prototype.getCombiningClass = function (t) {
                    var e = xt.getCombiningClass(t);
                    if (3584 == (-256 & t))if ("Not_Reordered" === e)switch (t) {
                        case 3633:
                        case 3636:
                        case 3637:
                        case 3638:
                        case 3639:
                        case 3655:
                        case 3660:
                        case 3645:
                        case 3662:
                            return "Above_Right";
                        case 3761:
                        case 3764:
                        case 3765:
                        case 3766:
                        case 3767:
                        case 3771:
                        case 3788:
                        case 3789:
                            return "Above";
                        case 3772:
                            return "Below"
                    } else if (3642 === t)return "Below_Right";
                    switch (e) {
                        case"CCC10":
                        case"CCC11":
                        case"CCC12":
                        case"CCC13":
                        case"CCC14":
                        case"CCC15":
                        case"CCC16":
                        case"CCC17":
                        case"CCC18":
                        case"CCC20":
                        case"CCC22":
                            return "Below";
                        case"CCC23":
                            return "Attached_Above";
                        case"CCC24":
                            return "Above_Right";
                        case"CCC25":
                        case"CCC19":
                            return "Above_Left";
                        case"CCC26":
                            return "Above";
                        case"CCC21":
                            break;
                        case"CCC27":
                        case"CCC28":
                        case"CCC30":
                        case"CCC31":
                        case"CCC33":
                        case"CCC34":
                        case"CCC35":
                        case"CCC36":
                            return "Above";
                        case"CCC29":
                        case"CCC32":
                            return "Below";
                        case"CCC103":
                            return "Below_Right";
                        case"CCC107":
                            return "Above_Right";
                        case"CCC118":
                            return "Below";
                        case"CCC122":
                            return "Above";
                        case"CCC129":
                        case"CCC132":
                            return "Below";
                        case"CCC130":
                            return "Above"
                    }
                    return e
                }, t
            }(), eo = function () {
                function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1 / 0, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1 / 0, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -1 / 0, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : -1 / 0;
                    lt(this, t), this.minX = e, this.minY = n, this.maxX = r, this.maxY = i
                }

                return t.prototype.addPoint = function (t, e) {
                    Math.abs(t) !== 1 / 0 && (t < this.minX && (this.minX = t), t > this.maxX && (this.maxX = t)), Math.abs(e) !== 1 / 0 && (e < this.minY && (this.minY = e), e > this.maxY && (this.maxY = e))
                }, t.prototype.copy = function () {
                    return new t(this.minX, this.minY, this.maxX, this.maxY)
                }, ct(t, [{
                    key: "width", get: function () {
                        return this.maxX - this.minX
                    }
                }, {
                    key: "height", get: function () {
                        return this.maxY - this.minY
                    }
                }]), t
            }(), no = {
                Caucasian_Albanian: "aghb",
                Arabic: "arab",
                Imperial_Aramaic: "armi",
                Armenian: "armn",
                Avestan: "avst",
                Balinese: "bali",
                Bamum: "bamu",
                Bassa_Vah: "bass",
                Batak: "batk",
                Bengali: ["bng2", "beng"],
                Bopomofo: "bopo",
                Brahmi: "brah",
                Braille: "brai",
                Buginese: "bugi",
                Buhid: "buhd",
                Chakma: "cakm",
                Canadian_Aboriginal: "cans",
                Carian: "cari",
                Cham: "cham",
                Cherokee: "cher",
                Coptic: "copt",
                Cypriot: "cprt",
                Cyrillic: "cyrl",
                Devanagari: ["dev2", "deva"],
                Deseret: "dsrt",
                Duployan: "dupl",
                Egyptian_Hieroglyphs: "egyp",
                Elbasan: "elba",
                Ethiopic: "ethi",
                Georgian: "geor",
                Glagolitic: "glag",
                Gothic: "goth",
                Grantha: "gran",
                Greek: "grek",
                Gujarati: ["gjr2", "gujr"],
                Gurmukhi: ["gur2", "guru"],
                Hangul: "hang",
                Han: "hani",
                Hanunoo: "hano",
                Hebrew: "hebr",
                Hiragana: "hira",
                Pahawh_Hmong: "hmng",
                Katakana_Or_Hiragana: "hrkt",
                Old_Italic: "ital",
                Javanese: "java",
                Kayah_Li: "kali",
                Katakana: "kana",
                Kharoshthi: "khar",
                Khmer: "khmr",
                Khojki: "khoj",
                Kannada: ["knd2", "knda"],
                Kaithi: "kthi",
                Tai_Tham: "lana",
                Lao: "lao ",
                Latin: "latn",
                Lepcha: "lepc",
                Limbu: "limb",
                Linear_A: "lina",
                Linear_B: "linb",
                Lisu: "lisu",
                Lycian: "lyci",
                Lydian: "lydi",
                Mahajani: "mahj",
                Mandaic: "mand",
                Manichaean: "mani",
                Mende_Kikakui: "mend",
                Meroitic_Cursive: "merc",
                Meroitic_Hieroglyphs: "mero",
                Malayalam: ["mlm2", "mlym"],
                Modi: "modi",
                Mongolian: "mong",
                Mro: "mroo",
                Meetei_Mayek: "mtei",
                Myanmar: ["mym2", "mymr"],
                Old_North_Arabian: "narb",
                Nabataean: "nbat",
                Nko: "nko ",
                Ogham: "ogam",
                Ol_Chiki: "olck",
                Old_Turkic: "orkh",
                Oriya: ["ory2", "orya"],
                Osmanya: "osma",
                Palmyrene: "palm",
                Pau_Cin_Hau: "pauc",
                Old_Permic: "perm",
                Phags_Pa: "phag",
                Inscriptional_Pahlavi: "phli",
                Psalter_Pahlavi: "phlp",
                Phoenician: "phnx",
                Miao: "plrd",
                Inscriptional_Parthian: "prti",
                Rejang: "rjng",
                Runic: "runr",
                Samaritan: "samr",
                Old_South_Arabian: "sarb",
                Saurashtra: "saur",
                Shavian: "shaw",
                Sharada: "shrd",
                Siddham: "sidd",
                Khudawadi: "sind",
                Sinhala: "sinh",
                Sora_Sompeng: "sora",
                Sundanese: "sund",
                Syloti_Nagri: "sylo",
                Syriac: "syrc",
                Tagbanwa: "tagb",
                Takri: "takr",
                Tai_Le: "tale",
                New_Tai_Lue: "talu",
                Tamil: ["tml2", "taml"],
                Tai_Viet: "tavt",
                Telugu: ["tel2", "telu"],
                Tifinagh: "tfng",
                Tagalog: "tglg",
                Thaana: "thaa",
                Thai: "thai",
                Tibetan: "tibt",
                Tirhuta: "tirh",
                Ugaritic: "ugar",
                Vai: "vai ",
                Warang_Citi: "wara",
                Old_Persian: "xpeo",
                Cuneiform: "xsux",
                Yi: "yi  ",
                Inherited: "zinh",
                Common: "zyyy",
                Unknown: "zzzz"
            }, ro = {};
            for (var io in no) {
                var oo = no[io];
                if (Array.isArray(oo))for (var ao = oo, so = Array.isArray(ao), uo = 0, ao = so ? ao : it(ao); ;) {
                    var lo;
                    if (so) {
                        if (uo >= ao.length)break;
                        lo = ao[uo++]
                    } else {
                        if (uo = ao.next(), uo.done)break;
                        lo = uo.value
                    }
                    var co = lo;
                    ro[co] = io
                } else ro[oo] = io
            }
            for (var fo = {
                arab: !0,
                hebr: !0,
                syrc: !0,
                thaa: !0,
                cprt: !0,
                khar: !0,
                phnx: !0,
                "nko ": !0,
                lydi: !0,
                avst: !0,
                armi: !0,
                phli: !0,
                prti: !0,
                sarb: !0,
                orkh: !0,
                samr: !0,
                mand: !0,
                merc: !0,
                mero: !0,
                mani: !0,
                mend: !0,
                nbat: !0,
                narb: !0,
                palm: !0,
                phlp: !0
            }, ho = function () {
                function t(e, n, r, i, o) {
                    if (lt(this, t), this.glyphs = e, this.positions = null, this.script = r, this.language = i || null, this.direction = o || y(r), this.features = {}, Array.isArray(n))for (var a = n, s = Array.isArray(a), u = 0, a = s ? a : it(a); ;) {
                        var l;
                        if (s) {
                            if (u >= a.length)break;
                            l = a[u++]
                        } else {
                            if (u = a.next(), u.done)break;
                            l = u.value
                        }
                        var c = l;
                        this.features[c] = !0
                    } else"object" === (void 0 === n ? "undefined" : st(n)) && (this.features = n)
                }

                return ct(t, [{
                    key: "advanceWidth", get: function () {
                        for (var t = 0, e = this.positions, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                            var i;
                            if (n) {
                                if (r >= e.length)break;
                                i = e[r++]
                            } else {
                                if (r = e.next(), r.done)break;
                                i = r.value
                            }
                            t += i.xAdvance
                        }
                        return t
                    }
                }, {
                    key: "advanceHeight", get: function () {
                        for (var t = 0, e = this.positions, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                            var i;
                            if (n) {
                                if (r >= e.length)break;
                                i = e[r++]
                            } else {
                                if (r = e.next(), r.done)break;
                                i = r.value
                            }
                            t += i.yAdvance
                        }
                        return t
                    }
                }, {
                    key: "bbox", get: function () {
                        for (var t = new eo, e = 0, n = 0, r = 0; r < this.glyphs.length; r++) {
                            var i = this.glyphs[r], o = this.positions[r], a = i.bbox;
                            t.addPoint(a.minX + e + o.xOffset, a.minY + n + o.yOffset), t.addPoint(a.maxX + e + o.xOffset, a.maxY + n + o.yOffset), e += o.xAdvance, n += o.yAdvance
                        }
                        return t
                    }
                }]), t
            }(), po = function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
                lt(this, t), this.xAdvance = e, this.yAdvance = n, this.xOffset = r, this.yOffset = i
            }, go = {
                allTypographicFeatures: {code: 0, exclusive: !1, allTypeFeatures: 0},
                ligatures: {
                    code: 1,
                    exclusive: !1,
                    requiredLigatures: 0,
                    commonLigatures: 2,
                    rareLigatures: 4,
                    rebusPictures: 8,
                    diphthongLigatures: 10,
                    squaredLigatures: 12,
                    abbrevSquaredLigatures: 14,
                    symbolLigatures: 16,
                    contextualLigatures: 18,
                    historicalLigatures: 20
                },
                cursiveConnection: {code: 2, exclusive: !0, unconnected: 0, partiallyConnected: 1, cursive: 2},
                letterCase: {code: 3, exclusive: !0},
                verticalSubstitution: {code: 4, exclusive: !1, substituteVerticalForms: 0},
                linguisticRearrangement: {code: 5, exclusive: !1, linguisticRearrangement: 0},
                numberSpacing: {
                    code: 6,
                    exclusive: !0,
                    monospacedNumbers: 0,
                    proportionalNumbers: 1,
                    thirdWidthNumbers: 2,
                    quarterWidthNumbers: 3
                },
                smartSwash: {code: 8, exclusive: !1, wordInitialSwashes: 0, wordFinalSwashes: 2, nonFinalSwashes: 8},
                diacritics: {code: 9, exclusive: !0, showDiacritics: 0, hideDiacritics: 1, decomposeDiacritics: 2},
                verticalPosition: {
                    code: 10,
                    exclusive: !0,
                    normalPosition: 0,
                    superiors: 1,
                    inferiors: 2,
                    ordinals: 3,
                    scientificInferiors: 4
                },
                fractions: {code: 11, exclusive: !0, noFractions: 0, verticalFractions: 1, diagonalFractions: 2},
                overlappingCharacters: {code: 13, exclusive: !1, preventOverlap: 0},
                typographicExtras: {code: 14, exclusive: !1, slashedZero: 4},
                mathematicalExtras: {code: 15, exclusive: !1, mathematicalGreek: 10},
                ornamentSets: {
                    code: 16,
                    exclusive: !0,
                    noOrnaments: 0,
                    dingbats: 1,
                    piCharacters: 2,
                    fleurons: 3,
                    decorativeBorders: 4,
                    internationalSymbols: 5,
                    mathSymbols: 6
                },
                characterAlternatives: {code: 17, exclusive: !0, noAlternates: 0},
                designComplexity: {
                    code: 18,
                    exclusive: !0,
                    designLevel1: 0,
                    designLevel2: 1,
                    designLevel3: 2,
                    designLevel4: 3,
                    designLevel5: 4
                },
                styleOptions: {
                    code: 19,
                    exclusive: !0,
                    noStyleOptions: 0,
                    displayText: 1,
                    engravedText: 2,
                    illuminatedCaps: 3,
                    titlingCaps: 4,
                    tallCaps: 5
                },
                characterShape: {
                    code: 20,
                    exclusive: !0,
                    traditionalCharacters: 0,
                    simplifiedCharacters: 1,
                    JIS1978Characters: 2,
                    JIS1983Characters: 3,
                    JIS1990Characters: 4,
                    traditionalAltOne: 5,
                    traditionalAltTwo: 6,
                    traditionalAltThree: 7,
                    traditionalAltFour: 8,
                    traditionalAltFive: 9,
                    expertCharacters: 10,
                    JIS2004Characters: 11,
                    hojoCharacters: 12,
                    NLCCharacters: 13,
                    traditionalNamesCharacters: 14
                },
                numberCase: {code: 21, exclusive: !0, lowerCaseNumbers: 0, upperCaseNumbers: 1},
                textSpacing: {
                    code: 22,
                    exclusive: !0,
                    proportionalText: 0,
                    monospacedText: 1,
                    halfWidthText: 2,
                    thirdWidthText: 3,
                    quarterWidthText: 4,
                    altProportionalText: 5,
                    altHalfWidthText: 6
                },
                transliteration: {code: 23, exclusive: !0, noTransliteration: 0},
                annotation: {
                    code: 24,
                    exclusive: !0,
                    noAnnotation: 0,
                    boxAnnotation: 1,
                    roundedBoxAnnotation: 2,
                    circleAnnotation: 3,
                    invertedCircleAnnotation: 4,
                    parenthesisAnnotation: 5,
                    periodAnnotation: 6,
                    romanNumeralAnnotation: 7,
                    diamondAnnotation: 8,
                    invertedBoxAnnotation: 9,
                    invertedRoundedBoxAnnotation: 10
                },
                kanaSpacing: {code: 25, exclusive: !0, fullWidthKana: 0, proportionalKana: 1},
                ideographicSpacing: {
                    code: 26,
                    exclusive: !0,
                    fullWidthIdeographs: 0,
                    proportionalIdeographs: 1,
                    halfWidthIdeographs: 2
                },
                unicodeDecomposition: {
                    code: 27,
                    exclusive: !1,
                    canonicalComposition: 0,
                    compatibilityComposition: 2,
                    transcodingComposition: 4
                },
                rubyKana: {code: 28, exclusive: !1, rubyKana: 2},
                CJKSymbolAlternatives: {
                    code: 29,
                    exclusive: !0,
                    noCJKSymbolAlternatives: 0,
                    CJKSymbolAltOne: 1,
                    CJKSymbolAltTwo: 2,
                    CJKSymbolAltThree: 3,
                    CJKSymbolAltFour: 4,
                    CJKSymbolAltFive: 5
                },
                ideographicAlternatives: {
                    code: 30,
                    exclusive: !0,
                    noIdeographicAlternatives: 0,
                    ideographicAltOne: 1,
                    ideographicAltTwo: 2,
                    ideographicAltThree: 3,
                    ideographicAltFour: 4,
                    ideographicAltFive: 5
                },
                CJKVerticalRomanPlacement: {
                    code: 31,
                    exclusive: !0,
                    CJKVerticalRomanCentered: 0,
                    CJKVerticalRomanHBaseline: 1
                },
                italicCJKRoman: {code: 32, exclusive: !1, CJKItalicRoman: 2},
                caseSensitiveLayout: {code: 33, exclusive: !1, caseSensitiveLayout: 0, caseSensitiveSpacing: 2},
                alternateKana: {code: 34, exclusive: !1, alternateHorizKana: 0, alternateVertKana: 2},
                stylisticAlternatives: {
                    code: 35,
                    exclusive: !1,
                    noStylisticAlternates: 0,
                    stylisticAltOne: 2,
                    stylisticAltTwo: 4,
                    stylisticAltThree: 6,
                    stylisticAltFour: 8,
                    stylisticAltFive: 10,
                    stylisticAltSix: 12,
                    stylisticAltSeven: 14,
                    stylisticAltEight: 16,
                    stylisticAltNine: 18,
                    stylisticAltTen: 20,
                    stylisticAltEleven: 22,
                    stylisticAltTwelve: 24,
                    stylisticAltThirteen: 26,
                    stylisticAltFourteen: 28,
                    stylisticAltFifteen: 30,
                    stylisticAltSixteen: 32,
                    stylisticAltSeventeen: 34,
                    stylisticAltEighteen: 36,
                    stylisticAltNineteen: 38,
                    stylisticAltTwenty: 40
                },
                contextualAlternates: {
                    code: 36,
                    exclusive: !1,
                    contextualAlternates: 0,
                    swashAlternates: 2,
                    contextualSwashAlternates: 4
                },
                lowerCase: {
                    code: 37,
                    exclusive: !0,
                    defaultLowerCase: 0,
                    lowerCaseSmallCaps: 1,
                    lowerCasePetiteCaps: 2
                },
                upperCase: {
                    code: 38,
                    exclusive: !0,
                    defaultUpperCase: 0,
                    upperCaseSmallCaps: 1,
                    upperCasePetiteCaps: 2
                },
                languageTag: {code: 39, exclusive: !0},
                CJKRomanSpacing: {
                    code: 103,
                    exclusive: !0,
                    halfWidthCJKRoman: 0,
                    proportionalCJKRoman: 1,
                    defaultCJKRoman: 2,
                    fullWidthCJKRoman: 3
                }
            }, yo = function (t, e) {
                return [go[t].code, go[t][e]]
            }, vo = {
                rlig: yo("ligatures", "requiredLigatures"),
                clig: yo("ligatures", "contextualLigatures"),
                dlig: yo("ligatures", "rareLigatures"),
                hlig: yo("ligatures", "historicalLigatures"),
                liga: yo("ligatures", "commonLigatures"),
                hist: yo("ligatures", "historicalLigatures"),
                smcp: yo("lowerCase", "lowerCaseSmallCaps"),
                pcap: yo("lowerCase", "lowerCasePetiteCaps"),
                frac: yo("fractions", "diagonalFractions"),
                dnom: yo("fractions", "diagonalFractions"),
                numr: yo("fractions", "diagonalFractions"),
                afrc: yo("fractions", "verticalFractions"),
                case: yo("caseSensitiveLayout", "caseSensitiveLayout"),
                ccmp: yo("unicodeDecomposition", "canonicalComposition"),
                cpct: yo("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                valt: yo("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                swsh: yo("contextualAlternates", "swashAlternates"),
                cswh: yo("contextualAlternates", "contextualSwashAlternates"),
                curs: yo("cursiveConnection", "cursive"),
                c2pc: yo("upperCase", "upperCasePetiteCaps"),
                c2sc: yo("upperCase", "upperCaseSmallCaps"),
                init: yo("smartSwash", "wordInitialSwashes"),
                fin2: yo("smartSwash", "wordFinalSwashes"),
                medi: yo("smartSwash", "nonFinalSwashes"),
                med2: yo("smartSwash", "nonFinalSwashes"),
                fin3: yo("smartSwash", "wordFinalSwashes"),
                fina: yo("smartSwash", "wordFinalSwashes"),
                pkna: yo("kanaSpacing", "proportionalKana"),
                half: yo("textSpacing", "halfWidthText"),
                halt: yo("textSpacing", "altHalfWidthText"),
                hkna: yo("alternateKana", "alternateHorizKana"),
                vkna: yo("alternateKana", "alternateVertKana"),
                ital: yo("italicCJKRoman", "CJKItalicRoman"),
                lnum: yo("numberCase", "upperCaseNumbers"),
                onum: yo("numberCase", "lowerCaseNumbers"),
                mgrk: yo("mathematicalExtras", "mathematicalGreek"),
                calt: yo("contextualAlternates", "contextualAlternates"),
                vrt2: yo("verticalSubstitution", "substituteVerticalForms"),
                vert: yo("verticalSubstitution", "substituteVerticalForms"),
                tnum: yo("numberSpacing", "monospacedNumbers"),
                pnum: yo("numberSpacing", "proportionalNumbers"),
                sups: yo("verticalPosition", "superiors"),
                subs: yo("verticalPosition", "inferiors"),
                ordn: yo("verticalPosition", "ordinals"),
                pwid: yo("textSpacing", "proportionalText"),
                hwid: yo("textSpacing", "halfWidthText"),
                qwid: yo("textSpacing", "quarterWidthText"),
                twid: yo("textSpacing", "thirdWidthText"),
                fwid: yo("textSpacing", "proportionalText"),
                palt: yo("textSpacing", "altProportionalText"),
                trad: yo("characterShape", "traditionalCharacters"),
                smpl: yo("characterShape", "simplifiedCharacters"),
                jp78: yo("characterShape", "JIS1978Characters"),
                jp83: yo("characterShape", "JIS1983Characters"),
                jp90: yo("characterShape", "JIS1990Characters"),
                jp04: yo("characterShape", "JIS2004Characters"),
                expt: yo("characterShape", "expertCharacters"),
                hojo: yo("characterShape", "hojoCharacters"),
                nlck: yo("characterShape", "NLCCharacters"),
                tnam: yo("characterShape", "traditionalNamesCharacters"),
                ruby: yo("rubyKana", "rubyKana"),
                titl: yo("styleOptions", "titlingCaps"),
                zero: yo("typographicExtras", "slashedZero"),
                ss01: yo("stylisticAlternatives", "stylisticAltOne"),
                ss02: yo("stylisticAlternatives", "stylisticAltTwo"),
                ss03: yo("stylisticAlternatives", "stylisticAltThree"),
                ss04: yo("stylisticAlternatives", "stylisticAltFour"),
                ss05: yo("stylisticAlternatives", "stylisticAltFive"),
                ss06: yo("stylisticAlternatives", "stylisticAltSix"),
                ss07: yo("stylisticAlternatives", "stylisticAltSeven"),
                ss08: yo("stylisticAlternatives", "stylisticAltEight"),
                ss09: yo("stylisticAlternatives", "stylisticAltNine"),
                ss10: yo("stylisticAlternatives", "stylisticAltTen"),
                ss11: yo("stylisticAlternatives", "stylisticAltEleven"),
                ss12: yo("stylisticAlternatives", "stylisticAltTwelve"),
                ss13: yo("stylisticAlternatives", "stylisticAltThirteen"),
                ss14: yo("stylisticAlternatives", "stylisticAltFourteen"),
                ss15: yo("stylisticAlternatives", "stylisticAltFifteen"),
                ss16: yo("stylisticAlternatives", "stylisticAltSixteen"),
                ss17: yo("stylisticAlternatives", "stylisticAltSeventeen"),
                ss18: yo("stylisticAlternatives", "stylisticAltEighteen"),
                ss19: yo("stylisticAlternatives", "stylisticAltNineteen"),
                ss20: yo("stylisticAlternatives", "stylisticAltTwenty")
            }, bo = 1; bo <= 99; bo++)vo["cv" + ("00" + bo).slice(-2)] = [go.characterAlternatives.code, bo];
            var mo = {};
            for (var wo in vo) {
                var xo = vo[wo];
                null == mo[xo[0]] && (mo[xo[0]] = {}), mo[xo[0]][xo[1]] = wo
            }
            for (var _o, ko, So, Co, Ao, Po, Eo, Io, To, Oo, Bo = (_o = function () {
                function t(e) {
                    lt(this, t), this.table = e
                }

                return t.prototype.lookup = function (t) {
                    switch (this.table.version) {
                        case 0:
                            return this.table.values.getItem(t);
                        case 2:
                        case 4:
                            for (var e = 0, n = this.table.binarySearchHeader.nUnits - 1; e <= n;) {
                                var r = e + n >> 1, i = this.table.segments[r];
                                if (65535 === i.firstGlyph)return null;
                                if (t < i.firstGlyph)n = r - 1; else {
                                    if (!(t > i.lastGlyph))return 2 === this.table.version ? i.value : i.values[t - i.firstGlyph];
                                    e = r + 1
                                }
                            }
                            return null;
                        case 6:
                            for (var o = 0, a = this.table.binarySearchHeader.nUnits - 1; o <= a;) {
                                var r = o + a >> 1, i = this.table.segments[r];
                                if (65535 === i.glyph)return null;
                                if (t < i.glyph)a = r - 1; else {
                                    if (!(t > i.glyph))return i.value;
                                    o = r + 1
                                }
                            }
                            return null;
                        case 8:
                            return this.table.values[t - this.table.firstGlyph];
                        default:
                            throw new Error("Unknown lookup table format: " + this.table.version)
                    }
                }, t.prototype.glyphsForValue = function (t) {
                    var e = [];
                    switch (this.table.version) {
                        case 2:
                        case 4:
                            for (var n = this.table.segments, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                                var o;
                                if (r) {
                                    if (i >= n.length)break;
                                    o = n[i++]
                                } else {
                                    if (i = n.next(), i.done)break;
                                    o = i.value
                                }
                                var a = o;
                                if (2 === this.table.version && a.value === t)e.push.apply(e, f(a.firstGlyph, a.lastGlyph + 1)); else for (var s = 0; s < a.values.length; s++)a.values[s] === t && e.push(a.firstGlyph + s)
                            }
                            break;
                        case 6:
                            for (var u = this.table.segments, l = Array.isArray(u), c = 0, u = l ? u : it(u); ;) {
                                var h;
                                if (l) {
                                    if (c >= u.length)break;
                                    h = u[c++]
                                } else {
                                    if (c = u.next(), c.done)break;
                                    h = c.value
                                }
                                var p = h;
                                p.value === t && e.push(p.glyph)
                            }
                            break;
                        case 8:
                            for (var d = 0; d < this.table.values.length; d++)this.table.values[d] === t && e.push(this.table.firstGlyph + d);
                            break;
                        default:
                            throw new Error("Unknown lookup table format: " + this.table.version)
                    }
                    return e
                }, t
            }(), function (t, e, n, r, i) {
                var o = {};
                return Object.keys(r).forEach(function (t) {
                    o[t] = r[t]
                }), o.enumerable = !!o.enumerable, o.configurable = !!o.configurable, ("value" in o || o.initializer) && (o.writable = !0), o = n.slice().reverse().reduce(function (n, r) {
                    return r(t, e, n) || n
                }, o), i && void 0 !== o.initializer && (o.value = o.initializer ? o.initializer.call(i) : void 0, o.initializer = void 0), void 0 === o.initializer && (Object.defineProperty(t, e, o), o = null), o
            }(_o.prototype, "glyphsForValue", [o], rt(_o.prototype, "glyphsForValue"), _o.prototype), _o), Lo = function () {
                function t(e) {
                    lt(this, t), this.stateTable = e, this.lookupTable = new Bo(e.classTable)
                }

                return t.prototype.process = function (t, e, n) {
                    for (var r = 0, i = e ? t.length - 1 : 0, o = e ? -1 : 1; 1 === o && i <= t.length || -1 === o && i >= -1;) {
                        var a = null, s = 1, u = !0;
                        i === t.length || -1 === i ? s = 0 : (a = t[i], 65535 === a.id ? s = 2 : null == (s = this.lookupTable.lookup(a.id)) && (s = 1));
                        var l = this.stateTable.stateArray.getItem(r), c = l[s], f = this.stateTable.entryTable.getItem(c);
                        0 !== s && 2 !== s && (n(a, f, i), u = !(16384 & f.flags)), r = f.newState, u && (i += o)
                    }
                    return t
                }, t.prototype.traverse = function (t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new wt;
                    if (!n.has(e)) {
                        n.add(e);
                        for (var r = this.stateTable, i = r.nClasses, o = r.stateArray, a = r.entryTable, s = o.getItem(e), u = 4; u < i; u++)for (var l = s[u], c = a.getItem(l), f = this.lookupTable.glyphsForValue(u), h = Array.isArray(f), p = 0, f = h ? f : it(f); ;) {
                            var d;
                            if (h) {
                                if (p >= f.length)break;
                                d = f[p++]
                            } else {
                                if (p = f.next(), p.done)break;
                                d = p.value
                            }
                            var g = d;
                            t.enter && t.enter(g, c), 0 !== c.newState && this.traverse(t, c.newState, n), t.exit && t.exit(g, c)
                        }
                    }
                }, t
            }(), Mo = (ko = function () {
                function t(e) {
                    lt(this, t), this.processIndicRearragement = this.processIndicRearragement.bind(this), this.processContextualSubstitution = this.processContextualSubstitution.bind(this), this.processLigature = this.processLigature.bind(this), this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this), this.processGlyphInsertion = this.processGlyphInsertion.bind(this), this.font = e, this.morx = e.morx, this.inputCache = null
                }

                return t.prototype.process = function (t) {
                    for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = this.morx.chains, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                        var o;
                        if (r) {
                            if (i >= n.length)break;
                            o = n[i++]
                        } else {
                            if (i = n.next(), i.done)break;
                            o = i.value
                        }
                        for (var a = o, s = a.defaultFlags, u = a.features, l = Array.isArray(u), c = 0, u = l ? u : it(u); ;) {
                            var f;
                            if (l) {
                                if (c >= u.length)break;
                                f = u[c++]
                            } else {
                                if (c = u.next(), c.done)break;
                                f = c.value
                            }
                            var h = f, p = void 0;
                            (p = e[h.featureType]) && p[h.featureSetting] && (s &= h.disableFlags, s |= h.enableFlags)
                        }
                        for (var d = a.subtables, g = Array.isArray(d), y = 0, d = g ? d : it(d); ;) {
                            var v;
                            if (g) {
                                if (y >= d.length)break;
                                v = d[y++]
                            } else {
                                if (y = d.next(), y.done)break;
                                v = y.value
                            }
                            var b = v;
                            b.subFeatureFlags & s && this.processSubtable(b, t)
                        }
                    }
                    for (var m = t.length - 1; m >= 0;)65535 === t[m].id && t.splice(m, 1), m--;
                    return t
                }, t.prototype.processSubtable = function (t, e) {
                    if (this.subtable = t, this.glyphs = e, 4 === this.subtable.type)return void this.processNoncontextualSubstitutions(this.subtable, this.glyphs);
                    this.ligatureStack = [], this.markedGlyph = null, this.firstGlyph = null, this.lastGlyph = null, this.markedIndex = null;
                    var n = this.getStateMachine(t), r = this.getProcessor(), i = !!(4194304 & this.subtable.coverage);
                    return n.process(this.glyphs, i, r)
                }, t.prototype.getStateMachine = function (t) {
                    return new Lo(t.table.stateTable)
                }, t.prototype.getProcessor = function () {
                    switch (this.subtable.type) {
                        case 0:
                            return this.processIndicRearragement;
                        case 1:
                            return this.processContextualSubstitution;
                        case 2:
                            return this.processLigature;
                        case 4:
                            return this.processNoncontextualSubstitutions;
                        case 5:
                            return this.processGlyphInsertion;
                        default:
                            throw new Error("Invalid morx subtable type: " + this.subtable.type)
                    }
                }, t.prototype.processIndicRearragement = function (t, e, n) {
                    32768 & e.flags && (this.firstGlyph = n), 8192 & e.flags && (this.lastGlyph = n), x(this.glyphs, 15 & e.flags, this.firstGlyph, this.lastGlyph)
                }, t.prototype.processContextualSubstitution = function (t, e, n) {
                    var r = this.subtable.table.substitutionTable.items;
                    if (65535 !== e.markIndex) {
                        var i = r.getItem(e.markIndex), o = new Bo(i);
                        t = this.glyphs[this.markedGlyph];
                        var a = o.lookup(t.id);
                        a && (this.glyphs[this.markedGlyph] = this.font.getGlyph(a, t.codePoints))
                    }
                    if (65535 !== e.currentIndex) {
                        var s = r.getItem(e.currentIndex), u = new Bo(s);
                        t = this.glyphs[n];
                        var a = u.lookup(t.id);
                        a && (this.glyphs[n] = this.font.getGlyph(a, t.codePoints))
                    }
                    32768 & e.flags && (this.markedGlyph = n)
                }, t.prototype.processLigature = function (t, e, n) {
                    if (32768 & e.flags && this.ligatureStack.push(n), 8192 & e.flags) {
                        for (var r, i = this.subtable.table.ligatureActions, o = this.subtable.table.components, a = this.subtable.table.ligatureList, s = e.action, u = !1, l = 0, c = [], f = []; !u;) {
                            var h, p = this.ligatureStack.pop();
                            (h = c).unshift.apply(h, this.glyphs[p].codePoints);
                            var d = i.getItem(s++);
                            u = !!(2147483648 & d);
                            var g = !!(1073741824 & d), y = (1073741823 & d) << 2 >> 2;
                            y += this.glyphs[p].id;
                            if (l += o.getItem(y), u || g) {
                                var v = a.getItem(l);
                                this.glyphs[p] = this.font.getGlyph(v, c), f.push(p), l = 0, c = []
                            } else this.glyphs[p] = this.font.getGlyph(65535)
                        }
                        (r = this.ligatureStack).push.apply(r, f)
                    }
                }, t.prototype.processNoncontextualSubstitutions = function (t, e, n) {
                    var r = new Bo(t.table.lookupTable);
                    for (n = 0; n < e.length; n++) {
                        var i = e[n];
                        if (65535 !== i.id) {
                            var o = r.lookup(i.id);
                            o && (e[n] = this.font.getGlyph(o, i.codePoints))
                        }
                    }
                }, t.prototype._insertGlyphs = function (t, e, n, r) {
                    for (var i, o = []; n--;) {
                        var a = this.subtable.table.insertionActions.getItem(e++);
                        o.push(this.font.getGlyph(a))
                    }
                    r || t++, (i = this.glyphs).splice.apply(i, [t, 0].concat(o))
                }, t.prototype.processGlyphInsertion = function (t, e, n) {
                    if (32768 & e.flags && (this.markedIndex = n), 65535 !== e.markedInsertIndex) {
                        var r = (31 & e.flags) >>> 5, i = !!(1024 & e.flags);
                        this._insertGlyphs(this.markedIndex, e.markedInsertIndex, r, i)
                    }
                    if (65535 !== e.currentInsertIndex) {
                        var o = (992 & e.flags) >>> 5, a = !!(2048 & e.flags);
                        this._insertGlyphs(n, e.currentInsertIndex, o, a)
                    }
                }, t.prototype.getSupportedFeatures = function () {
                    for (var t = [], e = this.morx.chains, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                        var i;
                        if (n) {
                            if (r >= e.length)break;
                            i = e[r++]
                        } else {
                            if (r = e.next(), r.done)break;
                            i = r.value
                        }
                        for (var o = i, a = o.features, s = Array.isArray(a), u = 0, a = s ? a : it(a); ;) {
                            var l;
                            if (s) {
                                if (u >= a.length)break;
                                l = a[u++]
                            } else {
                                if (u = a.next(), u.done)break;
                                l = u.value
                            }
                            var c = l;
                            t.push([c.featureType, c.featureSetting])
                        }
                    }
                    return t
                }, t.prototype.generateInputs = function (t) {
                    return this.inputCache || this.generateInputCache(), this.inputCache[t] || []
                }, t.prototype.generateInputCache = function () {
                    this.inputCache = {};
                    for (var t = this.morx.chains, e = Array.isArray(t), n = 0, t = e ? t : it(t); ;) {
                        var r;
                        if (e) {
                            if (n >= t.length)break;
                            r = t[n++]
                        } else {
                            if (n = t.next(), n.done)break;
                            r = n.value
                        }
                        for (var i = r, o = i.defaultFlags, a = i.subtables, s = Array.isArray(a), u = 0, a = s ? a : it(a); ;) {
                            var l;
                            if (s) {
                                if (u >= a.length)break;
                                l = a[u++]
                            } else {
                                if (u = a.next(), u.done)break;
                                l = u.value
                            }
                            var c = l;
                            c.subFeatureFlags & o && this.generateInputsForSubtable(c)
                        }
                    }
                }, t.prototype.generateInputsForSubtable = function (t) {
                    var e = this;
                    if (2 === t.type) {
                        if (!!(4194304 & t.coverage))throw new Error("Reverse subtable, not supported.");
                        this.subtable = t, this.ligatureStack = [];
                        var n = this.getStateMachine(t), r = this.getProcessor(), i = [], o = [];
                        this.glyphs = [], n.traverse({
                            enter: function (t, n) {
                                var a = e.glyphs;
                                o.push({glyphs: a.slice(), ligatureStack: e.ligatureStack.slice()});
                                var s = e.font.getGlyph(t);
                                i.push(s), a.push(i[i.length - 1]), r(a[a.length - 1], n, a.length - 1);
                                for (var u = 0, l = 0, c = 0; c < a.length && u <= 1; c++)65535 !== a[c].id && (u++, l = a[c].id);
                                if (1 === u) {
                                    var f = i.map(function (t) {
                                        return t.id
                                    }), h = e.inputCache[l];
                                    h ? h.push(f) : e.inputCache[l] = [f]
                                }
                            }, exit: function () {
                                var t = o.pop();
                                e.glyphs = t.glyphs, e.ligatureStack = t.ligatureStack, i.pop()
                            }
                        })
                    }
                }, t
            }(), function (t, e, n, r, i) {
                var o = {};
                return Object.keys(r).forEach(function (t) {
                    o[t] = r[t]
                }), o.enumerable = !!o.enumerable, o.configurable = !!o.configurable, ("value" in o || o.initializer) && (o.writable = !0), o = n.slice().reverse().reduce(function (n, r) {
                    return r(t, e, n) || n
                }, o), i && void 0 !== o.initializer && (o.value = o.initializer ? o.initializer.call(i) : void 0, o.initializer = void 0), void 0 === o.initializer && (Object.defineProperty(t, e, o), o = null), o
            }(ko.prototype, "getStateMachine", [o], rt(ko.prototype, "getStateMachine"), ko.prototype), ko), Ro = function () {
                function t(e) {
                    lt(this, t), this.font = e, this.morxProcessor = new Mo(e), this.fallbackPosition = !1
                }

                return t.prototype.substitute = function (t) {
                    "rtl" === t.direction && t.glyphs.reverse(), this.morxProcessor.process(t.glyphs, v(t.features))
                }, t.prototype.getAvailableFeatures = function (t, e) {
                    return m(this.morxProcessor.getSupportedFeatures())
                }, t.prototype.stringsForGlyph = function (t) {
                    for (var e = this.morxProcessor.generateInputs(t), n = new wt, r = e, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a;
                        this._addStrings(s, 0, n, "")
                    }
                    return n
                }, t.prototype._addStrings = function (t, e, n, r) {
                    for (var i = this.font._cmapProcessor.codePointsForGlyph(t[e]), o = i, a = Array.isArray(o), s = 0, o = a ? o : it(o); ;) {
                        var u;
                        if (a) {
                            if (s >= o.length)break;
                            u = o[s++]
                        } else {
                            if (s = o.next(), s.done)break;
                            u = s.value
                        }
                        var l = u, c = r + bt(l);
                        e < t.length - 1 ? this._addStrings(t, e + 1, n, c) : n.add(c)
                    }
                }, t
            }(), Fo = function () {
                function t(e, n, r) {
                    lt(this, t), this.font = e, this.script = n, this.direction = r, this.stages = [], this.globalFeatures = {}, this.allFeatures = {}
                }

                return t.prototype._addFeatures = function (t, e) {
                    for (var n = this.stages.length - 1, r = this.stages[n], i = t, o = Array.isArray(i), a = 0, i = o ? i : it(i); ;) {
                        var s;
                        if (o) {
                            if (a >= i.length)break;
                            s = i[a++]
                        } else {
                            if (a = i.next(), a.done)break;
                            s = a.value
                        }
                        var u = s;
                        null == this.allFeatures[u] && (r.push(u), this.allFeatures[u] = n, e && (this.globalFeatures[u] = !0))
                    }
                }, t.prototype.add = function (t) {
                    var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                    if (0 === this.stages.length && this.stages.push([]), "string" == typeof t && (t = [t]), Array.isArray(t))this._addFeatures(t, e); else {
                        if ("object" !== (void 0 === t ? "undefined" : st(t)))throw new Error("Unsupported argument to ShapingPlan#add");
                        this._addFeatures(t.global || [], !0), this._addFeatures(t.local || [], !1)
                    }
                }, t.prototype.addStage = function (t, e) {
                    "function" == typeof t ? this.stages.push(t, []) : (this.stages.push([]), this.add(t, e))
                }, t.prototype.setFeatureOverrides = function (t) {
                    if (Array.isArray(t))this.add(t); else if ("object" === (void 0 === t ? "undefined" : st(t)))for (var e in t)if (t[e])this.add(e); else if (null != this.allFeatures[e]) {
                        var n = this.stages[this.allFeatures[e]];
                        n.splice(n.indexOf(e), 1), delete this.allFeatures[e], delete this.globalFeatures[e]
                    }
                }, t.prototype.assignGlobalFeatures = function (t) {
                    for (var e = t, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                        var i;
                        if (n) {
                            if (r >= e.length)break;
                            i = e[r++]
                        } else {
                            if (r = e.next(), r.done)break;
                            i = r.value
                        }
                        var o = i;
                        for (var a in this.globalFeatures)o.features[a] = !0
                    }
                }, t.prototype.process = function (t, e, n) {
                    for (var r = this.stages, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a;
                        "function" == typeof s ? n || s(this.font, e, this) : s.length > 0 && t.applyFeatures(s, e, n)
                    }
                }, t
            }(), zo = ["rvrn"], Do = ["ccmp", "locl", "rlig", "mark", "mkmk"], No = ["frac", "numr", "dnom"], Uo = ["calt", "clig", "liga", "rclt", "curs", "kern"], Wo = {
                ltr: ["ltra", "ltrm"],
                rtl: ["rtla", "rtlm"]
            }, jo = (Co = So = function () {
                function t() {
                    lt(this, t)
                }

                return t.plan = function (t, e, n) {
                    this.planPreprocessing(t), this.planFeatures(t), this.planPostprocessing(t, n), t.assignGlobalFeatures(e), this.assignFeatures(t, e)
                }, t.planPreprocessing = function (t) {
                    t.add({global: [].concat(zo, Wo[t.direction]), local: No})
                }, t.planFeatures = function (t) {
                }, t.planPostprocessing = function (t, e) {
                    t.add([].concat(Do, Uo)), t.setFeatureOverrides(e)
                }, t.assignFeatures = function (t, e) {
                    for (var n = 0; n < e.length; n++) {
                        var r = e[n];
                        if (8260 === r.codePoints[0]) {
                            for (var i = n, o = n + 1; i > 0 && xt.isDigit(e[i - 1].codePoints[0]);)e[i - 1].features.numr = !0, e[i - 1].features.frac = !0, i--;
                            for (; o < e.length && xt.isDigit(e[o].codePoints[0]);)e[o].features.dnom = !0, e[o].features.frac = !0, o++;
                            r.features.frac = !0, n = o - 1
                        }
                    }
                }, t
            }(), So.zeroMarkWidths = "AFTER_GPOS", Co), Go = new _t(e("AAEQAAAAAAAAADGgAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=", "base64")), Vo = ["isol", "fina", "fin2", "fin3", "medi", "med2", "init"], Ho = {
                Non_Joining: 0,
                Left_Joining: 1,
                Right_Joining: 2,
                Dual_Joining: 3,
                Join_Causing: 3,
                ALAPH: 4,
                "DALATH RISH": 5,
                Transparent: 6
            }, qo = "isol", Zo = "fina", Yo = [[[null, null, 0], [null, qo, 2], [null, qo, 1], [null, qo, 2], [null, qo, 1], [null, qo, 6]], [[null, null, 0], [null, qo, 2], [null, qo, 1], [null, qo, 2], [null, "fin2", 5], [null, qo, 6]], [[null, null, 0], [null, qo, 2], ["init", Zo, 1], ["init", Zo, 3], ["init", Zo, 4], ["init", Zo, 6]], [[null, null, 0], [null, qo, 2], ["medi", Zo, 1], ["medi", Zo, 3], ["medi", Zo, 4], ["medi", Zo, 6]], [[null, null, 0], [null, qo, 2], ["med2", qo, 1], ["med2", qo, 2], ["med2", "fin2", 5], ["med2", qo, 6]], [[null, null, 0], [null, qo, 2], [qo, qo, 1], [qo, qo, 2], [qo, "fin2", 5], [qo, qo, 6]], [[null, null, 0], [null, qo, 2], [null, qo, 1], [null, qo, 2], [null, "fin3", 5], [null, qo, 6]]], Xo = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.planFeatures = function (t) {
                    t.add(["ccmp", "locl"]);
                    for (var e = 0; e < Vo.length; e++) {
                        var n = Vo[e];
                        t.addStage(n, !1)
                    }
                    t.addStage("mset")
                }, e.assignFeatures = function (e, n) {
                    t.assignFeatures.call(this, e, n);
                    for (var r = -1, i = 0, o = [], a = 0; a < n.length; a++) {
                        var s = void 0, u = void 0, l = n[a], c = _(l.codePoints[0]);
                        if (c !== Ho.Transparent) {
                            var f = Yo[i][c];
                            u = f[0], s = f[1], i = f[2], null !== u && -1 !== r && (o[r] = u), o[a] = s, r = a
                        } else o[a] = null
                    }
                    for (var h = 0; h < n.length; h++) {
                        var p = void 0, l = n[h];
                        (p = o[h]) && (l.features[p] = !0)
                    }
                }, e
            }(jo), Ko = function () {
                function t(e, n) {
                    lt(this, t), this.glyphs = e, this.reset(n)
                }

                return t.prototype.reset = function () {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    this.options = t, this.flags = t.flags || {}, this.markAttachmentType = t.markAttachmentType || 0, this.index = e
                }, t.prototype.shouldIgnore = function (t) {
                    return this.flags.ignoreMarks && t.isMark || this.flags.ignoreBaseGlyphs && t.isBase || this.flags.ignoreLigatures && t.isLigature || this.markAttachmentType && t.isMark && t.markAttachmentType !== this.markAttachmentType
                }, t.prototype.move = function (t) {
                    for (this.index += t; 0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]);)this.index += t;
                    return 0 > this.index || this.index >= this.glyphs.length ? null : this.glyphs[this.index]
                }, t.prototype.next = function () {
                    return this.move(1)
                }, t.prototype.prev = function () {
                    return this.move(-1)
                }, t.prototype.peek = function () {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, e = this.index, n = this.increment(t);
                    return this.index = e, n
                }, t.prototype.peekIndex = function () {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, e = this.index;
                    this.increment(t);
                    var n = this.index;
                    return this.index = e, n
                }, t.prototype.increment = function () {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, e = t < 0 ? -1 : 1;
                    for (t = Math.abs(t); t--;)this.move(e);
                    return this.glyphs[this.index]
                }, ct(t, [{
                    key: "cur", get: function () {
                        return this.glyphs[this.index] || null
                    }
                }]), t
            }(), Jo = ["DFLT", "dflt", "latn"], Qo = (function () {
                function t(e, n) {
                    lt(this, t), this.font = e, this.table = n, this.script = null, this.scriptTag = null, this.language = null, this.languageTag = null, this.features = {}, this.lookups = {}, this.variationsIndex = e._variationProcessor ? this.findVariationsIndex(e._variationProcessor.normalizedCoords) : -1, this.selectScript(), this.glyphs = [], this.positions = [], this.ligatureID = 1, this.currentFeature = null
                }

                return t.prototype.findScript = function (t) {
                    if (null == this.table.scriptList)return null;
                    Array.isArray(t) || (t = [t]);
                    for (var e = t, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                        var i;
                        if (n) {
                            if (r >= e.length)break;
                            i = e[r++]
                        } else {
                            if (r = e.next(), r.done)break;
                            i = r.value
                        }
                        for (var o = i, a = this.table.scriptList, s = Array.isArray(a), u = 0, a = s ? a : it(a); ;) {
                            var l;
                            if (s) {
                                if (u >= a.length)break;
                                l = a[u++]
                            } else {
                                if (u = a.next(), u.done)break;
                                l = u.value
                            }
                            var c = l;
                            if (c.tag === o)return c
                        }
                    }
                    return null
                }, t.prototype.selectScript = function (t, e, n) {
                    var r = !1, i = void 0;
                    if (!this.script || t !== this.scriptTag) {
                        if (i = this.findScript(t), i || (i = this.findScript(Jo)), !i)return this.scriptTag;
                        this.scriptTag = i.tag, this.script = i.script, this.language = null, this.languageTag = null, r = !0
                    }
                    if (n && n === this.direction || (this.direction = n || y(t)), e && e.length < 4 && (e += " ".repeat(4 - e.length)), !e || e !== this.languageTag) {
                        this.language = null;
                        for (var o = this.script.langSysRecords, a = Array.isArray(o), s = 0, o = a ? o : it(o); ;) {
                            var u;
                            if (a) {
                                if (s >= o.length)break;
                                u = o[s++]
                            } else {
                                if (s = o.next(), s.done)break;
                                u = s.value
                            }
                            var l = u;
                            if (l.tag === e) {
                                this.language = l.langSys, this.languageTag = l.tag;
                                break
                            }
                        }
                        this.language || (this.language = this.script.defaultLangSys, this.languageTag = null), r = !0
                    }
                    if (r && (this.features = {}, this.language))for (var c = this.language.featureIndexes, f = Array.isArray(c), h = 0, c = f ? c : it(c); ;) {
                        var p;
                        if (f) {
                            if (h >= c.length)break;
                            p = c[h++]
                        } else {
                            if (h = c.next(), h.done)break;
                            p = h.value
                        }
                        var d = p, g = this.table.featureList[d], v = this.substituteFeatureForVariations(d);
                        this.features[g.tag] = v || g.feature
                    }
                    return this.scriptTag
                }, t.prototype.lookupsForFeatures = function () {
                    for (var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], e = arguments[1], n = [], r = t, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a, u = this.features[s];
                        if (u)for (var l = u.lookupListIndexes, c = Array.isArray(l), f = 0, l = c ? l : it(l); ;) {
                            var h;
                            if (c) {
                                if (f >= l.length)break;
                                h = l[f++]
                            } else {
                                if (f = l.next(), f.done)break;
                                h = f.value
                            }
                            var p = h;
                            e && -1 !== e.indexOf(p) || n.push({
                                feature: s,
                                index: p,
                                lookup: this.table.lookupList.get(p)
                            })
                        }
                    }
                    return n.sort(function (t, e) {
                        return t.index - e.index
                    }), n
                }, t.prototype.substituteFeatureForVariations = function (t) {
                    if (-1 === this.variationsIndex)return null;
                    for (var e = this.table.featureVariations.featureVariationRecords[this.variationsIndex], n = e.featureTableSubstitution.substitutions, r = n, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a;
                        if (s.featureIndex === t)return s.alternateFeatureTable
                    }
                    return null
                }, t.prototype.findVariationsIndex = function (t) {
                    var e = this.table.featureVariations;
                    if (!e)return -1;
                    for (var n = e.featureVariationRecords, r = 0; r < n.length; r++) {
                        var i = n[r].conditionSet.conditionTable;
                        if (this.variationConditionsMatch(i, t))return r
                    }
                    return -1
                }, t.prototype.variationConditionsMatch = function (t, e) {
                    return t.every(function (t) {
                        var n = t.axisIndex < e.length ? e[t.axisIndex] : 0;
                        return t.filterRangeMinValue <= n && n <= t.filterRangeMaxValue
                    })
                }, t.prototype.applyFeatures = function (t, e, n) {
                    var r = this.lookupsForFeatures(t);
                    this.applyLookups(r, e, n)
                }, t.prototype.applyLookups = function (t, e, n) {
                    this.glyphs = e, this.positions = n, this.glyphIterator = new Ko(e);
                    for (var r = t, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a, u = s.feature, l = s.lookup;
                        for (this.currentFeature = u, this.glyphIterator.reset(l.flags); this.glyphIterator.index < e.length;)if (u in this.glyphIterator.cur.features) {
                            for (var c = l.subTables, f = Array.isArray(c), h = 0, c = f ? c : it(c); ;) {
                                var p;
                                if (f) {
                                    if (h >= c.length)break;
                                    p = c[h++]
                                } else {
                                    if (h = c.next(), h.done)break;
                                    p = h.value
                                }
                                var d = p, g = this.applyLookup(l.lookupType, d);
                                if (g)break
                            }
                            this.glyphIterator.next()
                        } else this.glyphIterator.next()
                    }
                }, t.prototype.applyLookup = function (t, e) {
                    throw new Error("applyLookup must be implemented by subclasses")
                }, t.prototype.applyLookupList = function (t) {
                    for (var e = this.glyphIterator.options, n = this.glyphIterator.index, r = t, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a;
                        this.glyphIterator.reset(e, n), this.glyphIterator.increment(s.sequenceIndex);
                        var u = this.table.lookupList.get(s.lookupListIndex);
                        this.glyphIterator.reset(u.flags, this.glyphIterator.index);
                        for (var l = u.subTables, c = Array.isArray(l), f = 0, l = c ? l : it(l); ;) {
                            var h;
                            if (c) {
                                if (f >= l.length)break;
                                h = l[f++]
                            } else {
                                if (f = l.next(), f.done)break;
                                h = f.value
                            }
                            var p = h;
                            if (this.applyLookup(u.lookupType, p))break
                        }
                    }
                    return this.glyphIterator.reset(e, n), !0
                }, t.prototype.coverageIndex = function (t, e) {
                    switch (null == e && (e = this.glyphIterator.cur.id), t.version) {
                        case 1:
                            return t.glyphs.indexOf(e);
                        case 2:
                            for (var n = t.rangeRecords, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                                var o;
                                if (r) {
                                    if (i >= n.length)break;
                                    o = n[i++]
                                } else {
                                    if (i = n.next(), i.done)break;
                                    o = i.value
                                }
                                var a = o;
                                if (a.start <= e && e <= a.end)return a.startCoverageIndex + e - a.start
                            }
                    }
                    return -1
                }, t.prototype.match = function (t, e, n, r) {
                    for (var i = this.glyphIterator.index, o = this.glyphIterator.increment(t), a = 0; a < e.length && o && n(e[a], o);)r && r.push(this.glyphIterator.index), a++, o = this.glyphIterator.next()
                    ;
                    return this.glyphIterator.index = i, !(a < e.length) && (r || !0)
                }, t.prototype.sequenceMatches = function (t, e) {
                    return this.match(t, e, function (t, e) {
                        return t === e.id
                    })
                }, t.prototype.sequenceMatchIndices = function (t, e) {
                    var n = this;
                    return this.match(t, e, function (t, e) {
                        return n.currentFeature in e.features && t === e.id
                    }, [])
                }, t.prototype.coverageSequenceMatches = function (t, e) {
                    var n = this;
                    return this.match(t, e, function (t, e) {
                        return n.coverageIndex(t, e.id) >= 0
                    })
                }, t.prototype.getClassID = function (t, e) {
                    switch (e.version) {
                        case 1:
                            var n = t - e.startGlyph;
                            if (n >= 0 && n < e.classValueArray.length)return e.classValueArray[n];
                            break;
                        case 2:
                            for (var r = e.classRangeRecord, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                                var a;
                                if (i) {
                                    if (o >= r.length)break;
                                    a = r[o++]
                                } else {
                                    if (o = r.next(), o.done)break;
                                    a = o.value
                                }
                                var s = a;
                                if (s.start <= t && t <= s.end)return s.class
                            }
                    }
                    return 0
                }, t.prototype.classSequenceMatches = function (t, e, n) {
                    var r = this;
                    return this.match(t, e, function (t, e) {
                        return t === r.getClassID(e.id, n)
                    })
                }, t.prototype.applyContext = function (t) {
                    switch (t.version) {
                        case 1:
                            var e = this.coverageIndex(t.coverage);
                            if (-1 === e)return !1;
                            for (var n = t.ruleSets[e], r = n, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                                var a;
                                if (i) {
                                    if (o >= r.length)break;
                                    a = r[o++]
                                } else {
                                    if (o = r.next(), o.done)break;
                                    a = o.value
                                }
                                var s = a;
                                if (this.sequenceMatches(1, s.input))return this.applyLookupList(s.lookupRecords)
                            }
                            break;
                        case 2:
                            if (-1 === this.coverageIndex(t.coverage))return !1;
                            if (-1 === (e = this.getClassID(this.glyphIterator.cur.id, t.classDef)))return !1;
                            n = t.classSet[e];
                            for (var u = n, l = Array.isArray(u), c = 0, u = l ? u : it(u); ;) {
                                var f;
                                if (l) {
                                    if (c >= u.length)break;
                                    f = u[c++]
                                } else {
                                    if (c = u.next(), c.done)break;
                                    f = c.value
                                }
                                var h = f;
                                if (this.classSequenceMatches(1, h.classes, t.classDef))return this.applyLookupList(h.lookupRecords)
                            }
                            break;
                        case 3:
                            if (this.coverageSequenceMatches(0, t.coverages))return this.applyLookupList(t.lookupRecords)
                    }
                    return !1
                }, t.prototype.applyChainingContext = function (t) {
                    switch (t.version) {
                        case 1:
                            var e = this.coverageIndex(t.coverage);
                            if (-1 === e)return !1;
                            for (var n = t.chainRuleSets[e], r = n, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                                var a;
                                if (i) {
                                    if (o >= r.length)break;
                                    a = r[o++]
                                } else {
                                    if (o = r.next(), o.done)break;
                                    a = o.value
                                }
                                var s = a;
                                if (this.sequenceMatches(-s.backtrack.length, s.backtrack) && this.sequenceMatches(1, s.input) && this.sequenceMatches(1 + s.input.length, s.lookahead))return this.applyLookupList(s.lookupRecords)
                            }
                            break;
                        case 2:
                            if (-1 === this.coverageIndex(t.coverage))return !1;
                            e = this.getClassID(this.glyphIterator.cur.id, t.inputClassDef);
                            var u = t.chainClassSet[e];
                            if (!u)return !1;
                            for (var l = u, c = Array.isArray(l), f = 0, l = c ? l : it(l); ;) {
                                var h;
                                if (c) {
                                    if (f >= l.length)break;
                                    h = l[f++]
                                } else {
                                    if (f = l.next(), f.done)break;
                                    h = f.value
                                }
                                var p = h;
                                if (this.classSequenceMatches(-p.backtrack.length, p.backtrack, t.backtrackClassDef) && this.classSequenceMatches(1, p.input, t.inputClassDef) && this.classSequenceMatches(1 + p.input.length, p.lookahead, t.lookaheadClassDef))return this.applyLookupList(p.lookupRecords)
                            }
                            break;
                        case 3:
                            if (this.coverageSequenceMatches(-t.backtrackGlyphCount, t.backtrackCoverage) && this.coverageSequenceMatches(0, t.inputCoverage) && this.coverageSequenceMatches(t.inputGlyphCount, t.lookaheadCoverage))return this.applyLookupList(t.lookupRecords)
                    }
                    return !1
                }, t
            }()), $o = function () {
                function t(e, n) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [], i = arguments[3];
                    if (lt(this, t), this._font = e, this.codePoints = r, this.id = n, this.features = {}, Array.isArray(i))for (var o = 0; o < i.length; o++) {
                        var a = i[o];
                        this.features[a] = !0
                    } else"object" === (void 0 === i ? "undefined" : st(i)) && vt(this.features, i);
                    this.ligatureID = null, this.ligatureComponent = null, this.isLigated = !1, this.cursiveAttachment = null, this.markAttachment = null, this.shaperInfo = null, this.substituted = !1, this.isMultiplied = !1
                }

                return t.prototype.copy = function () {
                    return new t(this._font, this.id, this.codePoints, this.features)
                }, ct(t, [{
                    key: "id", get: function () {
                        return this._id
                    }, set: function (t) {
                        this._id = t, this.substituted = !0;
                        var e = this._font.GDEF;
                        if (e && e.glyphClassDef) {
                            var n = Qo.prototype.getClassID(t, e.glyphClassDef);
                            this.isBase = 1 === n, this.isLigature = 2 === n, this.isMark = 3 === n, this.markAttachmentType = e.markAttachClassDef ? Qo.prototype.getClassID(t, e.markAttachClassDef) : 0
                        } else this.isMark = this.codePoints.every(xt.isMark), this.isBase = !this.isMark, this.isLigature = this.codePoints.length > 1, this.markAttachmentType = 0
                    }
                }]), t
            }(), ta = (Po = Ao = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.planFeatures = function (t) {
                    t.add(["ljmo", "vjmo", "tjmo"], !1)
                }, e.assignFeatures = function (t, e) {
                    for (var n = 0, r = 0; r < e.length;) {
                        var i = void 0, o = e[r], a = o.codePoints[0], s = k(a), u = Ba[n][s];
                        switch (i = u[0], n = u[1], i) {
                            case Ea:
                                t.font.hasGlyphForCodePoint(a) || (r = C(e, r, t.font));
                                break;
                            case Ia:
                                r = A(e, r, t.font);
                                break;
                            case Ta:
                                E(e, r, t.font);
                                break;
                            case Oa:
                                r = I(e, r, t.font)
                        }
                        r++
                    }
                }, e
            }(jo), Ao.zeroMarkWidths = "NONE", Po), ea = 44032, na = 55204 - ea + 1, ra = 4352, ia = 4449, oa = 4519, aa = 21, sa = 28, ua = ra + 19 - 1, la = ia + aa - 1, ca = oa + sa - 1, fa = 9676, ha = function (t) {
                return 4352 <= t && t <= 4447 || 43360 <= t && t <= 43388
            }, pa = function (t) {
                return 4448 <= t && t <= 4519 || 55216 <= t && t <= 55238
            }, da = function (t) {
                return 4520 <= t && t <= 4607 || 55243 <= t && t <= 55291
            }, ga = function (t) {
                return 12334 <= t && t <= 12335
            }, ya = function (t) {
                return ea <= t && t <= 55204
            }, va = function (t) {
                return t - ea < na && (t - ea) % sa == 0
            }, ba = function (t) {
                return ra <= t && t <= ua
            }, ma = function (t) {
                return ia <= t && t <= la
            }, wa = function (t) {
                return oa + 1 && 1 <= t && t <= ca
            }, xa = 0, _a = 1, ka = 2, Sa = 3, Ca = 4, Aa = 5, Pa = 6, Ea = 1, Ia = 2, Ta = 4, Oa = 5, Ba = [[[0, 0], [0, 1], [0, 0], [0, 0], [Ea, 2], [Ea, 3], [Oa, 0]], [[0, 0], [0, 1], [Ia, 2], [0, 0], [Ea, 2], [Ea, 3], [Oa, 0]], [[0, 0], [0, 1], [0, 0], [Ia, 3], [Ea, 2], [Ea, 3], [Ta, 0]], [[0, 0], [0, 1], [0, 0], [0, 0], [Ea, 2], [Ea, 3], [Ta, 0]]], La = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]], Ma = [!1, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !1, !1, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0], Ra = [[], ["broken_cluster"], ["consonant_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["symbol_cluster"], [], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], ["consonant_syllable"], ["vowel_syllable"], ["standalone_cluster"]], Fa = {
                stateTable: La, accepting: Ma, tags: Ra
            }, za = ["O", "IND", "S", "GB", "B", "FM", "CGJ", "VMAbv", "VMPst", "VAbv", "VPst", "CMBlw", "VPre", "VBlw", "H", "VMBlw", "CMAbv", "MBlw", "CS", "R", "SUB", "MPst", "MPre", "FAbv", "FPst", "FBlw", "SMAbv", "SMBlw", "VMPre", "ZWNJ", "ZWJ", "WJ", "VS", "N", "HN", "MAbv"], Da = {
                2507: [2503, 2494],
                2508: [2503, 2519],
                2888: [2887, 2902],
                2891: [2887, 2878],
                2892: [2887, 2903],
                3018: [3014, 3006],
                3019: [3015, 3006],
                3020: [3014, 3031],
                3144: [3142, 3158],
                3264: [3263, 3285],
                3271: [3270, 3285],
                3272: [3270, 3286],
                3274: [3270, 3266],
                3275: [3270, 3266, 3285],
                3402: [3398, 3390],
                3403: [3399, 3390],
                3404: [3398, 3415],
                3546: [3545, 3530],
                3548: [3545, 3535],
                3549: [3545, 3535, 3530],
                3550: [3545, 3551],
                3635: [3661, 3634],
                3763: [3789, 3762],
                3955: [3953, 3954],
                3957: [3953, 3956],
                3958: [4018, 3968],
                3959: [4018, 3953, 3968],
                3960: [4019, 3968],
                3961: [4019, 3953, 3968],
                3969: [3953, 3968],
                6971: [6970, 6965],
                6973: [6972, 6965],
                6976: [6974, 6965],
                6977: [6975, 6965],
                6979: [6978, 6965],
                69934: [69937, 69927],
                69935: [69938, 69927],
                70475: [70471, 70462],
                70476: [70471, 70487],
                70843: [70841, 70842],
                70844: [70841, 70832],
                70846: [70841, 70845],
                71098: [71096, 71087],
                71099: [71097, 71087]
            }, Na = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 2, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]], Ua = [!1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0], Wa = [[], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["virama_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["number_joiner_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["numeral_cluster"]], ja = {
                categories: za,
                decompositions: Da,
                stateTable: Na,
                accepting: Ua,
                tags: Wa
            }, Ga = {
                X: 1,
                C: 2,
                V: 4,
                N: 8,
                H: 16,
                ZWNJ: 32,
                ZWJ: 64,
                M: 128,
                SM: 256,
                VD: 512,
                A: 1024,
                Placeholder: 2048,
                Dotted_Circle: 4096,
                RS: 8192,
                Coeng: 16384,
                Repha: 32768,
                Ra: 65536,
                CM: 1 << 17,
                Symbol: 1 << 18
            }, Va = {
                Start: 1,
                Ra_To_Become_Reph: 2,
                Pre_M: 4,
                Pre_C: 8,
                Base_C: 16,
                After_Main: 32,
                Above_C: 64,
                Before_Sub: 128,
                Below_C: 256,
                After_Sub: 512,
                Before_Post: 1024,
                Post_C: 2048,
                After_Post: 4096,
                Final_C: 8192,
                SMVD: 16384,
                End: 32768
            }, Ha = Ga.C | Ga.Ra | Ga.CM | Ga.V | Ga.Placeholder | Ga.Dotted_Circle, qa = Ga.ZWJ | Ga.ZWNJ, Za = Ga.H | Ga.Coeng, Ya = {
                Default: {
                    hasOldSpec: !1,
                    virama: 0,
                    basePos: "Last",
                    rephPos: Va.Before_Post,
                    rephMode: "Implicit",
                    blwfMode: "Pre_And_Post"
                },
                Devanagari: {
                    hasOldSpec: !0,
                    virama: 2381,
                    basePos: "Last",
                    rephPos: Va.Before_Post,
                    rephMode: "Implicit",
                    blwfMode: "Pre_And_Post"
                },
                Bengali: {
                    hasOldSpec: !0,
                    virama: 2509,
                    basePos: "Last",
                    rephPos: Va.After_Sub,
                    rephMode: "Implicit",
                    blwfMode: "Pre_And_Post"
                },
                Gurmukhi: {
                    hasOldSpec: !0,
                    virama: 2637,
                    basePos: "Last",
                    rephPos: Va.Before_Sub,
                    rephMode: "Implicit",
                    blwfMode: "Pre_And_Post"
                },
                Gujarati: {
                    hasOldSpec: !0,
                    virama: 2765,
                    basePos: "Last",
                    rephPos: Va.Before_Post,
                    rephMode: "Implicit",
                    blwfMode: "Pre_And_Post"
                },
                Oriya: {
                    hasOldSpec: !0,
                    virama: 2893,
                    basePos: "Last",
                    rephPos: Va.After_Main,
                    rephMode: "Implicit",
                    blwfMode: "Pre_And_Post"
                },
                Tamil: {
                    hasOldSpec: !0,
                    virama: 3021,
                    basePos: "Last",
                    rephPos: Va.After_Post,
                    rephMode: "Implicit",
                    blwfMode: "Pre_And_Post"
                },
                Telugu: {
                    hasOldSpec: !0,
                    virama: 3149,
                    basePos: "Last",
                    rephPos: Va.After_Post,
                    rephMode: "Explicit",
                    blwfMode: "Post_Only"
                },
                Kannada: {
                    hasOldSpec: !0,
                    virama: 3277,
                    basePos: "Last",
                    rephPos: Va.After_Post,
                    rephMode: "Implicit",
                    blwfMode: "Post_Only"
                },
                Malayalam: {
                    hasOldSpec: !0,
                    virama: 3405,
                    basePos: "Last",
                    rephPos: Va.After_Main,
                    rephMode: "Log_Repha",
                    blwfMode: "Pre_And_Post"
                },
                Khmer: {
                    hasOldSpec: !1,
                    virama: 6098,
                    basePos: "First",
                    rephPos: Va.Ra_To_Become_Reph,
                    rephMode: "Vis_Repha",
                    blwfMode: "Pre_And_Post"
                }
            }, Xa = {
                6078: [6081, 6078],
                6079: [6081, 6079],
                6080: [6081, 6080],
                6084: [6081, 6084],
                6085: [6081, 6085]
            }, Ka = ja.decompositions, Ja = new _t(e("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", "base64")), Qa = new kt(Fa), $a = (Io = Eo = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.planFeatures = function (t) {
                    t.addStage(B), t.addStage(["locl", "ccmp"]), t.addStage(D), t.addStage("nukt"), t.addStage("akhn"), t.addStage("rphf", !1), t.addStage("rkrf"), t.addStage("pref", !1), t.addStage("blwf", !1), t.addStage("abvf", !1), t.addStage("half", !1), t.addStage("pstf", !1), t.addStage("vatu"), t.addStage("cjct"), t.addStage("cfar", !1), t.addStage(N), t.addStage({
                        local: ["init"],
                        global: ["pres", "abvs", "blws", "psts", "haln", "dist", "abvm", "blwm", "calt", "clig"]
                    }), t.unicodeScript = p(t.script), t.indicConfig = Ya[t.unicodeScript] || Ya.Default, t.isOldSpec = t.indicConfig.hasOldSpec && "2" !== t.script[t.script.length - 1]
                }, e.assignFeatures = function (t, e) {
                    for (var n = e.length - 1; n >= 0; n--)!function (n) {
                        var r = e[n].codePoints[0], i = Xa[r] || Ka[r];
                        if (i) {
                            var o = i.map(function (r) {
                                var i = t.font.glyphForCodePoint(r);
                                return new $o(t.font, i.id, [r], e[n].features)
                            });
                            e.splice.apply(e, [n, 1].concat(o))
                        }
                    }(n)
                }, e
            }(jo), Eo.zeroMarkWidths = "NONE", Io), ts = function t(e, n, r, i) {
                lt(this, t), this.category = e, this.position = n, this.syllableType = r, this.syllable = i
            }, es = ja.categories, ns = ja.decompositions, rs = new _t(e("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", "base64")), is = new kt(ja), os = (Oo = To = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.planFeatures = function (t) {
                    t.addStage(j), t.addStage(["locl", "ccmp", "nukt", "akhn"]), t.addStage(G), t.addStage(["rphf"], !1), t.addStage(V), t.addStage(G), t.addStage(["pref"]), t.addStage(H), t.addStage(["rkrf", "abvf", "blwf", "half", "pstf", "vatu", "cjct"]), t.addStage(q), t.addStage(["abvs", "blws", "pres", "psts", "dist", "abvm", "blwm"])
                }, e.assignFeatures = function (t, e) {
                    for (var n = e.length - 1; n >= 0; n--)!function (n) {
                        var r = e[n].codePoints[0];
                        if (ns[r]) {
                            var i = ns[r].map(function (r) {
                                var i = t.font.glyphForCodePoint(r);
                                return new $o(t.font, i.id, [r], e[n].features)
                            });
                            e.splice.apply(e, [n, 1].concat(i))
                        }
                    }(n)
                }, e
            }(jo), To.zeroMarkWidths = "BEFORE_GPOS", Oo), as = function t(e, n, r) {
                lt(this, t), this.category = e, this.syllableType = n, this.syllable = r
            }, ss = {
                arab: Xo,
                mong: Xo,
                syrc: Xo,
                "nko ": Xo,
                phag: Xo,
                mand: Xo,
                mani: Xo,
                phlp: Xo,
                hang: ta,
                bng2: $a,
                beng: $a,
                dev2: $a,
                deva: $a,
                gjr2: $a,
                gujr: $a,
                guru: $a,
                gur2: $a,
                knda: $a,
                knd2: $a,
                mlm2: $a,
                mlym: $a,
                ory2: $a,
                orya: $a,
                taml: $a,
                tml2: $a,
                telu: $a,
                tel2: $a,
                khmr: $a,
                bali: os,
                batk: os,
                brah: os,
                bugi: os,
                buhd: os,
                cakm: os,
                cham: os,
                dupl: os,
                egyp: os,
                gran: os,
                hano: os,
                java: os,
                kthi: os,
                kali: os,
                khar: os,
                khoj: os,
                sind: os,
                lepc: os,
                limb: os,
                mahj: os,
                mtei: os,
                modi: os,
                hmng: os,
                rjng: os,
                saur: os,
                shrd: os,
                sidd: os,
                sinh: os,
                sund: os,
                sylo: os,
                tglg: os,
                tagb: os,
                tale: os,
                lana: os,
                tavt: os,
                takr: os,
                tibt: os,
                tfng: os,
                tirh: os,
                latn: jo,
                DFLT: jo
            }, us = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.prototype.applyLookup = function (t, e) {
                    var n = this;
                    switch (t) {
                        case 1:
                            var r = this.coverageIndex(e.coverage);
                            if (-1 === r)return !1;
                            var i = this.glyphIterator.cur;
                            switch (e.version) {
                                case 1:
                                    i.id = i.id + e.deltaGlyphID & 65535;
                                    break;
                                case 2:
                                    i.id = e.substitute.get(r)
                            }
                            return !0;
                        case 2:
                            var o = this.coverageIndex(e.coverage);
                            if (-1 !== o) {
                                var a, s = e.sequences.get(o);
                                this.glyphIterator.cur.id = s[0], this.glyphIterator.cur.ligatureComponent = 0;
                                var u = this.glyphIterator.cur.features, l = this.glyphIterator.cur, c = s.slice(1).map(function (t, e) {
                                    var r = new $o(n.font, t, void 0, u);
                                    return r.shaperInfo = l.shaperInfo, r.isLigated = l.isLigated, r.ligatureComponent = e + 1, r.substituted = !0, r.isMultiplied = !0, r
                                });
                                return (a = this.glyphs).splice.apply(a, [this.glyphIterator.index + 1, 0].concat(c)), !0
                            }
                            return !1;
                        case 3:
                            var f = this.coverageIndex(e.coverage);
                            if (-1 !== f) {
                                return this.glyphIterator.cur.id = e.alternateSet.get(f)[0], !0
                            }
                            return !1;
                        case 4:
                            var h = this.coverageIndex(e.coverage);
                            if (-1 === h)return !1;
                            for (var p = e.ligatureSets.get(h), d = Array.isArray(p), g = 0, p = d ? p : it(p); ;) {
                                var y;
                                if (d) {
                                    if (g >= p.length)break;
                                    y = p[g++]
                                } else {
                                    if (g = p.next(), g.done)break;
                                    y = g.value
                                }
                                var v = y, b = this.sequenceMatchIndices(1, v.components);
                                if (b) {
                                    for (var m = this.glyphIterator.cur, w = m.codePoints.slice(), x = b, _ = Array.isArray(x), k = 0, x = _ ? x : it(x); ;) {
                                        var S;
                                        if (_) {
                                            if (k >= x.length)break;
                                            S = x[k++]
                                        } else {
                                            if (k = x.next(), k.done)break;
                                            S = k.value
                                        }
                                        var C = S;
                                        w.push.apply(w, this.glyphs[C].codePoints)
                                    }
                                    var A = new $o(this.font, v.glyph, w, m.features);
                                    A.shaperInfo = m.shaperInfo, A.isLigated = !0, A.substituted = !0;
                                    for (var P = m.isMark, E = 0; E < b.length && P; E++)P = this.glyphs[b[E]].isMark;
                                    A.ligatureID = P ? null : this.ligatureID++;
                                    for (var I = m.ligatureID, T = m.codePoints.length, O = T, B = this.glyphIterator.index + 1, L = b, M = Array.isArray(L), R = 0, L = M ? L : it(L); ;) {
                                        var F;
                                        if (M) {
                                            if (R >= L.length)break;
                                            F = L[R++]
                                        } else {
                                            if (R = L.next(), R.done)break;
                                            F = R.value
                                        }
                                        var z = F;
                                        if (P)B = z; else for (; B < z;) {
                                            var D = O - T + Math.min(this.glyphs[B].ligatureComponent || 1, T);
                                            this.glyphs[B].ligatureID = A.ligatureID, this.glyphs[B].ligatureComponent = D, B++
                                        }
                                        I = this.glyphs[B].ligatureID, T = this.glyphs[B].codePoints.length, O += T, B++
                                    }
                                    if (I && !P)for (var N = B; N < this.glyphs.length && this.glyphs[N].ligatureID === I; N++) {
                                        var D = O - T + Math.min(this.glyphs[N].ligatureComponent || 1, T);
                                        this.glyphs[N].ligatureComponent = D
                                    }
                                    for (var U = b.length - 1; U >= 0; U--)this.glyphs.splice(b[U], 1);
                                    return this.glyphs[this.glyphIterator.index] = A, !0
                                }
                            }
                            return !1;
                        case 5:
                            return this.applyContext(e);
                        case 6:
                            return this.applyChainingContext(e);
                        case 7:
                            return this.applyLookup(e.lookupType, e.extension);
                        default:
                            throw new Error("GSUB lookupType " + t + " is not supported")
                    }
                }, e
            }(Qo), ls = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.prototype.applyPositionValue = function (t, e) {
                    var n = this.positions[this.glyphIterator.peekIndex(t)];
                    null != e.xAdvance && (n.xAdvance += e.xAdvance), null != e.yAdvance && (n.yAdvance += e.yAdvance), null != e.xPlacement && (n.xOffset += e.xPlacement), null != e.yPlacement && (n.yOffset += e.yPlacement);
                    var r = this.font._variationProcessor, i = this.font.GDEF && this.font.GDEF.itemVariationStore;
                    r && i && (e.xPlaDevice && (n.xOffset += r.getDelta(i, e.xPlaDevice.a, e.xPlaDevice.b)), e.yPlaDevice && (n.yOffset += r.getDelta(i, e.yPlaDevice.a, e.yPlaDevice.b)), e.xAdvDevice && (n.xAdvance += r.getDelta(i, e.xAdvDevice.a, e.xAdvDevice.b)), e.yAdvDevice && (n.yAdvance += r.getDelta(i, e.yAdvDevice.a, e.yAdvDevice.b)))
                }, e.prototype.applyLookup = function (t, e) {
                    switch (t) {
                        case 1:
                            var n = this.coverageIndex(e.coverage);
                            if (-1 === n)return !1;
                            switch (e.version) {
                                case 1:
                                    this.applyPositionValue(0, e.value);
                                    break;
                                case 2:
                                    this.applyPositionValue(0, e.values.get(n))
                            }
                            return !0;
                        case 2:
                            var r = this.glyphIterator.peek();
                            if (!r)return !1;
                            var i = this.coverageIndex(e.coverage);
                            if (-1 === i)return !1;
                            switch (e.version) {
                                case 1:
                                    for (var o = e.pairSets.get(i), a = o, s = Array.isArray(a), u = 0, a = s ? a : it(a); ;) {
                                        var l;
                                        if (s) {
                                            if (u >= a.length)break;
                                            l = a[u++]
                                        } else {
                                            if (u = a.next(), u.done)break;
                                            l = u.value
                                        }
                                        var c = l;
                                        if (c.secondGlyph === r.id)return this.applyPositionValue(0, c.value1), this.applyPositionValue(1, c.value2), !0
                                    }
                                    return !1;
                                case 2:
                                    var f = this.getClassID(this.glyphIterator.cur.id, e.classDef1), h = this.getClassID(r.id, e.classDef2);
                                    if (-1 === f || -1 === h)return !1;
                                    var p = e.classRecords.get(f).get(h);
                                    return this.applyPositionValue(0, p.value1), this.applyPositionValue(1, p.value2), !0
                            }
                        case 3:
                            var d = this.glyphIterator.peekIndex(), g = this.glyphs[d];
                            if (!g)return !1;
                            var y = e.entryExitRecords[this.coverageIndex(e.coverage)];
                            if (!y || !y.exitAnchor)return !1;
                            var v = e.entryExitRecords[this.coverageIndex(e.coverage, g.id)];
                            if (!v || !v.entryAnchor)return !1;
                            var b = this.getAnchor(v.entryAnchor), m = this.getAnchor(y.exitAnchor), w = this.positions[this.glyphIterator.index], x = this.positions[d];
                            switch (this.direction) {
                                case"ltr":
                                    w.xAdvance = m.x + w.xOffset;
                                    var _ = b.x + x.xOffset;
                                    x.xAdvance -= _, x.xOffset -= _;
                                    break;
                                case"rtl":
                                    _ = m.x + w.xOffset, w.xAdvance -= _, w.xOffset -= _, x.xAdvance = b.x + x.xOffset
                            }
                            return this.glyphIterator.flags.rightToLeft ? (this.glyphIterator.cur.cursiveAttachment = d, w.yOffset = b.y - m.y) : (g.cursiveAttachment = this.glyphIterator.index, w.yOffset = m.y - b.y), !0;
                        case 4:
                            var k = this.coverageIndex(e.markCoverage);
                            if (-1 === k)return !1;
                            for (var S = this.glyphIterator.index; --S >= 0 && (this.glyphs[S].isMark || this.glyphs[S].ligatureComponent > 0););
                            if (S < 0)return !1;
                            var C = this.coverageIndex(e.baseCoverage, this.glyphs[S].id);
                            if (-1 === C)return !1;
                            var A = e.markArray[k], P = e.baseArray[C][A.class];
                            return this.applyAnchor(A, P, S), !0;
                        case 5:
                            var E = this.coverageIndex(e.markCoverage);
                            if (-1 === E)return !1;
                            for (var I = this.glyphIterator.index; --I >= 0 && this.glyphs[I].isMark;);
                            if (I < 0)return !1;
                            var T = this.coverageIndex(e.ligatureCoverage, this.glyphs[I].id);
                            if (-1 === T)return !1;
                            var O = e.ligatureArray[T], B = this.glyphIterator.cur, L = this.glyphs[I], M = L.ligatureID && L.ligatureID === B.ligatureID && B.ligatureComponent > 0 ? Math.min(B.ligatureComponent, L.codePoints.length) - 1 : L.codePoints.length - 1, R = e.markArray[E], F = O[M][R.class];
                            return this.applyAnchor(R, F, I), !0;
                        case 6:
                            var z = this.coverageIndex(e.mark1Coverage);
                            if (-1 === z)return !1;
                            var D = this.glyphIterator.peekIndex(-1), N = this.glyphs[D];
                            if (!N || !N.isMark)return !1;
                            var U = this.glyphIterator.cur, W = !1;
                            if (U.ligatureID === N.ligatureID ? U.ligatureID ? U.ligatureComponent === N.ligatureComponent && (W = !0) : W = !0 : (U.ligatureID && !U.ligatureComponent || N.ligatureID && !N.ligatureComponent) && (W = !0), !W)return !1;
                            var j = this.coverageIndex(e.mark2Coverage, N.id);
                            if (-1 === j)return !1;
                            var G = e.mark1Array[z], V = e.mark2Array[j][G.class];
                            return this.applyAnchor(G, V, D), !0;
                        case 7:
                            return this.applyContext(e);
                        case 8:
                            return this.applyChainingContext(e);
                        case 9:
                            return this.applyLookup(e.lookupType, e.extension);
                        default:
                            throw new Error("Unsupported GPOS table: " + t)
                    }
                }, e.prototype.applyAnchor = function (t, e, n) {
                    var r = this.getAnchor(e), i = this.getAnchor(t.markAnchor), o = (this.positions[n], this.positions[this.glyphIterator.index]);
                    o.xOffset = r.x - i.x, o.yOffset = r.y - i.y, this.glyphIterator.cur.markAttachment = n
                }, e.prototype.getAnchor = function (t) {
                    var e = t.xCoordinate, n = t.yCoordinate, r = this.font._variationProcessor, i = this.font.GDEF && this.font.GDEF.itemVariationStore;
                    return r && i && (t.xDeviceTable && (e += r.getDelta(i, t.xDeviceTable.a, t.xDeviceTable.b)), t.yDeviceTable && (n += r.getDelta(i, t.yDeviceTable.a, t.yDeviceTable.b))), {
                        x: e,
                        y: n
                    }
                }, e.prototype.applyFeatures = function (e, n, r) {
                    t.prototype.applyFeatures.call(this, e, n, r);
                    for (var i = 0; i < this.glyphs.length; i++)this.fixCursiveAttachment(i);
                    this.fixMarkAttachment()
                }, e.prototype.fixCursiveAttachment = function (t) {
                    var e = this.glyphs[t];
                    if (null != e.cursiveAttachment) {
                        var n = e.cursiveAttachment;
                        e.cursiveAttachment = null, this.fixCursiveAttachment(n), this.positions[t].yOffset += this.positions[n].yOffset
                    }
                }, e.prototype.fixMarkAttachment = function () {
                    for (var t = 0; t < this.glyphs.length; t++) {
                        var e = this.glyphs[t];
                        if (null != e.markAttachment) {
                            var n = e.markAttachment;
                            if (this.positions[t].xOffset += this.positions[n].xOffset, this.positions[t].yOffset += this.positions[n].yOffset, "ltr" === this.direction)for (var r = n; r < t; r++)this.positions[t].xOffset -= this.positions[r].xAdvance, this.positions[t].yOffset -= this.positions[r].yAdvance; else for (var i = n + 1; i < t + 1; i++)this.positions[t].xOffset += this.positions[i].xAdvance, this.positions[t].yOffset += this.positions[i].yAdvance
                        }
                    }
                }, e
            }(Qo), cs = function () {
                function t(e) {
                    lt(this, t), this.font = e, this.glyphInfos = null, this.plan = null, this.GSUBProcessor = null, this.GPOSProcessor = null, this.fallbackPosition = !0, e.GSUB && (this.GSUBProcessor = new us(e, e.GSUB)), e.GPOS && (this.GPOSProcessor = new ls(e, e.GPOS))
                }

                return t.prototype.setup = function (t) {
                    var e = this;
                    this.glyphInfos = t.glyphs.map(function (t) {
                        return new $o(e.font, t.id, [].concat(t.codePoints))
                    });
                    var n = null;
                    this.GPOSProcessor && (n = this.GPOSProcessor.selectScript(t.script, t.language, t.direction)), this.GSUBProcessor && (n = this.GSUBProcessor.selectScript(t.script, t.language, t.direction)), this.shaper = K(n), this.plan = new Fo(this.font, n, t.direction), this.shaper.plan(this.plan, this.glyphInfos, t.features);
                    for (var r in this.plan.allFeatures)t.features[r] = !0
                }, t.prototype.substitute = function (t) {
                    var e = this;
                    this.GSUBProcessor && (this.plan.process(this.GSUBProcessor, this.glyphInfos), t.glyphs = this.glyphInfos.map(function (t) {
                        return e.font.getGlyph(t.id, t.codePoints)
                    }))
                }, t.prototype.position = function (t) {
                    return "BEFORE_GPOS" === this.shaper.zeroMarkWidths && this.zeroMarkAdvances(t.positions), this.GPOSProcessor && this.plan.process(this.GPOSProcessor, this.glyphInfos, t.positions), "AFTER_GPOS" === this.shaper.zeroMarkWidths && this.zeroMarkAdvances(t.positions), "rtl" === t.direction && (t.glyphs.reverse(), t.positions.reverse()), this.GPOSProcessor && this.GPOSProcessor.features
                }, t.prototype.zeroMarkAdvances = function (t) {
                    for (var e = 0; e < this.glyphInfos.length; e++)this.glyphInfos[e].isMark && (t[e].xAdvance = 0, t[e].yAdvance = 0)
                }, t.prototype.cleanup = function () {
                    this.glyphInfos = null, this.plan = null, this.shaper = null
                }, t.prototype.getAvailableFeatures = function (t, e) {
                    var n = [];
                    return this.GSUBProcessor && (this.GSUBProcessor.selectScript(t, e), n.push.apply(n, at(this.GSUBProcessor.features))), this.GPOSProcessor && (this.GPOSProcessor.selectScript(t, e), n.push.apply(n, at(this.GPOSProcessor.features))), n
                }, t
            }(), fs = function () {
                function t(e) {
                    lt(this, t), this.font = e, this.unicodeLayoutEngine = null, this.kernProcessor = null, this.font.morx ? this.engine = new Ro(this.font) : (this.font.GSUB || this.font.GPOS) && (this.engine = new cs(this.font))
                }

                return t.prototype.layout = function (t, e, n, r, i) {
                    if ("string" == typeof e && (i = r, r = n, n = e, e = []), "string" == typeof t) {
                        null == n && (n = d(t));
                        var o = this.font.glyphsForString(t)
                    } else {
                        if (null == n) {
                            for (var a = [], s = t, u = Array.isArray(s), l = 0, s = u ? s : it(s); ;) {
                                var c;
                                if (u) {
                                    if (l >= s.length)break;
                                    c = s[l++]
                                } else {
                                    if (l = s.next(), l.done)break;
                                    c = l.value
                                }
                                var f = c;
                                a.push.apply(a, f.codePoints)
                            }
                            n = g(a)
                        }
                        var o = t
                    }
                    var h = new ho(o, e, n, r, i);
                    return 0 === o.length ? (h.positions = [], h) : (this.engine && this.engine.setup && this.engine.setup(h), this.substitute(h), this.position(h), this.hideDefaultIgnorables(h.glyphs, h.positions), this.engine && this.engine.cleanup && this.engine.cleanup(), h)
                }, t.prototype.substitute = function (t) {
                    this.engine && this.engine.substitute && this.engine.substitute(t)
                }, t.prototype.position = function (t) {
                    t.positions = t.glyphs.map(function (t) {
                        return new po(t.advanceWidth)
                    });
                    var e = null;
                    this.engine && this.engine.position && (e = this.engine.position(t)), e || this.engine && !this.engine.fallbackPosition || (this.unicodeLayoutEngine || (this.unicodeLayoutEngine = new to(this.font)), this.unicodeLayoutEngine.positionGlyphs(t.glyphs, t.positions)), e && e.kern || !1 === t.features.kern || !this.font.kern || (this.kernProcessor || (this.kernProcessor = new $i(this.font)), this.kernProcessor.process(t.glyphs, t.positions), t.features.kern = !0)
                }, t.prototype.hideDefaultIgnorables = function (t, e) {
                    for (var n = this.font.glyphForCodePoint(32), r = 0; r < t.length; r++)this.isDefaultIgnorable(t[r].codePoints[0]) && (t[r] = n, e[r].xAdvance = 0, e[r].yAdvance = 0)
                },
                    t.prototype.isDefaultIgnorable = function (t) {
                        var e = t >> 16;
                        if (0 === e)switch (t >> 8) {
                            case 0:
                                return 173 === t;
                            case 3:
                                return 847 === t;
                            case 6:
                                return 1564 === t;
                            case 23:
                                return 6068 <= t && t <= 6069;
                            case 24:
                                return 6155 <= t && t <= 6158;
                            case 32:
                                return 8203 <= t && t <= 8207 || 8234 <= t && t <= 8238 || 8288 <= t && t <= 8303;
                            case 254:
                                return 65024 <= t && t <= 65039 || 65279 === t;
                            case 255:
                                return 65520 <= t && t <= 65528;
                            default:
                                return !1
                        } else switch (e) {
                            case 1:
                                return 113824 <= t && t <= 113827 || 119155 <= t && t <= 119162;
                            case 14:
                                return 917504 <= t && t <= 921599;
                            default:
                                return !1
                        }
                    }, t.prototype.getAvailableFeatures = function (t, e) {
                    var n = [];
                    return this.engine && n.push.apply(n, this.engine.getAvailableFeatures(t, e)), this.font.kern && -1 === n.indexOf("kern") && n.push("kern"), n
                }, t.prototype.stringsForGlyph = function (t) {
                    for (var e = new wt, n = this.font._cmapProcessor.codePointsForGlyph(t), r = n, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a;
                        e.add(bt(s))
                    }
                    if (this.engine && this.engine.stringsForGlyph)for (var u = this.engine.stringsForGlyph(t), l = Array.isArray(u), c = 0, u = l ? u : it(u); ;) {
                        var f;
                        if (l) {
                            if (c >= u.length)break;
                            f = u[c++]
                        } else {
                            if (c = u.next(), c.done)break;
                            f = c.value
                        }
                        var h = f;
                        e.add(h)
                    }
                    return mt(e)
                }, t
            }(), hs = {
                moveTo: "M",
                lineTo: "L",
                quadraticCurveTo: "Q",
                bezierCurveTo: "C",
                closePath: "Z"
            }, ps = function () {
                function t() {
                    lt(this, t), this.commands = [], this._bbox = null, this._cbox = null
                }

                return t.prototype.toFunction = function () {
                    var t = this.commands.map(function (t) {
                        return "  ctx." + t.command + "(" + t.args.join(", ") + ");"
                    });
                    return new Function("ctx", t.join("\n"))
                }, t.prototype.toSVG = function () {
                    return this.commands.map(function (t) {
                        var e = t.args.map(function (t) {
                            return Math.round(100 * t) / 100
                        });
                        return "" + hs[t.command] + e.join(" ")
                    }).join("")
                }, t.prototype.mapPoints = function (e) {
                    for (var n = new t, r = this.commands, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        for (var s = a, u = [], l = 0; l < s.args.length; l += 2) {
                            var c = e(s.args[l], s.args[l + 1]), f = c[0], h = c[1];
                            u.push(f, h)
                        }
                        n[s.command].apply(n, u)
                    }
                    return n
                }, t.prototype.transform = function (t, e, n, r, i, o) {
                    return this.mapPoints(function (a, s) {
                        return a = t * a + n * s + i, s = e * a + r * s + o, [a, s]
                    })
                }, t.prototype.translate = function (t, e) {
                    return this.transform(1, 0, 0, 1, t, e)
                }, t.prototype.rotate = function (t) {
                    var e = Math.cos(t), n = Math.sin(t);
                    return this.transform(e, n, -n, e, 0, 0)
                }, t.prototype.scale = function (t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t;
                    return this.transform(t, 0, 0, e, 0, 0)
                }, ct(t, [{
                    key: "cbox", get: function () {
                        if (!this._cbox) {
                            for (var t = new eo, e = this.commands, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                                var i;
                                if (n) {
                                    if (r >= e.length)break;
                                    i = e[r++]
                                } else {
                                    if (r = e.next(), r.done)break;
                                    i = r.value
                                }
                                for (var o = i, a = 0; a < o.args.length; a += 2)t.addPoint(o.args[a], o.args[a + 1])
                            }
                            this._cbox = ot(t)
                        }
                        return this._cbox
                    }
                }, {
                    key: "bbox", get: function () {
                        if (this._bbox)return this._bbox;
                        for (var t = new eo, e = 0, n = 0, r = function (t) {
                            return Math.pow(1 - t, 3) * _[A] + 3 * Math.pow(1 - t, 2) * t * k[A] + 3 * (1 - t) * Math.pow(t, 2) * S[A] + Math.pow(t, 3) * C[A]
                        }, i = this.commands, o = Array.isArray(i), a = 0, i = o ? i : it(i); ;) {
                            var s;
                            if (o) {
                                if (a >= i.length)break;
                                s = i[a++]
                            } else {
                                if (a = i.next(), a.done)break;
                                s = a.value
                            }
                            var u = s;
                            switch (u.command) {
                                case"moveTo":
                                case"lineTo":
                                    var l = u.args, c = l[0], f = l[1];
                                    t.addPoint(c, f), e = c, n = f;
                                    break;
                                case"quadraticCurveTo":
                                case"bezierCurveTo":
                                    if ("quadraticCurveTo" === u.command)var h = u.args, p = h[0], d = h[1], g = h[2], y = h[3], v = e + 2 / 3 * (p - e), b = n + 2 / 3 * (d - n), m = g + 2 / 3 * (p - g), w = y + 2 / 3 * (d - y); else var x = u.args, v = x[0], b = x[1], m = x[2], w = x[3], g = x[4], y = x[5];
                                    t.addPoint(g, y);
                                    for (var _ = [e, n], k = [v, b], S = [m, w], C = [g, y], A = 0; A <= 1; A++) {
                                        var P = 6 * _[A] - 12 * k[A] + 6 * S[A], E = -3 * _[A] + 9 * k[A] - 9 * S[A] + 3 * C[A];
                                        if (u = 3 * k[A] - 3 * _[A], 0 !== E) {
                                            var I = Math.pow(P, 2) - 4 * u * E;
                                            if (!(I < 0)) {
                                                var T = (-P + Math.sqrt(I)) / (2 * E);
                                                0 < T && T < 1 && (0 === A ? t.addPoint(r(T), t.maxY) : 1 === A && t.addPoint(t.maxX, r(T)));
                                                var O = (-P - Math.sqrt(I)) / (2 * E);
                                                0 < O && O < 1 && (0 === A ? t.addPoint(r(O), t.maxY) : 1 === A && t.addPoint(t.maxX, r(O)))
                                            }
                                        } else {
                                            if (0 === P)continue;
                                            var B = -u / P;
                                            0 < B && B < 1 && (0 === A ? t.addPoint(r(B), t.maxY) : 1 === A && t.addPoint(t.maxX, r(B)))
                                        }
                                    }
                                    e = g, n = y
                            }
                        }
                        return this._bbox = ot(t)
                    }
                }]), t
            }(), ds = ["moveTo", "lineTo", "quadraticCurveTo", "bezierCurveTo", "closePath"], gs = 0; gs < ds.length; gs++)!function () {
                var t = ds[gs];
                ps.prototype[t] = function () {
                    for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)n[r] = arguments[r];
                    return this._bbox = this._cbox = null, this.commands.push({command: t, args: n}), this
                }
            }();
            var ys, vs, bs = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"], ms = (ys = function () {
                function t(e, n, r) {
                    lt(this, t), this.id = e, this.codePoints = n, this._font = r, this.isMark = this.codePoints.every(xt.isMark), this.isLigature = this.codePoints.length > 1
                }

                return t.prototype._getPath = function () {
                    return new ps
                }, t.prototype._getCBox = function () {
                    return this.path.cbox
                }, t.prototype._getBBox = function () {
                    return this.path.bbox
                }, t.prototype._getTableMetrics = function (t) {
                    if (this.id < t.metrics.length)return t.metrics.get(this.id);
                    var e = t.metrics.get(t.metrics.length - 1);
                    return {advance: e ? e.advance : 0, bearing: t.bearings.get(this.id - t.metrics.length) || 0}
                }, t.prototype._getMetrics = function (t) {
                    if (this._metrics)return this._metrics;
                    var e = this._getTableMetrics(this._font.hmtx), n = e.advance, r = e.bearing;
                    if (this._font.vmtx)var i = this._getTableMetrics(this._font.vmtx), o = i.advance, a = i.bearing; else {
                        var s = void 0;
                        if (void 0 !== t && null !== t || (t = this.cbox), (s = this._font["OS/2"]) && s.version > 0)var o = Math.abs(s.typoAscender - s.typoDescender), a = s.typoAscender - t.maxY; else var u = this._font.hhea, o = Math.abs(u.ascent - u.descent), a = u.ascent - t.maxY
                    }
                    return this._font._variationProcessor && this._font.HVAR && (n += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR)), this._metrics = {
                        advanceWidth: n,
                        advanceHeight: o,
                        leftBearing: r,
                        topBearing: a
                    }
                }, t.prototype.getScaledPath = function (t) {
                    var e = 1 / this._font.unitsPerEm * t;
                    return this.path.scale(e)
                }, t.prototype._getName = function () {
                    var t = this._font.post;
                    if (!t)return null;
                    switch (t.version) {
                        case 1:
                            return bs[this.id];
                        case 2:
                            var e = t.glyphNameIndex[this.id];
                            return e < bs.length ? bs[e] : t.names[e - bs.length];
                        case 2.5:
                            return bs[this.id + t.offsets[this.id]];
                        case 4:
                            return String.fromCharCode(t.map[this.id])
                    }
                }, t.prototype.render = function (t, e) {
                    t.save();
                    var n = 1 / this._font.head.unitsPerEm * e;
                    t.scale(n, n), this.path.toFunction()(t), t.fill(), t.restore()
                }, ct(t, [{
                    key: "cbox", get: function () {
                        return this._getCBox()
                    }
                }, {
                    key: "bbox", get: function () {
                        return this._getBBox()
                    }
                }, {
                    key: "path", get: function () {
                        return this._getPath()
                    }
                }, {
                    key: "advanceWidth", get: function () {
                        return this._getMetrics().advanceWidth
                    }
                }, {
                    key: "advanceHeight", get: function () {
                        return this._getMetrics().advanceHeight
                    }
                }, {
                    key: "ligatureCaretPositions", get: function () {
                    }
                }, {
                    key: "name", get: function () {
                        return this._getName()
                    }
                }]), t
            }(), J(ys.prototype, "cbox", [o], rt(ys.prototype, "cbox"), ys.prototype), J(ys.prototype, "bbox", [o], rt(ys.prototype, "bbox"), ys.prototype), J(ys.prototype, "path", [o], rt(ys.prototype, "path"), ys.prototype), J(ys.prototype, "advanceWidth", [o], rt(ys.prototype, "advanceWidth"), ys.prototype), J(ys.prototype, "advanceHeight", [o], rt(ys.prototype, "advanceHeight"), ys.prototype), J(ys.prototype, "name", [o], rt(ys.prototype, "name"), ys.prototype), ys), ws = new nt.Struct({
                numberOfContours: nt.int16,
                xMin: nt.int16,
                yMin: nt.int16,
                xMax: nt.int16,
                yMax: nt.int16
            }), xs = function () {
                function t(e, n) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
                    lt(this, t), this.onCurve = e, this.endContour = n, this.x = r, this.y = i
                }

                return t.prototype.copy = function () {
                    return new t(this.onCurve, this.endContour, this.x, this.y)
                }, t
            }(), _s = function t(e, n, r) {
                lt(this, t), this.glyphID = e, this.dx = n, this.dy = r, this.pos = 0, this.scaleX = this.scaleY = 1, this.scale01 = this.scale10 = 0
            }, ks = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.prototype._getCBox = function (t) {
                    if (this._font._variationProcessor && !t)return this.path.cbox;
                    var e = this._font._getTableStream("glyf");
                    e.pos += this._font.loca.offsets[this.id];
                    var n = ws.decode(e), r = new eo(n.xMin, n.yMin, n.xMax, n.yMax);
                    return ot(r)
                }, e.prototype._parseGlyphCoord = function (t, e, n, r) {
                    if (n) {
                        var i = t.readUInt8();
                        r || (i = -i), i += e
                    } else if (r)var i = e; else var i = e + t.readInt16BE();
                    return i
                }, e.prototype._decode = function () {
                    var t = this._font.loca.offsets[this.id];
                    if (t === this._font.loca.offsets[this.id + 1])return null;
                    var e = this._font._getTableStream("glyf");
                    e.pos += t;
                    var n = e.pos, r = ws.decode(e);
                    return r.numberOfContours > 0 ? this._decodeSimple(r, e) : r.numberOfContours < 0 && this._decodeComposite(r, e, n), r
                }, e.prototype._decodeSimple = function (t, e) {
                    t.points = [];
                    var n = new nt.Array(nt.uint16, t.numberOfContours).decode(e);
                    t.instructions = new nt.Array(nt.uint8, nt.uint16).decode(e);
                    for (var r = [], i = n[n.length - 1] + 1; r.length < i;) {
                        var o = e.readUInt8();
                        if (r.push(o), 8 & o)for (var a = e.readUInt8(), s = 0; s < a; s++)r.push(o)
                    }
                    for (var u = 0; u < r.length; u++) {
                        var o = r[u], l = new xs(!!(1 & o), n.indexOf(u) >= 0, 0, 0);
                        t.points.push(l)
                    }
                    for (var c = 0, u = 0; u < r.length; u++) {
                        var o = r[u];
                        t.points[u].x = c = this._parseGlyphCoord(e, c, 2 & o, 16 & o)
                    }
                    for (var f = 0, u = 0; u < r.length; u++) {
                        var o = r[u];
                        t.points[u].y = f = this._parseGlyphCoord(e, f, 4 & o, 32 & o)
                    }
                    if (this._font._variationProcessor) {
                        var h = t.points.slice();
                        h.push.apply(h, this._getPhantomPoints(t)), this._font._variationProcessor.transformPoints(this.id, h), t.phantomPoints = h.slice(-4)
                    }
                }, e.prototype._decodeComposite = function (t, e) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    t.components = [];
                    for (var r = !1, i = 32; 32 & i;) {
                        i = e.readUInt16BE();
                        var o = e.pos - n, a = e.readUInt16BE();
                        if (r || (r = 0 != (256 & i)), 1 & i)var s = e.readInt16BE(), u = e.readInt16BE(); else var s = e.readInt8(), u = e.readInt8();
                        var l = new _s(a, s, u);
                        l.pos = o, 8 & i ? l.scaleX = l.scaleY = (e.readUInt8() << 24 | e.readUInt8() << 16) / 1073741824 : 64 & i ? (l.scaleX = (e.readUInt8() << 24 | e.readUInt8() << 16) / 1073741824, l.scaleY = (e.readUInt8() << 24 | e.readUInt8() << 16) / 1073741824) : 128 & i && (l.scaleX = (e.readUInt8() << 24 | e.readUInt8() << 16) / 1073741824, l.scale01 = (e.readUInt8() << 24 | e.readUInt8() << 16) / 1073741824, l.scale10 = (e.readUInt8() << 24 | e.readUInt8() << 16) / 1073741824, l.scaleY = (e.readUInt8() << 24 | e.readUInt8() << 16) / 1073741824), t.components.push(l)
                    }
                    if (this._font._variationProcessor) {
                        for (var c = [], f = 0; f < t.components.length; f++) {
                            var l = t.components[f];
                            c.push(new xs(!0, !0, l.dx, l.dy))
                        }
                        c.push.apply(c, this._getPhantomPoints(t)), this._font._variationProcessor.transformPoints(this.id, c), t.phantomPoints = c.splice(-4, 4);
                        for (var h = 0; h < c.length; h++) {
                            var p = c[h];
                            t.components[h].dx = p.x, t.components[h].dy = p.y
                        }
                    }
                    return r
                }, e.prototype._getPhantomPoints = function (t) {
                    var e = this._getCBox(!0);
                    null == this._metrics && (this._metrics = ms.prototype._getMetrics.call(this, e));
                    var n = this._metrics, r = n.advanceWidth, i = n.advanceHeight, o = n.leftBearing, a = n.topBearing;
                    return [new xs(!1, !0, t.xMin - o, 0), new xs(!1, !0, t.xMin - o + r, 0), new xs(!1, !0, 0, t.yMax + a), new xs(!1, !0, 0, t.yMax + a + i)]
                }, e.prototype._getContours = function () {
                    var t = this._decode();
                    if (!t)return [];
                    var e = [];
                    if (t.numberOfContours < 0)for (var n = t.components, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                        var o;
                        if (r) {
                            if (i >= n.length)break;
                            o = n[i++]
                        } else {
                            if (i = n.next(), i.done)break;
                            o = i.value
                        }
                        for (var a = o, s = this._font.getGlyph(a.glyphID)._getContours(), u = 0; u < s.length; u++)for (var l = s[u], c = 0; c < l.length; c++) {
                            var f = l[c], h = f.x * a.scaleX + f.y * a.scale01 + a.dx, p = f.y * a.scaleY + f.x * a.scale10 + a.dy;
                            e.push(new xs(f.onCurve, f.endContour, h, p))
                        }
                    } else e = t.points || [];
                    t.phantomPoints && !this._font.directory.tables.HVAR && (this._metrics.advanceWidth = t.phantomPoints[1].x - t.phantomPoints[0].x, this._metrics.advanceHeight = t.phantomPoints[3].y - t.phantomPoints[2].y, this._metrics.leftBearing = t.xMin - t.phantomPoints[0].x, this._metrics.topBearing = t.phantomPoints[2].y - t.yMax);
                    for (var d = [], g = [], y = 0; y < e.length; y++) {
                        var v = e[y];
                        g.push(v), v.endContour && (d.push(g), g = [])
                    }
                    return d
                }, e.prototype._getMetrics = function () {
                    if (this._metrics)return this._metrics;
                    var e = this._getCBox(!0);
                    return t.prototype._getMetrics.call(this, e), this._font._variationProcessor && !this._font.HVAR && this.path, this._metrics
                }, e.prototype._getPath = function () {
                    for (var t = this._getContours(), e = new ps, n = 0; n < t.length; n++) {
                        var r = t[n], i = r[0], o = r[r.length - 1], a = 0;
                        if (i.onCurve) {
                            var s = null;
                            a = 1
                        } else {
                            i = o.onCurve ? o : new xs(!1, !1, (i.x + o.x) / 2, (i.y + o.y) / 2);
                            var s = i
                        }
                        e.moveTo(i.x, i.y);
                        for (var u = a; u < r.length; u++) {
                            var l = r[u], c = 0 === u ? i : r[u - 1];
                            if (c.onCurve && l.onCurve)e.lineTo(l.x, l.y); else if (c.onCurve && !l.onCurve)var s = l; else if (c.onCurve || l.onCurve) {
                                if (c.onCurve || !l.onCurve)throw new Error("Unknown TTF path state");
                                e.quadraticCurveTo(s.x, s.y, l.x, l.y);
                                var s = null
                            } else {
                                var f = (c.x + l.x) / 2, h = (c.y + l.y) / 2;
                                e.quadraticCurveTo(c.x, c.y, f, h);
                                var s = l
                            }
                        }
                        s && e.quadraticCurveTo(s.x, s.y, i.x, i.y), e.closePath()
                    }
                    return e
                }, e
            }(ms), Ss = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.prototype._getName = function () {
                    return this._font.CFF2 ? t.prototype._getName.call(this) : this._font["CFF "].getGlyphName(this.id)
                }, e.prototype.bias = function (t) {
                    return t.length < 1240 ? 107 : t.length < 33900 ? 1131 : 32768
                }, e.prototype._getPath = function () {
                    function t() {
                        null == c && (c = u.shift() + m.nominalWidthX)
                    }

                    function e() {
                        return u.length % 2 != 0 && t(), f += u.length >> 1, u.length = 0
                    }

                    function n(t, e) {
                        y && s.closePath(), s.moveTo(t, e), y = !0
                    }

                    var r = this._font.stream, i = (r.pos, this._font.CFF2 || this._font["CFF "]), o = i.topDict.CharStrings[this.id], a = o.offset + o.length;
                    r.pos = o.offset;
                    var s = new ps, u = [], l = [], c = null, f = 0, h = 0, p = 0, d = void 0, g = void 0, y = !1;
                    this._usedGsubrs = d = {}, this._usedSubrs = g = {};
                    var v = i.globalSubrIndex || [], b = this.bias(v), m = i.privateDictForGlyph(this.id), w = m.Subrs || [], x = this.bias(w), _ = i.topDict.vstore && i.topDict.vstore.itemVariationStore, k = m.vsindex, S = this._font._variationProcessor;
                    return function o() {
                        for (; r.pos < a;) {
                            var c = r.readUInt8();
                            if (c < 32)switch (c) {
                                case 1:
                                case 3:
                                case 18:
                                case 23:
                                    e();
                                    break;
                                case 4:
                                    u.length > 1 && t(), p += u.shift(), n(h, p);
                                    break;
                                case 5:
                                    for (; u.length >= 2;)h += u.shift(), p += u.shift(), s.lineTo(h, p);
                                    break;
                                case 6:
                                case 7:
                                    for (var m = 6 === c; u.length >= 1;)m ? h += u.shift() : p += u.shift(), s.lineTo(h, p), m = !m;
                                    break;
                                case 8:
                                    for (; u.length > 0;) {
                                        var C = h + u.shift(), A = p + u.shift(), P = C + u.shift(), E = A + u.shift();
                                        h = P + u.shift(), p = E + u.shift(), s.bezierCurveTo(C, A, P, E, h, p)
                                    }
                                    break;
                                case 10:
                                    var I = u.pop() + x, T = w[I];
                                    if (T) {
                                        g[I] = !0;
                                        var O = r.pos, B = a;
                                        r.pos = T.offset, a = T.offset + T.length, o(), r.pos = O, a = B
                                    }
                                    break;
                                case 11:
                                    if (i.version >= 2)break;
                                    return;
                                case 14:
                                    if (i.version >= 2)break;
                                    u.length > 0 && t(), y && (s.closePath(), y = !1);
                                    break;
                                case 15:
                                    if (i.version < 2)throw new Error("vsindex operator not supported in CFF v1");
                                    k = u.pop();
                                    break;
                                case 16:
                                    if (i.version < 2)throw new Error("blend operator not supported in CFF v1");
                                    if (!S)throw new Error("blend operator in non-variation font");
                                    for (var L = S.getBlendVector(_, k), M = u.pop(), R = M * L.length, F = u.length - R, z = F - M, D = 0; D < M; D++) {
                                        for (var N = u[z + D], U = 0; U < L.length; U++)N += L[U] * u[F++];
                                        u[z + D] = N
                                    }
                                    for (; R--;)u.pop();
                                    break;
                                case 19:
                                case 20:
                                    e(), r.pos += f + 7 >> 3;
                                    break;
                                case 21:
                                    u.length > 2 && t(), h += u.shift(), p += u.shift(), n(h, p);
                                    break;
                                case 22:
                                    u.length > 1 && t(), h += u.shift(), n(h, p);
                                    break;
                                case 24:
                                    for (; u.length >= 8;) {
                                        var C = h + u.shift(), A = p + u.shift(), P = C + u.shift(), E = A + u.shift();
                                        h = P + u.shift(), p = E + u.shift(), s.bezierCurveTo(C, A, P, E, h, p)
                                    }
                                    h += u.shift(), p += u.shift(), s.lineTo(h, p);
                                    break;
                                case 25:
                                    for (; u.length >= 8;)h += u.shift(), p += u.shift(), s.lineTo(h, p);
                                    var C = h + u.shift(), A = p + u.shift(), P = C + u.shift(), E = A + u.shift();
                                    h = P + u.shift(), p = E + u.shift(), s.bezierCurveTo(C, A, P, E, h, p);
                                    break;
                                case 26:
                                    for (u.length % 2 && (h += u.shift()); u.length >= 4;)C = h, A = p + u.shift(), P = C + u.shift(), E = A + u.shift(), h = P, p = E + u.shift(), s.bezierCurveTo(C, A, P, E, h, p);
                                    break;
                                case 27:
                                    for (u.length % 2 && (p += u.shift()); u.length >= 4;)C = h + u.shift(), A = p, P = C + u.shift(), E = A + u.shift(), h = P + u.shift(), p = E, s.bezierCurveTo(C, A, P, E, h, p);
                                    break;
                                case 28:
                                    u.push(r.readInt16BE());
                                    break;
                                case 29:
                                    if (I = u.pop() + b, T = v[I]) {
                                        d[I] = !0;
                                        var O = r.pos, B = a;
                                        r.pos = T.offset, a = T.offset + T.length, o(), r.pos = O, a = B
                                    }
                                    break;
                                case 30:
                                case 31:
                                    for (m = 31 === c; u.length >= 4;)m ? (C = h + u.shift(), A = p, P = C + u.shift(), E = A + u.shift(), p = E + u.shift(), h = P + (1 === u.length ? u.shift() : 0)) : (C = h, A = p + u.shift(), P = C + u.shift(), E = A + u.shift(), h = P + u.shift(), p = E + (1 === u.length ? u.shift() : 0)), s.bezierCurveTo(C, A, P, E, h, p), m = !m;
                                    break;
                                case 12:
                                    switch (c = r.readUInt8()) {
                                        case 3:
                                            var W = u.pop(), j = u.pop();
                                            u.push(W && j ? 1 : 0);
                                            break;
                                        case 4:
                                            W = u.pop(), j = u.pop(), u.push(W || j ? 1 : 0);
                                            break;
                                        case 5:
                                            W = u.pop(), u.push(W ? 0 : 1);
                                            break;
                                        case 9:
                                            W = u.pop(), u.push(Math.abs(W));
                                            break;
                                        case 10:
                                            W = u.pop(), j = u.pop(), u.push(W + j);
                                            break;
                                        case 11:
                                            W = u.pop(), j = u.pop(), u.push(W - j);
                                            break;
                                        case 12:
                                            W = u.pop(), j = u.pop(), u.push(W / j);
                                            break;
                                        case 14:
                                            W = u.pop(), u.push(-W);
                                            break;
                                        case 15:
                                            W = u.pop(), j = u.pop(), u.push(W === j ? 1 : 0);
                                            break;
                                        case 18:
                                            u.pop();
                                            break;
                                        case 20:
                                            var G = u.pop(), V = u.pop();
                                            l[V] = G;
                                            break;
                                        case 21:
                                            V = u.pop(), u.push(l[V] || 0);
                                            break;
                                        case 22:
                                            var H = u.pop(), q = u.pop(), Z = u.pop(), Y = u.pop();
                                            u.push(Z <= Y ? H : q);
                                            break;
                                        case 23:
                                            u.push(Math.random());
                                            break;
                                        case 24:
                                            W = u.pop(), j = u.pop(), u.push(W * j);
                                            break;
                                        case 26:
                                            W = u.pop(), u.push(Math.sqrt(W));
                                            break;
                                        case 27:
                                            W = u.pop(), u.push(W, W);
                                            break;
                                        case 28:
                                            W = u.pop(), j = u.pop(), u.push(j, W);
                                            break;
                                        case 29:
                                            V = u.pop(), V < 0 ? V = 0 : V > u.length - 1 && (V = u.length - 1), u.push(u[V]);
                                            break;
                                        case 30:
                                            var X = u.pop(), K = u.pop();
                                            if (K >= 0)for (; K > 0;) {
                                                for (var J = u[X - 1], Q = X - 2; Q >= 0; Q--)u[Q + 1] = u[Q];
                                                u[0] = J, K--
                                            } else for (; K < 0;) {
                                                for (var J = u[0], $ = 0; $ <= X; $++)u[$] = u[$ + 1];
                                                u[X - 1] = J, K++
                                            }
                                            break;
                                        case 34:
                                            C = h + u.shift(), A = p, P = C + u.shift(), E = A + u.shift();
                                            var tt = P + u.shift(), et = E, nt = tt + u.shift(), rt = et, it = nt + u.shift(), ot = rt, at = it + u.shift(), st = ot;
                                            h = at, p = st, s.bezierCurveTo(C, A, P, E, tt, et), s.bezierCurveTo(nt, rt, it, ot, at, st);
                                            break;
                                        case 35:
                                            for (var ut = [], lt = 0; lt <= 5; lt++)h += u.shift(), p += u.shift(), ut.push(h, p);
                                            s.bezierCurveTo.apply(s, ut.slice(0, 6)), s.bezierCurveTo.apply(s, ut.slice(6)), u.shift();
                                            break;
                                        case 36:
                                            C = h + u.shift(), A = p + u.shift(), P = C + u.shift(), E = A + u.shift(), tt = P + u.shift(), et = E, nt = tt + u.shift(), rt = et, it = nt + u.shift(), ot = rt + u.shift(), at = it + u.shift(), st = ot, h = at, p = st, s.bezierCurveTo(C, A, P, E, tt, et), s.bezierCurveTo(nt, rt, it, ot, at, st);
                                            break;
                                        case 37:
                                            var ct = h, ft = p;
                                            ut = [];
                                            for (var ht = 0; ht <= 4; ht++)h += u.shift(), p += u.shift(), ut.push(h, p);
                                            Math.abs(h - ct) > Math.abs(p - ft) ? (h += u.shift(), p = ft) : (h = ct, p += u.shift()), ut.push(h, p), s.bezierCurveTo.apply(s, ut.slice(0, 6)), s.bezierCurveTo.apply(s, ut.slice(6));
                                            break;
                                        default:
                                            throw new Error("Unknown op: 12 " + c)
                                    }
                                    break;
                                default:
                                    throw new Error("Unknown op: " + c)
                            } else if (c < 247)u.push(c - 139); else if (c < 251) {
                                var pt = r.readUInt8();
                                u.push(256 * (c - 247) + pt + 108)
                            } else if (c < 255) {
                                var pt = r.readUInt8();
                                u.push(256 * -(c - 251) - pt - 108)
                            } else u.push(r.readInt32BE() / 65536)
                        }
                    }(), y && s.closePath(), s
                }, e
            }(ms), Cs = new nt.Struct({
                originX: nt.uint16,
                originY: nt.uint16,
                type: new nt.String(4),
                data: new nt.Buffer(function (t) {
                    return t.parent.buflen - t._currentOffset
                })
            }), As = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.prototype.getImageForSize = function (t) {
                    for (var e = 0; e < this._font.sbix.imageTables.length; e++) {
                        var n = this._font.sbix.imageTables[e];
                        if (n.ppem >= t)break
                    }
                    var r = n.imageOffsets, i = r[this.id], o = r[this.id + 1];
                    return i === o ? null : (this._font.stream.pos = i, Cs.decode(this._font.stream, {buflen: o - i}))
                }, e.prototype.render = function (e, n) {
                    var r = this.getImageForSize(n);
                    if (null != r) {
                        var i = n / this._font.unitsPerEm;
                        e.image(r.data, {height: n, x: r.originX, y: (this.bbox.minY - r.originY) * i})
                    }
                    this._font.sbix.flags.renderOutlines && t.prototype.render.call(this, e, n)
                }, e
            }(ks), Ps = function t(e, n) {
                lt(this, t), this.glyph = e, this.color = n
            }, Es = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.prototype._getBBox = function () {
                    for (var t = new eo, e = 0; e < this.layers.length; e++) {
                        var n = this.layers[e], r = n.glyph.bbox;
                        t.addPoint(r.minX, r.minY), t.addPoint(r.maxX, r.maxY)
                    }
                    return t
                }, e.prototype.render = function (t, e) {
                    for (var n = this.layers, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                        var o;
                        if (r) {
                            if (i >= n.length)break;
                            o = n[i++]
                        } else {
                            if (i = n.next(), i.done)break;
                            o = i.value
                        }
                        var a = o, s = a.glyph, u = a.color;
                        t.fillColor([u.red, u.green, u.blue], u.alpha / 255 * 100), s.render(t, e)
                    }
                }, ct(e, [{
                    key: "layers", get: function () {
                        for (var t = this._font.CPAL, e = this._font.COLR, n = 0, r = e.baseGlyphRecord.length - 1; n <= r;) {
                            var i = n + r >> 1, o = e.baseGlyphRecord[i];
                            if (this.id < o.gid)r = i - 1; else {
                                if (!(this.id > o.gid)) {
                                    var a = o;
                                    break
                                }
                                n = i + 1
                            }
                        }
                        if (null == a) {
                            var s = this._font._getBaseGlyph(this.id), u = {red: 0, green: 0, blue: 0, alpha: 255};
                            return [new Ps(s, u)]
                        }
                        for (var l = [], c = a.firstLayerIndex; c < a.firstLayerIndex + a.numLayers; c++) {
                            var o = e.layerRecords[c], u = t.colorRecords[o.paletteIndex], s = this._font._getBaseGlyph(o.gid);
                            l.push(new Ps(s, u))
                        }
                        return l
                    }
                }]), e
            }(ms), Is = function () {
                function t(e, n) {
                    lt(this, t), this.font = e, this.normalizedCoords = this.normalizeCoords(n), this.blendVectors = new ft
                }

                return t.prototype.normalizeCoords = function (t) {
                    for (var e = [], n = 0; n < this.font.fvar.axis.length; n++) {
                        var r = this.font.fvar.axis[n];
                        t[n] < r.defaultValue ? e.push((t[n] - r.defaultValue + St) / (r.defaultValue - r.minValue + St)) : e.push((t[n] - r.defaultValue + St) / (r.maxValue - r.defaultValue + St))
                    }
                    if (this.font.avar)for (var n = 0; n < this.font.avar.segment.length; n++)for (var i = this.font.avar.segment[n], o = 0; o < i.correspondence.length; o++) {
                        var a = i.correspondence[o];
                        if (o >= 1 && e[n] < a.fromCoord) {
                            var s = i.correspondence[o - 1];
                            e[n] = ((e[n] - s.fromCoord) * (a.toCoord - s.toCoord) + St) / (a.fromCoord - s.fromCoord + St) + s.toCoord;
                            break
                        }
                    }
                    return e
                }, t.prototype.transformPoints = function (t, e) {
                    if (this.font.fvar && this.font.gvar) {
                        var n = this.font.gvar;
                        if (!(t >= n.glyphCount)) {
                            var r = n.offsets[t];
                            if (r !== n.offsets[t + 1]) {
                                var i = this.font.stream;
                                if (i.pos = r, !(i.pos >= i.length)) {
                                    var o = i.readUInt16BE(), a = r + i.readUInt16BE();
                                    if (32768 & o) {
                                        var s = i.pos;
                                        i.pos = a;
                                        var u = this.decodePoints();
                                        a = i.pos, i.pos = s
                                    }
                                    var l = e.map(function (t) {
                                        return t.copy()
                                    });
                                    o &= 4095;
                                    for (var c = 0; c < o; c++) {
                                        var f = i.readUInt16BE(), h = i.readUInt16BE();
                                        if (32768 & h)for (var p = [], d = 0; d < n.axisCount; d++)p.push(i.readInt16BE() / 16384); else {
                                            if ((4095 & h) >= n.globalCoordCount)throw new Error("Invalid gvar table");
                                            var p = n.globalCoords[4095 & h]
                                        }
                                        if (16384 & h) {
                                            for (var g = [], y = 0; y < n.axisCount; y++)g.push(i.readInt16BE() / 16384);
                                            for (var v = [], b = 0; b < n.axisCount; b++)v.push(i.readInt16BE() / 16384)
                                        }
                                        var m = this.tupleFactor(h, p, g, v);
                                        if (0 !== m) {
                                            var s = i.pos;
                                            if (i.pos = a, 8192 & h)var w = this.decodePoints(); else var w = u;
                                            var x = 0 === w.length ? e.length : w.length, _ = this.decodeDeltas(x), k = this.decodeDeltas(x);
                                            if (0 === w.length)for (var S = 0; S < e.length; S++) {
                                                var C = e[S];
                                                C.x += Math.round(_[S] * m), C.y += Math.round(k[S] * m)
                                            } else {
                                                for (var A = l.map(function (t) {
                                                    return t.copy()
                                                }), P = e.map(function () {
                                                    return !1
                                                }), E = 0; E < w.length; E++) {
                                                    var I = w[E];
                                                    if (I < e.length) {
                                                        var T = A[I];
                                                        P[I] = !0, T.x += Math.round(_[E] * m), T.y += Math.round(k[E] * m)
                                                    }
                                                }
                                                this.interpolateMissingDeltas(A, l, P);
                                                for (var O = 0; O < e.length; O++) {
                                                    var B = A[O].x - l[O].x, L = A[O].y - l[O].y;
                                                    e[O].x += B, e[O].y += L
                                                }
                                            }
                                            a += f, i.pos = s
                                        } else a += f
                                    }
                                }
                            }
                        }
                    }
                }, t.prototype.decodePoints = function () {
                    var t = this.font.stream, e = t.readUInt8();
                    128 & e && (e = (127 & e) << 8 | t.readUInt8());
                    for (var n = new Uint16Array(e), r = 0, i = 0; r < e;)for (var o = t.readUInt8(), a = 1 + (127 & o), s = 128 & o ? t.readUInt16 : t.readUInt8, u = 0; u < a && r < e; u++)i += s.call(t), n[r++] = i;
                    return n
                }, t.prototype.decodeDeltas = function (t) {
                    for (var e = this.font.stream, n = 0, r = new Int16Array(t); n < t;) {
                        var i = e.readUInt8(), o = 1 + (63 & i);
                        if (128 & i)n += o; else for (var a = 64 & i ? e.readInt16BE : e.readInt8, s = 0; s < o && n < t; s++)r[n++] = a.call(e)
                    }
                    return r
                }, t.prototype.tupleFactor = function (t, e, n, r) {
                    for (var i = this.normalizedCoords, o = this.font.gvar, a = 1, s = 0; s < o.axisCount; s++)if (0 !== e[s]) {
                        if (0 === i[s])return 0;
                        if (0 == (16384 & t)) {
                            if (i[s] < Math.min(0, e[s]) || i[s] > Math.max(0, e[s]))return 0;
                            a = (a * i[s] + St) / (e[s] + St)
                        } else {
                            if (i[s] < n[s] || i[s] > r[s])return 0;
                            a = i[s] < e[s] ? a * (i[s] - n[s] + St) / (e[s] - n[s] + St) : a * (r[s] - i[s] + St) / (r[s] - e[s] + St)
                        }
                    }
                    return a
                }, t.prototype.interpolateMissingDeltas = function (t, e, n) {
                    if (0 !== t.length)for (var r = 0; r < t.length;) {
                        for (var i = r, o = r, a = t[o]; !a.endContour;)a = t[++o];
                        for (; r <= o && !n[r];)r++;
                        if (!(r > o)) {
                            var s = r, u = r;
                            for (r++; r <= o;)n[r] && (this.deltaInterpolate(u + 1, r - 1, u, r, e, t), u = r), r++;
                            u === s ? this.deltaShift(i, o, u, e, t) : (this.deltaInterpolate(u + 1, o, u, s, e, t), s > 0 && this.deltaInterpolate(i, s - 1, u, s, e, t)), r = o + 1
                        }
                    }
                }, t.prototype.deltaInterpolate = function (t, e, n, r, i, o) {
                    if (!(t > e))for (var a = ["x", "y"], s = 0; s < a.length; s++) {
                        var u = a[s];
                        if (i[n][u] > i[r][u]) {
                            var l = n;
                            n = r, r = l
                        }
                        var c = i[n][u], f = i[r][u], h = o[n][u], p = o[r][u];
                        if (c !== f || h === p)for (var d = c === f ? 0 : (p - h) / (f - c), g = t; g <= e; g++) {
                            var y = i[g][u];
                            y <= c ? y += h - c : y >= f ? y += p - f : y = h + (y - c) * d, o[g][u] = y
                        }
                    }
                }, t.prototype.deltaShift = function (t, e, n, r, i) {
                    var o = i[n].x - r[n].x, a = i[n].y - r[n].y;
                    if (0 !== o || 0 !== a)for (var s = t; s <= e; s++)s !== n && (i[s].x += o, i[s].y += a)
                }, t.prototype.getAdvanceAdjustment = function (t, e) {
                    var n = void 0, r = void 0;
                    if (e.advanceWidthMapping) {
                        var i = t;
                        i >= e.advanceWidthMapping.mapCount && (i = e.advanceWidthMapping.mapCount - 1);
                        var o = (e.advanceWidthMapping.entryFormat, e.advanceWidthMapping.mapData[i]);
                        n = o.outerIndex, r = o.innerIndex
                    } else n = 0, r = t;
                    return this.getDelta(e.itemVariationStore, n, r)
                }, t.prototype.getDelta = function (t, e, n) {
                    if (e >= t.itemVariationData.length)return 0;
                    var r = t.itemVariationData[e];
                    if (n >= r.deltaSets.length)return 0;
                    for (var i = r.deltaSets[n], o = this.getBlendVector(t, e), a = 0, s = 0; s < r.regionIndexCount; s++)a += i.deltas[s] * o[s];
                    return a
                }, t.prototype.getBlendVector = function (t, e) {
                    var n = t.itemVariationData[e];
                    if (this.blendVectors.has(n))return this.blendVectors.get(n);
                    for (var r = this.normalizedCoords, i = [], o = 0; o < n.regionIndexCount; o++) {
                        for (var a = 1, s = n.regionIndexes[o], u = t.variationRegionList.variationRegions[s], l = 0; l < u.length; l++) {
                            var c = u[l], f = void 0;
                            f = c.startCoord > c.peakCoord || c.peakCoord > c.endCoord ? 1 : c.startCoord < 0 && c.endCoord > 0 && 0 !== c.peakCoord ? 1 : 0 === c.peakCoord ? 1 : r[l] < c.startCoord || r[l] > c.endCoord ? 0 : r[l] === c.peakCoord ? 1 : r[l] < c.peakCoord ? (r[l] - c.startCoord + St) / (c.peakCoord - c.startCoord + St) : (c.endCoord - r[l] + St) / (c.endCoord - c.peakCoord + St), a *= f
                        }
                        i[o] = a
                    }
                    return this.blendVectors.set(n, i), i
                }, t
            }(), Ts = function () {
                function t(e) {
                    lt(this, t), this.font = e, this.glyphs = [], this.mapping = {}, this.includeGlyph(0)
                }

                return t.prototype.includeGlyph = function (t) {
                    return "object" === (void 0 === t ? "undefined" : st(t)) && (t = t.id), null == this.mapping[t] && (this.glyphs.push(t), this.mapping[t] = this.glyphs.length - 1), this.mapping[t]
                }, t.prototype.encodeStream = function () {
                    var t = this, e = new nt.EncodeStream;
                    return r.nextTick(function () {
                        return t.encode(e), e.end()
                    }), e
                }, t
            }(), Os = function () {
                function t() {
                    lt(this, t)
                }

                return t.size = function (t) {
                    return t >= 0 && t <= 255 ? 1 : 2
                }, t.encode = function (t, e) {
                    e >= 0 && e <= 255 ? t.writeUInt8(e) : t.writeInt16BE(e)
                }, t
            }(), Bs = new nt.Struct({
                numberOfContours: nt.int16,
                xMin: nt.int16,
                yMin: nt.int16,
                xMax: nt.int16,
                yMax: nt.int16,
                endPtsOfContours: new nt.Array(nt.uint16, "numberOfContours"),
                instructions: new nt.Array(nt.uint8, nt.uint16),
                flags: new nt.Array(nt.uint8, 0),
                xPoints: new nt.Array(Os, 0),
                yPoints: new nt.Array(Os, 0)
            }), Ls = function () {
                function t() {
                    lt(this, t)
                }

                return t.prototype.encodeSimple = function (t) {
                    for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], n = [], r = [], i = [], o = [], a = 0, s = 0, u = 0, l = 0, c = 0, f = 0; f < t.commands.length; f++) {
                        for (var h = t.commands[f], p = 0; p < h.args.length; p += 2) {
                            var d = h.args[p], g = h.args[p + 1], y = 0;
                            if ("quadraticCurveTo" === h.command && 2 === p) {
                                var v = t.commands[f + 1];
                                if (v && "quadraticCurveTo" === v.command) {
                                    var b = (s + v.args[0]) / 2, m = (u + v.args[1]) / 2;
                                    if (d === b && g === m)continue
                                }
                            }
                            "quadraticCurveTo" === h.command && 0 === p || (y |= 1), y = this._encodePoint(d, s, r, y, 2, 16), y = this._encodePoint(g, u, i, y, 4, 32), y === l && a < 255 ? (o[o.length - 1] |= 8, a++) : (a > 0 && (o.push(a), a = 0), o.push(y), l = y), s = d, u = g, c++
                        }
                        "closePath" === h.command && n.push(c - 1)
                    }
                    t.commands.length > 1 && "closePath" !== t.commands[t.commands.length - 1].command && n.push(c - 1);
                    var w = t.bbox, x = {
                        numberOfContours: n.length,
                        xMin: w.minX,
                        yMin: w.minY,
                        xMax: w.maxX,
                        yMax: w.maxY,
                        endPtsOfContours: n,
                        instructions: e,
                        flags: o,
                        xPoints: r,
                        yPoints: i
                    }, _ = Bs.size(x), k = 4 - _ % 4, S = new nt.EncodeStream(_ + k);
                    return Bs.encode(S, x), 0 !== k && S.fill(0, k), S.buffer
                }, t.prototype._encodePoint = function (t, e, n, r, i, o) {
                    var a = t - e;
                    return t === e ? r |= o : (-255 <= a && a <= 255 && (r |= i, a < 0 ? a = -a : r |= o), n.push(a)), r
                }, t
            }(), Ms = function (t) {
                function n(e) {
                    lt(this, n);
                    var r = ht(this, t.call(this, e));
                    return r.glyphEncoder = new Ls, r
                }

                return pt(n, t), n.prototype._addGlyph = function (t) {
                    var n = this.font.getGlyph(t), r = n._decode(), i = this.font.loca.offsets[t], o = this.font.loca.offsets[t + 1], a = this.font._getTableStream("glyf");
                    a.pos += i;
                    var s = a.readBuffer(o - i);
                    if (r && r.numberOfContours < 0) {
                        s = new e(s);
                        for (var u = r.components, l = Array.isArray(u), c = 0, u = l ? u : it(u); ;) {
                            var f;
                            if (l) {
                                if (c >= u.length)break;
                                f = u[c++]
                            } else {
                                if (c = u.next(), c.done)break;
                                f = c.value
                            }
                            var h = f;
                            t = this.includeGlyph(h.glyphID), s.writeUInt16BE(t, h.pos)
                        }
                    } else r && this.font._variationProcessor && (s = this.glyphEncoder.encodeSimple(n.path, r.instructions));
                    return this.glyf.push(s), this.loca.offsets.push(this.offset), this.hmtx.metrics.push({
                        advance: n.advanceWidth,
                        bearing: n._getMetrics().leftBearing
                    }), this.offset += s.length, this.glyf.length - 1
                }, n.prototype.encode = function (t) {
                    this.glyf = [], this.offset = 0, this.loca = {offsets: []}, this.hmtx = {metrics: [], bearings: []};
                    for (var e = 0; e < this.glyphs.length;)this._addGlyph(this.glyphs[e++]);
                    var n = Ct(this.font.maxp);
                    n.numGlyphs = this.glyf.length, this.loca.offsets.push(this.offset), Zi.loca.preEncode.call(this.loca);
                    var r = Ct(this.font.head);
                    r.indexToLocFormat = this.loca.version;
                    var i = Ct(this.font.hhea);
                    i.numberOfMetrics = this.hmtx.metrics.length, Xi.encode(t, {
                        tables: {
                            head: r,
                            hhea: i,
                            loca: this.loca,
                            maxp: n,
                            "cvt ": this.font["cvt "],
                            prep: this.font.prep,
                            glyf: this.glyf,
                            hmtx: this.hmtx,
                            fpgm: this.font.fpgm
                        }
                    })
                }, n
            }(Ts), Rs = function (t) {
                function n(e) {
                    lt(this, n);
                    var r = ht(this, t.call(this, e));
                    if (r.cff = r.font["CFF "], !r.cff)throw new Error("Not a CFF Font");
                    return r
                }

                return pt(n, t), n.prototype.subsetCharstrings = function () {
                    this.charstrings = [];
                    for (var t = {}, e = this.glyphs, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                        var i;
                        if (n) {
                            if (r >= e.length)break;
                            i = e[r++]
                        } else {
                            if (r = e.next(), r.done)break;
                            i = r.value
                        }
                        var o = i;
                        this.charstrings.push(this.cff.getCharString(o));
                        var a = this.font.getGlyph(o);
                        a.path;
                        for (var s in a._usedGsubrs)t[s] = !0
                    }
                    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, t)
                }, n.prototype.subsetSubrs = function (t, n) {
                    for (var r = [], i = 0; i < t.length; i++) {
                        var o = t[i];
                        n[i] ? (this.cff.stream.pos = o.offset, r.push(this.cff.stream.readBuffer(o.length))) : r.push(new e([11]))
                    }
                    return r
                }, n.prototype.subsetFontdict = function (t) {
                    t.FDArray = [], t.FDSelect = {version: 0, fds: []};
                    for (var e = {}, n = [], r = this.glyphs, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        var s = a, u = this.cff.fdForGlyph(s);
                        if (null != u) {
                            e[u] || (t.FDArray.push(vt({}, this.cff.topDict.FDArray[u])), n.push({})), e[u] = !0,
                                t.FDSelect.fds.push(t.FDArray.length - 1);
                            var l = this.font.getGlyph(s);
                            l.path;
                            for (var c in l._usedSubrs)n[n.length - 1][c] = !0
                        }
                    }
                    for (var f = 0; f < t.FDArray.length; f++) {
                        var h = t.FDArray[f];
                        delete h.FontName, h.Private && h.Private.Subrs && (h.Private = vt({}, h.Private), h.Private.Subrs = this.subsetSubrs(h.Private.Subrs, n[f]))
                    }
                }, n.prototype.createCIDFontdict = function (t) {
                    for (var e = {}, n = this.glyphs, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                        var o;
                        if (r) {
                            if (i >= n.length)break;
                            o = n[i++]
                        } else {
                            if (i = n.next(), i.done)break;
                            o = i.value
                        }
                        var a = o, s = this.font.getGlyph(a);
                        s.path;
                        for (var u in s._usedSubrs)e[u] = !0
                    }
                    var l = vt({}, this.cff.topDict.Private);
                    return l.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, e), t.FDArray = [{Private: l}], t.FDSelect = {
                        version: 3,
                        nRanges: 1,
                        ranges: [{first: 0, fd: 0}],
                        sentinel: this.charstrings.length
                    }
                }, n.prototype.addString = function (t) {
                    return t ? (this.strings || (this.strings = []), this.strings.push(t), ge.length + this.strings.length - 1) : null
                }, n.prototype.encode = function (t) {
                    this.subsetCharstrings();
                    var e = {
                        version: this.charstrings.length > 255 ? 2 : 1,
                        ranges: [{first: 1, nLeft: this.charstrings.length - 2}]
                    }, n = vt({}, this.cff.topDict);
                    n.Private = null, n.charset = e, n.Encoding = null, n.CharStrings = this.charstrings;
                    for (var r = ["version", "Notice", "Copyright", "FullName", "FamilyName", "Weight", "PostScript", "BaseFontName", "FontName"], i = 0; i < r.length; i++) {
                        var o = r[i];
                        n[o] = this.addString(this.cff.string(n[o]))
                    }
                    n.ROS = [this.addString("Adobe"), this.addString("Identity"), 0], n.CIDCount = this.charstrings.length, this.cff.isCIDFont ? this.subsetFontdict(n) : this.createCIDFontdict(n);
                    var a = {
                        version: 1,
                        hdrSize: this.cff.hdrSize,
                        offSize: this.cff.length,
                        header: this.cff.header,
                        nameIndex: [this.cff.postscriptName],
                        topDictIndex: [n],
                        stringIndex: this.strings,
                        globalSubrIndex: this.gsubrs
                    };
                    xn.encode(t, a)
                }, n
            }(Ts), Fs = (vs = function () {
                function t(e) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    lt(this, t), this.stream = e, this.variationCoords = n, this._directoryPos = this.stream.pos, this._tables = {}, this._glyphs = {}, this._decodeDirectory();
                    for (var r in this.directory.tables) {
                        var i = this.directory.tables[r];
                        Zi[r] && i.length > 0 && ut(this, r, {get: this._getTable.bind(this, i)})
                    }
                }

                return t.probe = function (t) {
                    var e = t.toString("ascii", 0, 4);
                    return "true" === e || "OTTO" === e || e === String.fromCharCode(0, 1, 0, 0)
                }, t.prototype._getTable = function (t) {
                    if (!(t.tag in this._tables))try {
                        this._tables[t.tag] = this._decodeTable(t)
                    } catch (t) {
                        Et.logErrors
                    }
                    return this._tables[t.tag]
                }, t.prototype._getTableStream = function (t) {
                    var e = this.directory.tables[t];
                    return e ? (this.stream.pos = e.offset, this.stream) : null
                }, t.prototype._decodeDirectory = function () {
                    return this.directory = Xi.decode(this.stream, {_startOffset: 0})
                }, t.prototype._decodeTable = function (t) {
                    var e = this.stream.pos, n = this._getTableStream(t.tag), r = Zi[t.tag].decode(n, this, t.length);
                    return this.stream.pos = e, r
                }, t.prototype.getName = function (t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "en", n = this.name.records[t];
                    return n ? n[e] : null
                }, t.prototype.hasGlyphForCodePoint = function (t) {
                    return !!this._cmapProcessor.lookup(t)
                }, t.prototype.glyphForCodePoint = function (t) {
                    return this.getGlyph(this._cmapProcessor.lookup(t), [t])
                }, t.prototype.glyphsForString = function (t) {
                    for (var e = [], n = t.length, r = 0, i = -1, o = -1; r <= n;) {
                        var a = 0, s = 0;
                        if (r < n) {
                            if (55296 <= (a = t.charCodeAt(r++)) && a <= 56319 && r < n) {
                                var u = t.charCodeAt(r);
                                56320 <= u && u <= 57343 && (r++, a = ((1023 & a) << 10) + (1023 & u) + 65536)
                            }
                            s = 65024 <= a && a <= 65039 || 917760 <= a && a <= 917999 ? 1 : 0
                        } else r++;
                        0 === o && 1 === s ? e.push(this.getGlyph(this._cmapProcessor.lookup(i, a), [i, a])) : 0 === o && 0 === s && e.push(this.glyphForCodePoint(i)), i = a, o = s
                    }
                    return e
                }, t.prototype.layout = function (t, e, n, r, i) {
                    return this._layoutEngine.layout(t, e, n, r, i)
                }, t.prototype.stringsForGlyph = function (t) {
                    return this._layoutEngine.stringsForGlyph(t)
                }, t.prototype.getAvailableFeatures = function (t, e) {
                    return this._layoutEngine.getAvailableFeatures(t, e)
                }, t.prototype._getBaseGlyph = function (t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                    return this._glyphs[t] || (this.directory.tables.glyf ? this._glyphs[t] = new ks(t, e, this) : (this.directory.tables["CFF "] || this.directory.tables.CFF2) && (this._glyphs[t] = new Ss(t, e, this))), this._glyphs[t] || null
                }, t.prototype.getGlyph = function (t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                    return this._glyphs[t] || (this.directory.tables.sbix ? this._glyphs[t] = new As(t, e, this) : this.directory.tables.COLR && this.directory.tables.CPAL ? this._glyphs[t] = new Es(t, e, this) : this._getBaseGlyph(t, e)), this._glyphs[t] || null
                }, t.prototype.createSubset = function () {
                    return this.directory.tables["CFF "] ? new Rs(this) : new Ms(this)
                }, t.prototype.getVariation = function (e) {
                    if (!this.directory.tables.fvar || !(this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");
                    if ("string" == typeof e && (e = this.namedVariations[e]), "object" !== (void 0 === e ? "undefined" : st(e)))throw new Error("Variation settings must be either a variation name or settings object.");
                    var n = this.fvar.axis.map(function (t, n) {
                        var r = t.axisTag.trim();
                        return r in e ? Math.max(t.minValue, Math.min(t.maxValue, e[r])) : t.defaultValue
                    }), r = new nt.DecodeStream(this.stream.buffer);
                    r.pos = this._directoryPos;
                    var i = new t(r, n);
                    return i._tables = this._tables, i
                }, t.prototype.getFont = function (t) {
                    return this.getVariation(t)
                }, ct(t, [{
                    key: "postscriptName", get: function () {
                        var t = this.name.records.postscriptName;
                        if (t) {
                            return t[at(t)[0]]
                        }
                        return null
                    }
                }, {
                    key: "fullName", get: function () {
                        return this.getName("fullName")
                    }
                }, {
                    key: "familyName", get: function () {
                        return this.getName("fontFamily")
                    }
                }, {
                    key: "subfamilyName", get: function () {
                        return this.getName("fontSubfamily")
                    }
                }, {
                    key: "copyright", get: function () {
                        return this.getName("copyright")
                    }
                }, {
                    key: "version", get: function () {
                        return this.getName("version")
                    }
                }, {
                    key: "ascent", get: function () {
                        return this.hhea.ascent
                    }
                }, {
                    key: "descent", get: function () {
                        return this.hhea.descent
                    }
                }, {
                    key: "lineGap", get: function () {
                        return this.hhea.lineGap
                    }
                }, {
                    key: "underlinePosition", get: function () {
                        return this.post.underlinePosition
                    }
                }, {
                    key: "underlineThickness", get: function () {
                        return this.post.underlineThickness
                    }
                }, {
                    key: "italicAngle", get: function () {
                        return this.post.italicAngle
                    }
                }, {
                    key: "capHeight", get: function () {
                        var t = this["OS/2"];
                        return t ? t.capHeight : this.ascent
                    }
                }, {
                    key: "xHeight", get: function () {
                        var t = this["OS/2"];
                        return t ? t.xHeight : 0
                    }
                }, {
                    key: "numGlyphs", get: function () {
                        return this.maxp.numGlyphs
                    }
                }, {
                    key: "unitsPerEm", get: function () {
                        return this.head.unitsPerEm
                    }
                }, {
                    key: "bbox", get: function () {
                        return ot(new eo(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax))
                    }
                }, {
                    key: "_cmapProcessor", get: function () {
                        return new Qi(this.cmap)
                    }
                }, {
                    key: "characterSet", get: function () {
                        return this._cmapProcessor.getCharacterSet()
                    }
                }, {
                    key: "_layoutEngine", get: function () {
                        return new fs(this)
                    }
                }, {
                    key: "availableFeatures", get: function () {
                        return this._layoutEngine.getAvailableFeatures()
                    }
                }, {
                    key: "variationAxes", get: function () {
                        var t = {};
                        if (!this.fvar)return t;
                        for (var e = this.fvar.axis, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                            var i;
                            if (n) {
                                if (r >= e.length)break;
                                i = e[r++]
                            } else {
                                if (r = e.next(), r.done)break;
                                i = r.value
                            }
                            var o = i;
                            t[o.axisTag.trim()] = {
                                name: o.name.en,
                                min: o.minValue,
                                default: o.defaultValue,
                                max: o.maxValue
                            }
                        }
                        return t
                    }
                }, {
                    key: "namedVariations", get: function () {
                        var t = {};
                        if (!this.fvar)return t;
                        for (var e = this.fvar.instance, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                            var i;
                            if (n) {
                                if (r >= e.length)break;
                                i = e[r++]
                            } else {
                                if (r = e.next(), r.done)break;
                                i = r.value
                            }
                            for (var o = i, a = {}, s = 0; s < this.fvar.axis.length; s++) {
                                a[this.fvar.axis[s].axisTag.trim()] = o.coord[s]
                            }
                            t[o.name.en] = a
                        }
                        return t
                    }
                }, {
                    key: "_variationProcessor", get: function () {
                        if (!this.fvar)return null;
                        var t = this.variationCoords;
                        return t || this.CFF2 ? (t || (t = this.fvar.axis.map(function (t) {
                            return t.defaultValue
                        })), new Is(this, t)) : null
                    }
                }]), t
            }(), Q(vs.prototype, "bbox", [o], rt(vs.prototype, "bbox"), vs.prototype), Q(vs.prototype, "_cmapProcessor", [o], rt(vs.prototype, "_cmapProcessor"), vs.prototype), Q(vs.prototype, "characterSet", [o], rt(vs.prototype, "characterSet"), vs.prototype), Q(vs.prototype, "_layoutEngine", [o], rt(vs.prototype, "_layoutEngine"), vs.prototype), Q(vs.prototype, "variationAxes", [o], rt(vs.prototype, "variationAxes"), vs.prototype), Q(vs.prototype, "namedVariations", [o], rt(vs.prototype, "namedVariations"), vs.prototype), Q(vs.prototype, "_variationProcessor", [o], rt(vs.prototype, "_variationProcessor"), vs.prototype), vs), zs = new nt.Struct({
                tag: new nt.String(4),
                offset: new nt.Pointer(nt.uint32, "void", {type: "global"}),
                compLength: nt.uint32,
                length: nt.uint32,
                origChecksum: nt.uint32
            }), Ds = new nt.Struct({
                tag: new nt.String(4),
                flavor: nt.uint32,
                length: nt.uint32,
                numTables: nt.uint16,
                reserved: new nt.Reserved(nt.uint16),
                totalSfntSize: nt.uint32,
                majorVersion: nt.uint16,
                minorVersion: nt.uint16,
                metaOffset: nt.uint32,
                metaLength: nt.uint32,
                metaOrigLength: nt.uint32,
                privOffset: nt.uint32,
                privLength: nt.uint32,
                tables: new nt.Array(zs, "numTables")
            });
            Ds.process = function () {
                for (var t = {}, e = this.tables, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                    var i;
                    if (n) {
                        if (r >= e.length)break;
                        i = e[r++]
                    } else {
                        if (r = e.next(), r.done)break;
                        i = r.value
                    }
                    var o = i;
                    t[o.tag] = o
                }
                this.tables = t
            };
            var Ns = function (t) {
                function n() {
                    return lt(this, n), ht(this, t.apply(this, arguments))
                }

                return pt(n, t), n.probe = function (t) {
                    return "wOFF" === t.toString("ascii", 0, 4)
                }, n.prototype._decodeDirectory = function () {
                    this.directory = Ds.decode(this.stream, {_startOffset: 0})
                }, n.prototype._getTableStream = function (t) {
                    var n = this.directory.tables[t];
                    if (n) {
                        if (this.stream.pos = n.offset, n.compLength < n.length) {
                            this.stream.pos += 2;
                            var r = new e(n.length), i = At(this.stream.readBuffer(n.compLength - 2), r);
                            return new nt.DecodeStream(i)
                        }
                        return this.stream
                    }
                    return null
                }, n
            }(Fs), Us = function (t) {
                function e() {
                    return lt(this, e), ht(this, t.apply(this, arguments))
                }

                return pt(e, t), e.prototype._decode = function () {
                    return this._font._transformedGlyphs[this.id]
                }, e.prototype._getCBox = function () {
                    return this.path.bbox
                }, e
            }(ks), Ws = {
                decode: function (t) {
                    for (var e = 0, n = [0, 1, 2, 3, 4], r = 0; r < n.length; r++) {
                        var i = t.readUInt8();
                        if (3758096384 & e)throw new Error("Overflow");
                        if (e = e << 7 | 127 & i, 0 == (128 & i))return e
                    }
                    throw new Error("Bad base 128 number")
                }
            }, js = ["cmap", "head", "hhea", "hmtx", "maxp", "name", "OS/2", "post", "cvt ", "fpgm", "glyf", "loca", "prep", "CFF ", "VORG", "EBDT", "EBLC", "gasp", "hdmx", "kern", "LTSH", "PCLT", "VDMX", "vhea", "vmtx", "BASE", "GDEF", "GPOS", "GSUB", "EBSC", "JSTF", "MATH", "CBDT", "CBLC", "COLR", "CPAL", "SVG ", "sbix", "acnt", "avar", "bdat", "bloc", "bsln", "cvar", "fdsc", "feat", "fmtx", "fvar", "gvar", "hsty", "just", "lcar", "mort", "morx", "opbd", "prop", "trak", "Zapf", "Silf", "Glat", "Gloc", "Feat", "Sill"], Gs = new nt.Struct({
                flags: nt.uint8,
                customTag: new nt.Optional(new nt.String(4), function (t) {
                    return 63 == (63 & t.flags)
                }),
                tag: function (t) {
                    return t.customTag || js[63 & t.flags]
                },
                length: Ws,
                transformVersion: function (t) {
                    return t.flags >>> 6 & 3
                },
                transformed: function (t) {
                    return "glyf" === t.tag || "loca" === t.tag ? 0 === t.transformVersion : 0 !== t.transformVersion
                },
                transformLength: new nt.Optional(Ws, function (t) {
                    return t.transformed
                })
            }), Vs = new nt.Struct({
                tag: new nt.String(4),
                flavor: nt.uint32,
                length: nt.uint32,
                numTables: nt.uint16,
                reserved: new nt.Reserved(nt.uint16),
                totalSfntSize: nt.uint32,
                totalCompressedSize: nt.uint32,
                majorVersion: nt.uint16,
                minorVersion: nt.uint16,
                metaOffset: nt.uint32,
                metaLength: nt.uint32,
                metaOrigLength: nt.uint32,
                privOffset: nt.uint32,
                privLength: nt.uint32,
                tables: new nt.Array(Gs, "numTables")
            });
            Vs.process = function () {
                for (var t = {}, e = 0; e < this.tables.length; e++) {
                    var n = this.tables[e];
                    t[n.tag] = n
                }
                return this.tables = t
            };
            var Hs = function (t) {
                function n() {
                    return lt(this, n), ht(this, t.apply(this, arguments))
                }

                return pt(n, t), n.probe = function (t) {
                    return "wOF2" === t.toString("ascii", 0, 4)
                }, n.prototype._decodeDirectory = function () {
                    this.directory = Vs.decode(this.stream), this._dataPos = this.stream.pos
                }, n.prototype._decompress = function () {
                    if (!this._decompressed) {
                        this.stream.pos = this._dataPos;
                        var t = this.stream.readBuffer(this.directory.totalCompressedSize), n = 0;
                        for (var r in this.directory.tables) {
                            var i = this.directory.tables[r];
                            i.offset = n, n += null != i.transformLength ? i.transformLength : i.length
                        }
                        var o = Pt(t, n);
                        if (!o)throw new Error("Error decoding compressed data in WOFF2");
                        this.stream = new nt.DecodeStream(new e(o)), this._decompressed = !0
                    }
                }, n.prototype._decodeTable = function (e) {
                    return this._decompress(), t.prototype._decodeTable.call(this, e)
                }, n.prototype._getBaseGlyph = function (e) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                    if (!this._glyphs[e])return this.directory.tables.glyf && this.directory.tables.glyf.transformed ? (this._transformedGlyphs || this._transformGlyfTable(), this._glyphs[e] = new Us(e, n, this)) : t.prototype._getBaseGlyph.call(this, e, n)
                }, n.prototype._transformGlyfTable = function () {
                    this._decompress(), this.stream.pos = this.directory.tables.glyf.offset;
                    for (var t = GlyfTable.decode(this.stream), e = [], n = 0; n < t.numGlyphs; n++) {
                        var r = {}, i = t.nContours.readInt16BE();
                        if (r.numberOfContours = i, i > 0) {
                            for (var o = [], a = 0, s = 0; s < i; s++) {
                                a += $(t.nPoints), o.push(a)
                            }
                            r.points = et(t.flags, t.glyphs, a);
                            for (var u = 0; u < i; u++)r.points[o[u] - 1].endContour = !0;
                            $(t.glyphs)
                        } else if (i < 0) {
                            var l = ks.prototype._decodeComposite.call({_font: this}, r, t.composites);
                            if (l) {
                                $(t.glyphs)
                            }
                        }
                        e.push(r)
                    }
                    this._transformedGlyphs = e
                }, n
            }(Fs), qs = function () {
                function t(e) {
                    lt(this, t), this.length = e, this._buf = new nt.Buffer(e)
                }

                return t.prototype.decode = function (t, e) {
                    return new nt.DecodeStream(this._buf.decode(t, e))
                }, t
            }(), GlyfTable = new nt.Struct({
                version: nt.uint32,
                numGlyphs: nt.uint16,
                indexFormat: nt.uint16,
                nContourStreamSize: nt.uint32,
                nPointsStreamSize: nt.uint32,
                flagStreamSize: nt.uint32,
                glyphStreamSize: nt.uint32,
                compositeStreamSize: nt.uint32,
                bboxStreamSize: nt.uint32,
                instructionStreamSize: nt.uint32,
                nContours: new qs("nContourStreamSize"),
                nPoints: new qs("nPointsStreamSize"),
                flags: new qs("flagStreamSize"),
                glyphs: new qs("glyphStreamSize"),
                composites: new qs("compositeStreamSize"),
                bboxes: new qs("bboxStreamSize"),
                instructions: new qs("instructionStreamSize")
            }), Zs = 253, Ys = 254, Xs = 255, Ks = 253, Js = new nt.VersionedStruct(nt.uint32, {
                65536: {
                    numFonts: nt.uint32,
                    offsets: new nt.Array(nt.uint32, "numFonts")
                },
                131072: {
                    numFonts: nt.uint32,
                    offsets: new nt.Array(nt.uint32, "numFonts"),
                    dsigTag: nt.uint32,
                    dsigLength: nt.uint32,
                    dsigOffset: nt.uint32
                }
            }), Qs = function () {
                function t(e) {
                    if (lt(this, t), this.stream = e, "ttcf" !== e.readString(4))throw new Error("Not a TrueType collection");
                    this.header = Js.decode(e)
                }

                return t.probe = function (t) {
                    return "ttcf" === t.toString("ascii", 0, 4)
                }, t.prototype.getFont = function (t) {
                    for (var e = this.header.offsets, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                        var i;
                        if (n) {
                            if (r >= e.length)break;
                            i = e[r++]
                        } else {
                            if (r = e.next(), r.done)break;
                            i = r.value
                        }
                        var o = i, a = new nt.DecodeStream(this.stream.buffer);
                        a.pos = o;
                        var s = new Fs(a);
                        if (s.postscriptName === t)return s
                    }
                    return null
                }, ct(t, [{
                    key: "fonts", get: function () {
                        for (var t = [], e = this.header.offsets, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                            var i;
                            if (n) {
                                if (r >= e.length)break;
                                i = e[r++]
                            } else {
                                if (r = e.next(), r.done)break;
                                i = r.value
                            }
                            var o = i, a = new nt.DecodeStream(this.stream.buffer);
                            a.pos = o, t.push(new Fs(a))
                        }
                        return t
                    }
                }]), t
            }(), $s = new nt.String(nt.uint8), tu = (new nt.Struct({
                len: nt.uint32,
                buf: new nt.Buffer("len")
            }), new nt.Struct({
                id: nt.uint16,
                nameOffset: nt.int16,
                attr: nt.uint8,
                dataOffset: nt.uint24,
                handle: nt.uint32
            })), eu = new nt.Struct({
                name: new nt.String(4),
                maxTypeIndex: nt.uint16,
                refList: new nt.Pointer(nt.uint16, new nt.Array(tu, function (t) {
                    return t.maxTypeIndex + 1
                }), {type: "parent"})
            }), nu = new nt.Struct({
                length: nt.uint16, types: new nt.Array(eu, function (t) {
                    return t.length + 1
                })
            }), ru = new nt.Struct({
                reserved: new nt.Reserved(nt.uint8, 24),
                typeList: new nt.Pointer(nt.uint16, nu),
                nameListOffset: new nt.Pointer(nt.uint16, "void")
            }), iu = new nt.Struct({
                dataOffset: nt.uint32,
                map: new nt.Pointer(nt.uint32, ru),
                dataLength: nt.uint32,
                mapLength: nt.uint32
            }), ou = function () {
                function t(e) {
                    lt(this, t), this.stream = e, this.header = iu.decode(this.stream);
                    for (var n = this.header.map.typeList.types, r = Array.isArray(n), i = 0, n = r ? n : it(n); ;) {
                        var o;
                        if (r) {
                            if (i >= n.length)break;
                            o = n[i++]
                        } else {
                            if (i = n.next(), i.done)break;
                            o = i.value
                        }
                        for (var a = o, s = a.refList, u = Array.isArray(s), l = 0, s = u ? s : it(s); ;) {
                            var c;
                            if (u) {
                                if (l >= s.length)break;
                                c = s[l++]
                            } else {
                                if (l = s.next(), l.done)break;
                                c = l.value
                            }
                            var f = c;
                            f.nameOffset >= 0 ? (this.stream.pos = f.nameOffset + this.header.map.nameListOffset, f.name = $s.decode(this.stream)) : f.name = null
                        }
                        "sfnt" === a.name && (this.sfnt = a)
                    }
                }

                return t.probe = function (t) {
                    var e = new nt.DecodeStream(t);
                    try {
                        var n = iu.decode(e)
                    } catch (t) {
                        return !1
                    }
                    for (var r = n.map.typeList.types, i = Array.isArray(r), o = 0, r = i ? r : it(r); ;) {
                        var a;
                        if (i) {
                            if (o >= r.length)break;
                            a = r[o++]
                        } else {
                            if (o = r.next(), o.done)break;
                            a = o.value
                        }
                        if ("sfnt" === a.name)return !0
                    }
                    return !1
                }, t.prototype.getFont = function (t) {
                    if (!this.sfnt)return null;
                    for (var e = this.sfnt.refList, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                        var i;
                        if (n) {
                            if (r >= e.length)break;
                            i = e[r++]
                        } else {
                            if (r = e.next(), r.done)break;
                            i = r.value
                        }
                        var o = i, a = this.header.dataOffset + o.dataOffset + 4, s = new nt.DecodeStream(this.stream.buffer.slice(a)), u = new Fs(s);
                        if (u.postscriptName === t)return u
                    }
                    return null
                }, ct(t, [{
                    key: "fonts", get: function () {
                        for (var t = [], e = this.sfnt.refList, n = Array.isArray(e), r = 0, e = n ? e : it(e); ;) {
                            var i;
                            if (n) {
                                if (r >= e.length)break;
                                i = e[r++]
                            } else {
                                if (r = e.next(), r.done)break;
                                i = r.value
                            }
                            var o = i, a = this.header.dataOffset + o.dataOffset + 4, s = new nt.DecodeStream(this.stream.buffer.slice(a));
                            t.push(new Fs(s))
                        }
                        return t
                    }
                }]), t
            }();
            Et.registerFormat(Fs), Et.registerFormat(Ns), Et.registerFormat(Hs), Et.registerFormat(Qs), Et.registerFormat(ou), t.exports = Et
        }).call(e, n(2).Buffer, n(36))
    }, function (t, e, n) {
        (function () {
            var t, r, i, o;
            e.EncodeStream = n(85), e.DecodeStream = n(86), e.Array = n(108), e.LazyArray = n(111), e.Bitfield = n(112), e.Boolean = n(113), e.Buffer = n(114), e.Enum = n(115), e.Optional = n(116), e.Reserved = n(117), e.String = n(118), e.Struct = n(119), e.VersionedStruct = n(120), i = n(109);
            for (t in i)r = i[t], e[t] = r;
            o = n(121);
            for (t in o)r = o[t], e[t] = r
        }).call(this)
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i, o, a, s = {}.hasOwnProperty, u = function (t, e) {
                    function n() {
                        this.constructor = t
                    }

                    for (var r in e)s.call(e, r) && (t[r] = e[r]);
                    return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                };
                a = n(31), r = n(86);
                try {
                    o = n(87)
                } catch (t) {
                }
                i = function (t) {
                    function n(t) {
                        null == t && (t = 65536), n.__super__.constructor.apply(this, arguments), this.buffer = new e(t), this.bufferOffset = 0, this.pos = 0
                    }

                    var i;
                    u(n, t);
                    for (i in e.prototype)"write" === i.slice(0, 5) && function (t) {
                        var e;
                        e = +r.TYPES[t.replace(/write|[BL]E/g, "")], n.prototype[t] = function (n) {
                            return this.ensure(e), this.buffer[t](n, this.bufferOffset), this.bufferOffset += e, this.pos += e
                        }
                    }(i);
                    return n.prototype._read = function () {
                    }, n.prototype.ensure = function (t) {
                        if (this.bufferOffset + t > this.buffer.length)return this.flush()
                    }, n.prototype.flush = function () {
                        if (this.bufferOffset > 0)return this.push(new e(this.buffer.slice(0, this.bufferOffset))), this.bufferOffset = 0
                    }, n.prototype.writeBuffer = function (t) {
                        return this.flush(), this.push(t), this.pos += t.length
                    }, n.prototype.writeString = function (t, n) {
                        var r, i, a, s, u;
                        switch (null == n && (n = "ascii"), n) {
                            case"utf16le":
                            case"ucs2":
                            case"utf8":
                            case"ascii":
                                return this.writeBuffer(new e(t, n));
                            case"utf16be":
                                for (r = new e(t, "utf16le"), a = s = 0, u = r.length - 1; s < u; a = s += 2)i = r[a], r[a] = r[a + 1], r[a + 1] = i;
                                return this.writeBuffer(r);
                            default:
                                if (o)return this.writeBuffer(o.encode(t, n));
                                throw new Error("Install iconv-lite to enable additional string encodings.")
                        }
                    }, n.prototype.writeUInt24BE = function (t) {
                        return this.ensure(3), this.buffer[this.bufferOffset++] = t >>> 16 & 255, this.buffer[this.bufferOffset++] = t >>> 8 & 255, this.buffer[this.bufferOffset++] = 255 & t, this.pos += 3
                    }, n.prototype.writeUInt24LE = function (t) {
                        return this.ensure(3), this.buffer[this.bufferOffset++] = 255 & t, this.buffer[this.bufferOffset++] = t >>> 8 & 255, this.buffer[this.bufferOffset++] = t >>> 16 & 255, this.pos += 3
                    }, n.prototype.writeInt24BE = function (t) {
                        return t >= 0 ? this.writeUInt24BE(t) : this.writeUInt24BE(t + 16777215 + 1)
                    }, n.prototype.writeInt24LE = function (t) {
                        return t >= 0 ? this.writeUInt24LE(t) : this.writeUInt24LE(t + 16777215 + 1)
                    }, n.prototype.fill = function (t, n) {
                        var r;
                        return n < this.buffer.length ? (this.ensure(n), this.buffer.fill(t, this.bufferOffset, this.bufferOffset + n), this.bufferOffset += n, this.pos += n) : (r = new e(n), r.fill(t), this.writeBuffer(r))
                    }, n.prototype.end = function () {
                        return this.flush(), this.push(null)
                    }, n
                }(a.Readable), t.exports = i
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i;
                try {
                    i = n(87)
                } catch (t) {
                }
                r = function () {
                    function t(t) {
                        this.buffer = t, this.pos = 0, this.length = this.buffer.length
                    }

                    var n;
                    t.TYPES = {
                        UInt8: 1,
                        UInt16: 2,
                        UInt24: 3,
                        UInt32: 4,
                        Int8: 1,
                        Int16: 2,
                        Int24: 3,
                        Int32: 4,
                        Float: 4,
                        Double: 8
                    };
                    for (n in e.prototype)"read" === n.slice(0, 4) && function (e) {
                        var n;
                        n = t.TYPES[e.replace(/read|[BL]E/g, "")], t.prototype[e] = function () {
                            var t;
                            return t = this.buffer[e](this.pos), this.pos += n, t
                        }
                    }(n);
                    return t.prototype.readString = function (t, n) {
                        var r, o, a, s, u;
                        switch (null == n && (n = "ascii"), n) {
                            case"utf16le":
                            case"ucs2":
                            case"utf8":
                            case"ascii":
                                return this.buffer.toString(n, this.pos, this.pos += t);
                            case"utf16be":
                                for (r = new e(this.readBuffer(t)), a = s = 0, u = r.length - 1; s < u; a = s += 2)o = r[a], r[a] = r[a + 1], r[a + 1] = o;
                                return r.toString("utf16le");
                            default:
                                if (r = this.readBuffer(t), i)try {
                                    return i.decode(r, n)
                                } catch (t) {
                                }
                                return r
                        }
                    }, t.prototype.readBuffer = function (t) {
                        return this.buffer.slice(this.pos, this.pos += t)
                    }, t.prototype.readUInt24BE = function () {
                        return (this.readUInt16BE() << 8) + this.readUInt8()
                    }, t.prototype.readUInt24LE = function () {
                        return this.readUInt16LE() + (this.readUInt8() << 16)
                    }, t.prototype.readInt24BE = function () {
                        return (this.readInt16BE() << 8) + this.readUInt8()
                    }, t.prototype.readInt24LE = function () {
                        return this.readUInt16LE() + (this.readInt8() << 16)
                    }, t
                }(), t.exports = r
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        (function (e) {
            "use strict";
            var r = n(2).Buffer, i = n(88), o = t.exports;
            o.encodings = null, o.defaultCharUnicode = "�", o.defaultCharSingleByte = "?", o.encode = function (t, e, n) {
                t = "" + (t || "");
                var i = o.getEncoder(e, n), a = i.write(t), s = i.end();
                return s && s.length > 0 ? r.concat([a, s]) : a
            }, o.decode = function (t, e, n) {
                "string" == typeof t && (o.skipDecodeWarning || (o.skipDecodeWarning = !0), t = new r("" + (t || ""), "binary"));
                var i = o.getDecoder(e, n), a = i.write(t), s = i.end();
                return s ? a + s : a
            }, o.encodingExists = function (t) {
                try {
                    return o.getCodec(t), !0
                } catch (t) {
                    return !1
                }
            }, o.toEncoding = o.encode, o.fromEncoding = o.decode, o._codecDataCache = {}, o.getCodec = function (t) {
                o.encodings || (o.encodings = n(89));
                for (var e = ("" + t).toLowerCase().replace(/[^0-9a-z]|:\d{4}$/g, ""), r = {}; ;) {
                    var i = o._codecDataCache[e];
                    if (i)return i;
                    var a = o.encodings[e];
                    switch (typeof a) {
                        case"string":
                            e = a;
                            break;
                        case"object":
                            for (var s in a)r[s] = a[s];
                            r.encodingName || (r.encodingName = e), e = a.type;
                            break;
                        case"function":
                            return r.encodingName || (r.encodingName = e), i = new a(r, o), o._codecDataCache[r.encodingName] = i, i;
                        default:
                            throw new Error("Encoding not recognized: '" + t + "' (searched as: '" + e + "')")
                    }
                }
            }, o.getEncoder = function (t, e) {
                var n = o.getCodec(t), r = new n.encoder(e, n);
                return n.bomAware && e && e.addBOM && (r = new i.PrependBOM(r, e)), r
            }, o.getDecoder = function (t, e) {
                var n = o.getCodec(t), r = new n.decoder(e, n);
                return !n.bomAware || e && !1 === e.stripBOM || (r = new i.StripBOM(r, e)), r
            };
            var a = void 0 !== e && e.versions && e.versions.node;
            if (a) {
                var s = a.split(".").map(Number);
                (s[0] > 0 || s[1] >= 10) && n(106)(o), n(107)(o)
            }
        }).call(e, n(36))
    }, function (t, e) {
        "use strict";
        function n(t, e) {
            this.encoder = t, this.addBOM = !0
        }

        function r(t, e) {
            this.decoder = t, this.pass = !1, this.options = e || {}
        }

        e.PrependBOM = n, n.prototype.write = function (t) {
            return this.addBOM && (t = "\ufeff" + t, this.addBOM = !1), this.encoder.write(t)
        }, n.prototype.end = function () {
            return this.encoder.end()
        }, e.StripBOM = r, r.prototype.write = function (t) {
            var e = this.decoder.write(t);
            return this.pass || !e ? e : ("\ufeff" === e[0] && (e = e.slice(1), "function" == typeof this.options.stripBOM && this.options.stripBOM()), this.pass = !0, e)
        }, r.prototype.end = function () {
            return this.decoder.end()
        }
    }, function (t, e, n) {
        "use strict";
        for (var r = [n(90), n(91), n(92), n(93), n(94), n(95), n(96), n(97)], i = 0; i < r.length; i++) {
            var t = r[i];
            for (var o in t)Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o])
        }
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            this.enc = t.encodingName, this.bomAware = t.bomAware, "base64" === this.enc ? this.encoder = a : "cesu8" === this.enc && (this.enc = "utf8", this.encoder = s, "💩" !== new l("eda0bdedb2a9", "hex").toString() && (this.decoder = u, this.defaultCharUnicode = e.defaultCharUnicode))
        }

        function i(t, e) {
            c.call(this, e.enc)
        }

        function o(t, e) {
            this.enc = e.enc
        }

        function a(t, e) {
            this.prevStr = ""
        }

        function s(t, e) {
        }

        function u(t, e) {
            this.acc = 0, this.contBytes = 0, this.accBytes = 0, this.defaultCharUnicode = e.defaultCharUnicode
        }

        var l = n(2).Buffer;
        t.exports = {
            utf8: {type: "_internal", bomAware: !0},
            cesu8: {type: "_internal", bomAware: !0},
            unicode11utf8: "utf8",
            ucs2: {type: "_internal", bomAware: !0},
            utf16le: "ucs2",
            binary: {type: "_internal"},
            iso88591: "binary",
            base64: {type: "_internal"},
            hex: {type: "_internal"},
            _internal: r
        }, r.prototype.encoder = o, r.prototype.decoder = i;
        var c = n(49).StringDecoder;
        c.prototype.end || (c.prototype.end = function () {
        }), i.prototype = c.prototype, o.prototype.write = function (t) {
            return new l(t, this.enc)
        }, o.prototype.end = function () {
        }, a.prototype.write = function (t) {
            t = this.prevStr + t;
            var e = t.length - t.length % 4;
            return this.prevStr = t.slice(e), t = t.slice(0, e), new l(t, "base64")
        }, a.prototype.end = function () {
            return new l(this.prevStr, "base64")
        }, s.prototype.write = function (t) {
            for (var e = new l(3 * t.length), n = 0, r = 0; r < t.length; r++) {
                var i = t.charCodeAt(r);
                i < 128 ? e[n++] = i : i < 2048 ? (e[n++] = 192 + (i >>> 6), e[n++] = 128 + (63 & i)) : (e[n++] = 224 + (i >>> 12), e[n++] = 128 + (i >>> 6 & 63), e[n++] = 128 + (63 & i))
            }
            return e.slice(0, n)
        }, s.prototype.end = function () {
        }, u.prototype.write = function (t) {
            for (var e = this.acc, n = this.contBytes, r = this.accBytes, i = "", o = 0; o < t.length; o++) {
                var a = t[o];
                128 != (192 & a) ? (n > 0 && (i += this.defaultCharUnicode, n = 0), a < 128 ? i += String.fromCharCode(a) : a < 224 ? (e = 31 & a, n = 1, r = 1) : a < 240 ? (e = 15 & a, n = 2, r = 1) : i += this.defaultCharUnicode) : n > 0 ? (e = e << 6 | 63 & a, n--, r++, 0 === n && (i += 2 === r && e < 128 && e > 0 ? this.defaultCharUnicode : 3 === r && e < 2048 ? this.defaultCharUnicode : String.fromCharCode(e))) : i += this.defaultCharUnicode
            }
            return this.acc = e, this.contBytes = n, this.accBytes = r, i
        }, u.prototype.end = function () {
            var t = 0;
            return this.contBytes > 0 && (t += this.defaultCharUnicode), t
        }
    }, function (t, e, n) {
        "use strict";
        function r() {
        }

        function i() {
        }

        function o() {
            this.overflowByte = -1
        }

        function a(t, e) {
            this.iconv = e
        }

        function s(t, e) {
            t = t || {}, void 0 === t.addBOM && (t.addBOM = !0), this.encoder = e.iconv.getEncoder("utf-16le", t)
        }

        function u(t, e) {
            this.decoder = null, this.initialBytes = [], this.initialBytesLen = 0, this.options = t || {}, this.iconv = e.iconv
        }

        function l(t, e) {
            var n = e || "utf-16le";
            if (t.length >= 2)if (254 == t[0] && 255 == t[1])n = "utf-16be"; else if (255 == t[0] && 254 == t[1])n = "utf-16le"; else {
                for (var r = 0, i = 0, o = Math.min(t.length - t.length % 2, 64), a = 0; a < o; a += 2)0 === t[a] && 0 !== t[a + 1] && i++, 0 !== t[a] && 0 === t[a + 1] && r++;
                i > r ? n = "utf-16be" : i < r && (n = "utf-16le")
            }
            return n
        }

        var c = n(2).Buffer;
        e.utf16be = r, r.prototype.encoder = i, r.prototype.decoder = o, r.prototype.bomAware = !0, i.prototype.write = function (t) {
            for (var e = new c(t, "ucs2"), n = 0; n < e.length; n += 2) {
                var r = e[n];
                e[n] = e[n + 1], e[n + 1] = r
            }
            return e
        }, i.prototype.end = function () {
        }, o.prototype.write = function (t) {
            if (0 == t.length)return "";
            var e = new c(t.length + 1), n = 0, r = 0;
            for (-1 !== this.overflowByte && (e[0] = t[0], e[1] = this.overflowByte, n = 1, r = 2); n < t.length - 1; n += 2, r += 2)e[r] = t[n + 1], e[r + 1] = t[n];
            return this.overflowByte = n == t.length - 1 ? t[t.length - 1] : -1, e.slice(0, r).toString("ucs2")
        }, o.prototype.end = function () {
        }, e.utf16 = a, a.prototype.encoder = s, a.prototype.decoder = u, s.prototype.write = function (t) {
            return this.encoder.write(t)
        }, s.prototype.end = function () {
            return this.encoder.end()
        }, u.prototype.write = function (t) {
            if (!this.decoder) {
                if (this.initialBytes.push(t), this.initialBytesLen += t.length, this.initialBytesLen < 16)return "";
                var t = c.concat(this.initialBytes), e = l(t, this.options.defaultEncoding);
                this.decoder = this.iconv.getDecoder(e, this.options), this.initialBytes.length = this.initialBytesLen = 0
            }
            return this.decoder.write(t)
        }, u.prototype.end = function () {
            if (!this.decoder) {
                var t = c.concat(this.initialBytes), e = l(t, this.options.defaultEncoding);
                this.decoder = this.iconv.getDecoder(e, this.options);
                var n = this.decoder.write(t), r = this.decoder.end();
                return r ? n + r : n
            }
            return this.decoder.end()
        }
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            this.iconv = e
        }

        function i(t, e) {
            this.iconv = e.iconv
        }

        function o(t, e) {
            this.iconv = e.iconv, this.inBase64 = !1, this.base64Accum = ""
        }

        function a(t, e) {
            this.iconv = e
        }

        function s(t, e) {
            this.iconv = e.iconv, this.inBase64 = !1, this.base64Accum = new l(6), this.base64AccumIdx = 0
        }

        function u(t, e) {
            this.iconv = e.iconv, this.inBase64 = !1, this.base64Accum = ""
        }

        var l = n(2).Buffer;
        e.utf7 = r, e.unicode11utf7 = "utf7", r.prototype.encoder = i, r.prototype.decoder = o, r.prototype.bomAware = !0;
        var c = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;
        i.prototype.write = function (t) {
            return new l(t.replace(c, function (t) {
                return "+" + ("+" === t ? "" : this.iconv.encode(t, "utf16-be").toString("base64").replace(/=+$/, "")) + "-"
            }.bind(this)))
        }, i.prototype.end = function () {
        };
        for (var f = /[A-Za-z0-9\/+]/, h = [], p = 0; p < 256; p++)h[p] = f.test(String.fromCharCode(p));
        var d = "+".charCodeAt(0), g = "-".charCodeAt(0), y = "&".charCodeAt(0);
        o.prototype.write = function (t) {
            for (var e = "", n = 0, r = this.inBase64, i = this.base64Accum, o = 0; o < t.length; o++)if (r) {
                if (!h[t[o]]) {
                    if (o == n && t[o] == g)e += "+"; else {
                        var a = i + t.slice(n, o).toString();
                        e += this.iconv.decode(new l(a, "base64"), "utf16-be")
                    }
                    t[o] != g && o--, n = o + 1, r = !1, i = ""
                }
            } else t[o] == d && (e += this.iconv.decode(t.slice(n, o), "ascii"), n = o + 1, r = !0);
            if (r) {
                var a = i + t.slice(n).toString(), s = a.length - a.length % 8;
                i = a.slice(s), a = a.slice(0, s), e += this.iconv.decode(new l(a, "base64"), "utf16-be")
            } else e += this.iconv.decode(t.slice(n), "ascii");
            return this.inBase64 = r, this.base64Accum = i, e
        }, o.prototype.end = function () {
            var t = "";
            return this.inBase64 && this.base64Accum.length > 0 && (t = this.iconv.decode(new l(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", t
        }, e.utf7imap = a, a.prototype.encoder = s, a.prototype.decoder = u, a.prototype.bomAware = !0, s.prototype.write = function (t) {
            for (var e = this.inBase64, n = this.base64Accum, r = this.base64AccumIdx, i = new l(5 * t.length + 10), o = 0, a = 0; a < t.length; a++) {
                var s = t.charCodeAt(a);
                32 <= s && s <= 126 ? (e && (r > 0 && (o += i.write(n.slice(0, r).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), o), r = 0), i[o++] = g, e = !1), e || (i[o++] = s, s === y && (i[o++] = g))) : (e || (i[o++] = y, e = !0), e && (n[r++] = s >> 8, n[r++] = 255 & s, r == n.length && (o += i.write(n.toString("base64").replace(/\//g, ","), o), r = 0)))
            }
            return this.inBase64 = e, this.base64AccumIdx = r, i.slice(0, o)
        }, s.prototype.end = function () {
            var t = new l(10), e = 0;
            return this.inBase64 && (this.base64AccumIdx > 0 && (e += t.write(this.base64Accum.slice(0, this.base64AccumIdx).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), e), this.base64AccumIdx = 0), t[e++] = g, this.inBase64 = !1), t.slice(0, e)
        };
        var v = h.slice();
        v[",".charCodeAt(0)] = !0, u.prototype.write = function (t) {
            for (var e = "", n = 0, r = this.inBase64, i = this.base64Accum, o = 0; o < t.length; o++)if (r) {
                if (!v[t[o]]) {
                    if (o == n && t[o] == g)e += "&"; else {
                        var a = i + t.slice(n, o).toString().replace(/,/g, "/");
                        e += this.iconv.decode(new l(a, "base64"), "utf16-be")
                    }
                    t[o] != g && o--, n = o + 1, r = !1, i = ""
                }
            } else t[o] == y && (e += this.iconv.decode(t.slice(n, o), "ascii"), n = o + 1, r = !0);
            if (r) {
                var a = i + t.slice(n).toString().replace(/,/g, "/"), s = a.length - a.length % 8;
                i = a.slice(s), a = a.slice(0, s), e += this.iconv.decode(new l(a, "base64"), "utf16-be")
            } else e += this.iconv.decode(t.slice(n), "ascii");
            return this.inBase64 = r, this.base64Accum = i, e
        }, u.prototype.end = function () {
            var t = "";
            return this.inBase64 && this.base64Accum.length > 0 && (t = this.iconv.decode(new l(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", t
        }
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            if (!t)throw new Error("SBCS codec is called without the data.");
            if (!t.chars || 128 !== t.chars.length && 256 !== t.chars.length)throw new Error("Encoding '" + t.type + "' has incorrect 'chars' (must be of len 128 or 256)");
            if (128 === t.chars.length) {
                for (var n = "", r = 0; r < 128; r++)n += String.fromCharCode(r);
                t.chars = n + t.chars
            }
            this.decodeBuf = new a(t.chars, "ucs2");
            var i = new a(65536);
            i.fill(e.defaultCharSingleByte.charCodeAt(0));
            for (var r = 0; r < t.chars.length; r++)i[t.chars.charCodeAt(r)] = r;
            this.encodeBuf = i
        }

        function i(t, e) {
            this.encodeBuf = e.encodeBuf
        }

        function o(t, e) {
            this.decodeBuf = e.decodeBuf
        }

        var a = n(2).Buffer;
        e._sbcs = r, r.prototype.encoder = i, r.prototype.decoder = o, i.prototype.write = function (t) {
            for (var e = new a(t.length), n = 0; n < t.length; n++)e[n] = this.encodeBuf[t.charCodeAt(n)];
            return e
        }, i.prototype.end = function () {
        }, o.prototype.write = function (t) {
            for (var e = this.decodeBuf, n = new a(2 * t.length), r = 0, i = 0, o = 0; o < t.length; o++)r = 2 * t[o], i = 2 * o, n[i] = e[r], n[i + 1] = e[r + 1];
            return n.toString("ucs2")
        }, o.prototype.end = function () {
        }
    }, function (t, e) {
        "use strict";
        t.exports = {
            10029: "maccenteuro",
            maccenteuro: {
                type: "_sbcs",
                chars: "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"
            },
            808: "cp808",
            ibm808: "cp808",
            cp808: {
                type: "_sbcs",
                chars: "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "
            },
            ascii8bit: "ascii",
            usascii: "ascii",
            ansix34: "ascii",
            ansix341968: "ascii",
            ansix341986: "ascii",
            csascii: "ascii",
            cp367: "ascii",
            ibm367: "ascii",
            isoir6: "ascii",
            iso646us: "ascii",
            iso646irv: "ascii",
            us: "ascii",
            latin1: "iso88591",
            latin2: "iso88592",
            latin3: "iso88593",
            latin4: "iso88594",
            latin5: "iso88599",
            latin6: "iso885910",
            latin7: "iso885913",
            latin8: "iso885914",
            latin9: "iso885915",
            latin10: "iso885916",
            csisolatin1: "iso88591",
            csisolatin2: "iso88592",
            csisolatin3: "iso88593",
            csisolatin4: "iso88594",
            csisolatincyrillic: "iso88595",
            csisolatinarabic: "iso88596",
            csisolatingreek: "iso88597",
            csisolatinhebrew: "iso88598",
            csisolatin5: "iso88599",
            csisolatin6: "iso885910",
            l1: "iso88591",
            l2: "iso88592",
            l3: "iso88593",
            l4: "iso88594",
            l5: "iso88599",
            l6: "iso885910",
            l7: "iso885913",
            l8: "iso885914",
            l9: "iso885915",
            l10: "iso885916",
            isoir14: "iso646jp",
            isoir57: "iso646cn",
            isoir100: "iso88591",
            isoir101: "iso88592",
            isoir109: "iso88593",
            isoir110: "iso88594",
            isoir144: "iso88595",
            isoir127: "iso88596",
            isoir126: "iso88597",
            isoir138: "iso88598",
            isoir148: "iso88599",
            isoir157: "iso885910",
            isoir166: "tis620",
            isoir179: "iso885913",
            isoir199: "iso885914",
            isoir203: "iso885915",
            isoir226: "iso885916",
            cp819: "iso88591",
            ibm819: "iso88591",
            cp28591: "iso88591",
            28591: "iso88591",
            cyrillic: "iso88595",
            arabic: "iso88596",
            arabic8: "iso88596",
            ecma114: "iso88596",
            asmo708: "iso88596",
            greek: "iso88597",
            greek8: "iso88597",
            ecma118: "iso88597",
            elot928: "iso88597",
            hebrew: "iso88598",
            hebrew8: "iso88598",
            turkish: "iso88599",
            turkish8: "iso88599",
            thai: "iso885911",
            thai8: "iso885911",
            celtic: "iso885914",
            celtic8: "iso885914",
            isoceltic: "iso885914",
            tis6200: "tis620",
            tis62025291: "tis620",
            tis62025330: "tis620",
            10000: "macroman",
            10006: "macgreek",
            10007: "maccyrillic",
            10079: "maciceland",
            10081: "macturkish",
            cspc8codepage437: "cp437",
            cspc775baltic: "cp775",
            cspc850multilingual: "cp850",
            cspcp852: "cp852",
            cspc862latinhebrew: "cp862",
            cpgr: "cp869",
            msee: "cp1250",
            mscyrl: "cp1251",
            msansi: "cp1252",
            msgreek: "cp1253",
            msturk: "cp1254",
            mshebr: "cp1255",
            msarab: "cp1256",
            winbaltrim: "cp1257",
            cp20866: "koi8r",
            20866: "koi8r",
            ibm878: "koi8r",
            cskoi8r: "koi8r",
            cp21866: "koi8u",
            21866: "koi8u",
            ibm1168: "koi8u",
            strk10482002: "rk1048",
            tcvn5712: "tcvn",
            tcvn57121: "tcvn",
            gb198880: "iso646cn",
            cn: "iso646cn",
            csiso14jisc6220ro: "iso646jp",
            jisc62201969ro: "iso646jp",
            jp: "iso646jp",
            cshproman8: "hproman8",
            r8: "hproman8",
            roman8: "hproman8",
            xroman8: "hproman8",
            ibm1051: "hproman8",
            mac: "macintosh",
            csmacintosh: "macintosh"
        }
    }, function (t, e) {
        "use strict";
        t.exports = {
            437: "cp437",
            737: "cp737",
            775: "cp775",
            850: "cp850",
            852: "cp852",
            855: "cp855",
            856: "cp856",
            857: "cp857",
            858: "cp858",
            860: "cp860",
            861: "cp861",
            862: "cp862",
            863: "cp863",
            864: "cp864",
            865: "cp865",
            866: "cp866",
            869: "cp869",
            874: "windows874",
            922: "cp922",
            1046: "cp1046",
            1124: "cp1124",
            1125: "cp1125",
            1129: "cp1129",
            1133: "cp1133",
            1161: "cp1161",
            1162: "cp1162",
            1163: "cp1163",
            1250: "windows1250",
            1251: "windows1251",
            1252: "windows1252",
            1253: "windows1253",
            1254: "windows1254",
            1255: "windows1255",
            1256: "windows1256",
            1257: "windows1257",
            1258: "windows1258",
            28592: "iso88592",
            28593: "iso88593",
            28594: "iso88594",
            28595: "iso88595",
            28596: "iso88596",
            28597: "iso88597",
            28598: "iso88598",
            28599: "iso88599",
            28600: "iso885910",
            28601: "iso885911",
            28603: "iso885913",
            28604: "iso885914",
            28605: "iso885915",
            28606: "iso885916",
            windows874: {
                type: "_sbcs",
                chars: "€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
            },
            win874: "windows874",
            cp874: "windows874",
            windows1250: {
                type: "_sbcs",
                chars: "€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
            },
            win1250: "windows1250",
            cp1250: "windows1250",
            windows1251: {
                type: "_sbcs",
                chars: "ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
            },
            win1251: "windows1251",
            cp1251: "windows1251",
            windows1252: {
                type: "_sbcs",
                chars: "€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
            },
            win1252: "windows1252",
            cp1252: "windows1252",
            windows1253: {
                type: "_sbcs",
                chars: "€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
            },
            win1253: "windows1253",
            cp1253: "windows1253",
            windows1254: {
                type: "_sbcs",
                chars: "€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
            },
            win1254: "windows1254",
            cp1254: "windows1254",
            windows1255: {
                type: "_sbcs",
                chars: "€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹ�ֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
            },
            win1255: "windows1255",
            cp1255: "windows1255",
            windows1256: {
                type: "_sbcs",
                chars: "€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"
            },
            win1256: "windows1256",
            cp1256: "windows1256",
            windows1257: {
                type: "_sbcs",
                chars: "€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"
            },
            win1257: "windows1257",
            cp1257: "windows1257",
            windows1258: {
                type: "_sbcs",
                chars: "€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
            },
            win1258: "windows1258",
            cp1258: "windows1258",
            iso88592: {
                type: "_sbcs",
                chars: " Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
            },
            cp28592: "iso88592",
            iso88593: {
                type: "_sbcs",
                chars: " Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"
            },
            cp28593: "iso88593",
            iso88594: {
                type: "_sbcs",
                chars: " ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"
            },
            cp28594: "iso88594",
            iso88595: {
                type: "_sbcs",
                chars: " ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"
            },
            cp28595: "iso88595",
            iso88596: {
                type: "_sbcs",
                chars: " ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"
            },
            cp28596: "iso88596",
            iso88597: {
                type: "_sbcs",
                chars: " ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
            },
            cp28597: "iso88597",
            iso88598: {
                type: "_sbcs",
                chars: " �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
            },
            cp28598: "iso88598",
            iso88599: {
                type: "_sbcs",
                chars: " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
            },
            cp28599: "iso88599",
            iso885910: {
                type: "_sbcs",
                chars: " ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"
            },
            cp28600: "iso885910",
            iso885911: {
                type: "_sbcs",
                chars: " กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
            },
            cp28601: "iso885911",
            iso885913: {
                type: "_sbcs",
                chars: " ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"
            },
            cp28603: "iso885913",
            iso885914: {
                type: "_sbcs",
                chars: " Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"
            },
            cp28604: "iso885914",
            iso885915: {
                type: "_sbcs",
                chars: " ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
            },
            cp28605: "iso885915",
            iso885916: {
                type: "_sbcs",
                chars: " ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"
            },
            cp28606: "iso885916",
            cp437: {
                type: "_sbcs",
                chars: "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
            },
            ibm437: "cp437",
            csibm437: "cp437",
            cp737: {
                type: "_sbcs",
                chars: "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "
            },
            ibm737: "cp737",
            csibm737: "cp737",
            cp775: {
                type: "_sbcs",
                chars: "ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "
            },
            ibm775: "cp775",
            csibm775: "cp775",
            cp850: {
                type: "_sbcs",
                chars: "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
            },
            ibm850: "cp850",
            csibm850: "cp850",
            cp852: {
                type: "_sbcs",
                chars: "ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "
            },
            ibm852: "cp852",
            csibm852: "cp852",
            cp855: {
                type: "_sbcs",
                chars: "ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "
            },
            ibm855: "cp855",
            csibm855: "cp855",
            cp856: {
                type: "_sbcs",
                chars: "אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "
            },
            ibm856: "cp856",
            csibm856: "cp856",
            cp857: {
                type: "_sbcs",
                chars: "ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "
            },
            ibm857: "cp857",
            csibm857: "cp857",
            cp858: {
                type: "_sbcs",
                chars: "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
            },
            ibm858: "cp858",
            csibm858: "cp858",
            cp860: {
                type: "_sbcs",
                chars: "ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
            },
            ibm860: "cp860",
            csibm860: "cp860",
            cp861: {
                type: "_sbcs",
                chars: "ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
            },
            ibm861: "cp861",
            csibm861: "cp861",
            cp862: {
                type: "_sbcs",
                chars: "אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
            },
            ibm862: "cp862",
            csibm862: "cp862",
            cp863: {
                type: "_sbcs",
                chars: "ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
            },
            ibm863: "cp863",
            csibm863: "cp863",
            cp864: {
                type: "_sbcs",
                chars: "\0\b\t\n\v\f\r !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"
            },
            ibm864: "cp864",
            csibm864: "cp864",
            cp865: {
                type: "_sbcs",
                chars: "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
            },
            ibm865: "cp865",
            csibm865: "cp865",
            cp866: {
                type: "_sbcs",
                chars: "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "
            },
            ibm866: "cp866",
            csibm866: "cp866",
            cp869: {
                type: "_sbcs",
                chars: "������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "
            },
            ibm869: "cp869",
            csibm869: "cp869",
            cp922: {
                type: "_sbcs",
                chars: " ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"
            },
            ibm922: "cp922",
            csibm922: "cp922",
            cp1046: {
                type: "_sbcs",
                chars: "ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"
            },
            ibm1046: "cp1046",
            csibm1046: "cp1046",
            cp1124: {
                type: "_sbcs",
                chars: " ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"
            },
            ibm1124: "cp1124",
            csibm1124: "cp1124",
            cp1125: {
                type: "_sbcs",
                chars: "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "
            },
            ibm1125: "cp1125",
            csibm1125: "cp1125",
            cp1129: {
                type: "_sbcs",
                chars: " ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
            },
            ibm1129: "cp1129",
            csibm1129: "cp1129",
            cp1133: {
                type: "_sbcs",
                chars: " ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"
            },
            ibm1133: "cp1133",
            csibm1133: "cp1133",
            cp1161: {
                type: "_sbcs",
                chars: "��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "
            },
            ibm1161: "cp1161",
            csibm1161: "cp1161",
            cp1162: {
                type: "_sbcs",
                chars: "€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
            },
            ibm1162: "cp1162",
            csibm1162: "cp1162",
            cp1163: {
                type: "_sbcs",
                chars: " ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
            },
            ibm1163: "cp1163",
            csibm1163: "cp1163",
            maccroatian: {
                type: "_sbcs",
                chars: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"
            },
            maccyrillic: {
                type: "_sbcs",
                chars: "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
            },
            macgreek: {
                type: "_sbcs",
                chars: "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"
            },
            maciceland: {
                type: "_sbcs",
                chars: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
            },
            macroman: {
                type: "_sbcs",
                chars: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
            },
            macromania: {
                type: "_sbcs",
                chars: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
            },
            macthai: {
                type: "_sbcs",
                chars: "«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู\ufeff​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"
            },
            macturkish: {
                type: "_sbcs",
                chars: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"
            },
            macukraine: {
                type: "_sbcs",
                chars: "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
            },
            koi8r: {
                type: "_sbcs",
                chars: "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
            },
            koi8u: {
                type: "_sbcs",
                chars: "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
            },
            koi8ru: {
                type: "_sbcs",
                chars: "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
            },
            koi8t: {
                type: "_sbcs",
                chars: "қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
            },
            armscii8: {
                type: "_sbcs",
                chars: " �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"
            },
            rk1048: {
                type: "_sbcs",
                chars: "ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
            },
            tcvn: {
                type: "_sbcs",
                chars: "\0ÚỤỪỬỮ\b\t\n\v\f\rỨỰỲỶỸÝỴ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"
            },
            georgianacademy: {
                type: "_sbcs",
                chars: "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
            },
            georgianps: {
                type: "_sbcs",
                chars: "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
            },
            pt154: {
                type: "_sbcs",
                chars: "ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
            },
            viscii: {
                type: "_sbcs",
                chars: "\0ẲẴẪ\b\t\n\v\f\rỶỸỴ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"
            },
            iso646cn: {
                type: "_sbcs",
                chars: "\0\b\t\n\v\f\r !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
            },
            iso646jp: {
                type: "_sbcs",
                chars: "\0\b\t\n\v\f\r !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
            },
            hproman8: {
                type: "_sbcs",
                chars: " ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"
            },
            macintosh: {
                type: "_sbcs",
                chars: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
            },
            ascii: {
                type: "_sbcs",
                chars: "��������������������������������������������������������������������������������������������������������������������������������"
            },
            tis620: {
                type: "_sbcs",
                chars: "���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
            }
        }
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            if (this.encodingName = t.encodingName, !t)throw new Error("DBCS codec is called without the data.");
            if (!t.table)throw new Error("Encoding '" + this.encodingName + "' has no data.");
            var n = t.table();
            this.decodeTables = [], this.decodeTables[0] = f.slice(0), this.decodeTableSeq = [];
            for (var r = 0; r < n.length; r++)this._addDecodeChunk(n[r]);
            this.defaultCharUnicode = e.defaultCharUnicode, this.encodeTable = [], this.encodeTableSeq = [];
            var i = {};
            if (t.encodeSkipVals)for (var r = 0; r < t.encodeSkipVals.length; r++) {
                var o = t.encodeSkipVals[r];
                if ("number" == typeof o)i[o] = !0; else for (var a = o.from; a <= o.to; a++)i[a] = !0
            }
            if (this._fillEncodeTable(0, 0, i), t.encodeAdd)for (var s in t.encodeAdd)Object.prototype.hasOwnProperty.call(t.encodeAdd, s) && this._setEncodeChar(s.charCodeAt(0), t.encodeAdd[s]);
            if (this.defCharSB = this.encodeTable[0][e.defaultCharSingleByte.charCodeAt(0)], this.defCharSB === u && (this.defCharSB = this.encodeTable[0]["?"]), this.defCharSB === u && (this.defCharSB = "?".charCodeAt(0)), "function" == typeof t.gb18030) {
                this.gb18030 = t.gb18030();
                for (var h = this.decodeTables.length, p = this.decodeTables[h] = f.slice(0), d = this.decodeTables.length, g = this.decodeTables[d] = f.slice(0), r = 129; r <= 254; r++)for (var y = c - this.decodeTables[0][r], v = this.decodeTables[y], a = 48; a <= 57; a++)v[a] = c - h;
                for (var r = 129; r <= 254; r++)p[r] = c - d;
                for (var r = 48; r <= 57; r++)g[r] = l
            }
        }

        function i(t, e) {
            this.leadSurrogate = -1, this.seqObj = void 0, this.encodeTable = e.encodeTable, this.encodeTableSeq = e.encodeTableSeq, this.defaultCharSingleByte = e.defCharSB, this.gb18030 = e.gb18030
        }

        function o(t, e) {
            this.nodeIdx = 0, this.prevBuf = new s(0), this.decodeTables = e.decodeTables, this.decodeTableSeq = e.decodeTableSeq, this.defaultCharUnicode = e.defaultCharUnicode, this.gb18030 = e.gb18030
        }

        function a(t, e) {
            if (t[0] > e)return -1;
            for (var n = 0, r = t.length; n < r - 1;) {
                var i = n + Math.floor((r - n + 1) / 2);
                t[i] <= e ? n = i : r = i
            }
            return n
        }

        var s = n(2).Buffer;
        e._dbcs = r;
        for (var u = -1, l = -2, c = -1e3, f = new Array(256), h = 0; h < 256; h++)f[h] = u;
        r.prototype.encoder = i, r.prototype.decoder = o, r.prototype._getDecodeTrieNode = function (t) {
            for (var e = []; t > 0; t >>= 8)e.push(255 & t);
            0 == e.length && e.push(0);
            for (var n = this.decodeTables[0], r = e.length - 1; r > 0; r--) {
                var i = n[e[r]];
                if (i == u)n[e[r]] = c - this.decodeTables.length, this.decodeTables.push(n = f.slice(0)); else {
                    if (!(i <= c))throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + t.toString(16));
                    n = this.decodeTables[c - i]
                }
            }
            return n
        }, r.prototype._addDecodeChunk = function (t) {
            var e = parseInt(t[0], 16), n = this._getDecodeTrieNode(e);
            e &= 255;
            for (var r = 1; r < t.length; r++) {
                var i = t[r];
                if ("string" == typeof i)for (var o = 0; o < i.length;) {
                    var a = i.charCodeAt(o++);
                    if (55296 <= a && a < 56320) {
                        var s = i.charCodeAt(o++);
                        if (!(56320 <= s && s < 57344))throw new Error("Incorrect surrogate pair in " + this.encodingName + " at chunk " + t[0]);
                        n[e++] = 65536 + 1024 * (a - 55296) + (s - 56320)
                    } else if (4080 < a && a <= 4095) {
                        for (var u = 4095 - a + 2, l = [], c = 0; c < u; c++)l.push(i.charCodeAt(o++));
                        n[e++] = -10 - this.decodeTableSeq.length, this.decodeTableSeq.push(l)
                    } else n[e++] = a
                } else {
                    if ("number" != typeof i)throw new Error("Incorrect type '" + typeof i + "' given in " + this.encodingName + " at chunk " + t[0]);
                    for (var f = n[e - 1] + 1, o = 0; o < i; o++)n[e++] = f++
                }
            }
            if (e > 255)throw new Error("Incorrect chunk in " + this.encodingName + " at addr " + t[0] + ": too long" + e)
        }, r.prototype._getEncodeBucket = function (t) {
            var e = t >> 8;
            return void 0 === this.encodeTable[e] && (this.encodeTable[e] = f.slice(0)), this.encodeTable[e]
        }, r.prototype._setEncodeChar = function (t, e) {
            var n = this._getEncodeBucket(t), r = 255 & t;
            n[r] <= -10 ? this.encodeTableSeq[-10 - n[r]][-1] = e : n[r] == u && (n[r] = e)
        }, r.prototype._setEncodeSequence = function (t, e) {
            var n, r = t[0], i = this._getEncodeBucket(r), o = 255 & r;
            i[o] <= -10 ? n = this.encodeTableSeq[-10 - i[o]] : (n = {}, i[o] !== u && (n[-1] = i[o]), i[o] = -10 - this.encodeTableSeq.length, this.encodeTableSeq.push(n));
            for (var a = 1; a < t.length - 1; a++) {
                var s = n[r];
                "object" == typeof s ? n = s : (n = n[r] = {}, void 0 !== s && (n[-1] = s))
            }
            r = t[t.length - 1], n[r] = e
        }, r.prototype._fillEncodeTable = function (t, e, n) {
            for (var r = this.decodeTables[t], i = 0; i < 256; i++) {
                var o = r[i], a = e + i;
                n[a] || (o >= 0 ? this._setEncodeChar(o, a) : o <= c ? this._fillEncodeTable(c - o, a << 8, n) : o <= -10 && this._setEncodeSequence(this.decodeTableSeq[-10 - o], a))
            }
        }, i.prototype.write = function (t) {
            for (var e = new s(t.length * (this.gb18030 ? 4 : 3)), n = this.leadSurrogate, r = this.seqObj, i = -1, o = 0, l = 0; ;) {
                if (-1 === i) {
                    if (o == t.length)break;
                    var c = t.charCodeAt(o++)
                } else {
                    var c = i;
                    i = -1
                }
                if (55296 <= c && c < 57344)if (c < 56320) {
                    if (-1 === n) {
                        n = c;
                        continue
                    }
                    n = c, c = u
                } else-1 !== n ? (c = 65536 + 1024 * (n - 55296) + (c - 56320), n = -1) : c = u; else-1 !== n && (i = c, c = u, n = -1);
                var f = u;
                if (void 0 !== r && c != u) {
                    var h = r[c];
                    if ("object" == typeof h) {
                        r = h;
                        continue
                    }
                    "number" == typeof h ? f = h : void 0 == h && void 0 !== (h = r[-1]) && (f = h, i = c), r = void 0
                } else if (c >= 0) {
                    var p = this.encodeTable[c >> 8];
                    if (void 0 !== p && (f = p[255 & c]), f <= -10) {
                        r = this.encodeTableSeq[-10 - f];
                        continue
                    }
                    if (f == u && this.gb18030) {
                        var d = a(this.gb18030.uChars, c);
                        if (-1 != d) {
                            var f = this.gb18030.gbChars[d] + (c - this.gb18030.uChars[d]);
                            e[l++] = 129 + Math.floor(f / 12600), f %= 12600, e[l++] = 48 + Math.floor(f / 1260), f %= 1260, e[l++] = 129 + Math.floor(f / 10), f %= 10, e[l++] = 48 + f;
                            continue
                        }
                    }
                }
                f === u && (f = this.defaultCharSingleByte), f < 256 ? e[l++] = f : f < 65536 ? (e[l++] = f >> 8, e[l++] = 255 & f) : (e[l++] = f >> 16, e[l++] = f >> 8 & 255, e[l++] = 255 & f)
            }
            return this.seqObj = r, this.leadSurrogate = n, e.slice(0, l)
        }, i.prototype.end = function () {
            if (-1 !== this.leadSurrogate || void 0 !== this.seqObj) {
                var t = new s(10), e = 0;
                if (this.seqObj) {
                    var n = this.seqObj[-1];
                    void 0 !== n && (n < 256 ? t[e++] = n : (t[e++] = n >> 8, t[e++] = 255 & n)), this.seqObj = void 0
                }
                return -1 !== this.leadSurrogate && (t[e++] = this.defaultCharSingleByte, this.leadSurrogate = -1), t.slice(0, e)
            }
        }, i.prototype.findIdx = a, o.prototype.write = function (t) {
            var e, n = new s(2 * t.length), r = this.nodeIdx, i = this.prevBuf, o = this.prevBuf.length, f = -this.prevBuf.length;
            o > 0 && (i = s.concat([i, t.slice(0, 10)]));
            for (var h = 0, p = 0; h < t.length; h++) {
                var d = h >= 0 ? t[h] : i[h + o], e = this.decodeTables[r][d];
                if (e >= 0); else if (e === u)h = f, e = this.defaultCharUnicode.charCodeAt(0); else if (e === l) {
                    var g = f >= 0 ? t.slice(f, h + 1) : i.slice(f + o, h + 1 + o), y = 12600 * (g[0] - 129) + 1260 * (g[1] - 48) + 10 * (g[2] - 129) + (g[3] - 48), v = a(this.gb18030.gbChars, y);
                    e = this.gb18030.uChars[v] + y - this.gb18030.gbChars[v]
                } else {
                    if (e <= c) {
                        r = c - e;
                        continue
                    }
                    if (!(e <= -10))throw new Error("iconv-lite internal error: invalid decoding table value " + e + " at " + r + "/" + d);
                    for (var b = this.decodeTableSeq[-10 - e], m = 0; m < b.length - 1; m++)e = b[m], n[p++] = 255 & e, n[p++] = e >> 8;
                    e = b[b.length - 1]
                }
                if (e > 65535) {
                    e -= 65536;
                    var w = 55296 + Math.floor(e / 1024);
                    n[p++] = 255 & w, n[p++] = w >> 8, e = 56320 + e % 1024
                }
                n[p++] = 255 & e, n[p++] = e >> 8, r = 0, f = h + 1
            }
            return this.nodeIdx = r, this.prevBuf = f >= 0 ? t.slice(f) : i.slice(f + o), n.slice(0, p).toString("ucs2")
        }, o.prototype.end = function () {
            for (var t = ""; this.prevBuf.length > 0;) {
                t += this.defaultCharUnicode;
                var e = this.prevBuf.slice(1);
                this.prevBuf = new s(0), this.nodeIdx = 0, e.length > 0 && (t += this.write(e))
            }
            return this.nodeIdx = 0, t
        }
    }, function (t, e, n) {
        "use strict";
        t.exports = {
            shiftjis: {
                type: "_dbcs", table: function () {
                    return n(98)
                }, encodeAdd: {"¥": 92, "‾": 126}, encodeSkipVals: [{from: 60736, to: 63808}]
            },
            csshiftjis: "shiftjis",
            mskanji: "shiftjis",
            sjis: "shiftjis",
            windows31j: "shiftjis",
            ms31j: "shiftjis",
            xsjis: "shiftjis",
            windows932: "shiftjis",
            ms932: "shiftjis",
            932: "shiftjis",
            cp932: "shiftjis",
            eucjp: {
                type: "_dbcs", table: function () {
                    return n(99)
                }, encodeAdd: {"¥": 92, "‾": 126}
            },
            gb2312: "cp936",
            gb231280: "cp936",
            gb23121980: "cp936",
            csgb2312: "cp936",
            csiso58gb231280: "cp936",
            euccn: "cp936",
            windows936: "cp936",
            ms936: "cp936",
            936: "cp936",
            cp936: {
                type: "_dbcs", table: function () {
                    return n(100)
                }
            },
            gbk: {
                type: "_dbcs", table: function () {
                    return n(100).concat(n(101))
                }
            },
            xgbk: "gbk",
            isoir58: "gbk",
            gb18030: {
                type: "_dbcs", table: function () {
                    return n(100).concat(n(101))
                }, gb18030: function () {
                    return n(102)
                }, encodeSkipVals: [128], encodeAdd: {"€": 41699}
            },
            chinese: "gb18030",
            windows949: "cp949",
            ms949: "cp949",
            949: "cp949",
            cp949: {
                type: "_dbcs", table: function () {
                    return n(103)
                }
            },
            cseuckr: "cp949",
            csksc56011987: "cp949",
            euckr: "cp949",
            isoir149: "cp949",
            korean: "cp949",
            ksc56011987: "cp949",
            ksc56011989: "cp949",
            ksc5601: "cp949",
            windows950: "cp950",
            ms950: "cp950",
            950: "cp950",
            cp950: {
                type: "_dbcs", table: function () {
                    return n(104)
                }
            },
            big5: "big5hkscs",
            big5hkscs: {
                type: "_dbcs", table: function () {
                    return n(104).concat(n(105))
                }, encodeSkipVals: [41676]
            },
            cnbig5: "big5hkscs",
            csbig5: "big5hkscs",
            xxbig5: "big5hkscs"
        }
    }, function (t, e) {
        t.exports = [["0", "\0", 128], ["a1", "｡", 62], ["8140", "　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈", 9, "＋－±×"], ["8180", "÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"], ["81b8", "∈∋⊆⊇⊂⊃∪∩"], ["81c8", "∧∨￢⇒⇔∀∃"], ["81da", "∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"], ["81f0", "Å‰♯♭♪†‡¶"], ["81fc", "◯"], ["824f", "０", 9], ["8260", "Ａ", 25], ["8281", "ａ", 25], ["829f", "ぁ", 82], ["8340", "ァ", 62], ["8380", "ム", 22], ["839f", "Α", 16, "Σ", 6], ["83bf", "α", 16, "σ", 6], ["8440", "А", 5, "ЁЖ", 25], ["8470", "а", 5, "ёж", 7], ["8480", "о", 17], ["849f", "─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"], ["8740", "①", 19, "Ⅰ", 9], ["875f", "㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"], ["877e", "㍻"], ["8780", "〝〟№㏍℡㊤", 4, "㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"], ["889f", "亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"], ["8940", "院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"], ["8980", "園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"], ["8a40", "魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"], ["8a80", "橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"], ["8b40", "機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"], ["8b80", "朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"], ["8c40", "掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"], ["8c80", "劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"], ["8d40", "后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"], ["8d80", "項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"], ["8e40", "察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"], ["8e80", "死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"], ["8f40", "宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"], ["8f80", "準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"], ["9040", "拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"], ["9080", "逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"], ["9140", "繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"], ["9180", "操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"], ["9240", "叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"], ["9280", "逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"], ["9340", "邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"], ["9380", "凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"], ["9440", "如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"], ["9480", "楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"], ["9540", "鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"], ["9580", "斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"], ["9640", "法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"], ["9680", "摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"], ["9740", "諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"], ["9780", "沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"], ["9840", "蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"], ["989f", "弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"], ["9940", "僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"], ["9980", "凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"], ["9a40", "咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"], ["9a80", "噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"], ["9b40", "奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"], ["9b80", "它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"], ["9c40", "廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"], ["9c80", "怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"], ["9d40", "戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"], ["9d80", "捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"], ["9e40", "曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"], ["9e80", "梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"], ["9f40", "檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"], ["9f80", "麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"], ["e040", "漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"], ["e080", "烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"], ["e140", "瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"], ["e180", "痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"], ["e240", "磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"], ["e280", "窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"], ["e340", "紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"], ["e380", "縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"], ["e440", "隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"], ["e480", "艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"], ["e540", "蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"], ["e580", "蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"], ["e640", "襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"], ["e680", "諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"], ["e740", "蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"], ["e780", "轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"], ["e840", "錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"], ["e880", "閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"], ["e940", "顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"], ["e980", "騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"], ["ea40", "鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"], ["ea80", "黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"], ["ed40", "纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"], ["ed80", "塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"], ["ee40", "犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"], ["ee80", "蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"], ["eeef", "ⅰ", 9, "￢￤＇＂"], ["f040", "", 62], ["f080", "", 124], ["f140", "", 62], ["f180", "", 124], ["f240", "", 62], ["f280", "", 124], ["f340", "", 62], ["f380", "", 124], ["f440", "", 62], ["f480", "", 124], ["f540", "", 62], ["f580", "", 124], ["f640", "", 62], ["f680", "", 124], ["f740", "", 62], ["f780", "", 124], ["f840", "", 62], ["f880", "", 124], ["f940", ""], ["fa40", "ⅰ", 9, "Ⅰ", 9, "￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"], ["fa80", "兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"], ["fb40", "涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"], ["fb80", "祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"], ["fc40", "髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"]]
    }, function (t, e) {
        t.exports = [["0", "\0", 127], ["8ea1", "｡", 62], ["a1a1", "　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈", 9, "＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"], ["a2a1", "◆□■△▲▽▼※〒→←↑↓〓"], ["a2ba", "∈∋⊆⊇⊂⊃∪∩"], ["a2ca", "∧∨￢⇒⇔∀∃"], ["a2dc", "∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"], ["a2f2", "Å‰♯♭♪†‡¶"], ["a2fe", "◯"], ["a3b0", "０", 9], ["a3c1", "Ａ", 25], ["a3e1", "ａ", 25], ["a4a1", "ぁ", 82], ["a5a1", "ァ", 85], ["a6a1", "Α", 16, "Σ", 6], ["a6c1", "α", 16, "σ", 6], ["a7a1", "А", 5, "ЁЖ", 25], ["a7d1", "а", 5, "ёж", 25], ["a8a1", "─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"], ["ada1", "①", 19, "Ⅰ", 9], ["adc0", "㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"], ["addf", "㍻〝〟№㏍℡㊤", 4, "㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"], ["b0a1", "亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"], ["b1a1", "院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"], ["b2a1", "押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"], ["b3a1", "魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"], ["b4a1", "粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"], ["b5a1", "機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"], ["b6a1", "供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"], ["b7a1", "掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"], ["b8a1", "検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"], ["b9a1", "后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"], ["baa1", "此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"], ["bba1", "察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"], ["bca1", "次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"], ["bda1", "宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"], ["bea1", "勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"], ["bfa1", "拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"], ["c0a1", "澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"], ["c1a1", "繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"], ["c2a1", "臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"], ["c3a1", "叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"], ["c4a1", "帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"], ["c5a1", "邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"], ["c6a1", "董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"], ["c7a1", "如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"], ["c8a1", "函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"], ["c9a1", "鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"], ["caa1", "福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"], ["cba1", "法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"], ["cca1", "漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"], ["cda1", "諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"], ["cea1", "痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"], ["cfa1", "蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"], ["d0a1", "弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"], ["d1a1", "僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"], ["d2a1", "辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"], ["d3a1", "咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"], ["d4a1", "圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"], ["d5a1", "奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"], ["d6a1", "屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"], ["d7a1", "廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"], ["d8a1", "悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"], ["d9a1", "戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"], ["daa1", "據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"], ["dba1", "曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"], ["dca1", "棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"], ["dda1", "檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"], ["dea1", "沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"], ["dfa1", "漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"], ["e0a1", "燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"], ["e1a1", "瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"], ["e2a1", "癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"], ["e3a1", "磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"], ["e4a1", "筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"], ["e5a1", "紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"], ["e6a1", "罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"], ["e7a1", "隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"], ["e8a1", "茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"], ["e9a1", "蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"], ["eaa1", "蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"], ["eba1", "襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"], ["eca1", "譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"], ["eda1", "蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"], ["eea1", "遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"], ["efa1", "錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"], ["f0a1", "陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"], ["f1a1", "顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"], ["f2a1", "髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"], ["f3a1", "鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"], ["f4a1", "堯槇遙瑤凜熙"], ["f9a1", "纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"], ["faa1", "忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"], ["fba1", "犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"], ["fca1", "釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"], ["fcf1", "ⅰ", 9, "￢￤＇＂"], ["8fa2af", "˘ˇ¸˙˝¯˛˚～΄΅"], ["8fa2c2", "¡¦¿"], ["8fa2eb", "ºª©®™¤№"], ["8fa6e1", "ΆΈΉΊΪ"], ["8fa6e7", "Ό"], ["8fa6e9", "ΎΫ"], ["8fa6ec", "Ώ"], ["8fa6f1", "άέήίϊΐόςύϋΰώ"], ["8fa7c2", "Ђ", 10, "ЎЏ"], ["8fa7f2", "ђ", 10, "ўџ"], ["8fa9a1", "ÆĐ"], ["8fa9a4", "Ħ"], ["8fa9a6", "Ĳ"], ["8fa9a8", "ŁĿ"], ["8fa9ab", "ŊØŒ"], ["8fa9af", "ŦÞ"], ["8fa9c1", "æđðħıĳĸłŀŉŋøœßŧþ"], ["8faaa1", "ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"], ["8faaba", "ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"], ["8faba1", "áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"], ["8fabbd", "ġĥíìïîǐ"], ["8fabc5", "īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"], ["8fb0a1", "丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"], ["8fb1a1", "侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"], ["8fb2a1", "傒傓傔傖傛傜傞", 4, "傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"], ["8fb3a1", "凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"], ["8fb4a1", "匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"], ["8fb5a1", "咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"], ["8fb6a1", "嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍", 5, "嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤", 4, "囱囫园"], ["8fb7a1", "囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭", 4, "坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"], ["8fb8a1", "堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"], ["8fb9a1", "奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"], ["8fbaa1", "嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖", 4, "寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"], ["8fbba1", "屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"], ["8fbca1", "巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪", 4, "幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"], ["8fbda1", "彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐", 4, "忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"], ["8fbea1", "悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐", 4, "愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"], ["8fbfa1", "懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"], ["8fc0a1", "捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"], ["8fc1a1", "擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"], ["8fc2a1", "昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"], ["8fc3a1", "杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮", 4, "桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"], ["8fc4a1", "棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"], ["8fc5a1", "樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"], ["8fc6a1", "歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"], ["8fc7a1", "泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"], ["8fc8a1", "湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"], ["8fc9a1", "濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔", 4, "炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃", 4, "焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"], ["8fcaa1", "煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"], ["8fcba1", "狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"], ["8fcca1", "珿琀琁琄琇琊琑琚琛琤琦琨", 9, "琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"], ["8fcda1", "甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹", 5, "疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"], ["8fcea1", "瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢", 6, "皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"], ["8fcfa1", "睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"], ["8fd0a1", "碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"], ["8fd1a1", "秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"], ["8fd2a1", "笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙", 5], ["8fd3a1", "籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"], ["8fd4a1", "綞綦綧綪綳綶綷綹緂", 4, "緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"], ["8fd5a1", "罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"], ["8fd6a1", "胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"], ["8fd7a1", "艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"], ["8fd8a1", "荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"], ["8fd9a1", "蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏", 4, "蕖蕙蕜", 6, "蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"], ["8fdaa1", "藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠", 4, "虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"], ["8fdba1", "蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃", 6, "螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"], ["8fdca1", "蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊", 4, "裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"], ["8fdda1", "襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔", 4, "觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"], ["8fdea1", "誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂", 4, "譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"], ["8fdfa1", "貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"], ["8fe0a1", "踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"], ["8fe1a1", "轃轇轏轑", 4, "轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"], ["8fe2a1", "郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"], ["8fe3a1", "釂釃釅釓釔釗釙釚釞釤釥釩釪釬", 5, "釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵", 4, "鉻鉼鉽鉿銈銉銊銍銎銒銗"], ["8fe4a1", "銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿", 4, "鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"], ["8fe5a1", "鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉", 4, "鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"], ["8fe6a1", "镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"], ["8fe7a1", "霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"], ["8fe8a1", "頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱", 4, "餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"], ["8fe9a1", "馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿", 4], ["8feaa1", "鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪", 4, "魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"], ["8feba1", "鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦", 4, "鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"], ["8feca1", "鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"], ["8feda1", "黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃", 4, "齓齕齖齗齘齚齝齞齨齩齭", 4, "齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"]]
    }, function (t, e) {
        t.exports = [["0", "\0", 127, "€"], ["8140", "丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪", 5, "乲乴", 9, "乿", 6, "亇亊"], ["8180", "亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂", 6, "伋伌伒", 4, "伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾", 4, "佄佅佇", 5, "佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"], ["8240", "侤侫侭侰", 4, "侶", 8, "俀俁係俆俇俈俉俋俌俍俒", 4, "俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿", 11], ["8280", "個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯", 10, "倻倽倿偀偁偂偄偅偆偉偊偋偍偐", 4, "偖偗偘偙偛偝", 7, "偦", 5, "偭", 8, "偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎", 20, "傤傦傪傫傭", 4, "傳", 6, "傼"], ["8340", "傽", 17, "僐", 5, "僗僘僙僛", 10, "僨僩僪僫僯僰僱僲僴僶", 4, "僼", 9, "儈"], ["8380", "儉儊儌", 5, "儓", 13, "儢", 28, "兂兇兊兌兎兏児兒兓兗兘兙兛兝", 4, "兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦", 4, "冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒", 5], ["8440", "凘凙凚凜凞凟凢凣凥", 5, "凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄", 5, "剋剎剏剒剓剕剗剘"], ["8480", "剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳", 9, "剾劀劃", 4, "劉", 6, "劑劒劔", 6, "劜劤劥劦劧劮劯劰労", 9, "勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務", 5, "勠勡勢勣勥", 10, "勱", 7, "勻勼勽匁匂匃匄匇匉匊匋匌匎"], ["8540", "匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯", 9, "匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"], ["8580", "厐", 4, "厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯", 6, "厷厸厹厺厼厽厾叀參", 4, "収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝", 4, "呣呥呧呩", 7, "呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"], ["8640", "咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠", 4, "哫哬哯哰哱哴", 5, "哻哾唀唂唃唄唅唈唊", 4, "唒唓唕", 5, "唜唝唞唟唡唥唦"], ["8680", "唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋", 4, "啑啒啓啔啗", 4, "啝啞啟啠啢啣啨啩啫啯", 5, "啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠", 6, "喨", 8, "喲喴営喸喺喼喿", 4, "嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗", 4, "嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸", 4, "嗿嘂嘃嘄嘅"], ["8740", "嘆嘇嘊嘋嘍嘐", 7, "嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀", 11, "噏", 4, "噕噖噚噛噝", 4], ["8780", "噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽", 7, "嚇", 6, "嚐嚑嚒嚔", 14, "嚤", 10, "嚰", 6, "嚸嚹嚺嚻嚽", 12, "囋", 8, "囕囖囘囙囜団囥", 5, "囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國", 6], ["8840", "園", 9, "圝圞圠圡圢圤圥圦圧圫圱圲圴", 4, "圼圽圿坁坃坄坅坆坈坉坋坒", 4, "坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"], ["8880", "垁垇垈垉垊垍", 4, "垔", 6, "垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹", 8, "埄", 6, "埌埍埐埑埓埖埗埛埜埞埡埢埣埥", 7, "埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥", 4, "堫", 4, "報堲堳場堶", 7], ["8940", "堾", 5, "塅", 6, "塎塏塐塒塓塕塖塗塙", 4, "塟", 5, "塦", 4, "塭", 16, "塿墂墄墆墇墈墊墋墌"], ["8980", "墍", 4, "墔", 4, "墛墜墝墠", 7, "墪", 17, "墽墾墿壀壂壃壄壆", 10, "壒壓壔壖", 13, "壥", 5, "壭壯壱売壴壵壷壸壺", 7, "夃夅夆夈", 4, "夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"], ["8a40", "夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛", 4, "奡奣奤奦", 12, "奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"], ["8a80", "妧妬妭妰妱妳", 5, "妺妼妽妿", 6, "姇姈姉姌姍姎姏姕姖姙姛姞", 4, "姤姦姧姩姪姫姭", 11, "姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪", 6, "娳娵娷", 4, "娽娾娿婁", 4, "婇婈婋", 9, "婖婗婘婙婛", 5], ["8b40", "婡婣婤婥婦婨婩婫", 8, "婸婹婻婼婽婾媀", 17, "媓", 6, "媜", 13, "媫媬"], ["8b80", "媭", 4, "媴媶媷媹", 4, "媿嫀嫃", 5, "嫊嫋嫍", 4, "嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬", 4, "嫲", 22, "嬊", 11, "嬘", 25, "嬳嬵嬶嬸", 7, "孁", 6], ["8c40", "孈", 7, "孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"], ["8c80", "寑寔", 8, "寠寢寣實寧審", 4, "寯寱", 6, "寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧", 6, "屰屲", 6, "屻屼屽屾岀岃", 4, "岉岊岋岎岏岒岓岕岝", 4, "岤", 4], ["8d40", "岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅", 5, "峌", 5, "峓", 5, "峚", 6, "峢峣峧峩峫峬峮峯峱", 9, "峼", 4], ["8d80", "崁崄崅崈", 5, "崏", 4, "崕崗崘崙崚崜崝崟", 4, "崥崨崪崫崬崯", 4, "崵", 7, "崿", 7, "嵈嵉嵍", 10, "嵙嵚嵜嵞", 10, "嵪嵭嵮嵰嵱嵲嵳嵵", 12, "嶃", 21, "嶚嶛嶜嶞嶟嶠"], ["8e40", "嶡", 21, "嶸", 12, "巆", 6, "巎", 12, "巜巟巠巣巤巪巬巭"], ["8e80", "巰巵巶巸", 4, "巿帀帄帇帉帊帋帍帎帒帓帗帞", 7, "帨", 4, "帯帰帲", 4, "帹帺帾帿幀幁幃幆", 5, "幍", 6, "幖", 4, "幜幝幟幠幣", 14, "幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨", 4, "庮", 4, "庴庺庻庼庽庿", 6], ["8f40", "廆廇廈廋", 5, "廔廕廗廘廙廚廜", 11, "廩廫", 8, "廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"], ["8f80", "弨弫弬弮弰弲", 6, "弻弽弾弿彁", 14, "彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢", 5, "復徫徬徯", 5, "徶徸徹徺徻徾", 4, "忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"], ["9040", "怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰", 4, "怶", 4, "怽怾恀恄", 6, "恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"], ["9080", "悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽", 7, "惇惈惉惌", 4, "惒惓惔惖惗惙惛惞惡", 4, "惪惱惲惵惷惸惻", 4, "愂愃愄愅愇愊愋愌愐", 4, "愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬", 18, "慀", 6], ["9140", "慇慉態慍慏慐慒慓慔慖", 6, "慞慟慠慡慣慤慥慦慩", 6, "慱慲慳慴慶慸", 18, "憌憍憏", 4, "憕"], ["9180", "憖", 6, "憞", 8, "憪憫憭", 9, "憸", 5, "憿懀懁懃", 4, "應懌", 4, "懓懕", 16, "懧", 13, "懶", 8, "戀", 5, "戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸", 4, "扂扄扅扆扊"], ["9240", "扏扐払扖扗扙扚扜", 6, "扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋", 5, "抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"], ["9280", "拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳", 5, "挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖", 7, "捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙", 6, "採掤掦掫掯掱掲掵掶掹掻掽掿揀"], ["9340", "揁揂揃揅揇揈揊揋揌揑揓揔揕揗", 6, "揟揢揤", 4, "揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆", 4, "損搎搑搒搕", 5, "搝搟搢搣搤"], ["9380", "搥搧搨搩搫搮", 5, "搵", 4, "搻搼搾摀摂摃摉摋", 6, "摓摕摖摗摙", 4, "摟", 7, "摨摪摫摬摮", 9, "摻", 6, "撃撆撈", 8, "撓撔撗撘撚撛撜撝撟", 4, "撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆", 6, "擏擑擓擔擕擖擙據"], ["9440", "擛擜擝擟擠擡擣擥擧", 24, "攁", 7, "攊", 7, "攓", 4, "攙", 8], ["9480", "攢攣攤攦", 4, "攬攭攰攱攲攳攷攺攼攽敀", 4, "敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數", 14, "斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱", 7, "斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘", 7, "旡旣旤旪旫"], ["9540", "旲旳旴旵旸旹旻", 4, "昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷", 4, "昽昿晀時晄", 6, "晍晎晐晑晘"], ["9580", "晙晛晜晝晞晠晢晣晥晧晩", 4, "晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘", 4, "暞", 8, "暩", 4, "暯", 4, "暵暶暷暸暺暻暼暽暿", 25, "曚曞", 7, "曧曨曪", 5, "曱曵曶書曺曻曽朁朂會"], ["9640", "朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠", 5, "朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗", 4, "杝杢杣杤杦杧杫杬杮東杴杶"], ["9680", "杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹", 7, "柂柅", 9, "柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵", 7, "柾栁栂栃栄栆栍栐栒栔栕栘", 4, "栞栟栠栢", 6, "栫", 6, "栴栵栶栺栻栿桇桋桍桏桒桖", 5], ["9740", "桜桝桞桟桪桬", 7, "桵桸", 8, "梂梄梇", 7, "梐梑梒梔梕梖梘", 9, "梣梤梥梩梪梫梬梮梱梲梴梶梷梸"], ["9780", "梹", 6, "棁棃", 5, "棊棌棎棏棐棑棓棔棖棗棙棛", 4, "棡棢棤", 9, "棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆", 4, "椌椏椑椓", 11, "椡椢椣椥", 7, "椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃", 16, "楕楖楘楙楛楜楟"], ["9840", "楡楢楤楥楧楨楩楪楬業楯楰楲", 4, "楺楻楽楾楿榁榃榅榊榋榌榎", 5, "榖榗榙榚榝", 9, "榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"], ["9880", "榾榿槀槂", 7, "構槍槏槑槒槓槕", 5, "槜槝槞槡", 11, "槮槯槰槱槳", 9, "槾樀", 9, "樋", 11, "標", 5, "樠樢", 5, "権樫樬樭樮樰樲樳樴樶", 6, "樿", 4, "橅橆橈", 7, "橑", 6, "橚"], ["9940", "橜", 4, "橢橣橤橦", 10, "橲", 6, "橺橻橽橾橿檁檂檃檅", 8, "檏檒", 4, "檘", 7, "檡", 5], ["9980", "檧檨檪檭", 114, "欥欦欨", 6], ["9a40", "欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍", 11, "歚", 7, "歨歩歫", 13, "歺歽歾歿殀殅殈"], ["9a80", "殌殎殏殐殑殔殕殗殘殙殜", 4, "殢", 7, "殫", 7, "殶殸", 6, "毀毃毄毆", 4, "毌毎毐毑毘毚毜", 4, "毢", 7, "毬毭毮毰毱毲毴毶毷毸毺毻毼毾", 6, "氈", 4, "氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋", 4, "汑汒汓汖汘"], ["9b40", "汙汚汢汣汥汦汧汫", 4, "汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"], ["9b80", "泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟", 5, "洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽", 4, "涃涄涆涇涊涋涍涏涐涒涖", 4, "涜涢涥涬涭涰涱涳涴涶涷涹", 5, "淁淂淃淈淉淊"], ["9c40", "淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽", 7, "渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"], ["9c80", "渶渷渹渻", 7, "湅", 7, "湏湐湑湒湕湗湙湚湜湝湞湠", 10, "湬湭湯", 14, "満溁溂溄溇溈溊", 4, "溑", 6, "溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪", 5], ["9d40", "滰滱滲滳滵滶滷滸滺", 7, "漃漄漅漇漈漊", 4, "漐漑漒漖", 9, "漡漢漣漥漦漧漨漬漮漰漲漴漵漷", 6, "漿潀潁潂"], ["9d80", "潃潄潅潈潉潊潌潎", 9, "潙潚潛潝潟潠潡潣潤潥潧", 5, "潯潰潱潳潵潶潷潹潻潽", 6, "澅澆澇澊澋澏", 12, "澝澞澟澠澢", 4, "澨", 10, "澴澵澷澸澺", 5, "濁濃", 5, "濊", 6, "濓", 10, "濟濢濣濤濥"], ["9e40", "濦", 7, "濰", 32, "瀒", 7, "瀜", 6, "瀤", 6], ["9e80", "瀫", 9, "瀶瀷瀸瀺", 17, "灍灎灐", 13, "灟", 11, "灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞", 12, "炰炲炴炵炶為炾炿烄烅烆烇烉烋", 12, "烚"], ["9f40", "烜烝烞烠烡烢烣烥烪烮烰", 6, "烸烺烻烼烾", 10, "焋", 4, "焑焒焔焗焛", 10, "焧", 7, "焲焳焴"], ["9f80", "焵焷", 13, "煆煇煈煉煋煍煏", 12, "煝煟", 4, "煥煩", 4, "煯煰煱煴煵煶煷煹煻煼煾", 5, "熅", 4, "熋熌熍熎熐熑熒熓熕熖熗熚", 4, "熡", 6, "熩熪熫熭", 5, "熴熶熷熸熺", 8, "燄", 9, "燏", 4], ["a040", "燖", 9, "燡燢燣燤燦燨", 5, "燯", 9, "燺", 11, "爇", 19], ["a080", "爛爜爞", 9, "爩爫爭爮爯爲爳爴爺爼爾牀", 6, "牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅", 4, "犌犎犐犑犓", 11, "犠", 11, "犮犱犲犳犵犺", 6, "狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"], ["a1a1", "　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈", 7, "〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"], ["a2a1", "ⅰ", 9], ["a2b1", "⒈", 19, "⑴", 19, "①", 9], ["a2e5", "㈠", 9], ["a2f1", "Ⅰ", 11], ["a3a1", "！＂＃￥％", 88, "￣"], ["a4a1", "ぁ", 82], ["a5a1", "ァ", 85], ["a6a1", "Α", 16, "Σ", 6], ["a6c1", "α", 16, "σ", 6], ["a6e0", "︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"], ["a6ee", "︻︼︷︸︱"], ["a6f4", "︳︴"], ["a7a1", "А", 5, "ЁЖ", 25], ["a7d1", "а", 5, "ёж", 25], ["a840", "ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═", 35, "▁", 6], ["a880", "█", 7, "▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"], ["a8a1", "āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"], ["a8bd", "ńň"], ["a8c0", "ɡ"], ["a8c5", "ㄅ", 36], ["a940", "〡", 8, "㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"], ["a959", "℡㈱"], ["a95c", "‐"], ["a960", "ー゛゜ヽヾ〆ゝゞ﹉", 9, "﹔﹕﹖﹗﹙", 8], ["a980", "﹢", 4, "﹨﹩﹪﹫"], ["a996", "〇"], ["a9a4", "─", 75], ["aa40", "狜狝狟狢", 5, "狪狫狵狶狹狽狾狿猀猂猄", 5, "猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀", 8], ["aa80", "獉獊獋獌獎獏獑獓獔獕獖獘", 7, "獡", 10, "獮獰獱"], ["ab40", "獲", 11, "獿", 4, "玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣", 5, "玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃", 4], ["ab80", "珋珌珎珒", 6, "珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳", 4], ["ac40", "珸", 10, "琄琇琈琋琌琍琎琑", 8, "琜", 5, "琣琤琧琩琫琭琯琱琲琷", 4, "琽琾琿瑀瑂", 11], ["ac80", "瑎", 6, "瑖瑘瑝瑠", 12, "瑮瑯瑱", 4, "瑸瑹瑺"], ["ad40", "瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑", 10, "璝璟", 7, "璪", 15, "璻", 12], ["ad80", "瓈", 9, "瓓", 8, "瓝瓟瓡瓥瓧", 6, "瓰瓱瓲"], ["ae40", "瓳瓵瓸", 6, "甀甁甂甃甅", 7, "甎甐甒甔甕甖甗甛甝甞甠", 4, "甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"], ["ae80", "畝", 7, "畧畨畩畫", 6, "畳畵當畷畺", 4, "疀疁疂疄疅疇"], ["af40", "疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦", 4, "疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"], ["af80", "瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"], ["b040", "癅", 6, "癎", 5, "癕癗", 4, "癝癟癠癡癢癤", 6, "癬癭癮癰", 7, "癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"], ["b080", "皜", 7, "皥", 8, "皯皰皳皵", 9, "盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"], ["b140", "盄盇盉盋盌盓盕盙盚盜盝盞盠", 4, "盦", 7, "盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎", 10, "眛眜眝眞眡眣眤眥眧眪眫"], ["b180", "眬眮眰", 4, "眹眻眽眾眿睂睄睅睆睈", 7, "睒", 7, "睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"], ["b240", "睝睞睟睠睤睧睩睪睭", 11, "睺睻睼瞁瞂瞃瞆", 5, "瞏瞐瞓", 11, "瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶", 4], ["b280", "瞼瞾矀", 12, "矎", 8, "矘矙矚矝", 4, "矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"], ["b340", "矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃", 5, "砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"], ["b380", "硛硜硞", 11, "硯", 7, "硸硹硺硻硽", 6, "场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"], ["b440", "碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨", 7, "碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚", 9], ["b480", "磤磥磦磧磩磪磫磭", 4, "磳磵磶磸磹磻", 5, "礂礃礄礆", 6, "础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"], ["b540", "礍", 5, "礔", 9, "礟", 4, "礥", 14, "礵", 4, "礽礿祂祃祄祅祇祊", 8, "祔祕祘祙祡祣"], ["b580", "祤祦祩祪祫祬祮祰", 6, "祹祻", 4, "禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"], ["b640", "禓", 6, "禛", 11, "禨", 10, "禴", 4, "禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙", 5, "秠秡秢秥秨秪"], ["b680", "秬秮秱", 6, "秹秺秼秾秿稁稄稅稇稈稉稊稌稏", 4, "稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"], ["b740", "稝稟稡稢稤", 14, "稴稵稶稸稺稾穀", 5, "穇", 9, "穒", 4, "穘", 16], ["b780", "穩", 6, "穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"], ["b840", "窣窤窧窩窪窫窮", 4, "窴", 10, "竀", 10, "竌", 9, "竗竘竚竛竜竝竡竢竤竧", 5, "竮竰竱竲竳"], ["b880", "竴", 4, "竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"], ["b940", "笯笰笲笴笵笶笷笹笻笽笿", 5, "筆筈筊筍筎筓筕筗筙筜筞筟筡筣", 10, "筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆", 6, "箎箏"], ["b980", "箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹", 7, "篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"], ["ba40", "篅篈築篊篋篍篎篏篐篒篔", 4, "篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲", 4, "篸篹篺篻篽篿", 7, "簈簉簊簍簎簐", 5, "簗簘簙"], ["ba80", "簚", 4, "簠", 5, "簨簩簫", 12, "簹", 5, "籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"], ["bb40", "籃", 9, "籎", 36, "籵", 5, "籾", 9], ["bb80", "粈粊", 6, "粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴", 4, "粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"], ["bc40", "粿糀糂糃糄糆糉糋糎", 6, "糘糚糛糝糞糡", 6, "糩", 5, "糰", 7, "糹糺糼", 13, "紋", 5], ["bc80", "紑", 14, "紡紣紤紥紦紨紩紪紬紭紮細", 6, "肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"], ["bd40", "紷", 54, "絯", 7], ["bd80", "絸", 32, "健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"], ["be40", "継", 12, "綧", 6, "綯", 42], ["be80", "線", 32, "尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"], ["bf40", "緻", 62], ["bf80", "縺縼", 4, "繂", 4, "繈", 21, "俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"], ["c040", "繞", 35, "纃", 23, "纜纝纞"], ["c080", "纮纴纻纼绖绤绬绹缊缐缞缷缹缻", 6, "罃罆", 9, "罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"], ["c140", "罖罙罛罜罝罞罠罣", 4, "罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂", 7, "羋羍羏", 4, "羕", 4, "羛羜羠羢羣羥羦羨", 6, "羱"], ["c180", "羳", 4, "羺羻羾翀翂翃翄翆翇翈翉翋翍翏", 4, "翖翗翙", 5, "翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"], ["c240", "翤翧翨翪翫翬翭翯翲翴", 6, "翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫", 5, "耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"], ["c280", "聙聛", 13, "聫", 5, "聲", 11, "隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"], ["c340", "聾肁肂肅肈肊肍", 5, "肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇", 4, "胏", 6, "胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"], ["c380", "脌脕脗脙脛脜脝脟", 12, "脭脮脰脳脴脵脷脹", 4, "脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"], ["c440", "腀", 5, "腇腉腍腎腏腒腖腗腘腛", 4, "腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃", 4, "膉膋膌膍膎膐膒", 5, "膙膚膞", 4, "膤膥"], ["c480", "膧膩膫", 7, "膴", 5, "膼膽膾膿臄臅臇臈臉臋臍", 6, "摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"], ["c540", "臔", 14, "臤臥臦臨臩臫臮", 4, "臵", 5, "臽臿舃與", 4, "舎舏舑舓舕", 5, "舝舠舤舥舦舧舩舮舲舺舼舽舿"], ["c580", "艀艁艂艃艅艆艈艊艌艍艎艐", 7, "艙艛艜艝艞艠", 7, "艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"], ["c640", "艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"], ["c680", "苺苼", 4, "茊茋茍茐茒茓茖茘茙茝", 9, "茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"], ["c740", "茾茿荁荂荄荅荈荊", 4, "荓荕", 4, "荝荢荰", 6, "荹荺荾", 6, "莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡", 6, "莬莭莮"], ["c780", "莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"], ["c840", "菮華菳", 4, "菺菻菼菾菿萀萂萅萇萈萉萊萐萒", 5, "萙萚萛萞", 5, "萩", 7, "萲", 5, "萹萺萻萾", 7, "葇葈葉"], ["c880", "葊", 6, "葒", 4, "葘葝葞葟葠葢葤", 4, "葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"], ["c940", "葽", 4, "蒃蒄蒅蒆蒊蒍蒏", 7, "蒘蒚蒛蒝蒞蒟蒠蒢", 12, "蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"], ["c980", "蓘", 4, "蓞蓡蓢蓤蓧", 4, "蓭蓮蓯蓱", 10, "蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"], ["ca40", "蔃", 8, "蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢", 8, "蔭", 9, "蔾", 4, "蕄蕅蕆蕇蕋", 10], ["ca80", "蕗蕘蕚蕛蕜蕝蕟", 4, "蕥蕦蕧蕩", 8, "蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"], ["cb40", "薂薃薆薈", 6, "薐", 10, "薝", 6, "薥薦薧薩薫薬薭薱", 5, "薸薺", 6, "藂", 6, "藊", 4, "藑藒"], ["cb80", "藔藖", 5, "藝", 6, "藥藦藧藨藪", 14, "恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"], ["cc40", "藹藺藼藽藾蘀", 4, "蘆", 10, "蘒蘓蘔蘕蘗", 15, "蘨蘪", 13, "蘹蘺蘻蘽蘾蘿虀"], ["cc80", "虁", 11, "虒虓處", 4, "虛虜虝號虠虡虣", 7, "獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"], ["cd40", "虭虯虰虲", 6, "蚃", 6, "蚎", 4, "蚔蚖", 5, "蚞", 4, "蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻", 4, "蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"], ["cd80", "蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"], ["ce40", "蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀", 6, "蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚", 5, "蝡蝢蝦", 7, "蝯蝱蝲蝳蝵"], ["ce80", "蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎", 4, "螔螕螖螘", 6, "螠", 4, "巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"], ["cf40", "螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁", 4, "蟇蟈蟉蟌", 4, "蟔", 6, "蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯", 9], ["cf80", "蟺蟻蟼蟽蟿蠀蠁蠂蠄", 5, "蠋", 7, "蠔蠗蠘蠙蠚蠜", 4, "蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"], ["d040", "蠤", 13, "蠳", 5, "蠺蠻蠽蠾蠿衁衂衃衆", 5, "衎", 5, "衕衖衘衚", 6, "衦衧衪衭衯衱衳衴衵衶衸衹衺"], ["d080", "衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗", 4, "袝", 4, "袣袥", 5, "小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"], ["d140", "袬袮袯袰袲", 4, "袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚", 4, "裠裡裦裧裩", 6, "裲裵裶裷裺裻製裿褀褁褃", 5], ["d180", "褉褋", 4, "褑褔", 4, "褜", 4, "褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"], ["d240", "褸", 8, "襂襃襅", 24, "襠", 5, "襧", 19, "襼"], ["d280", "襽襾覀覂覄覅覇", 26, "摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"], ["d340", "覢", 30, "觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴", 6], ["d380", "觻", 4, "訁", 5, "計", 21, "印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"], ["d440", "訞", 31, "訿", 8, "詉", 21], ["d480", "詟", 25, "詺", 6, "浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"], ["d540", "誁", 7, "誋", 7, "誔", 46], ["d580", "諃", 32, "铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"], ["d640", "諤", 34, "謈", 27], ["d680", "謤謥謧", 30, "帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"], ["d740", "譆", 31, "譧", 4, "譭", 25], ["d780", "讇", 24, "讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"], ["d840", "谸", 8, "豂豃豄豅豈豊豋豍", 7, "豖豗豘豙豛", 5, "豣", 6, "豬", 6, "豴豵豶豷豻", 6, "貃貄貆貇"], ["d880", "貈貋貍", 6, "貕貖貗貙", 20, "亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"], ["d940", "貮", 62], ["d980", "賭", 32, "佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"], ["da40", "贎", 14, "贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸", 8, "趂趃趆趇趈趉趌", 4, "趒趓趕", 9, "趠趡"], ["da80", "趢趤", 12, "趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"], ["db40", "跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾", 6, "踆踇踈踋踍踎踐踑踒踓踕", 7, "踠踡踤", 4, "踫踭踰踲踳踴踶踷踸踻踼踾"], ["db80", "踿蹃蹅蹆蹌", 4, "蹓", 5, "蹚", 11, "蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"], ["dc40", "蹳蹵蹷", 4, "蹽蹾躀躂躃躄躆躈", 6, "躑躒躓躕", 6, "躝躟", 11, "躭躮躰躱躳", 6, "躻", 7], ["dc80", "軃", 10, "軏", 21, "堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"], ["dd40", "軥", 62], ["dd80", "輤", 32, "荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"], ["de40", "轅", 32, "轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"], ["de80", "迉", 4, "迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"], ["df40", "這逜連逤逥逧", 5, "逰", 4, "逷逹逺逽逿遀遃遅遆遈", 4, "過達違遖遙遚遜", 5, "遤遦遧適遪遫遬遯", 4, "遶", 6, "遾邁"], ["df80", "還邅邆邇邉邊邌", 4, "邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"], ["e040", "郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅", 19, "鄚鄛鄜"], ["e080", "鄝鄟鄠鄡鄤", 10, "鄰鄲", 6, "鄺", 8, "酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"], ["e140", "酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀", 4, "醆醈醊醎醏醓", 6, "醜", 5, "醤", 5, "醫醬醰醱醲醳醶醷醸醹醻"], ["e180", "醼", 10, "釈釋釐釒", 9, "針", 8, "帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"], ["e240", "釦", 62], ["e280", "鈥", 32, "狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧", 5, "饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"], ["e340", "鉆", 45, "鉵", 16], ["e380", "銆", 7, "銏", 24, "恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"], ["e440", "銨", 5, "銯", 24, "鋉", 31], ["e480", "鋩", 32, "洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"], ["e540", "錊", 51, "錿", 10], ["e580", "鍊", 31, "鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"], ["e640", "鍬", 34, "鎐", 27], ["e680", "鎬", 29, "鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"], ["e740", "鏎", 7, "鏗", 54], ["e780", "鐎", 32, "纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡", 6, "缪缫缬缭缯", 4, "缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"], ["e840", "鐯", 14, "鐿", 43, "鑬鑭鑮鑯"], ["e880", "鑰", 20, "钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"], ["e940", "锧锳锽镃镈镋镕镚镠镮镴镵長", 7, "門", 42], ["e980", "閫", 32, "椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"], ["ea40", "闌", 27, "闬闿阇阓阘阛阞阠阣", 6, "阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"], ["ea80", "陘陙陚陜陝陞陠陣陥陦陫陭", 4, "陳陸", 12, "隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"], ["eb40", "隌階隑隒隓隕隖隚際隝", 9, "隨", 7, "隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖", 9, "雡", 6, "雫"], ["eb80", "雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗", 4, "霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"], ["ec40", "霡", 8, "霫霬霮霯霱霳", 4, "霺霻霼霽霿", 18, "靔靕靗靘靚靜靝靟靣靤靦靧靨靪", 7], ["ec80", "靲靵靷", 4, "靽", 7, "鞆", 4, "鞌鞎鞏鞐鞓鞕鞖鞗鞙", 4, "臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"], ["ed40", "鞞鞟鞡鞢鞤", 6, "鞬鞮鞰鞱鞳鞵", 46], ["ed80", "韤韥韨韮", 4, "韴韷", 23, "怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"], ["ee40", "頏", 62], ["ee80", "顎", 32, "睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶", 4, "钼钽钿铄铈", 6, "铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"], ["ef40", "顯", 5, "颋颎颒颕颙颣風", 37, "飏飐飔飖飗飛飜飝飠", 4], ["ef80", "飥飦飩", 30, "铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒", 4, "锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤", 8, "镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"], ["f040", "餈", 4, "餎餏餑", 28, "餯", 26], ["f080", "饊", 9, "饖", 12, "饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨", 4, "鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦", 6, "鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"], ["f140", "馌馎馚", 10, "馦馧馩", 47], ["f180", "駙", 32, "瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"], ["f240", "駺", 62], ["f280", "騹", 32, "颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"], ["f340", "驚", 17, "驲骃骉骍骎骔骕骙骦骩", 6, "骲骳骴骵骹骻骽骾骿髃髄髆", 4, "髍髎髏髐髒體髕髖髗髙髚髛髜"], ["f380", "髝髞髠髢髣髤髥髧髨髩髪髬髮髰", 8, "髺髼", 6, "鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"], ["f440", "鬇鬉", 5, "鬐鬑鬒鬔", 10, "鬠鬡鬢鬤", 10, "鬰鬱鬳", 7, "鬽鬾鬿魀魆魊魋魌魎魐魒魓魕", 5], ["f480", "魛", 32, "簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"], ["f540", "魼", 62], ["f580", "鮻", 32, "酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"], ["f640", "鯜", 62], ["f680", "鰛", 32, "觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅", 5, "龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞", 5, "鲥", 4, "鲫鲭鲮鲰", 7, "鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"], ["f740", "鰼", 62], ["f780", "鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾", 4, "鳈鳉鳑鳒鳚鳛鳠鳡鳌", 4, "鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"], ["f840", "鳣", 62], ["f880", "鴢", 32], ["f940", "鵃", 62], ["f980", "鶂", 32], ["fa40", "鶣", 62], ["fa80", "鷢", 32], ["fb40", "鸃", 27, "鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴", 9, "麀"], ["fb80", "麁麃麄麅麆麉麊麌", 5, "麔", 8, "麞麠", 5, "麧麨麩麪"], ["fc40", "麫", 8, "麵麶麷麹麺麼麿", 4, "黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰", 8, "黺黽黿", 6], ["fc80", "鼆", 4, "鼌鼏鼑鼒鼔鼕鼖鼘鼚", 5, "鼡鼣", 8, "鼭鼮鼰鼱"], ["fd40", "鼲", 4, "鼸鼺鼼鼿", 4, "齅", 10, "齒", 38], ["fd80", "齹", 5, "龁龂龍", 11, "龜龝龞龡", 4, "郎凉秊裏隣"], ["fe40", "兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"]]
    }, function (t, e) {
        t.exports = [["a140", "", 62], ["a180", "", 32], ["a240", "", 62], ["a280", "", 32], ["a2ab", "", 5], ["a2e3", "€"], ["a2ef", ""], ["a2fd", ""], ["a340", "", 62], ["a380", "", 31, "　"], ["a440", "", 62], ["a480", "", 32], ["a4f4", "", 10], ["a540", "", 62], ["a580", "", 32], ["a5f7", "", 7], ["a640", "", 62], ["a680", "", 32], ["a6b9", "", 7], ["a6d9", "", 6], ["a6ec", ""], ["a6f3", ""], ["a6f6", "", 8], ["a740", "", 62], ["a780", "", 32], ["a7c2", "", 14], ["a7f2", "", 12], ["a896", "", 10], ["a8bc", ""], ["a8bf", "ǹ"], ["a8c1", ""], ["a8ea", "", 20], ["a958", ""], ["a95b", ""], ["a95d", ""], ["a989", "〾⿰", 11], ["a997", "", 12], ["a9f0", "", 14], ["aaa1", "", 93], ["aba1", "", 93], ["aca1", "", 93], ["ada1", "", 93], ["aea1", "", 93], ["afa1", "", 93], ["d7fa", "", 4], ["f8a1", "", 93], ["f9a1", "", 93], ["faa1", "", 93], ["fba1", "", 93], ["fca1", "", 93], ["fda1", "", 93], ["fe50", "⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"], ["fe80", "䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓", 6, "䶮", 93]]
    }, function (t, e) {
        t.exports = {
            uChars: [128, 165, 169, 178, 184, 216, 226, 235, 238, 244, 248, 251, 253, 258, 276, 284, 300, 325, 329, 334, 364, 463, 465, 467, 469, 471, 473, 475, 477, 506, 594, 610, 712, 716, 730, 930, 938, 962, 970, 1026, 1104, 1106, 8209, 8215, 8218, 8222, 8231, 8241, 8244, 8246, 8252, 8365, 8452, 8454, 8458, 8471, 8482, 8556, 8570, 8596, 8602, 8713, 8720, 8722, 8726, 8731, 8737, 8740, 8742, 8748, 8751, 8760, 8766, 8777, 8781, 8787, 8802, 8808, 8816, 8854, 8858, 8870, 8896, 8979, 9322, 9372, 9548, 9588, 9616, 9622, 9634, 9652, 9662, 9672, 9676, 9680, 9702, 9735, 9738, 9793, 9795, 11906, 11909, 11913, 11917, 11928, 11944, 11947, 11951, 11956, 11960, 11964, 11979, 12284, 12292, 12312, 12319, 12330, 12351, 12436, 12447, 12535, 12543, 12586, 12842, 12850, 12964, 13200, 13215, 13218, 13253, 13263, 13267, 13270, 13384, 13428, 13727, 13839, 13851, 14617, 14703, 14801, 14816, 14964, 15183, 15471, 15585, 16471, 16736, 17208, 17325, 17330, 17374, 17623, 17997, 18018, 18212, 18218, 18301, 18318, 18760, 18811, 18814, 18820, 18823, 18844, 18848, 18872, 19576, 19620, 19738, 19887, 40870, 59244, 59336, 59367, 59413, 59417, 59423, 59431, 59437, 59443, 59452, 59460, 59478, 59493, 63789, 63866, 63894, 63976, 63986, 64016, 64018, 64021, 64025, 64034, 64037, 64042, 65074, 65093, 65107, 65112, 65127, 65132, 65375, 65510, 65536],
            gbChars: [0, 36, 38, 45, 50, 81, 89, 95, 96, 100, 103, 104, 105, 109, 126, 133, 148, 172, 175, 179, 208, 306, 307, 308, 309, 310, 311, 312, 313, 341, 428, 443, 544, 545, 558, 741, 742, 749, 750, 805, 819, 820, 7922, 7924, 7925, 7927, 7934, 7943, 7944, 7945, 7950, 8062, 8148, 8149, 8152, 8164, 8174, 8236, 8240, 8262, 8264, 8374, 8380, 8381, 8384, 8388, 8390, 8392, 8393, 8394, 8396, 8401, 8406, 8416, 8419, 8424, 8437, 8439, 8445, 8482, 8485, 8496, 8521, 8603, 8936, 8946, 9046, 9050, 9063, 9066, 9076, 9092, 9100, 9108, 9111, 9113, 9131, 9162, 9164, 9218, 9219, 11329, 11331, 11334, 11336, 11346, 11361, 11363, 11366, 11370, 11372, 11375, 11389, 11682, 11686, 11687, 11692, 11694, 11714, 11716, 11723, 11725, 11730, 11736, 11982, 11989, 12102, 12336, 12348, 12350, 12384, 12393, 12395, 12397, 12510, 12553, 12851, 12962, 12973, 13738, 13823, 13919, 13933, 14080, 14298, 14585, 14698, 15583, 15847, 16318, 16434, 16438, 16481, 16729, 17102, 17122, 17315, 17320, 17402, 17418, 17859, 17909, 17911, 17915, 17916, 17936, 17939, 17961, 18664, 18703, 18814, 18962, 19043, 33469, 33470, 33471, 33484, 33485, 33490, 33497, 33501, 33505, 33513, 33520, 33536, 33550, 37845, 37921, 37948, 38029, 38038, 38064, 38065, 38066, 38069, 38075, 38076, 38078, 39108, 39109, 39113, 39114, 39115, 39116, 39265, 39394, 189e3]
        }
    }, function (t, e) {
        t.exports = [["0", "\0", 127], ["8141", "갂갃갅갆갋", 4, "갘갞갟갡갢갣갥", 6, "갮갲갳갴"], ["8161", "갵갶갷갺갻갽갾갿걁", 9, "걌걎", 5, "걕"], ["8181", "걖걗걙걚걛걝", 18, "걲걳걵걶걹걻", 4, "겂겇겈겍겎겏겑겒겓겕", 6, "겞겢", 5, "겫겭겮겱", 6, "겺겾겿곀곂곃곅곆곇곉곊곋곍", 7, "곖곘", 7, "곢곣곥곦곩곫곭곮곲곴곷", 4, "곾곿괁괂괃괅괇", 4, "괎괐괒괓"], ["8241", "괔괕괖괗괙괚괛괝괞괟괡", 7, "괪괫괮", 5], ["8261", "괶괷괹괺괻괽", 6, "굆굈굊", 5, "굑굒굓굕굖굗"], ["8281", "굙", 7, "굢굤", 7, "굮굯굱굲굷굸굹굺굾궀궃", 4, "궊궋궍궎궏궑", 10, "궞", 5, "궥", 17, "궸", 7, "귂귃귅귆귇귉", 6, "귒귔", 7, "귝귞귟귡귢귣귥", 18], ["8341", "귺귻귽귾긂", 5, "긊긌긎", 5, "긕", 7], ["8361", "긝", 18, "긲긳긵긶긹긻긼"], ["8381", "긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗", 4, "깞깢깣깤깦깧깪깫깭깮깯깱", 6, "깺깾", 5, "꺆", 5, "꺍", 46, "꺿껁껂껃껅", 6, "껎껒", 5, "껚껛껝", 8], ["8441", "껦껧껩껪껬껮", 5, "껵껶껷껹껺껻껽", 8], ["8461", "꼆꼉꼊꼋꼌꼎꼏꼑", 18], ["8481", "꼤", 7, "꼮꼯꼱꼳꼵", 6, "꼾꽀꽄꽅꽆꽇꽊", 5, "꽑", 10, "꽞", 5, "꽦", 18, "꽺", 5, "꾁꾂꾃꾅꾆꾇꾉", 6, "꾒꾓꾔꾖", 5, "꾝", 26, "꾺꾻꾽꾾"], ["8541", "꾿꿁", 5, "꿊꿌꿏", 4, "꿕", 6, "꿝", 4], ["8561", "꿢", 5, "꿪", 5, "꿲꿳꿵꿶꿷꿹", 6, "뀂뀃"], ["8581", "뀅", 6, "뀍뀎뀏뀑뀒뀓뀕", 6, "뀞", 9, "뀩", 26, "끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞", 29, "끾끿낁낂낃낅", 6, "낎낐낒", 5, "낛낝낞낣낤"], ["8641", "낥낦낧낪낰낲낶낷낹낺낻낽", 6, "냆냊", 5, "냒"], ["8661", "냓냕냖냗냙", 6, "냡냢냣냤냦", 10], ["8681", "냱", 22, "넊넍넎넏넑넔넕넖넗넚넞", 4, "넦넧넩넪넫넭", 6, "넶넺", 5, "녂녃녅녆녇녉", 6, "녒녓녖녗녙녚녛녝녞녟녡", 22, "녺녻녽녾녿놁놃", 4, "놊놌놎놏놐놑놕놖놗놙놚놛놝"], ["8741", "놞", 9, "놩", 15], ["8761", "놹", 18, "뇍뇎뇏뇑뇒뇓뇕"], ["8781", "뇖", 5, "뇞뇠", 7, "뇪뇫뇭뇮뇯뇱", 7, "뇺뇼뇾", 5, "눆눇눉눊눍", 6, "눖눘눚", 5, "눡", 18, "눵", 6, "눽", 26, "뉙뉚뉛뉝뉞뉟뉡", 6, "뉪", 4], ["8841", "뉯", 4, "뉶", 5, "뉽", 6, "늆늇늈늊", 4], ["8861", "늏늒늓늕늖늗늛", 4, "늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"], ["8881", "늸", 15, "닊닋닍닎닏닑닓", 4, "닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉", 6, "댒댖", 5, "댝", 54, "덗덙덚덝덠덡덢덣"], ["8941", "덦덨덪덬덭덯덲덳덵덶덷덹", 6, "뎂뎆", 5, "뎍"], ["8961", "뎎뎏뎑뎒뎓뎕", 10, "뎢", 5, "뎩뎪뎫뎭"], ["8981", "뎮", 21, "돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩", 18, "돽", 18, "됑", 6, "됙됚됛됝됞됟됡", 6, "됪됬", 7, "됵", 15], ["8a41", "둅", 10, "둒둓둕둖둗둙", 6, "둢둤둦"], ["8a61", "둧", 4, "둭", 18, "뒁뒂"], ["8a81", "뒃", 4, "뒉", 19, "뒞", 5, "뒥뒦뒧뒩뒪뒫뒭", 7, "뒶뒸뒺", 5, "듁듂듃듅듆듇듉", 6, "듑듒듓듔듖", 5, "듞듟듡듢듥듧", 4, "듮듰듲", 5, "듹", 26, "딖딗딙딚딝"], ["8b41", "딞", 5, "딦딫", 4, "딲딳딵딶딷딹", 6, "땂땆"], ["8b61", "땇땈땉땊땎땏땑땒땓땕", 6, "땞땢", 8], ["8b81", "땫", 52, "떢떣떥떦떧떩떬떭떮떯떲떶", 4, "떾떿뗁뗂뗃뗅", 6, "뗎뗒", 5, "뗙", 18, "뗭", 18], ["8c41", "똀", 15, "똒똓똕똖똗똙", 4], ["8c61", "똞", 6, "똦", 5, "똭", 6, "똵", 5], ["8c81", "똻", 12, "뙉", 26, "뙥뙦뙧뙩", 50, "뚞뚟뚡뚢뚣뚥", 5, "뚭뚮뚯뚰뚲", 16], ["8d41", "뛃", 16, "뛕", 8], ["8d61", "뛞", 17, "뛱뛲뛳뛵뛶뛷뛹뛺"], ["8d81", "뛻", 4, "뜂뜃뜄뜆", 33, "뜪뜫뜭뜮뜱", 6, "뜺뜼", 7, "띅띆띇띉띊띋띍", 6, "띖", 9, "띡띢띣띥띦띧띩", 6, "띲띴띶", 5, "띾띿랁랂랃랅", 6, "랎랓랔랕랚랛랝랞"], ["8e41", "랟랡", 6, "랪랮", 5, "랶랷랹", 8], ["8e61", "럂", 4, "럈럊", 19], ["8e81", "럞", 13, "럮럯럱럲럳럵", 6, "럾렂", 4, "렊렋렍렎렏렑", 6, "렚렜렞", 5, "렦렧렩렪렫렭", 6, "렶렺", 5, "롁롂롃롅", 11, "롒롔", 7, "롞롟롡롢롣롥", 6, "롮롰롲", 5, "롹롺롻롽", 7], ["8f41", "뢅", 7, "뢎", 17], ["8f61", "뢠", 7, "뢩", 6, "뢱뢲뢳뢵뢶뢷뢹", 4], ["8f81", "뢾뢿룂룄룆", 5, "룍룎룏룑룒룓룕", 7, "룞룠룢", 5, "룪룫룭룮룯룱", 6, "룺룼룾", 5, "뤅", 18, "뤙", 6, "뤡", 26, "뤾뤿륁륂륃륅", 6, "륍륎륐륒", 5], ["9041", "륚륛륝륞륟륡", 6, "륪륬륮", 5, "륶륷륹륺륻륽"], ["9061", "륾", 5, "릆릈릋릌릏", 15], ["9081", "릟", 12, "릮릯릱릲릳릵", 6, "릾맀맂", 5, "맊맋맍맓", 4, "맚맜맟맠맢맦맧맩맪맫맭", 6, "맶맻", 4, "먂", 5, "먉", 11, "먖", 33, "먺먻먽먾먿멁멃멄멅멆"], ["9141", "멇멊멌멏멐멑멒멖멗멙멚멛멝", 6, "멦멪", 5], ["9161", "멲멳멵멶멷멹", 9, "몆몈몉몊몋몍", 5], ["9181", "몓", 20, "몪몭몮몯몱몳", 4, "몺몼몾", 5, "뫅뫆뫇뫉", 14, "뫚", 33, "뫽뫾뫿묁묂묃묅", 7, "묎묐묒", 5, "묙묚묛묝묞묟묡", 6], ["9241", "묨묪묬", 7, "묷묹묺묿", 4, "뭆뭈뭊뭋뭌뭎뭑뭒"], ["9261", "뭓뭕뭖뭗뭙", 7, "뭢뭤", 7, "뭭", 4], ["9281", "뭲", 21, "뮉뮊뮋뮍뮎뮏뮑", 18, "뮥뮦뮧뮩뮪뮫뮭", 6, "뮵뮶뮸", 7, "믁믂믃믅믆믇믉", 6, "믑믒믔", 35, "믺믻믽믾밁"], ["9341", "밃", 4, "밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"], ["9361", "밶밷밹", 6, "뱂뱆뱇뱈뱊뱋뱎뱏뱑", 8], ["9381", "뱚뱛뱜뱞", 37, "벆벇벉벊벍벏", 4, "벖벘벛", 4, "벢벣벥벦벩", 6, "벲벶", 5, "벾벿볁볂볃볅", 7, "볎볒볓볔볖볗볙볚볛볝", 22, "볷볹볺볻볽"], ["9441", "볾", 5, "봆봈봊", 5, "봑봒봓봕", 8], ["9461", "봞", 5, "봥", 6, "봭", 12], ["9481", "봺", 5, "뵁", 6, "뵊뵋뵍뵎뵏뵑", 6, "뵚", 9, "뵥뵦뵧뵩", 22, "붂붃붅붆붋", 4, "붒붔붖붗붘붛붝", 6, "붥", 10, "붱", 6, "붹", 24], ["9541", "뷒뷓뷖뷗뷙뷚뷛뷝", 11, "뷪", 5, "뷱"], ["9561", "뷲뷳뷵뷶뷷뷹", 6, "븁븂븄븆", 5, "븎븏븑븒븓"], ["9581", "븕", 6, "븞븠", 35, "빆빇빉빊빋빍빏", 4, "빖빘빜빝빞빟빢빣빥빦빧빩빫", 4, "빲빶", 4, "빾빿뺁뺂뺃뺅", 6, "뺎뺒", 5, "뺚", 13, "뺩", 14], ["9641", "뺸", 23, "뻒뻓"], ["9661", "뻕뻖뻙", 6, "뻡뻢뻦", 5, "뻭", 8], ["9681", "뻶", 10, "뼂", 5, "뼊", 13, "뼚뼞", 33, "뽂뽃뽅뽆뽇뽉", 6, "뽒뽓뽔뽖", 44], ["9741", "뾃", 16, "뾕", 8], ["9761", "뾞", 17, "뾱", 7], ["9781", "뾹", 11, "뿆", 5, "뿎뿏뿑뿒뿓뿕", 6, "뿝뿞뿠뿢", 89, "쀽쀾쀿"], ["9841", "쁀", 16, "쁒", 5, "쁙쁚쁛"], ["9861", "쁝쁞쁟쁡", 6, "쁪", 15], ["9881", "쁺", 21, "삒삓삕삖삗삙", 6, "삢삤삦", 5, "삮삱삲삷", 4, "삾샂샃샄샆샇샊샋샍샎샏샑", 6, "샚샞", 5, "샦샧샩샪샫샭", 6, "샶샸샺", 5, "섁섂섃섅섆섇섉", 6, "섑섒섓섔섖", 5, "섡섢섥섨섩섪섫섮"], ["9941", "섲섳섴섵섷섺섻섽섾섿셁", 6, "셊셎", 5, "셖셗"], ["9961", "셙셚셛셝", 6, "셦셪", 5, "셱셲셳셵셶셷셹셺셻"], ["9981", "셼", 8, "솆", 5, "솏솑솒솓솕솗", 4, "솞솠솢솣솤솦솧솪솫솭솮솯솱", 11, "솾", 5, "쇅쇆쇇쇉쇊쇋쇍", 6, "쇕쇖쇙", 6, "쇡쇢쇣쇥쇦쇧쇩", 6, "쇲쇴", 7, "쇾쇿숁숂숃숅", 6, "숎숐숒", 5, "숚숛숝숞숡숢숣"], ["9a41", "숤숥숦숧숪숬숮숰숳숵", 16], ["9a61", "쉆쉇쉉", 6, "쉒쉓쉕쉖쉗쉙", 6, "쉡쉢쉣쉤쉦"], ["9a81", "쉧", 4, "쉮쉯쉱쉲쉳쉵", 6, "쉾슀슂", 5, "슊", 5, "슑", 6, "슙슚슜슞", 5, "슦슧슩슪슫슮", 5, "슶슸슺", 33, "싞싟싡싢싥", 5, "싮싰싲싳싴싵싷싺싽싾싿쌁", 6, "쌊쌋쌎쌏"], ["9b41", "쌐쌑쌒쌖쌗쌙쌚쌛쌝", 6, "쌦쌧쌪", 8], ["9b61", "쌳", 17, "썆", 7], ["9b81", "썎", 25, "썪썫썭썮썯썱썳", 4, "썺썻썾", 5, "쎅쎆쎇쎉쎊쎋쎍", 50, "쏁", 22, "쏚"], ["9c41", "쏛쏝쏞쏡쏣", 4, "쏪쏫쏬쏮", 5, "쏶쏷쏹", 5], ["9c61", "쏿", 8, "쐉", 6, "쐑", 9], ["9c81", "쐛", 8, "쐥", 6, "쐭쐮쐯쐱쐲쐳쐵", 6, "쐾", 9, "쑉", 26, "쑦쑧쑩쑪쑫쑭", 6, "쑶쑷쑸쑺", 5, "쒁", 18, "쒕", 6, "쒝", 12], ["9d41", "쒪", 13, "쒹쒺쒻쒽", 8], ["9d61", "쓆", 25], ["9d81", "쓠", 8, "쓪", 5, "쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂", 9, "씍씎씏씑씒씓씕", 6, "씝", 10, "씪씫씭씮씯씱", 6, "씺씼씾", 5, "앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩", 6, "앲앶", 5, "앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"], ["9e41", "얖얙얚얛얝얞얟얡", 7, "얪", 9, "얶"], ["9e61", "얷얺얿", 4, "엋엍엏엒엓엕엖엗엙", 6, "엢엤엦엧"], ["9e81", "엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑", 6, "옚옝", 6, "옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉", 6, "왒왖", 5, "왞왟왡", 10, "왭왮왰왲", 5, "왺왻왽왾왿욁", 6, "욊욌욎", 5, "욖욗욙욚욛욝", 6, "욦"], ["9f41", "욨욪", 5, "욲욳욵욶욷욻", 4, "웂웄웆", 5, "웎"], ["9f61", "웏웑웒웓웕", 6, "웞웟웢", 5, "웪웫웭웮웯웱웲"], ["9f81", "웳", 4, "웺웻웼웾", 5, "윆윇윉윊윋윍", 6, "윖윘윚", 5, "윢윣윥윦윧윩", 6, "윲윴윶윸윹윺윻윾윿읁읂읃읅", 4, "읋읎읐읙읚읛읝읞읟읡", 6, "읩읪읬", 7, "읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛", 4, "잢잧", 4, "잮잯잱잲잳잵잶잷"], ["a041", "잸잹잺잻잾쟂", 5, "쟊쟋쟍쟏쟑", 6, "쟙쟚쟛쟜"], ["a061", "쟞", 5, "쟥쟦쟧쟩쟪쟫쟭", 13], ["a081", "쟻", 4, "젂젃젅젆젇젉젋", 4, "젒젔젗", 4, "젞젟젡젢젣젥", 6, "젮젰젲", 5, "젹젺젻젽젾젿졁", 6, "졊졋졎", 5, "졕", 26, "졲졳졵졶졷졹졻", 4, "좂좄좈좉좊좎", 5, "좕", 7, "좞좠좢좣좤"], ["a141", "좥좦좧좩", 18, "좾좿죀죁"], ["a161", "죂죃죅죆죇죉죊죋죍", 6, "죖죘죚", 5, "죢죣죥"], ["a181", "죦", 14, "죶", 5, "죾죿줁줂줃줇", 4, "줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈", 9, "±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"], ["a241", "줐줒", 5, "줙", 18], ["a261", "줭", 6, "줵", 18], ["a281", "쥈", 7, "쥒쥓쥕쥖쥗쥙", 6, "쥢쥤", 7, "쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"], ["a341", "쥱쥲쥳쥵", 6, "쥽", 10, "즊즋즍즎즏"], ["a361", "즑", 6, "즚즜즞", 16], ["a381", "즯", 16, "짂짃짅짆짉짋", 4, "짒짔짗짘짛！", 58, "￦］", 32, "￣"], ["a441", "짞짟짡짣짥짦짨짩짪짫짮짲", 5, "짺짻짽짾짿쨁쨂쨃쨄"], ["a461", "쨅쨆쨇쨊쨎", 5, "쨕쨖쨗쨙", 12], ["a481", "쨦쨧쨨쨪", 28, "ㄱ", 93], ["a541", "쩇", 4, "쩎쩏쩑쩒쩓쩕", 6, "쩞쩢", 5, "쩩쩪"], ["a561", "쩫", 17, "쩾", 5, "쪅쪆"], ["a581", "쪇", 16, "쪙", 14, "ⅰ", 9], ["a5b0", "Ⅰ", 9], ["a5c1", "Α", 16, "Σ", 6], ["a5e1", "α", 16, "σ", 6], ["a641", "쪨", 19, "쪾쪿쫁쫂쫃쫅"], ["a661", "쫆", 5, "쫎쫐쫒쫔쫕쫖쫗쫚", 5, "쫡", 6], ["a681", "쫨쫩쫪쫫쫭", 6, "쫵", 18, "쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃", 7], ["a741", "쬋", 4, "쬑쬒쬓쬕쬖쬗쬙", 6, "쬢", 7], ["a761", "쬪", 22, "쭂쭃쭄"], ["a781", "쭅쭆쭇쭊쭋쭍쭎쭏쭑", 6, "쭚쭛쭜쭞", 5, "쭥", 7, "㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙", 9, "㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰", 9, "㎀", 4, "㎺", 5, "㎐", 4, "Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"], ["a841", "쭭", 10, "쭺", 14], ["a861", "쮉", 18, "쮝", 6], ["a881", "쮤", 19, "쮹", 11, "ÆÐªĦ"], ["a8a6", "Ĳ"], ["a8a8", "ĿŁØŒºÞŦŊ"], ["a8b1", "㉠", 27, "ⓐ", 25, "①", 14, "½⅓⅔¼¾⅛⅜⅝⅞"], ["a941", "쯅", 14, "쯕", 10], ["a961", "쯠쯡쯢쯣쯥쯦쯨쯪", 18], ["a981", "쯽", 14, "찎찏찑찒찓찕", 6, "찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀", 27, "⒜", 25, "⑴", 14, "¹²³⁴ⁿ₁₂₃₄"], ["aa41", "찥찦찪찫찭찯찱", 6, "찺찿", 4, "챆챇챉챊챋챍챎"], ["aa61", "챏", 4, "챖챚", 5, "챡챢챣챥챧챩", 6, "챱챲"], ["aa81", "챳챴챶", 29, "ぁ", 82], ["ab41", "첔첕첖첗첚첛첝첞첟첡", 6, "첪첮", 5, "첶첷첹"], ["ab61", "첺첻첽", 6, "쳆쳈쳊", 5, "쳑쳒쳓쳕", 5], ["ab81", "쳛", 8, "쳥", 6, "쳭쳮쳯쳱", 12, "ァ", 85], ["ac41", "쳾쳿촀촂", 5, "촊촋촍촎촏촑", 6, "촚촜촞촟촠"], ["ac61", "촡촢촣촥촦촧촩촪촫촭", 11, "촺", 4], ["ac81", "촿", 28, "쵝쵞쵟А", 5, "ЁЖ", 25], ["acd1", "а", 5, "ёж", 25], ["ad41", "쵡쵢쵣쵥", 6, "쵮쵰쵲", 5, "쵹", 7], ["ad61", "춁", 6, "춉", 10, "춖춗춙춚춛춝춞춟"], ["ad81", "춠춡춢춣춦춨춪", 5, "춱", 18, "췅"], ["ae41", "췆", 5, "췍췎췏췑", 16], ["ae61", "췢", 5, "췩췪췫췭췮췯췱", 6, "췺췼췾", 4], ["ae81", "츃츅츆츇츉츊츋츍", 6, "츕츖츗츘츚", 5, "츢츣츥츦츧츩츪츫"], ["af41", "츬츭츮츯츲츴츶", 19], ["af61", "칊", 13, "칚칛칝칞칢", 5, "칪칬"], ["af81", "칮", 5, "칶칷칹칺칻칽", 6, "캆캈캊", 5, "캒캓캕캖캗캙"], ["b041", "캚", 5, "캢캦", 5, "캮", 12], ["b061", "캻", 5, "컂", 19], ["b081", "컖", 13, "컦컧컩컪컭", 6, "컶컺", 5, "가각간갇갈갉갊감", 7, "같", 4, "갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"], ["b141", "켂켃켅켆켇켉", 6, "켒켔켖", 5, "켝켞켟켡켢켣"], ["b161", "켥", 6, "켮켲", 5, "켹", 11], ["b181", "콅", 14, "콖콗콙콚콛콝", 6, "콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"], ["b241", "콭콮콯콲콳콵콶콷콹", 6, "쾁쾂쾃쾄쾆", 5, "쾍"], ["b261", "쾎", 18, "쾢", 5, "쾩"], ["b281", "쾪", 5, "쾱", 18, "쿅", 6, "깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"], ["b341", "쿌", 19, "쿢쿣쿥쿦쿧쿩"], ["b361", "쿪", 5, "쿲쿴쿶", 5, "쿽쿾쿿퀁퀂퀃퀅", 5], ["b381", "퀋", 5, "퀒", 5, "퀙", 19, "끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫", 4, "낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"], ["b441", "퀮", 5, "퀶퀷퀹퀺퀻퀽", 6, "큆큈큊", 5], ["b461", "큑큒큓큕큖큗큙", 6, "큡", 10, "큮큯"], ["b481", "큱큲큳큵", 6, "큾큿킀킂", 18, "뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫", 4, "닳담답닷", 4, "닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"], ["b541", "킕", 14, "킦킧킩킪킫킭", 5], ["b561", "킳킶킸킺", 5, "탂탃탅탆탇탊", 5, "탒탖", 4], ["b581", "탛탞탟탡탢탣탥", 6, "탮탲", 5, "탹", 11, "덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"], ["b641", "턅", 7, "턎", 17], ["b661", "턠", 15, "턲턳턵턶턷턹턻턼턽턾"], ["b681", "턿텂텆", 5, "텎텏텑텒텓텕", 6, "텞텠텢", 5, "텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"], ["b741", "텮", 13, "텽", 6, "톅톆톇톉톊"], ["b761", "톋", 20, "톢톣톥톦톧"], ["b781", "톩", 6, "톲톴톶톷톸톹톻톽톾톿퇁", 14, "래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"], ["b841", "퇐", 7, "퇙", 17], ["b861", "퇫", 8, "퇵퇶퇷퇹", 13], ["b881", "툈툊", 5, "툑", 24, "륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많", 4, "맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"], ["b941", "툪툫툮툯툱툲툳툵", 6, "툾퉀퉂", 5, "퉉퉊퉋퉌"], ["b961", "퉍", 14, "퉝", 6, "퉥퉦퉧퉨"], ["b981", "퉩", 22, "튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바", 4, "받", 4, "밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"], ["ba41", "튍튎튏튒튓튔튖", 5, "튝튞튟튡튢튣튥", 6, "튭"], ["ba61", "튮튯튰튲", 5, "튺튻튽튾틁틃", 4, "틊틌", 5], ["ba81", "틒틓틕틖틗틙틚틛틝", 6, "틦", 9, "틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"], ["bb41", "틻", 4, "팂팄팆", 5, "팏팑팒팓팕팗", 4, "팞팢팣"], ["bb61", "팤팦팧팪팫팭팮팯팱", 6, "팺팾", 5, "퍆퍇퍈퍉"], ["bb81", "퍊", 31, "빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"], ["bc41", "퍪", 17, "퍾퍿펁펂펃펅펆펇"], ["bc61", "펈펉펊펋펎펒", 5, "펚펛펝펞펟펡", 6, "펪펬펮"], ["bc81", "펯", 4, "펵펶펷펹펺펻펽", 6, "폆폇폊", 5, "폑", 5, "샥샨샬샴샵샷샹섀섄섈섐섕서", 4, "섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"], ["bd41", "폗폙", 7, "폢폤", 7, "폮폯폱폲폳폵폶폷"], ["bd61", "폸폹폺폻폾퐀퐂", 5, "퐉", 13], ["bd81", "퐗", 5, "퐞", 25, "숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"], ["be41", "퐸", 7, "푁푂푃푅", 14], ["be61", "푔", 7, "푝푞푟푡푢푣푥", 7, "푮푰푱푲"], ["be81", "푳", 4, "푺푻푽푾풁풃", 4, "풊풌풎", 5, "풕", 8, "쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄", 6, "엌엎"], ["bf41", "풞", 10, "풪", 14], ["bf61", "풹", 18, "퓍퓎퓏퓑퓒퓓퓕"], ["bf81", "퓖", 5, "퓝퓞퓠", 7, "퓩퓪퓫퓭퓮퓯퓱", 6, "퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염", 5, "옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"], ["c041", "퓾", 5, "픅픆픇픉픊픋픍", 6, "픖픘", 5], ["c061", "픞", 25], ["c081", "픸픹픺픻픾픿핁핂핃핅", 6, "핎핐핒", 5, "핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응", 7, "읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"], ["c141", "핤핦핧핪핬핮", 5, "핶핷핹핺핻핽", 6, "햆햊햋"], ["c161", "햌햍햎햏햑", 19, "햦햧"], ["c181", "햨", 31, "점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"], ["c241", "헊헋헍헎헏헑헓", 4, "헚헜헞", 5, "헦헧헩헪헫헭헮"], ["c261", "헯", 4, "헶헸헺", 5, "혂혃혅혆혇혉", 6, "혒"], ["c281", "혖", 5, "혝혞혟혡혢혣혥", 7, "혮", 9, "혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"], ["c341", "혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝", 4], ["c361", "홢", 4, "홨홪", 5, "홲홳홵", 11], ["c381", "횁횂횄횆", 5, "횎횏횑횒횓횕", 7, "횞횠횢", 5, "횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"], ["c441", "횫횭횮횯횱", 7, "횺횼", 7, "훆훇훉훊훋"], ["c461", "훍훎훏훐훒훓훕훖훘훚", 5, "훡훢훣훥훦훧훩", 4], ["c481", "훮훯훱훲훳훴훶", 5, "훾훿휁휂휃휅", 11, "휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"], ["c541", "휕휖휗휚휛휝휞휟휡", 6, "휪휬휮", 5, "휶휷휹"], ["c561", "휺휻휽", 6, "흅흆흈흊", 5, "흒흓흕흚", 4], ["c581", "흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵", 6, "흾흿힀힂", 5, "힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"], ["c641", "힍힎힏힑", 6, "힚힜힞", 5], ["c6a1", "퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"], ["c7a1", "퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"], ["c8a1", "혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"], ["caa1", "伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"], ["cba1", "匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"], ["cca1", "瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"], ["cda1", "棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"], ["cea1", "科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"], ["cfa1", "區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"], ["d0a1", "鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"], ["d1a1", "朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩", 5, "那樂", 4, "諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"], ["d2a1", "納臘蠟衲囊娘廊", 4, "乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧", 5, "駑魯", 10, "濃籠聾膿農惱牢磊腦賂雷尿壘", 7, "嫩訥杻紐勒", 5, "能菱陵尼泥匿溺多茶"], ["d3a1", "丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"], ["d4a1", "棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"], ["d5a1", "蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"], ["d6a1", "煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"], ["d7a1", "遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"], ["d8a1", "立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"], ["d9a1", "蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"], ["daa1", "汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"], ["dba1", "發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"], ["dca1", "碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"], ["dda1", "孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"], ["dea1", "脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"], ["dfa1", "傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"], ["e0a1", "胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"], ["e1a1", "聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"], ["e2a1", "戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"], ["e3a1", "嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"], ["e4a1", "沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"], ["e5a1", "櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"], ["e6a1", "旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"], ["e7a1", "簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"], ["e8a1", "烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"], ["e9a1", "窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"], ["eaa1", "運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"], ["eba1", "濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"], ["eca1", "議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"], ["eda1", "立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"], ["eea1", "障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"], ["efa1", "煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"], ["f0a1", "靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"], ["f1a1", "踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"], ["f2a1", "咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"], ["f3a1", "鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"], ["f4a1", "責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"], ["f5a1", "椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"], ["f6a1", "贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"], ["f7a1", "鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"], ["f8a1", "阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"], ["f9a1", "品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"], ["faa1", "行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"], ["fba1", "形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"], ["fca1", "禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"], ["fda1", "爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"]]
    }, function (t, e) {
        t.exports = [["0", "\0", 127], ["a140", "　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"], ["a1a1", "﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢", 4, "～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"], ["a240", "＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁", 7, "▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"], ["a2a1", "╮╰╯═╞╪╡◢◣◥◤╱╲╳０", 9, "Ⅰ", 9, "〡", 8, "十卄卅Ａ", 25, "ａ", 21], ["a340", "ｗｘｙｚΑ", 16, "Σ", 6, "α", 16, "σ", 6, "ㄅ", 10], ["a3a1", "ㄐ", 25, "˙ˉˊˇˋ"], ["a3e1", "€"], ["a440", "一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"], ["a4a1", "丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"], ["a540", "世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"], ["a5a1", "央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"], ["a640", "共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"], ["a6a1", "式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"], ["a740", "作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"], ["a7a1", "均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"], ["a840", "杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"], ["a8a1", "芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"], ["a940", "咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"], ["a9a1", "屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"], ["aa40", "昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"], ["aaa1", "炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"], ["ab40", "陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"], ["aba1", "哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"], ["ac40", "拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"], ["aca1", "活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"], ["ad40", "耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"], ["ada1", "迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"], ["ae40", "哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"], ["aea1", "恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"], ["af40", "浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"], ["afa1", "砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"], ["b040", "虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"], ["b0a1", "陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"], ["b140", "娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"], ["b1a1", "情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"], ["b240", "毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"], ["b2a1", "瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"], ["b340", "莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"], ["b3a1", "部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"], ["b440", "婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"], ["b4a1", "插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"], ["b540", "溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"], ["b5a1", "窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"], ["b640", "詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"], ["b6a1", "間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"], ["b740", "媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"], ["b7a1", "楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"], ["b840", "睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"], ["b8a1", "腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"], ["b940", "辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"], ["b9a1", "飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"], ["ba40", "愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"], ["baa1", "滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"], ["bb40", "罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"], ["bba1", "說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"], ["bc40", "劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"], ["bca1", "慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"], ["bd40", "瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"], ["bda1", "翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"], ["be40", "輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"], ["bea1", "鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"], ["bf40", "濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"], ["bfa1", "縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"], ["c040", "錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"], ["c0a1", "嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"], ["c140", "瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"], ["c1a1", "薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"], ["c240", "駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"], ["c2a1", "癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"], ["c340", "鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"], ["c3a1", "獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"], ["c440", "願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"], ["c4a1", "纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"], ["c540", "護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"], ["c5a1", "禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"], ["c640", "讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"], ["c940", "乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"], ["c9a1", "氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"], ["ca40", "汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"], ["caa1", "吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"], ["cb40", "杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"], ["cba1", "芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"], ["cc40", "坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"], ["cca1", "怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"], ["cd40", "泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"], ["cda1", "矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"], ["ce40", "哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"], ["cea1", "峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"], ["cf40", "柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"], ["cfa1", "洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"], ["d040", "穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"], ["d0a1", "苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"], ["d140", "唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"], ["d1a1", "恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"], ["d240", "毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"], ["d2a1", "牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"], ["d340", "笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"], ["d3a1", "荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"], ["d440", "酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"], ["d4a1", "唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"], ["d540", "崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"], ["d5a1", "捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"], ["d640", "淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"], ["d6a1", "痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"], ["d740", "耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"], ["d7a1", "蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"], ["d840", "釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"], ["d8a1", "堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"], ["d940", "惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"], ["d9a1", "晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"], ["da40", "湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"], ["daa1", "琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"], ["db40", "罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"], ["dba1", "菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"], ["dc40", "軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"], ["dca1", "隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"], ["dd40", "媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"], ["dda1", "搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"], ["de40", "毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"], ["dea1", "煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"], ["df40", "稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"], ["dfa1", "腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"], ["e040", "觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"], ["e0a1", "遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"], ["e140", "凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"], ["e1a1", "寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"], ["e240", "榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"], ["e2a1", "漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"], ["e340", "禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"], ["e3a1", "耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"], ["e440", "裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"], ["e4a1", "銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"], ["e540", "噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"], ["e5a1", "憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"], ["e640", "澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"], ["e6a1", "獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"], ["e740", "膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"], ["e7a1", "蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"], ["e840", "踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"], ["e8a1", "銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"], ["e940", "噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"], ["e9a1", "憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"], ["ea40", "澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"], ["eaa1", "瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"], ["eb40", "蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"], ["eba1", "諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"], ["ec40", "錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"], ["eca1", "魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"], ["ed40", "檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"], ["eda1", "瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"], ["ee40", "蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"], ["eea1", "謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"], ["ef40", "鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"], ["efa1", "鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"], ["f040", "璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"], ["f0a1", "臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"], ["f140", "蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"], ["f1a1", "鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"], ["f240", "徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"], ["f2a1", "礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"], ["f340", "譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"], ["f3a1", "鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"], ["f440", "嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"], ["f4a1", "禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"], ["f540", "鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"], ["f5a1", "鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"], ["f640", "蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"], ["f6a1", "騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"], ["f740", "糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"], ["f7a1", "驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"], ["f840", "讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"], ["f8a1", "齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"], ["f940", "纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"], ["f9a1", "龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"]]
    }, function (t, e) {
        t.exports = [["8740", "䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"], ["8767", "綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"], ["87a1", "𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"], ["8840", "㇀", 4, "𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"], ["88a1", "ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"], ["8940", "𪎩𡅅"], ["8943", "攊"], ["8946", "丽滝鵎釟"], ["894c", "𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"], ["89a1", "琑糼緍楆竉刧"], ["89ab", "醌碸酞肼"], ["89b0", "贋胶𠧧"], ["89b5", "肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"], ["89c1", "溚舾甙"], ["89c5", "䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"], ["8a40", "𧶄唥"], ["8a43", "𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"], ["8a64", "𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"], ["8a76", "䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"], ["8aa1", "𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"], ["8aac", "䠋𠆩㿺塳𢶍"], ["8ab2", "𤗈𠓼𦂗𠽌𠶖啹䂻䎺"], ["8abb", "䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"], ["8ac9", "𪘁𠸉𢫏𢳉"], ["8ace", "𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"], ["8adf", "𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"], ["8af6", "𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"], ["8b40", "𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"], ["8b55", "𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"], ["8ba1", "𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"], ["8bde", "𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"], ["8c40", "倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"], ["8ca1", "𣏹椙橃𣱣泿"], ["8ca7", "爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"], ["8cc9", "顨杫䉶圽"], ["8cce", "藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"], ["8ce6", "峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"], ["8d40", "𠮟"], ["8d42", "𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"], ["8da1", "㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"], ["8e40", "𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"], ["8ea1", "繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"], ["8f40", "蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"], ["8fa1", "𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"], ["9040", "趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"], ["90a1", "𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"], ["9140", "𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"], ["91a1", "鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"], ["9240", "𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"], ["92a1", "働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"], ["9340", "媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"], ["93a1", "摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"], ["9440", "銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"], ["94a1", "㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"], ["9540", "𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"], ["95a1", "衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"], ["9640", "桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"], ["96a1", "𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"], ["9740", "愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"], ["97a1", "𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"], ["9840", "𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"], ["98a1", "咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"], ["9940", "䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"], ["99a1", "䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"], ["9a40", "鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"], ["9aa1", "黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"], ["9b40", "𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"], ["9b62", "𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"], ["9ba1", "椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"], ["9c40", "嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"], ["9ca1", "㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"], ["9d40", "𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"], ["9da1", "辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"], ["9e40", "𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"], ["9ea1", "鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"], ["9ead", "𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"], ["9ec5", "㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"], ["9ef5", "噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"], ["9f40", "籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"], ["9f4f", "凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"], ["9fa1", "椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"], ["9fae", "酙隁酜"], ["9fb2", "酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"], ["9fc1", "𤤙盖鮝个𠳔莾衂"], ["9fc9", "届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"], ["9fdb", "歒酼龥鮗頮颴骺麨麄煺笔"], ["9fe7", "毺蠘罸"], ["9feb", "嘠𪙊蹷齓"], ["9ff0", "跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"], ["a040", "𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"], ["a055", "𡠻𦸅"], ["a058", "詾𢔛"], ["a05b", "惽癧髗鵄鍮鮏蟵"], ["a063", "蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"], ["a073", "坟慯抦戹拎㩜懢厪𣏵捤栂㗒"], ["a0a1", "嵗𨯂迚𨸹"], ["a0a6", "僙𡵆礆匲阸𠼻䁥"], ["a0ae", "矾"], ["a0b0", "糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"], ["a0d4", "覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"], ["a0e2", "罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"], ["a3c0", "␀", 31, "␡"], ["c6a1", "①", 9, "⑴", 9, "ⅰ", 9, "丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ", 23], ["c740", "す", 58, "ァアィイ"], ["c7a1", "ゥ", 81, "А", 5, "ЁЖ", 4], ["c840", "Л", 26, "ёж", 25, "⇧↸↹㇏𠃌乚𠂊刂䒑"], ["c8a1", "龰冈龱𧘇"], ["c8cd", "￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"], ["c8f5", "ʃɐɛɔɵœøŋʊɪ"], ["f9fe", "￭"], ["fa40", "𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"], ["faa1", "鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"], ["fb40", "𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"], ["fba1", "𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"], ["fc40", "廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"], ["fca1", "𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"], ["fd40", "𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"], ["fda1", "𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"], ["fe40", "鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"], ["fea1", "𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"]]
    }, function (t, e, n) {
        "use strict";
        function r(t, e) {
            this.conv = t, e = e || {}, e.decodeStrings = !1, a.call(this, e)
        }

        function i(t, e) {
            this.conv = t, e = e || {}, e.encoding = this.encoding = "utf8", a.call(this, e)
        }

        var o = n(2).Buffer, a = n(31).Transform;
        t.exports = function (t) {
            t.encodeStream = function (e, n) {
                return new r(t.getEncoder(e, n), n)
            }, t.decodeStream = function (e, n) {
                return new i(t.getDecoder(e, n), n)
            }, t.supportsStreams = !0, t.IconvLiteEncoderStream = r, t.IconvLiteDecoderStream = i, t._collect = i.prototype.collect
        }, r.prototype = Object.create(a.prototype, {constructor: {value: r}}), r.prototype._transform = function (t, e, n) {
            if ("string" != typeof t)return n(new Error("Iconv encoding stream needs strings as its input."));
            try {
                var r = this.conv.write(t);
                r && r.length && this.push(r), n()
            } catch (t) {
                n(t)
            }
        }, r.prototype._flush = function (t) {
            try {
                var e = this.conv.end();
                e && e.length && this.push(e), t()
            } catch (e) {
                t(e)
            }
        }, r.prototype.collect = function (t) {
            var e = [];
            return this.on("error", t), this.on("data", function (t) {
                e.push(t)
            }), this.on("end", function () {
                t(null, o.concat(e))
            }), this
        }, i.prototype = Object.create(a.prototype, {constructor: {value: i}}), i.prototype._transform = function (t, e, n) {
            if (!o.isBuffer(t))return n(new Error("Iconv decoding stream needs buffers as its input."));
            try {
                var r = this.conv.write(t);
                r && r.length && this.push(r, this.encoding), n()
            } catch (t) {
                n(t)
            }
        }, i.prototype._flush = function (t) {
            try {
                var e = this.conv.end();
                e && e.length && this.push(e, this.encoding), t()
            } catch (e) {
                t(e)
            }
        }, i.prototype.collect = function (t) {
            var e = "";
            return this.on("error", t), this.on("data", function (t) {
                e += t
            }), this.on("end", function () {
                t(null, e)
            }), this
        }
    }, function (t, e, n) {
        "use strict";
        var r = n(2).Buffer;
        t.exports = function (t) {
            var e = void 0;
            t.supportsNodeEncodingsExtension = !(new r(0) instanceof Uint8Array), t.extendNodeEncodings = function () {
                if (!e && (e = {}, t.supportsNodeEncodingsExtension)) {
                    var i = {
                        hex: !0,
                        utf8: !0,
                        "utf-8": !0,
                        ascii: !0,
                        binary: !0,
                        base64: !0,
                        ucs2: !0,
                        "ucs-2": !0,
                        utf16le: !0,
                        "utf-16le": !0
                    };
                    r.isNativeEncoding = function (t) {
                        return t && i[t.toLowerCase()]
                    };
                    var o = n(2).SlowBuffer;
                    if (e.SlowBufferToString = o.prototype.toString, o.prototype.toString = function (n, i, o) {
                            return n = String(n || "utf8").toLowerCase(), r.isNativeEncoding(n) ? e.SlowBufferToString.call(this, n, i, o) : (void 0 === i && (i = 0), void 0 === o && (o = this.length), t.decode(this.slice(i, o), n))
                        }, e.SlowBufferWrite = o.prototype.write, o.prototype.write = function (n, i, o, a) {
                            if (isFinite(i))isFinite(o) || (a = o, o = void 0); else {
                                var s = a;
                                a = i, i = o, o = s
                            }
                            i = +i || 0;
                            var u = this.length - i;
                            if (o ? (o = +o) > u && (o = u) : o = u, a = String(a || "utf8").toLowerCase(), r.isNativeEncoding(a))return e.SlowBufferWrite.call(this, n, i, o, a);
                            if (n.length > 0 && (o < 0 || i < 0))throw new RangeError("attempt to write beyond buffer bounds");
                            var l = t.encode(n, a);
                            return l.length < o && (o = l.length), l.copy(this, i, 0, o), o
                        }, e.BufferIsEncoding = r.isEncoding, r.isEncoding = function (e) {
                            return r.isNativeEncoding(e) || t.encodingExists(e)
                        }, e.BufferByteLength = r.byteLength, r.byteLength = o.byteLength = function (n, i) {
                            return i = String(i || "utf8").toLowerCase(), r.isNativeEncoding(i) ? e.BufferByteLength.call(this, n, i) : t.encode(n, i).length
                        }, e.BufferToString = r.prototype.toString, r.prototype.toString = function (n, i, o) {
                            return n = String(n || "utf8").toLowerCase(), r.isNativeEncoding(n) ? e.BufferToString.call(this, n, i, o) : (void 0 === i && (i = 0), void 0 === o && (o = this.length), t.decode(this.slice(i, o), n))
                        }, e.BufferWrite = r.prototype.write, r.prototype.write = function (n, i, o, a) {
                            var s = i, u = o, l = a;
                            if (isFinite(i))isFinite(o) || (a = o, o = void 0); else {
                                var c = a;
                                a = i, i = o, o = c
                            }
                            if (a = String(a || "utf8").toLowerCase(), r.isNativeEncoding(a))return e.BufferWrite.call(this, n, s, u, l);
                            i = +i || 0;
                            var f = this.length - i;
                            if (o ? (o = +o) > f && (o = f) : o = f, n.length > 0 && (o < 0 || i < 0))throw new RangeError("attempt to write beyond buffer bounds");
                            var h = t.encode(n, a);
                            return h.length < o && (o = h.length), h.copy(this, i, 0, o), o
                        }, t.supportsStreams) {
                        var a = n(31).Readable;
                        e.ReadableSetEncoding = a.prototype.setEncoding, a.prototype.setEncoding = function (e, n) {
                            this._readableState.decoder = t.getDecoder(e, n), this._readableState.encoding = e
                        }, a.prototype.collect = t._collect
                    }
                }
            }, t.undoExtendNodeEncodings = function () {
                if (t.supportsNodeEncodingsExtension) {
                    if (!e)throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.");
                    delete r.isNativeEncoding;
                    var i = n(2).SlowBuffer;
                    if (i.prototype.toString = e.SlowBufferToString, i.prototype.write = e.SlowBufferWrite, r.isEncoding = e.BufferIsEncoding, r.byteLength = e.BufferByteLength, r.prototype.toString = e.BufferToString, r.prototype.write = e.BufferWrite, t.supportsStreams) {
                        var o = n(31).Readable;
                        o.prototype.setEncoding = e.ReadableSetEncoding, delete o.prototype.collect
                    }
                    e = void 0
                }
            }
        }
    }, function (t, e, n) {
        (function () {
            var e, r, i;
            r = n(109).Number, i = n(110), e = function () {
                function t(t, e, n) {
                    this.type = t, this.length = e, this.lengthType = null != n ? n : "count"
                }

                return t.prototype.decode = function (t, e) {
                    var n, o, a, s, u, l;
                    if (a = t.pos, s = [], n = e, null != this.length && (o = i.resolveLength(this.length, t, e)), this.length instanceof r && (Object.defineProperties(s, {
                            parent: {value: e},
                            _startOffset: {value: a},
                            _currentOffset: {value: 0, writable: !0},
                            _length: {value: o}
                        }), n = s), null == o || "bytes" === this.lengthType)for (u = null != o ? t.pos + o : (null != e ? e._length : void 0) ? e._startOffset + e._length : t.length; t.pos < u;)s.push(this.type.decode(t, n)); else for (l = 0; l < o; l += 1)s.push(this.type.decode(t, n));
                    return s
                }, t.prototype.size = function (t, e) {
                    var n, o, a, s;
                    if (!t)return this.type.size(null, e) * i.resolveLength(this.length, null, e);
                    for (o = 0, this.length instanceof r && (o += this.length.size(), e = {parent: e}), a = 0, s = t.length; a < s; a++)n = t[a], o += this.type.size(n, e);
                    return o
                }, t.prototype.encode = function (t, e, n) {
                    var i, o, a, s, u, l;
                    for (i = n, this.length instanceof r && (i = {
                        pointers: [],
                        startOffset: t.pos,
                        parent: n
                    }, i.pointerOffset = t.pos + this.size(e, i), this.length.encode(t, e.length)), u = 0, l = e.length; u < l; u++)a = e[u], this.type.encode(t, a, i);
                    if (this.length instanceof r)for (o = 0; o < i.pointers.length;)s = i.pointers[o++], s.type.encode(t, s.val)
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var t, r, i, o = {}.hasOwnProperty, a = function (t, e) {
                function n() {
                    this.constructor = t
                }

                for (var r in e)o.call(e, r) && (t[r] = e[r]);
                return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
            };
            t = n(86), i = function () {
                function e(t, e) {
                    this.type = t, this.endian = null != e ? e : "BE", this.fn = this.type, "8" !== this.type[this.type.length - 1] && (this.fn += this.endian)
                }

                return e.prototype.size = function () {
                    return t.TYPES[this.type]
                }, e.prototype.decode = function (t) {
                    return t["read" + this.fn]()
                }, e.prototype.encode = function (t, e) {
                    return t["write" + this.fn](e)
                }, e
            }(), e.Number = i, e.uint8 = new i("UInt8"), e.uint16be = e.uint16 = new i("UInt16", "BE"), e.uint16le = new i("UInt16", "LE"), e.uint24be = e.uint24 = new i("UInt24", "BE"), e.uint24le = new i("UInt24", "LE"), e.uint32be = e.uint32 = new i("UInt32", "BE"), e.uint32le = new i("UInt32", "LE"), e.int8 = new i("Int8"), e.int16be = e.int16 = new i("Int16", "BE"), e.int16le = new i("Int16", "LE"), e.int24be = e.int24 = new i("Int24", "BE"), e.int24le = new i("Int24", "LE"), e.int32be = e.int32 = new i("Int32", "BE"), e.int32le = new i("Int32", "LE"), e.floatbe = e.float = new i("Float", "BE"), e.floatle = new i("Float", "LE"), e.doublebe = e.double = new i("Double", "BE"), e.doublele = new i("Double", "LE"), r = function (t) {
                function e(t, n, r) {
                    null == r && (r = t >> 1), e.__super__.constructor.call(this, "Int" + t, n), this._point = 1 << r
                }

                return a(e, t), e.prototype.decode = function (t) {
                    return e.__super__.decode.call(this, t) / this._point
                }, e.prototype.encode = function (t, n) {
                    return e.__super__.encode.call(this, t, n * this._point | 0)
                }, e
            }(i), e.Fixed = r, e.fixed16be = e.fixed16 = new r(16, "BE"), e.fixed16le = new r(16, "LE"), e.fixed32be = e.fixed32 = new r(32, "BE"), e.fixed32le = new r(32, "LE")
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var t, r;
            t = n(109).Number, e.resolveLength = function (e, n, r) {
                var i;
                if ("number" == typeof e ? i = e : "function" == typeof e ? i = e.call(r, r) : r && "string" == typeof e ? i = r[e] : n && e instanceof t && (i = e.decode(n)), isNaN(i))throw new Error("Not a fixed size");
                return i
            }, r = function () {
                function t(t) {
                    var e, n;
                    null == t && (t = {}), this.enumerable = !0, this.configurable = !0;
                    for (e in t)n = t[e], this[e] = n
                }

                return t
            }(), e.PropertyDescriptor = r
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r, i, o, a, s, u = {}.hasOwnProperty, l = function (t, e) {
                function n() {
                    this.constructor = t
                }

                for (var r in e)u.call(e, r) && (t[r] = e[r]);
                return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
            };
            e = n(108), o = n(109).Number, s = n(110), a = n(72).inspect, i = function (t) {
                function e() {
                    return e.__super__.constructor.apply(this, arguments)
                }

                return l(e, t), e.prototype.decode = function (t, e) {
                    var n, i, a;
                    return i = t.pos, n = s.resolveLength(this.length, t, e), this.length instanceof o && (e = {
                        parent: e, _startOffset: i,
                        _currentOffset: 0, _length: n
                    }), a = new r(this.type, n, t, e), t.pos += n * this.type.size(null, e), a
                }, e.prototype.size = function (t, n) {
                    return t instanceof r && (t = t.toArray()), e.__super__.size.call(this, t, n)
                }, e.prototype.encode = function (t, n, i) {
                    return n instanceof r && (n = n.toArray()), e.__super__.encode.call(this, t, n, i)
                }, e
            }(e), r = function () {
                function t(t, e, n, r) {
                    this.type = t, this.length = e, this.stream = n, this.ctx = r, this.base = this.stream.pos, this.items = []
                }

                return t.prototype.get = function (t) {
                    var e;
                    if (!(t < 0 || t >= this.length))return null == this.items[t] && (e = this.stream.pos, this.stream.pos = this.base + this.type.size(null, this.ctx) * t, this.items[t] = this.type.decode(this.stream, this.ctx), this.stream.pos = e), this.items[t]
                }, t.prototype.toArray = function () {
                    var t, e, n, r;
                    for (r = [], t = e = 0, n = this.length; e < n; t = e += 1)r.push(this.get(t));
                    return r
                }, t.prototype.inspect = function () {
                    return a(this.toArray())
                }, t
            }(), t.exports = i
        }).call(this)
    }, function (t, e) {
        (function () {
            var e;
            e = function () {
                function t(t, e) {
                    this.type = t, this.flags = null != e ? e : []
                }

                return t.prototype.decode = function (t) {
                    var e, n, r, i, o, a, s;
                    for (i = this.type.decode(t), r = {}, s = this.flags, n = o = 0, a = s.length; o < a; n = ++o)null != (e = s[n]) && (r[e] = !!(i & 1 << n));
                    return r
                }, t.prototype.size = function () {
                    return this.type.size()
                }, t.prototype.encode = function (t, e) {
                    var n, r, i, o, a, s;
                    for (i = 0, s = this.flags, r = o = 0, a = s.length; o < a; r = ++o)null != (n = s[r]) && e[n] && (i |= 1 << r);
                    return this.type.encode(t, i)
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e) {
        (function () {
            var e;
            e = function () {
                function t(t) {
                    this.type = t
                }

                return t.prototype.decode = function (t, e) {
                    return !!this.type.decode(t, e)
                }, t.prototype.size = function (t, e) {
                    return this.type.size(t, e)
                }, t.prototype.encode = function (t, e, n) {
                    return this.type.encode(t, +e, n)
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r, i;
            i = n(110), r = n(109).Number, e = function () {
                function t(t) {
                    this.length = t
                }

                return t.prototype.decode = function (t, e) {
                    var n;
                    return n = i.resolveLength(this.length, t, e), t.readBuffer(n)
                }, t.prototype.size = function (t, e) {
                    return t ? t.length : i.resolveLength(this.length, null, e)
                }, t.prototype.encode = function (t, e, n) {
                    return this.length instanceof r && this.length.encode(t, e.length), t.writeBuffer(e)
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e) {
        (function () {
            var e;
            e = function () {
                function t(t, e) {
                    this.type = t, this.options = null != e ? e : []
                }

                return t.prototype.decode = function (t) {
                    var e;
                    return e = this.type.decode(t), this.options[e] || e
                }, t.prototype.size = function () {
                    return this.type.size()
                }, t.prototype.encode = function (t, e) {
                    var n;
                    if (-1 === (n = this.options.indexOf(e)))throw new Error("Unknown option in enum: " + e);
                    return this.type.encode(t, n)
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e) {
        (function () {
            var e;
            e = function () {
                function t(t, e) {
                    this.type = t, this.condition = null == e || e
                }

                return t.prototype.decode = function (t, e) {
                    var n;
                    if (n = this.condition, "function" == typeof n && (n = n.call(e, e)), n)return this.type.decode(t, e)
                }, t.prototype.size = function (t, e) {
                    var n;
                    return n = this.condition, "function" == typeof n && (n = n.call(e, e)), n ? this.type.size(t, e) : 0
                }, t.prototype.encode = function (t, e, n) {
                    var r;
                    if (r = this.condition, "function" == typeof r && (r = r.call(n, n)), r)return this.type.encode(t, e, n)
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r;
            r = n(110), e = function () {
                function t(t, e) {
                    this.type = t, this.count = null != e ? e : 1
                }

                return t.prototype.decode = function (t, e) {
                    t.pos += this.size(null, e)
                }, t.prototype.size = function (t, e) {
                    var n;
                    return n = r.resolveLength(this.count, null, e), this.type.size() * n
                }, t.prototype.encode = function (t, e, n) {
                    return t.fill(0, this.size(e, n))
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i, o;
                r = n(109).Number, o = n(110), i = function () {
                    function t(t, e) {
                        this.length = t, this.encoding = null != e ? e : "ascii"
                    }

                    return t.prototype.decode = function (t, e) {
                        var n, r, i, a, s;
                        return i = function () {
                            if (null != this.length)return o.resolveLength(this.length, t, e);
                            for (n = t.buffer, i = t.length, a = t.pos; a < i && 0 !== n[a];)++a;
                            return a - t.pos
                        }.call(this), r = this.encoding, "function" == typeof r && (r = r.call(e, e) || "ascii"), s = t.readString(i, r), null == this.length && t.pos < t.length && t.pos++, s
                    }, t.prototype.size = function (t, n) {
                        var i, a;
                        return t ? (i = this.encoding, "function" == typeof i && (i = i.call(null != n ? n.val : void 0, null != n ? n.val : void 0) || "ascii"), "utf16be" === i && (i = "utf16le"), a = e.byteLength(t, i), this.length instanceof r && (a += this.length.size()), null == this.length && a++, a) : o.resolveLength(this.length, null, n)
                    }, t.prototype.encode = function (t, n, i) {
                        var o;
                        if (o = this.encoding, "function" == typeof o && (o = o.call(null != i ? i.val : void 0, null != i ? i.val : void 0) || "ascii"), this.length instanceof r && this.length.encode(t, e.byteLength(n, o)), t.writeString(n, o), null == this.length)return t.writeUInt8(0)
                    }, t
                }(), t.exports = i
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        (function () {
            var e, r;
            r = n(110), e = function () {
                function t(t) {
                    this.fields = null != t ? t : {}
                }

                return t.prototype.decode = function (t, e, n) {
                    var r, i;
                    return null == n && (n = 0), r = this._setup(t, e, n), this._parseFields(t, r, this.fields), null != (i = this.process) && i.call(r, t), r
                }, t.prototype._setup = function (t, e, n) {
                    var r;
                    return r = {}, Object.defineProperties(r, {
                        parent: {value: e},
                        _startOffset: {value: t.pos},
                        _currentOffset: {value: 0, writable: !0},
                        _length: {value: n}
                    }), r
                }, t.prototype._parseFields = function (t, e, n) {
                    var i, o, a;
                    for (i in n)o = n[i], a = "function" == typeof o ? o.call(e, e) : o.decode(t, e), void 0 !== a && (a instanceof r.PropertyDescriptor ? Object.defineProperty(e, i, a) : e[i] = a), e._currentOffset = t.pos - e._startOffset
                }, t.prototype.size = function (t, e, n) {
                    var r, i, o, a, s;
                    null == t && (t = {}), null == n && (n = !0), r = {
                        parent: e,
                        val: t,
                        pointerSize: 0
                    }, o = 0, s = this.fields;
                    for (i in s)a = s[i], null != a.size && (o += a.size(t[i], r));
                    return n && (o += r.pointerSize), o
                }, t.prototype.encode = function (t, e, n) {
                    var r, i, o, a, s, u, l;
                    null != (u = this.preEncode) && u.call(e, t), r = {
                        pointers: [],
                        startOffset: t.pos,
                        parent: n,
                        val: e,
                        pointerSize: 0
                    }, r.pointerOffset = t.pos + this.size(e, r, !1), l = this.fields;
                    for (o in l)s = l[o], null != s.encode && s.encode(t, e[o], r);
                    for (i = 0; i < r.pointers.length;)a = r.pointers[i++], a.type.encode(t, a.val, a.parent)
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r, i = {}.hasOwnProperty, o = function (t, e) {
                function n() {
                    this.constructor = t
                }

                for (var r in e)i.call(e, r) && (t[r] = e[r]);
                return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
            };
            e = n(119), r = function (t) {
                function e(t, e) {
                    this.type = t, this.versions = null != e ? e : {}, "string" == typeof this.type && (this.versionGetter = new Function("parent", "return parent." + this.type), this.versionSetter = new Function("parent", "version", "return parent." + this.type + " = version"))
                }

                return o(e, t), e.prototype.decode = function (t, n, r) {
                    var i, o, a;
                    if (null == r && (r = 0), o = this._setup(t, n, r), "string" == typeof this.type ? o.version = this.versionGetter(n) : o.version = this.type.decode(t), this.versions.header && this._parseFields(t, o, this.versions.header), null == (i = this.versions[o.version]))throw new Error("Unknown version " + o.version);
                    return i instanceof e ? i.decode(t, n) : (this._parseFields(t, o, i), null != (a = this.process) && a.call(o, t), o)
                }, e.prototype.size = function (t, e, n) {
                    var r, i, o, a, s, u;
                    if (null == n && (n = !0), !t)throw new Error("Not a fixed size");
                    if (r = {
                            parent: e,
                            val: t,
                            pointerSize: 0
                        }, a = 0, "string" != typeof this.type && (a += this.type.size(t.version, r)), this.versions.header) {
                        u = this.versions.header;
                        for (o in u)s = u[o], null != s.size && (a += s.size(t[o], r))
                    }
                    if (null == (i = this.versions[t.version]))throw new Error("Unknown version " + t.version);
                    for (o in i)s = i[o], null != s.size && (a += s.size(t[o], r));
                    return n && (a += r.pointerSize), a
                }, e.prototype.encode = function (t, e, n) {
                    var r, i, o, a, s, u, l, c;
                    if (null != (l = this.preEncode) && l.call(e, t), r = {
                            pointers: [],
                            startOffset: t.pos,
                            parent: n,
                            val: e,
                            pointerSize: 0
                        }, r.pointerOffset = t.pos + this.size(e, r, !1), "string" != typeof this.type && this.type.encode(t, e.version), this.versions.header) {
                        c = this.versions.header;
                        for (a in c)u = c[a], null != u.encode && u.encode(t, e[a], r)
                    }
                    i = this.versions[e.version];
                    for (a in i)u = i[a], null != u.encode && u.encode(t, e[a], r);
                    for (o = 0; o < r.pointers.length;)s = r.pointers[o++], s.type.encode(t, s.val, s.parent)
                }, e
            }(e), t.exports = r
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var t, r, i;
            i = n(110), t = function () {
                function t(t, e, n) {
                    var r, i, o, a;
                    this.offsetType = t, this.type = e, this.options = null != n ? n : {}, "void" === this.type && (this.type = null), null == (r = this.options).type && (r.type = "local"), null == (i = this.options).allowNull && (i.allowNull = !0), null == (o = this.options).nullValue && (o.nullValue = 0), null == (a = this.options).lazy && (a.lazy = !1), this.options.relativeTo && (this.relativeToGetter = new Function("ctx", "return ctx." + this.options.relativeTo))
                }

                return t.prototype.decode = function (t, e) {
                    var n, r, o, a, s, u;
                    return (o = this.offsetType.decode(t, e)) === this.options.nullValue && this.options.allowNull ? null : (s = function () {
                        switch (this.options.type) {
                            case"local":
                                return e._startOffset;
                            case"immediate":
                                return t.pos - this.offsetType.size();
                            case"parent":
                                return e.parent._startOffset;
                            default:
                                for (n = e; n.parent;)n = n.parent;
                                return n._startOffset || 0
                        }
                    }.call(this), this.options.relativeTo && (s += this.relativeToGetter(e)), a = o + s, null != this.type ? (u = null, r = function (n) {
                        return function () {
                            var r;
                            return null != u ? u : (r = t.pos, t.pos = a, u = n.type.decode(t, e), t.pos = r, u)
                        }
                    }(this), this.options.lazy ? new i.PropertyDescriptor({get: r}) : r()) : a)
                }, t.prototype.size = function (t, e) {
                    var n, i;
                    switch (n = e, this.options.type) {
                        case"local":
                        case"immediate":
                            break;
                        case"parent":
                            e = e.parent;
                            break;
                        default:
                            for (; e.parent;)e = e.parent
                    }
                    if (null == (i = this.type)) {
                        if (!(t instanceof r))throw new Error("Must be a VoidPointer");
                        i = t.type, t = t.value
                    }
                    return t && e && (e.pointerSize += i.size(t, n)), this.offsetType.size()
                }, t.prototype.encode = function (t, e, n) {
                    var i, o, a;
                    if (i = n, null == e)return void this.offsetType.encode(t, this.options.nullValue);
                    switch (this.options.type) {
                        case"local":
                            o = n.startOffset;
                            break;
                        case"immediate":
                            o = t.pos + this.offsetType.size(e, i);
                            break;
                        case"parent":
                            n = n.parent, o = n.startOffset;
                            break;
                        default:
                            for (o = 0; n.parent;)n = n.parent
                    }
                    if (this.options.relativeTo && (o += this.relativeToGetter(i.val)), this.offsetType.encode(t, n.pointerOffset - o), null == (a = this.type)) {
                        if (!(e instanceof r))throw new Error("Must be a VoidPointer");
                        a = e.type, e = e.value
                    }
                    return n.pointers.push({type: a, val: e, parent: i}), n.pointerOffset += a.size(e, i)
                }, t
            }(), r = function () {
                function t(t, e) {
                    this.type = t, this.value = e
                }

                return t
            }(), e.Pointer = t, e.VoidPointer = r
        }).call(this)
    }, function (t, e, n) {
        t.exports = {default: n(123), __esModule: !0}
    }, function (t, e, n) {
        n(124);
        var r = n(142).Object;
        t.exports = function (t, e) {
            return r.getOwnPropertyDescriptor(t, e)
        }
    }, function (t, e, n) {
        var r = n(125), i = n(129).f;
        n(140)("getOwnPropertyDescriptor", function () {
            return function (t, e) {
                return i(r(t), e)
            }
        })
    }, function (t, e, n) {
        var r = n(126), i = n(128);
        t.exports = function (t) {
            return r(i(t))
        }
    }, function (t, e, n) {
        var r = n(127);
        t.exports = Object("z").propertyIsEnumerable(0) ? Object : function (t) {
            return "String" == r(t) ? t.split("") : Object(t)
        }
    }, function (t, e) {
        var n = {}.toString;
        t.exports = function (t) {
            return n.call(t).slice(8, -1)
        }
    }, function (t, e) {
        t.exports = function (t) {
            if (void 0 == t)throw TypeError("Can't call method on  " + t);
            return t
        }
    }, function (t, e, n) {
        var r = n(130), i = n(131), o = n(125), a = n(132), s = n(134), u = n(135), l = Object.getOwnPropertyDescriptor;
        e.f = n(136) ? l : function (t, e) {
            if (t = o(t), e = a(e, !0), u)try {
                return l(t, e)
            } catch (t) {
            }
            if (s(t, e))return i(!r.f.call(t, e), t[e])
        }
    }, function (t, e) {
        e.f = {}.propertyIsEnumerable
    }, function (t, e) {
        t.exports = function (t, e) {
            return {enumerable: !(1 & t), configurable: !(2 & t), writable: !(4 & t), value: e}
        }
    }, function (t, e, n) {
        var r = n(133);
        t.exports = function (t, e) {
            if (!r(t))return t;
            var n, i;
            if (e && "function" == typeof(n = t.toString) && !r(i = n.call(t)))return i;
            if ("function" == typeof(n = t.valueOf) && !r(i = n.call(t)))return i;
            if (!e && "function" == typeof(n = t.toString) && !r(i = n.call(t)))return i;
            throw TypeError("Can't convert object to primitive value")
        }
    }, function (t, e) {
        t.exports = function (t) {
            return "object" == typeof t ? null !== t : "function" == typeof t
        }
    }, function (t, e) {
        var n = {}.hasOwnProperty;
        t.exports = function (t, e) {
            return n.call(t, e)
        }
    }, function (t, e, n) {
        t.exports = !n(136) && !n(137)(function () {
                return 7 != Object.defineProperty(n(138)("div"), "a", {
                        get: function () {
                            return 7
                        }
                    }).a
            })
    }, function (t, e, n) {
        t.exports = !n(137)(function () {
            return 7 != Object.defineProperty({}, "a", {
                    get: function () {
                        return 7
                    }
                }).a
        })
    }, function (t, e) {
        t.exports = function (t) {
            try {
                return !!t()
            } catch (t) {
                return !0
            }
        }
    }, function (t, e, n) {
        var r = n(133), i = n(139).document, o = r(i) && r(i.createElement);
        t.exports = function (t) {
            return o ? i.createElement(t) : {}
        }
    }, function (t, e) {
        var n = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = n)
    }, function (t, e, n) {
        var r = n(141), i = n(142), o = n(137);
        t.exports = function (t, e) {
            var n = (i.Object || {})[t] || Object[t], a = {};
            a[t] = e(n), r(r.S + r.F * o(function () {
                    n(1)
                }), "Object", a)
        }
    }, function (t, e, n) {
        var r = n(139), i = n(142), o = n(143), a = n(145), s = function (t, e, n) {
            var u, l, c, f = t & s.F, h = t & s.G, p = t & s.S, d = t & s.P, g = t & s.B, y = t & s.W, v = h ? i : i[e] || (i[e] = {}), b = v.prototype, m = h ? r : p ? r[e] : (r[e] || {}).prototype;
            h && (n = e);
            for (u in n)(l = !f && m && void 0 !== m[u]) && u in v || (c = l ? m[u] : n[u], v[u] = h && "function" != typeof m[u] ? n[u] : g && l ? o(c, r) : y && m[u] == c ? function (t) {
                var e = function (e, n, r) {
                    if (this instanceof t) {
                        switch (arguments.length) {
                            case 0:
                                return new t;
                            case 1:
                                return new t(e);
                            case 2:
                                return new t(e, n)
                        }
                        return new t(e, n, r)
                    }
                    return t.apply(this, arguments)
                };
                return e.prototype = t.prototype, e
            }(c) : d && "function" == typeof c ? o(Function.call, c) : c, d && ((v.virtual || (v.virtual = {}))[u] = c, t & s.R && b && !b[u] && a(b, u, c)))
        };
        s.F = 1, s.G = 2, s.S = 4, s.P = 8, s.B = 16, s.W = 32, s.U = 64, s.R = 128, t.exports = s
    }, function (t, e) {
        var n = t.exports = {version: "2.4.0"};
        "number" == typeof __e && (__e = n)
    }, function (t, e, n) {
        var r = n(144);
        t.exports = function (t, e, n) {
            if (r(t), void 0 === e)return t;
            switch (n) {
                case 1:
                    return function (n) {
                        return t.call(e, n)
                    };
                case 2:
                    return function (n, r) {
                        return t.call(e, n, r)
                    };
                case 3:
                    return function (n, r, i) {
                        return t.call(e, n, r, i)
                    }
            }
            return function () {
                return t.apply(e, arguments)
            }
        }
    }, function (t, e) {
        t.exports = function (t) {
            if ("function" != typeof t)throw TypeError(t + " is not a function!");
            return t
        }
    }, function (t, e, n) {
        var r = n(146), i = n(131);
        t.exports = n(136) ? function (t, e, n) {
            return r.f(t, e, i(1, n))
        } : function (t, e, n) {
            return t[e] = n, t
        }
    }, function (t, e, n) {
        var r = n(147), i = n(135), o = n(132), a = Object.defineProperty;
        e.f = n(136) ? Object.defineProperty : function (t, e, n) {
            if (r(t), e = o(e, !0), r(n), i)try {
                return a(t, e, n)
            } catch (t) {
            }
            if ("get" in n || "set" in n)throw TypeError("Accessors not supported!");
            return "value" in n && (t[e] = n.value), t
        }
    }, function (t, e, n) {
        var r = n(133);
        t.exports = function (t) {
            if (!r(t))throw TypeError(t + " is not an object!");
            return t
        }
    }, function (t, e, n) {
        t.exports = {default: n(149), __esModule: !0}
    }, function (t, e, n) {
        n(150), n(176), t.exports = n(178)
    }, function (t, e, n) {
        n(151);
        for (var r = n(139), i = n(145), o = n(154), a = n(173)("toStringTag"), s = ["NodeList", "DOMTokenList", "MediaList", "StyleSheetList", "CSSRuleList"], u = 0; u < 5; u++) {
            var l = s[u], c = r[l], f = c && c.prototype;
            f && !f[a] && i(f, a, l), o[l] = o.Array
        }
    }, function (t, e, n) {
        "use strict";
        var r = n(152), i = n(153), o = n(154), a = n(125);
        t.exports = n(155)(Array, "Array", function (t, e) {
            this._t = a(t), this._i = 0, this._k = e
        }, function () {
            var t = this._t, e = this._k, n = this._i++;
            return !t || n >= t.length ? (this._t = void 0, i(1)) : "keys" == e ? i(0, n) : "values" == e ? i(0, t[n]) : i(0, [n, t[n]])
        }, "values"), o.Arguments = o.Array, r("keys"), r("values"), r("entries")
    }, function (t, e) {
        t.exports = function () {
        }
    }, function (t, e) {
        t.exports = function (t, e) {
            return {value: e, done: !!t}
        }
    }, function (t, e) {
        t.exports = {}
    }, function (t, e, n) {
        "use strict";
        var r = n(156), i = n(141), o = n(157), a = n(145), s = n(134), u = n(154), l = n(158), c = n(172), f = n(174), h = n(173)("iterator"), p = !([].keys && "next" in [].keys()), d = function () {
            return this
        };
        t.exports = function (t, e, n, g, y, v, b) {
            l(n, e, g);
            var m, w, x, _ = function (t) {
                if (!p && t in A)return A[t];
                switch (t) {
                    case"keys":
                    case"values":
                        return function () {
                            return new n(this, t)
                        }
                }
                return function () {
                    return new n(this, t)
                }
            }, k = e + " Iterator", S = "values" == y, C = !1, A = t.prototype, P = A[h] || A["@@iterator"] || y && A[y], E = P || _(y), I = y ? S ? _("entries") : E : void 0, T = "Array" == e ? A.entries || P : P;
            if (T && (x = f(T.call(new t))) !== Object.prototype && (c(x, k, !0), r || s(x, h) || a(x, h, d)), S && P && "values" !== P.name && (C = !0, E = function () {
                    return P.call(this)
                }), r && !b || !p && !C && A[h] || a(A, h, E), u[e] = E, u[k] = d, y)if (m = {
                    values: S ? E : _("values"),
                    keys: v ? E : _("keys"),
                    entries: I
                }, b)for (w in m)w in A || o(A, w, m[w]); else i(i.P + i.F * (p || C), e, m);
            return m
        }
    }, function (t, e) {
        t.exports = !0
    }, function (t, e, n) {
        t.exports = n(145)
    }, function (t, e, n) {
        "use strict";
        var r = n(159), i = n(131), o = n(172), a = {};
        n(145)(a, n(173)("iterator"), function () {
            return this
        }), t.exports = function (t, e, n) {
            t.prototype = r(a, {next: i(1, n)}), o(t, e + " Iterator")
        }
    }, function (t, e, n) {
        var r = n(147), i = n(160), o = n(170), a = n(167)("IE_PROTO"), s = function () {
        }, u = function () {
            var t, e = n(138)("iframe"), r = o.length;
            for (e.style.display = "none", n(171).appendChild(e), e.src = "javascript:", t = e.contentWindow.document, t.open(), t.write("<script>document.F=Object<\/script>"), t.close(), u = t.F; r--;)delete u.prototype[o[r]];
            return u()
        };
        t.exports = Object.create || function (t, e) {
                var n;
                return null !== t ? (s.prototype = r(t), n = new s, s.prototype = null, n[a] = t) : n = u(), void 0 === e ? n : i(n, e)
            }
    }, function (t, e, n) {
        var r = n(146), i = n(147), o = n(161);
        t.exports = n(136) ? Object.defineProperties : function (t, e) {
            i(t);
            for (var n, a = o(e), s = a.length, u = 0; s > u;)r.f(t, n = a[u++], e[n]);
            return t
        }
    }, function (t, e, n) {
        var r = n(162), i = n(170);
        t.exports = Object.keys || function (t) {
                return r(t, i)
            }
    }, function (t, e, n) {
        var r = n(134), i = n(125), o = n(163)(!1), a = n(167)("IE_PROTO");
        t.exports = function (t, e) {
            var n, s = i(t), u = 0, l = [];
            for (n in s)n != a && r(s, n) && l.push(n);
            for (; e.length > u;)r(s, n = e[u++]) && (~o(l, n) || l.push(n));
            return l
        }
    }, function (t, e, n) {
        var r = n(125), i = n(164), o = n(166);
        t.exports = function (t) {
            return function (e, n, a) {
                var s, u = r(e), l = i(u.length), c = o(a, l);
                if (t && n != n) {
                    for (; l > c;)if ((s = u[c++]) != s)return !0
                } else for (; l > c; c++)if ((t || c in u) && u[c] === n)return t || c || 0;
                return !t && -1
            }
        }
    }, function (t, e, n) {
        var r = n(165), i = Math.min;
        t.exports = function (t) {
            return t > 0 ? i(r(t), 9007199254740991) : 0
        }
    }, function (t, e) {
        var n = Math.ceil, r = Math.floor;
        t.exports = function (t) {
            return isNaN(t = +t) ? 0 : (t > 0 ? r : n)(t)
        }
    }, function (t, e, n) {
        var r = n(165), i = Math.max, o = Math.min;
        t.exports = function (t, e) {
            return t = r(t), t < 0 ? i(t + e, 0) : o(t, e)
        }
    }, function (t, e, n) {
        var r = n(168)("keys"), i = n(169);
        t.exports = function (t) {
            return r[t] || (r[t] = i(t))
        }
    }, function (t, e, n) {
        var r = n(139), i = r["__core-js_shared__"] || (r["__core-js_shared__"] = {});
        t.exports = function (t) {
            return i[t] || (i[t] = {})
        }
    }, function (t, e) {
        var n = 0, r = Math.random();
        t.exports = function (t) {
            return "Symbol(".concat(void 0 === t ? "" : t, ")_", (++n + r).toString(36))
        }
    }, function (t, e) {
        t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
    }, function (t, e, n) {
        t.exports = n(139).document && document.documentElement
    }, function (t, e, n) {
        var r = n(146).f, i = n(134), o = n(173)("toStringTag");
        t.exports = function (t, e, n) {
            t && !i(t = n ? t : t.prototype, o) && r(t, o, {configurable: !0, value: e})
        }
    }, function (t, e, n) {
        var r = n(168)("wks"), i = n(169), o = n(139).Symbol, a = "function" == typeof o;
        (t.exports = function (t) {
            return r[t] || (r[t] = a && o[t] || (a ? o : i)("Symbol." + t))
        }).store = r
    }, function (t, e, n) {
        var r = n(134), i = n(175), o = n(167)("IE_PROTO"), a = Object.prototype;
        t.exports = Object.getPrototypeOf || function (t) {
                return t = i(t), r(t, o) ? t[o] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? a : null
            }
    }, function (t, e, n) {
        var r = n(128);
        t.exports = function (t) {
            return Object(r(t))
        }
    }, function (t, e, n) {
        "use strict";
        var r = n(177)(!0);
        n(155)(String, "String", function (t) {
            this._t = String(t), this._i = 0
        }, function () {
            var t, e = this._t, n = this._i;
            return n >= e.length ? {value: void 0, done: !0} : (t = r(e, n), this._i += t.length, {value: t, done: !1})
        })
    }, function (t, e, n) {
        var r = n(165), i = n(128);
        t.exports = function (t) {
            return function (e, n) {
                var o, a, s = String(i(e)), u = r(n), l = s.length;
                return u < 0 || u >= l ? t ? "" : void 0 : (o = s.charCodeAt(u), o < 55296 || o > 56319 || u + 1 === l || (a = s.charCodeAt(u + 1)) < 56320 || a > 57343 ? t ? s.charAt(u) : o : t ? s.slice(u, u + 2) : a - 56320 + (o - 55296 << 10) + 65536)
            }
        }
    }, function (t, e, n) {
        var r = n(147), i = n(179);
        t.exports = n(142).getIterator = function (t) {
            var e = i(t);
            if ("function" != typeof e)throw TypeError(t + " is not iterable!");
            return r(e.call(t))
        }
    }, function (t, e, n) {
        var r = n(180), i = n(173)("iterator"), o = n(154);
        t.exports = n(142).getIteratorMethod = function (t) {
            if (void 0 != t)return t[i] || t["@@iterator"] || o[r(t)]
        }
    }, function (t, e, n) {
        var r = n(127), i = n(173)("toStringTag"), o = "Arguments" == r(function () {
                return arguments
            }()), a = function (t, e) {
            try {
                return t[e]
            } catch (t) {
            }
        };
        t.exports = function (t) {
            var e, n, s;
            return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof(n = a(e = Object(t), i)) ? n : o ? r(e) : "Object" == (s = r(e)) && "function" == typeof e.callee ? "Arguments" : s
        }
    }, function (t, e, n) {
        t.exports = {default: n(182), __esModule: !0}
    }, function (t, e, n) {
        n(183), t.exports = n(142).Object.freeze
    }, function (t, e, n) {
        var r = n(133), i = n(184).onFreeze;
        n(140)("freeze", function (t) {
            return function (e) {
                return t && r(e) ? t(i(e)) : e
            }
        })
    }, function (t, e, n) {
        var r = n(169)("meta"), i = n(133), o = n(134), a = n(146).f, s = 0, u = Object.isExtensible || function () {
                return !0
            }, l = !n(137)(function () {
            return u(Object.preventExtensions({}))
        }), c = function (t) {
            a(t, r, {value: {i: "O" + ++s, w: {}}})
        }, f = function (t, e) {
            if (!i(t))return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;
            if (!o(t, r)) {
                if (!u(t))return "F";
                if (!e)return "E";
                c(t)
            }
            return t[r].i
        }, h = function (t, e) {
            if (!o(t, r)) {
                if (!u(t))return !0;
                if (!e)return !1;
                c(t)
            }
            return t[r].w
        }, p = function (t) {
            return l && d.NEED && u(t) && !o(t, r) && c(t), t
        }, d = t.exports = {KEY: r, NEED: !1, fastKey: f, getWeak: h, onFreeze: p}
    }, function (t, e, n) {
        t.exports = {default: n(186), __esModule: !0}
    }, function (t, e, n) {
        n(187), t.exports = n(142).Object.keys
    }, function (t, e, n) {
        var r = n(175), i = n(161);
        n(140)("keys", function () {
            return function (t) {
                return i(r(t))
            }
        })
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {default: t}
        }

        e.__esModule = !0;
        var i = n(189), o = r(i), a = n(192), s = r(a), u = "function" == typeof s.default && "symbol" == typeof o.default ? function (t) {
            return typeof t
        } : function (t) {
            return t && "function" == typeof s.default && t.constructor === s.default && t !== s.default.prototype ? "symbol" : typeof t
        };
        e.default = "function" == typeof s.default && "symbol" === u(o.default) ? function (t) {
            return void 0 === t ? "undefined" : u(t)
        } : function (t) {
            return t && "function" == typeof s.default && t.constructor === s.default && t !== s.default.prototype ? "symbol" : void 0 === t ? "undefined" : u(t)
        }
    }, function (t, e, n) {
        t.exports = {default: n(190), __esModule: !0}
    }, function (t, e, n) {
        n(176), n(150), t.exports = n(191).f("iterator")
    }, function (t, e, n) {
        e.f = n(173)
    }, function (t, e, n) {
        t.exports = {default: n(193), __esModule: !0}
    }, function (t, e, n) {
        n(194), n(202), n(203), n(204), t.exports = n(142).Symbol
    }, function (t, e, n) {
        "use strict";
        var r = n(139), i = n(134), o = n(136), a = n(141), s = n(157), u = n(184).KEY, l = n(137), c = n(168), f = n(172), h = n(169), p = n(173), d = n(191), g = n(195), y = n(196), v = n(197), b = n(199), m = n(147), w = n(125), x = n(132), _ = n(131), k = n(159), S = n(200), C = n(129), A = n(146), P = n(161), E = C.f, I = A.f, T = S.f, O = r.Symbol, B = r.JSON, L = B && B.stringify, M = p("_hidden"), R = p("toPrimitive"), F = {}.propertyIsEnumerable, z = c("symbol-registry"), D = c("symbols"), N = c("op-symbols"), U = Object.prototype, W = "function" == typeof O, j = r.QObject, G = !j || !j.prototype || !j.prototype.findChild, V = o && l(function () {
            return 7 != k(I({}, "a", {
                    get: function () {
                        return I(this, "a", {value: 7}).a
                    }
                })).a
        }) ? function (t, e, n) {
            var r = E(U, e);
            r && delete U[e], I(t, e, n), r && t !== U && I(U, e, r)
        } : I, H = function (t) {
            var e = D[t] = k(O.prototype);
            return e._k = t, e
        }, q = W && "symbol" == typeof O.iterator ? function (t) {
            return "symbol" == typeof t
        } : function (t) {
            return t instanceof O
        }, Z = function (t, e, n) {
            return t === U && Z(N, e, n), m(t), e = x(e, !0), m(n), i(D, e) ? (n.enumerable ? (i(t, M) && t[M][e] && (t[M][e] = !1), n = k(n, {enumerable: _(0, !1)})) : (i(t, M) || I(t, M, _(1, {})), t[M][e] = !0), V(t, e, n)) : I(t, e, n)
        }, Y = function (t, e) {
            m(t);
            for (var n, r = v(e = w(e)), i = 0, o = r.length; o > i;)Z(t, n = r[i++], e[n]);
            return t
        }, X = function (t, e) {
            return void 0 === e ? k(t) : Y(k(t), e)
        }, K = function (t) {
            var e = F.call(this, t = x(t, !0));
            return !(this === U && i(D, t) && !i(N, t)) && (!(e || !i(this, t) || !i(D, t) || i(this, M) && this[M][t]) || e)
        }, J = function (t, e) {
            if (t = w(t), e = x(e, !0), t !== U || !i(D, e) || i(N, e)) {
                var n = E(t, e);
                return !n || !i(D, e) || i(t, M) && t[M][e] || (n.enumerable = !0), n
            }
        }, Q = function (t) {
            for (var e, n = T(w(t)), r = [], o = 0; n.length > o;)i(D, e = n[o++]) || e == M || e == u || r.push(e);
            return r
        }, $ = function (t) {
            for (var e, n = t === U, r = T(n ? N : w(t)), o = [], a = 0; r.length > a;)!i(D, e = r[a++]) || n && !i(U, e) || o.push(D[e]);
            return o
        };
        W || (O = function () {
            if (this instanceof O)throw TypeError("Symbol is not a constructor!");
            var t = h(arguments.length > 0 ? arguments[0] : void 0), e = function (n) {
                this === U && e.call(N, n), i(this, M) && i(this[M], t) && (this[M][t] = !1), V(this, t, _(1, n))
            };
            return o && G && V(U, t, {configurable: !0, set: e}), H(t)
        }, s(O.prototype, "toString", function () {
            return this._k
        }), C.f = J, A.f = Z, n(201).f = S.f = Q, n(130).f = K, n(198).f = $, o && !n(156) && s(U, "propertyIsEnumerable", K, !0), d.f = function (t) {
            return H(p(t))
        }), a(a.G + a.W + a.F * !W, {Symbol: O});
        for (var tt = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), et = 0; tt.length > et;)p(tt[et++]);
        for (var tt = P(p.store), et = 0; tt.length > et;)g(tt[et++]);
        a(a.S + a.F * !W, "Symbol", {
            for: function (t) {
                return i(z, t += "") ? z[t] : z[t] = O(t)
            }, keyFor: function (t) {
                if (q(t))return y(z, t);
                throw TypeError(t + " is not a symbol!")
            }, useSetter: function () {
                G = !0
            }, useSimple: function () {
                G = !1
            }
        }), a(a.S + a.F * !W, "Object", {
            create: X,
            defineProperty: Z,
            defineProperties: Y,
            getOwnPropertyDescriptor: J,
            getOwnPropertyNames: Q,
            getOwnPropertySymbols: $
        }), B && a(a.S + a.F * (!W || l(function () {
                var t = O();
                return "[null]" != L([t]) || "{}" != L({a: t}) || "{}" != L(Object(t))
            })), "JSON", {
            stringify: function (t) {
                if (void 0 !== t && !q(t)) {
                    for (var e, n, r = [t], i = 1; arguments.length > i;)r.push(arguments[i++]);
                    return e = r[1], "function" == typeof e && (n = e), !n && b(e) || (e = function (t, e) {
                        if (n && (e = n.call(this, t, e)), !q(e))return e
                    }), r[1] = e, L.apply(B, r)
                }
            }
        }), O.prototype[R] || n(145)(O.prototype, R, O.prototype.valueOf), f(O, "Symbol"), f(Math, "Math", !0), f(r.JSON, "JSON", !0)
    }, function (t, e, n) {
        var r = n(139), i = n(142), o = n(156), a = n(191), s = n(146).f;
        t.exports = function (t) {
            var e = i.Symbol || (i.Symbol = o ? {} : r.Symbol || {});
            "_" == t.charAt(0) || t in e || s(e, t, {value: a.f(t)})
        }
    }, function (t, e, n) {
        var r = n(161), i = n(125);
        t.exports = function (t, e) {
            for (var n, o = i(t), a = r(o), s = a.length, u = 0; s > u;)if (o[n = a[u++]] === e)return n
        }
    }, function (t, e, n) {
        var r = n(161), i = n(198), o = n(130);
        t.exports = function (t) {
            var e = r(t), n = i.f;
            if (n)for (var a, s = n(t), u = o.f, l = 0; s.length > l;)u.call(t, a = s[l++]) && e.push(a);
            return e
        }
    }, function (t, e) {
        e.f = Object.getOwnPropertySymbols
    }, function (t, e, n) {
        var r = n(127);
        t.exports = Array.isArray || function (t) {
                return "Array" == r(t)
            }
    }, function (t, e, n) {
        var r = n(125), i = n(201).f, o = {}.toString, a = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], s = function (t) {
            try {
                return i(t)
            } catch (t) {
                return a.slice()
            }
        };
        t.exports.f = function (t) {
            return a && "[object Window]" == o.call(t) ? s(t) : i(r(t))
        }
    }, function (t, e, n) {
        var r = n(162), i = n(170).concat("length", "prototype");
        e.f = Object.getOwnPropertyNames || function (t) {
                return r(t, i)
            }
    }, function (t, e) {
    }, function (t, e, n) {
        n(195)("asyncIterator")
    }, function (t, e, n) {
        n(195)("observable")
    }, function (t, e, n) {
        t.exports = {default: n(206), __esModule: !0}
    }, function (t, e, n) {
        n(207);
        var r = n(142).Object;
        t.exports = function (t, e, n) {
            return r.defineProperty(t, e, n)
        }
    }, function (t, e, n) {
        var r = n(141);
        r(r.S + r.F * !n(136), "Object", {defineProperty: n(146).f})
    }, function (t, e) {
        "use strict";
        e.__esModule = !0, e.default = function (t, e) {
            if (!(t instanceof e))throw new TypeError("Cannot call a class as a function")
        }
    }, function (t, e, n) {
        "use strict";
        e.__esModule = !0;
        var r = n(205), i = function (t) {
            return t && t.__esModule ? t : {default: t}
        }(r);
        e.default = function () {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), (0, i.default)(t, r.key, r)
                }
            }

            return function (e, n, r) {
                return n && t(e.prototype, n), r && t(e, r), e
            }
        }()
    }, function (t, e, n) {
        t.exports = {default: n(211), __esModule: !0}
    }, function (t, e, n) {
        n(202), n(176), n(150), n(212), n(224), t.exports = n(142).Map
    }, function (t, e, n) {
        "use strict";
        var r = n(213);
        t.exports = n(220)("Map", function (t) {
            return function () {
                return t(this, arguments.length > 0 ? arguments[0] : void 0)
            }
        }, {
            get: function (t) {
                var e = r.getEntry(this, t);
                return e && e.v
            }, set: function (t, e) {
                return r.def(this, 0 === t ? 0 : t, e)
            }
        }, r, !0)
    }, function (t, e, n) {
        "use strict";
        var r = n(146).f, i = n(159), o = n(214), a = n(143), s = n(215), u = n(128), l = n(216), c = n(155), f = n(153), h = n(219), p = n(136), d = n(184).fastKey, g = p ? "_s" : "size", y = function (t, e) {
            var n, r = d(e);
            if ("F" !== r)return t._i[r];
            for (n = t._f; n; n = n.n)if (n.k == e)return n
        };
        t.exports = {
            getConstructor: function (t, e, n, c) {
                var f = t(function (t, r) {
                    s(t, f, e, "_i"), t._i = i(null), t._f = void 0, t._l = void 0, t[g] = 0, void 0 != r && l(r, n, t[c], t)
                });
                return o(f.prototype, {
                    clear: function () {
                        for (var t = this, e = t._i, n = t._f; n; n = n.n)n.r = !0, n.p && (n.p = n.p.n = void 0), delete e[n.i];
                        t._f = t._l = void 0, t[g] = 0
                    }, delete: function (t) {
                        var e = this, n = y(e, t);
                        if (n) {
                            var r = n.n, i = n.p;
                            delete e._i[n.i], n.r = !0, i && (i.n = r), r && (r.p = i), e._f == n && (e._f = r), e._l == n && (e._l = i), e[g]--
                        }
                        return !!n
                    }, forEach: function (t) {
                        s(this, f, "forEach");
                        for (var e, n = a(t, arguments.length > 1 ? arguments[1] : void 0, 3); e = e ? e.n : this._f;)for (n(e.v, e.k, this); e && e.r;)e = e.p
                    }, has: function (t) {
                        return !!y(this, t)
                    }
                }), p && r(f.prototype, "size", {
                    get: function () {
                        return u(this[g])
                    }
                }), f
            }, def: function (t, e, n) {
                var r, i, o = y(t, e);
                return o ? o.v = n : (t._l = o = {
                    i: i = d(e, !0),
                    k: e,
                    v: n,
                    p: r = t._l,
                    n: void 0,
                    r: !1
                }, t._f || (t._f = o), r && (r.n = o), t[g]++, "F" !== i && (t._i[i] = o)), t
            }, getEntry: y, setStrong: function (t, e, n) {
                c(t, e, function (t, e) {
                    this._t = t, this._k = e, this._l = void 0
                }, function () {
                    for (var t = this, e = t._k, n = t._l; n && n.r;)n = n.p;
                    return t._t && (t._l = n = n ? n.n : t._t._f) ? "keys" == e ? f(0, n.k) : "values" == e ? f(0, n.v) : f(0, [n.k, n.v]) : (t._t = void 0, f(1))
                }, n ? "entries" : "values", !n, !0), h(e)
            }
        }
    }, function (t, e, n) {
        var r = n(145);
        t.exports = function (t, e, n) {
            for (var i in e)n && t[i] ? t[i] = e[i] : r(t, i, e[i]);
            return t
        }
    }, function (t, e) {
        t.exports = function (t, e, n, r) {
            if (!(t instanceof e) || void 0 !== r && r in t)throw TypeError(n + ": incorrect invocation!");
            return t
        }
    }, function (t, e, n) {
        var r = n(143), i = n(217), o = n(218), a = n(147), s = n(164), u = n(179), l = {}, c = {}, e = t.exports = function (t, e, n, f, h) {
            var p, d, g, y, v = h ? function () {
                return t
            } : u(t), b = r(n, f, e ? 2 : 1), m = 0;
            if ("function" != typeof v)throw TypeError(t + " is not iterable!");
            if (o(v)) {
                for (p = s(t.length); p > m; m++)if ((y = e ? b(a(d = t[m])[0], d[1]) : b(t[m])) === l || y === c)return y
            } else for (g = v.call(t); !(d = g.next()).done;)if ((y = i(g, b, d.value, e)) === l || y === c)return y
        };
        e.BREAK = l, e.RETURN = c
    }, function (t, e, n) {
        var r = n(147);
        t.exports = function (t, e, n, i) {
            try {
                return i ? e(r(n)[0], n[1]) : e(n)
            } catch (e) {
                var o = t.return;
                throw void 0 !== o && r(o.call(t)), e
            }
        }
    }, function (t, e, n) {
        var r = n(154), i = n(173)("iterator"), o = Array.prototype;
        t.exports = function (t) {
            return void 0 !== t && (r.Array === t || o[i] === t)
        }
    }, function (t, e, n) {
        "use strict";
        var r = n(139), i = n(142), o = n(146), a = n(136), s = n(173)("species");
        t.exports = function (t) {
            var e = "function" == typeof i[t] ? i[t] : r[t];
            a && e && !e[s] && o.f(e, s, {
                configurable: !0, get: function () {
                    return this
                }
            })
        }
    }, function (t, e, n) {
        "use strict";
        var r = n(139), i = n(141), o = n(184), a = n(137), s = n(145), u = n(214), l = n(216), c = n(215), f = n(133), h = n(172), p = n(146).f, d = n(221)(0), g = n(136);
        t.exports = function (t, e, n, y, v, b) {
            var m = r[t], w = m, x = v ? "set" : "add", _ = w && w.prototype, k = {};
            return g && "function" == typeof w && (b || _.forEach && !a(function () {
                (new w).entries().next()
            })) ? (w = e(function (e, n) {
                c(e, w, t, "_c"), e._c = new m, void 0 != n && l(n, v, e[x], e)
            }), d("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","), function (t) {
                var e = "add" == t || "set" == t;
                t in _ && (!b || "clear" != t) && s(w.prototype, t, function (n, r) {
                    if (c(this, w, t), !e && b && !f(n))return "get" == t && void 0;
                    var i = this._c[t](0 === n ? 0 : n, r);
                    return e ? this : i
                })
            }), "size" in _ && p(w.prototype, "size", {
                get: function () {
                    return this._c.size
                }
            })) : (w = y.getConstructor(e, t, v, x), u(w.prototype, n), o.NEED = !0), h(w, t), k[t] = w, i(i.G + i.W + i.F, k), b || y.setStrong(w, t, v), w
        }
    }, function (t, e, n) {
        var r = n(143), i = n(126), o = n(175), a = n(164), s = n(222);
        t.exports = function (t, e) {
            var n = 1 == t, u = 2 == t, l = 3 == t, c = 4 == t, f = 6 == t, h = 5 == t || f, p = e || s;
            return function (e, s, d) {
                for (var g, y, v = o(e), b = i(v), m = r(s, d, 3), w = a(b.length), x = 0, _ = n ? p(e, w) : u ? p(e, 0) : void 0; w > x; x++)if ((h || x in b) && (g = b[x], y = m(g, x, v), t))if (n)_[x] = y; else if (y)switch (t) {
                    case 3:
                        return !0;
                    case 5:
                        return g;
                    case 6:
                        return x;
                    case 2:
                        _.push(g)
                } else if (c)return !1;
                return f ? -1 : l || c ? c : _
            }
        }
    }, function (t, e, n) {
        var r = n(223);
        t.exports = function (t, e) {
            return new (r(t))(e)
        }
    }, function (t, e, n) {
        var r = n(133), i = n(199), o = n(173)("species");
        t.exports = function (t) {
            var e;
            return i(t) && (e = t.constructor, "function" != typeof e || e !== Array && !i(e.prototype) || (e = void 0), r(e) && null === (e = e[o]) && (e = void 0)), void 0 === e ? Array : e
        }
    }, function (t, e, n) {
        var r = n(141);
        r(r.P + r.R, "Map", {toJSON: n(225)("Map")})
    }, function (t, e, n) {
        var r = n(180), i = n(226);
        t.exports = function (t) {
            return function () {
                if (r(this) != t)throw TypeError(t + "#toJSON isn't generic");
                return i(this)
            }
        }
    }, function (t, e, n) {
        var r = n(216);
        t.exports = function (t, e) {
            var n = [];
            return r(t, !1, n.push, n, e), n
        }
    }, function (t, e, n) {
        "use strict";
        e.__esModule = !0;
        var r = n(188), i = function (t) {
            return t && t.__esModule ? t : {default: t}
        }(r);
        e.default = function (t, e) {
            if (!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" !== (void 0 === e ? "undefined" : (0, i.default)(e)) && "function" != typeof e ? t : e
        }
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {default: t}
        }

        e.__esModule = !0;
        var i = n(229), o = r(i), a = n(233), s = r(a), u = n(188), l = r(u);
        e.default = function (t, e) {
            if ("function" != typeof e && null !== e)throw new TypeError("Super expression must either be null or a function, not " + (void 0 === e ? "undefined" : (0, l.default)(e)));
            t.prototype = (0, s.default)(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), e && (o.default ? (0, o.default)(t, e) : t.__proto__ = e)
        }
    }, function (t, e, n) {
        t.exports = {default: n(230), __esModule: !0}
    }, function (t, e, n) {
        n(231), t.exports = n(142).Object.setPrototypeOf
    }, function (t, e, n) {
        var r = n(141);
        r(r.S, "Object", {setPrototypeOf: n(232).set})
    }, function (t, e, n) {
        var r = n(133), i = n(147), o = function (t, e) {
            if (i(t), !r(e) && null !== e)throw TypeError(e + ": can't set as prototype!")
        };
        t.exports = {
            set: Object.setPrototypeOf || ("__proto__" in {} ? function (t, e, r) {
                try {
                    r = n(143)(Function.call, n(129).f(Object.prototype, "__proto__").set, 2), r(t, []), e = !(t instanceof Array)
                } catch (t) {
                    e = !0
                }
                return function (t, n) {
                    return o(t, n), e ? t.__proto__ = n : r(t, n), t
                }
            }({}, !1) : void 0), check: o
        }
    }, function (t, e, n) {
        t.exports = {default: n(234), __esModule: !0}
    }, function (t, e, n) {
        n(235);
        var r = n(142).Object;
        t.exports = function (t, e) {
            return r.create(t, e)
        }
    }, function (t, e, n) {
        var r = n(141);
        r(r.S, "Object", {create: n(159)})
    }, function (t, e, n) {
        t.exports = {default: n(237), __esModule: !0}
    }, function (t, e, n) {
        n(238);
        var r = n(142).Object;
        t.exports = function (t, e) {
            return r.defineProperties(t, e)
        }
    }, function (t, e, n) {
        var r = n(141);
        r(r.S + r.F * !n(136), "Object", {defineProperties: n(160)})
    }, function (t, e, n) {
        function r(t) {
            return null === t || void 0 === t
        }

        function i(t) {
            return !(!t || "object" != typeof t || "number" != typeof t.length) && ("function" == typeof t.copy && "function" == typeof t.slice && !(t.length > 0 && "number" != typeof t[0]))
        }

        function o(t, e, n) {
            var o, c;
            if (r(t) || r(e))return !1;
            if (t.prototype !== e.prototype)return !1;
            if (u(t))return !!u(e) && (t = a.call(t), e = a.call(e), l(t, e, n));
            if (i(t)) {
                if (!i(e))return !1;
                if (t.length !== e.length)return !1;
                for (o = 0; o < t.length; o++)if (t[o] !== e[o])return !1;
                return !0
            }
            try {
                var f = s(t), h = s(e)
            } catch (t) {
                return !1
            }
            if (f.length != h.length)return !1;
            for (f.sort(), h.sort(), o = f.length - 1; o >= 0; o--)if (f[o] != h[o])return !1;
            for (o = f.length - 1; o >= 0; o--)if (c = f[o], !l(t[c], e[c], n))return !1;
            return typeof t == typeof e
        }

        var a = Array.prototype.slice, s = n(240), u = n(241), l = t.exports = function (t, e, n) {
            return n || (n = {}), t === e || (t instanceof Date && e instanceof Date ? t.getTime() === e.getTime() : !t || !e || "object" != typeof t && "object" != typeof e ? n.strict ? t === e : t == e : o(t, e, n))
        }
    }, function (t, e) {
        function n(t) {
            var e = [];
            for (var n in t)e.push(n);
            return e
        }

        e = t.exports = "function" == typeof Object.keys ? Object.keys : n, e.shim = n
    }, function (t, e) {
        function n(t) {
            return "[object Arguments]" == Object.prototype.toString.call(t)
        }

        function r(t) {
            return t && "object" == typeof t && "number" == typeof t.length && Object.prototype.hasOwnProperty.call(t, "callee") && !Object.prototype.propertyIsEnumerable.call(t, "callee") || !1
        }

        var i = "[object Arguments]" == function () {
                return Object.prototype.toString.call(arguments)
            }();
        e = t.exports = i ? n : r, e.supported = n, e.unsupported = r
    }, function (t, e, n) {
        t.exports = {default: n(243), __esModule: !0}
    }, function (t, e, n) {
        n(244), t.exports = n(142).Object.assign
    }, function (t, e, n) {
        var r = n(141);
        r(r.S + r.F, "Object", {assign: n(245)})
    }, function (t, e, n) {
        "use strict";
        var r = n(161), i = n(198), o = n(130), a = n(175), s = n(126), u = Object.assign;
        t.exports = !u || n(137)(function () {
            var t = {}, e = {}, n = Symbol(), r = "abcdefghijklmnopqrst";
            return t[n] = 7, r.split("").forEach(function (t) {
                e[t] = t
            }), 7 != u({}, t)[n] || Object.keys(u({}, e)).join("") != r
        }) ? function (t, e) {
            for (var n = a(t), u = arguments.length, l = 1, c = i.f, f = o.f; u > l;)for (var h, p = s(arguments[l++]), d = c ? r(p).concat(c(p)) : r(p), g = d.length, y = 0; g > y;)f.call(p, h = d[y++]) && (n[h] = p[h]);
            return n
        } : u
    }, function (t, e, n) {
        t.exports = {default: n(247), __esModule: !0}
    }, function (t, e, n) {
        n(248), t.exports = n(142).String.fromCodePoint
    }, function (t, e, n) {
        var r = n(141), i = n(166), o = String.fromCharCode, a = String.fromCodePoint;
        r(r.S + r.F * (!!a && 1 != a.length), "String", {
            fromCodePoint: function (t) {
                for (var e, n = [], r = arguments.length, a = 0; r > a;) {
                    if (e = +arguments[a++], i(e, 1114111) !== e)throw RangeError(e + " is not a valid code point");
                    n.push(e < 65536 ? o(e) : o(55296 + ((e -= 65536) >> 10), e % 1024 + 56320))
                }
                return n.join("")
            }
        })
    }, function (t, e, n) {
        t.exports = {default: n(250), __esModule: !0}
    }, function (t, e, n) {
        n(176), n(251), t.exports = n(142).Array.from
    }, function (t, e, n) {
        "use strict";
        var r = n(143), i = n(141), o = n(175), a = n(217), s = n(218), u = n(164), l = n(252), c = n(179);
        i(i.S + i.F * !n(253)(function (t) {
                Array.from(t)
            }), "Array", {
            from: function (t) {
                var e, n, i, f, h = o(t), p = "function" == typeof this ? this : Array, d = arguments.length, g = d > 1 ? arguments[1] : void 0, y = void 0 !== g, v = 0, b = c(h);
                if (y && (g = r(g, d > 2 ? arguments[2] : void 0, 2)), void 0 == b || p == Array && s(b))for (e = u(h.length), n = new p(e); e > v; v++)l(n, v, y ? g(h[v], v) : h[v]); else for (f = b.call(h), n = new p; !(i = f.next()).done; v++)l(n, v, y ? a(f, g, [i.value, v], !0) : i.value);
                return n.length = v, n
            }
        })
    }, function (t, e, n) {
        "use strict";
        var r = n(146), i = n(131);
        t.exports = function (t, e, n) {
            e in t ? r.f(t, e, i(0, n)) : t[e] = n
        }
    }, function (t, e, n) {
        var r = n(173)("iterator"), i = !1;
        try {
            var o = [7][r]();
            o.return = function () {
                i = !0
            }, Array.from(o, function () {
                throw 2
            })
        } catch (t) {
        }
        t.exports = function (t, e) {
            if (!e && !i)return !1;
            var n = !1;
            try {
                var o = [7], a = o[r]();
                a.next = function () {
                    return {done: n = !0}
                }, o[r] = function () {
                    return a
                }, t(o)
            } catch (t) {
            }
            return n
        }
    }, function (t, e, n) {
        t.exports = {default: n(255), __esModule: !0}
    }, function (t, e, n) {
        n(202), n(176), n(150), n(256), n(257), t.exports = n(142).Set
    }, function (t, e, n) {
        "use strict";
        var r = n(213);
        t.exports = n(220)("Set", function (t) {
            return function () {
                return t(this, arguments.length > 0 ? arguments[0] : void 0)
            }
        }, {
            add: function (t) {
                return r.def(this, t = 0 === t ? 0 : t, t)
            }
        }, r)
    }, function (t, e, n) {
        var r = n(141);
        r(r.P + r.R, "Set", {toJSON: n(225)("Set")})
    }, function (t, e, n) {
        (function (t) {
            var r, i, o, a, s, u, l, c, f, h, p, d, g, y, v, b, m, w, x;
            v = n(17), m = n(259), x = new v(t("", "base64")), w = Math.log2 || function (t) {
                    return Math.log(t) / Math.LN2
                }, b = function (t) {
                return w(t) + 1 | 0
            }, r = b(m.categories.length - 1), a = b(m.combiningClasses.length - 1), d = b(m.scripts.length - 1), l = b(m.eaw.length - 1), h = 10, o = a + d + l + h, u = d + l + h, y = l + h, f = h, i = (1 << r) - 1, s = (1 << a) - 1, g = (1 << d) - 1, c = (1 << l) - 1, p = (1 << h) - 1, e.getCategory = function (t) {
                var e;
                return e = x.get(t), m.categories[e >> o & i]
            }, e.getCombiningClass = function (t) {
                var e;
                return e = x.get(t), m.combiningClasses[e >> u & s]
            }, e.getScript = function (t) {
                var e;
                return e = x.get(t), m.scripts[e >> y & g]
            }, e.getEastAsianWidth = function (t) {
                var e;
                return e = x.get(t), m.eaw[e >> f & c]
            }, e.getNumericValue = function (t) {
                var e, n, r, i, o;
                if (o = x.get(t), 0 === (r = o & p))return null;
                if (r <= 50)return r - 1;
                if (r < 480)return i = (r >> 4) - 12, e = 1 + (15 & r), i / e;
                if (r < 768) {
                    for (o = (r >> 5) - 14, n = 2 + (31 & r); n > 0;)o *= 10, n--;
                    return o
                }
                for (o = (r >> 2) - 191, n = 1 + (3 & r); n > 0;)o *= 60, n--;
                return o
            }, e.isAlphabetic = function (t) {
                var n;
                return "Lu" === (n = e.getCategory(t)) || "Ll" === n || "Lt" === n || "Lm" === n || "Lo" === n || "Nl" === n
            }, e.isDigit = function (t) {
                return "Nd" === e.getCategory(t)
            }, e.isPunctuation = function (t) {
                var n;
                return "Pc" === (n = e.getCategory(t)) || "Pd" === n || "Pe" === n || "Pf" === n || "Pi" === n || "Po" === n || "Ps" === n
            }, e.isLowerCase = function (t) {
                return "Ll" === e.getCategory(t)
            }, e.isUpperCase = function (t) {
                return "Lu" === e.getCategory(t)
            }, e.isTitleCase = function (t) {
                return "Lt" === e.getCategory(t)
            }, e.isWhiteSpace = function (t) {
                var n;
                return "Zs" === (n = e.getCategory(t)) || "Zl" === n || "Zp" === n
            }, e.isBaseForm = function (t) {
                var n;
                return "Nd" === (n = e.getCategory(t)) || "No" === n || "Nl" === n || "Lu" === n || "Ll" === n || "Lt" === n || "Lm" === n || "Lo" === n || "Me" === n || "Mc" === n
            }, e.isMark = function (t) {
                var n;
                return "Mn" === (n = e.getCategory(t)) || "Me" === n || "Mc" === n
            }
        }).call(e, n(2).Buffer)
    }, function (t, e) {
        t.exports = {
            categories: ["Cc", "Zs", "Po", "Sc", "Ps", "Pe", "Sm", "Pd", "Nd", "Lu", "Sk", "Pc", "Ll", "So", "Lo", "Pi", "Cf", "No", "Pf", "Lt", "Lm", "Mn", "Me", "Mc", "Nl", "Zl", "Zp", "Cs", "Co"],
            combiningClasses: ["Not_Reordered", "Above", "Above_Right", "Below", "Attached_Above_Right", "Attached_Below", "Overlay", "Iota_Subscript", "Double_Below", "Double_Above", "Below_Right", "Above_Left", "CCC10", "CCC11", "CCC12", "CCC13", "CCC14", "CCC15", "CCC16", "CCC17", "CCC18", "CCC19", "CCC20", "CCC21", "CCC22", "CCC23", "CCC24", "CCC25", "CCC30", "CCC31", "CCC32", "CCC27", "CCC28", "CCC29", "CCC33", "CCC34", "CCC35", "CCC36", "Nukta", "Virama", "CCC84", "CCC91", "CCC103", "CCC107", "CCC118", "CCC122", "CCC129", "CCC130", "CCC132", "Attached_Above", "Below_Left", "Left", "Kana_Voicing", "CCC26", "Right"],
            scripts: ["Common", "Latin", "Bopomofo", "Inherited", "Greek", "Coptic", "Cyrillic", "Armenian", "Hebrew", "Arabic", "Syriac", "Thaana", "Nko", "Samaritan", "Mandaic", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "Hangul", "Ethiopic", "Cherokee", "Canadian_Aboriginal", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "Tai_Le", "New_Tai_Lue", "Buginese", "Tai_Tham", "Balinese", "Sundanese", "Batak", "Lepcha", "Ol_Chiki", "Braille", "Glagolitic", "Tifinagh", "Han", "Hiragana", "Katakana", "Yi", "Lisu", "Vai", "Bamum", "Syloti_Nagri", "Phags_Pa", "Saurashtra", "Kayah_Li", "Rejang", "Javanese", "Cham", "Tai_Viet", "Meetei_Mayek", "null", "Linear_B", "Lycian", "Carian", "Old_Italic", "Gothic", "Old_Permic", "Ugaritic", "Old_Persian", "Deseret", "Shavian", "Osmanya", "Elbasan", "Caucasian_Albanian", "Linear_A", "Cypriot", "Imperial_Aramaic", "Palmyrene", "Nabataean", "Hatran", "Phoenician", "Lydian", "Meroitic_Hieroglyphs", "Meroitic_Cursive", "Kharoshthi", "Old_South_Arabian", "Old_North_Arabian", "Manichaean", "Avestan", "Inscriptional_Parthian", "Inscriptional_Pahlavi", "Psalter_Pahlavi", "Old_Turkic", "Old_Hungarian", "Brahmi", "Kaithi", "Sora_Sompeng", "Chakma", "Mahajani", "Sharada", "Khojki", "Multani", "Khudawadi", "Grantha", "Tirhuta", "Siddham", "Modi", "Takri", "Ahom", "Warang_Citi", "Pau_Cin_Hau", "Cuneiform", "Egyptian_Hieroglyphs", "Anatolian_Hieroglyphs", "Mro", "Bassa_Vah", "Pahawh_Hmong", "Miao", "Duployan", "SignWriting", "Mende_Kikakui"],
            eaw: ["N", "Na", "A", "W", "H", "F"]
        }
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            return t && "object" == typeof t && "default" in t ? t.default : t
        }

        var i = r(n(261)), o = r(n(148)), a = r(n(265)), s = r(n(266)), u = r(n(189)), l = r(n(208)), c = r(n(209)), f = function () {
            function t(e) {
                l(this, t), this.stateTable = e.stateTable, this.accepting = e.accepting, this.tags = e.tags
            }

            return c(t, [{
                key: "match", value: function (t) {
                    var e = this;
                    return a({}, u, s.mark(function n() {
                        var r, i, o, a, u, l;
                        return s.wrap(function (n) {
                            for (; ;)switch (n.prev = n.next) {
                                case 0:
                                    r = 1, i = null, o = null, a = null, u = 0;
                                case 5:
                                    if (!(u < t.length)) {
                                        n.next = 21;
                                        break
                                    }
                                    if (l = t[u], a = r, 0 !== (r = e.stateTable[r][l])) {
                                        n.next = 15;
                                        break
                                    }
                                    if (!(null != i && null != o && o >= i)) {
                                        n.next = 13;
                                        break
                                    }
                                    return n.next = 13, [i, o, e.tags[a]];
                                case 13:
                                    r = e.stateTable[1][l], i = null;
                                case 15:
                                    0 !== r && null == i && (i = u), e.accepting[r] && (o = u), 0 === r && (r = 1);
                                case 18:
                                    u++, n.next = 5;
                                    break;
                                case 21:
                                    if (!(null != i && null != o && o >= i)) {
                                        n.next = 24;
                                        break
                                    }
                                    return n.next = 24, [i, o, e.tags[r]];
                                case 24:
                                case"end":
                                    return n.stop()
                            }
                        }, n, this)
                    }))
                }
            }, {
                key: "apply", value: function (t, e) {
                    var n = !0, r = !1, a = void 0;
                    try {
                        for (var s, u = o(this.match(t)); !(n = (s = u.next()).done); n = !0) {
                            var l = i(s.value, 3), c = l[0], f = l[1], h = l[2], p = !0, d = !1, g = void 0;
                            try {
                                for (var y, v = o(h); !(p = (y = v.next()).done); p = !0) {
                                    var b = y.value;
                                    "function" == typeof e[b] && e[b](c, f, t.slice(c, f + 1))
                                }
                            } catch (t) {
                                d = !0, g = t
                            } finally {
                                try {
                                    !p && v.return && v.return()
                                } finally {
                                    if (d)throw g
                                }
                            }
                        }
                    } catch (t) {
                        r = !0, a = t
                    } finally {
                        try {
                            !n && u.return && u.return()
                        } finally {
                            if (r)throw a
                        }
                    }
                }
            }]), t
        }();
        t.exports = f
    }, function (t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {default: t}
        }

        e.__esModule = !0;
        var i = n(262), o = r(i), a = n(148), s = r(a);
        e.default = function () {
            function t(t, e) {
                var n = [], r = !0, i = !1, o = void 0;
                try {
                    for (var a, u = (0, s.default)(t); !(r = (a = u.next()).done) && (n.push(a.value), !e || n.length !== e); r = !0);
                } catch (t) {
                    i = !0, o = t
                } finally {
                    try {
                        !r && u.return && u.return()
                    } finally {
                        if (i)throw o
                    }
                }
                return n
            }

            return function (e, n) {
                if (Array.isArray(e))return e;
                if ((0, o.default)(Object(e)))return t(e, n);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }()
    }, function (t, e, n) {
        t.exports = {default: n(263), __esModule: !0}
    }, function (t, e, n) {
        n(150), n(176), t.exports = n(264)
    }, function (t, e, n) {
        var r = n(180), i = n(173)("iterator"), o = n(154);
        t.exports = n(142).isIterable = function (t) {
            var e = Object(t);
            return void 0 !== e[i] || "@@iterator" in e || o.hasOwnProperty(r(e))
        }
    }, function (t, e, n) {
        "use strict";
        e.__esModule = !0;
        var r = n(205), i = function (t) {
            return t && t.__esModule ? t : {default: t}
        }(r);
        e.default = function (t, e, n) {
            return e in t ? (0, i.default)(t, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : t[e] = n, t
        }
    }, function (t, e, n) {
        t.exports = n(267)
    }, function (t, e, n) {
        (function (e) {
            var r = "object" == typeof e ? e : "object" == typeof window ? window : "object" == typeof self ? self : this, i = r.regeneratorRuntime && Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime") >= 0, o = i && r.regeneratorRuntime;
            if (r.regeneratorRuntime = void 0, t.exports = n(268), i)r.regeneratorRuntime = o; else try {
                delete r.regeneratorRuntime
            } catch (t) {
                r.regeneratorRuntime = void 0
            }
        }).call(e, function () {
            return this
        }())
    }, function (t, e) {
        (function (e) {
            !function (e) {
                "use strict";
                function n(t, e, n, r) {
                    var o = e && e.prototype instanceof i ? e : i, a = Object.create(o.prototype), s = new p(r || []);
                    return a._invoke = l(t, n, s), a
                }

                function r(t, e, n) {
                    try {
                        return {type: "normal", arg: t.call(e, n)}
                    } catch (t) {
                        return {type: "throw", arg: t}
                    }
                }

                function i() {
                }

                function o() {
                }

                function a() {
                }

                function s(t) {
                    ["next", "throw", "return"].forEach(function (e) {
                        t[e] = function (t) {
                            return this._invoke(e, t)
                        }
                    })
                }

                function u(t) {
                    function n(e, i, o, a) {
                        var s = r(t[e], t, i);
                        if ("throw" !== s.type) {
                            var u = s.arg, l = u.value;
                            return l && "object" == typeof l && b.call(l, "__await") ? Promise.resolve(l.__await).then(function (t) {
                                n("next", t, o, a)
                            }, function (t) {
                                n("throw", t, o, a)
                            }) : Promise.resolve(l).then(function (t) {
                                u.value = t, o(u)
                            }, a)
                        }
                        a(s.arg)
                    }

                    function i(t, e) {
                        function r() {
                            return new Promise(function (r, i) {
                                n(t, e, r, i)
                            })
                        }

                        return o = o ? o.then(r, r) : r()
                    }

                    "object" == typeof e.process && e.process.domain && (n = e.process.domain.bind(n));
                    var o;
                    this._invoke = i
                }

                function l(t, e, n) {
                    var i = C;
                    return function (o, a) {
                        if (i === P)throw new Error("Generator is already running");
                        if (i === E) {
                            if ("throw" === o)throw a;
                            return g()
                        }
                        for (n.method = o, n.arg = a; ;) {
                            var s = n.delegate;
                            if (s) {
                                var u = c(s, n);
                                if (u) {
                                    if (u === I)continue;
                                    return u
                                }
                            }
                            if ("next" === n.method)n.sent = n._sent = n.arg; else if ("throw" === n.method) {
                                if (i === C)throw i = E, n.arg;
                                n.dispatchException(n.arg)
                            } else"return" === n.method && n.abrupt("return", n.arg);
                            i = P;
                            var l = r(t, e, n);
                            if ("normal" === l.type) {
                                if (i = n.done ? E : A, l.arg === I)continue;
                                return {value: l.arg, done: n.done}
                            }
                            "throw" === l.type && (i = E, n.method = "throw", n.arg = l.arg)
                        }
                    }
                }

                function c(t, e) {
                    var n = t.iterator[e.method];
                    if (n === y) {
                        if (e.delegate = null, "throw" === e.method) {
                            if (t.iterator.return && (e.method = "return", e.arg = y, c(t, e), "throw" === e.method))return I;
                            e.method = "throw", e.arg = new TypeError("The iterator does not provide a 'throw' method")
                        }
                        return I
                    }
                    var i = r(n, t.iterator, e.arg);
                    if ("throw" === i.type)return e.method = "throw", e.arg = i.arg, e.delegate = null, I;
                    var o = i.arg;
                    return o ? o.done ? (e[t.resultName] = o.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = y), e.delegate = null, I) : o : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, I)
                }

                function f(t) {
                    var e = {tryLoc: t[0]};
                    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                }

                function h(t) {
                    var e = t.completion || {};
                    e.type = "normal", delete e.arg, t.completion = e
                }

                function p(t) {
                    this.tryEntries = [{tryLoc: "root"}], t.forEach(f, this), this.reset(!0)
                }

                function d(t) {
                    if (t) {
                        var e = t[w];
                        if (e)return e.call(t);
                        if ("function" == typeof t.next)return t;
                        if (!isNaN(t.length)) {
                            var n = -1, r = function e() {
                                for (; ++n < t.length;)if (b.call(t, n))return e.value = t[n], e.done = !1, e;
                                return e.value = y, e.done = !0, e
                            };
                            return r.next = r
                        }
                    }
                    return {next: g}
                }

                function g() {
                    return {value: y, done: !0}
                }

                var y, v = Object.prototype, b = v.hasOwnProperty, m = "function" == typeof Symbol ? Symbol : {}, w = m.iterator || "@@iterator", x = m.asyncIterator || "@@asyncIterator", _ = m.toStringTag || "@@toStringTag", k = "object" == typeof t, S = e.regeneratorRuntime;
                if (S)return void(k && (t.exports = S));
                S = e.regeneratorRuntime = k ? t.exports : {}, S.wrap = n;
                var C = "suspendedStart", A = "suspendedYield", P = "executing", E = "completed", I = {}, T = {};
                T[w] = function () {
                    return this
                };
                var O = Object.getPrototypeOf, B = O && O(O(d([])));
                B && B !== v && b.call(B, w) && (T = B);
                var L = a.prototype = i.prototype = Object.create(T);
                o.prototype = L.constructor = a, a.constructor = o, a[_] = o.displayName = "GeneratorFunction", S.isGeneratorFunction = function (t) {
                    var e = "function" == typeof t && t.constructor;
                    return !!e && (e === o || "GeneratorFunction" === (e.displayName || e.name))
                }, S.mark = function (t) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(t, a) : (t.__proto__ = a, _ in t || (t[_] = "GeneratorFunction")), t.prototype = Object.create(L), t
                }, S.awrap = function (t) {
                    return {__await: t}
                }, s(u.prototype), u.prototype[x] = function () {
                    return this
                }, S.AsyncIterator = u, S.async = function (t, e, r, i) {
                    var o = new u(n(t, e, r, i));
                    return S.isGeneratorFunction(e) ? o : o.next().then(function (t) {
                        return t.done ? t.value : o.next()
                    })
                }, s(L), L[_] = "Generator", L[w] = function () {
                    return this
                }, L.toString = function () {
                    return "[object Generator]"
                }, S.keys = function (t) {
                    var e = [];
                    for (var n in t)e.push(n);
                    return e.reverse(), function n() {
                        for (; e.length;) {
                            var r = e.pop();
                            if (r in t)return n.value = r, n.done = !1, n
                        }
                        return n.done = !0, n
                    }
                }, S.values = d, p.prototype = {
                    constructor: p, reset: function (t) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = y, this.done = !1, this.delegate = null, this.method = "next", this.arg = y, this.tryEntries.forEach(h), !t)for (var e in this)"t" === e.charAt(0) && b.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = y)
                    }, stop: function () {
                        this.done = !0;
                        var t = this.tryEntries[0], e = t.completion;
                        if ("throw" === e.type)throw e.arg;
                        return this.rval
                    }, dispatchException: function (t) {
                        function e(e, r) {
                            return o.type = "throw", o.arg = t, n.next = e, r && (n.method = "next", n.arg = y), !!r
                        }

                        if (this.done)throw t;
                        for (var n = this, r = this.tryEntries.length - 1; r >= 0; --r) {
                            var i = this.tryEntries[r], o = i.completion;
                            if ("root" === i.tryLoc)return e("end");
                            if (i.tryLoc <= this.prev) {
                                var a = b.call(i, "catchLoc"), s = b.call(i, "finallyLoc");
                                if (a && s) {
                                    if (this.prev < i.catchLoc)return e(i.catchLoc, !0);
                                    if (this.prev < i.finallyLoc)return e(i.finallyLoc)
                                } else if (a) {
                                    if (this.prev < i.catchLoc)return e(i.catchLoc, !0)
                                } else {
                                    if (!s)throw new Error("try statement without catch or finally");
                                    if (this.prev < i.finallyLoc)return e(i.finallyLoc)
                                }
                            }
                        }
                    }, abrupt: function (t, e) {
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var r = this.tryEntries[n];
                            if (r.tryLoc <= this.prev && b.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                                var i = r;
                                break
                            }
                        }
                        i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                        var o = i ? i.completion : {};
                        return o.type = t, o.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, I) : this.complete(o)
                    }, complete: function (t, e) {
                        if ("throw" === t.type)throw t.arg;
                        return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), I
                    }, finish: function (t) {
                        for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                            var n = this.tryEntries[e];
                            if (n.finallyLoc === t)return this.complete(n.completion, n.afterLoc),
                                h(n), I
                        }
                    }, catch: function (t) {
                        for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                            var n = this.tryEntries[e];
                            if (n.tryLoc === t) {
                                var r = n.completion;
                                if ("throw" === r.type) {
                                    var i = r.arg;
                                    h(n)
                                }
                                return i
                            }
                        }
                        throw new Error("illegal catch attempt")
                    }, delegateYield: function (t, e, n) {
                        return this.delegate = {
                            iterator: d(t),
                            resultName: e,
                            nextLoc: n
                        }, "next" === this.method && (this.arg = y), I
                    }
                }
            }("object" == typeof e ? e : "object" == typeof window ? window : "object" == typeof self ? self : this)
        }).call(e, function () {
            return this
        }())
    }, function (t, e, n) {
        t.exports = {default: n(270), __esModule: !0}
    }, function (t, e, n) {
        n(271), t.exports = Math.pow(2, -52)
    }, function (t, e, n) {
        var r = n(141);
        r(r.S, "Number", {EPSILON: Math.pow(2, -52)})
    }, function (t, e, n) {
        (function (e) {
            var n = function () {
                "use strict";
                function t(n, r, i, o) {
                    function s(n, i) {
                        if (null === n)return null;
                        if (0 == i)return n;
                        var f, h;
                        if ("object" != typeof n)return n;
                        if (t.__isArray(n))f = []; else if (t.__isRegExp(n))f = new RegExp(n.source, a(n)), n.lastIndex && (f.lastIndex = n.lastIndex); else if (t.__isDate(n))f = new Date(n.getTime()); else {
                            if (c && e.isBuffer(n))return f = new e(n.length), n.copy(f), f;
                            void 0 === o ? (h = Object.getPrototypeOf(n), f = Object.create(h)) : (f = Object.create(o), h = o)
                        }
                        if (r) {
                            var p = u.indexOf(n);
                            if (-1 != p)return l[p];
                            u.push(n), l.push(f)
                        }
                        for (var d in n) {
                            var g;
                            h && (g = Object.getOwnPropertyDescriptor(h, d)), g && null == g.set || (f[d] = s(n[d], i - 1))
                        }
                        return f
                    }

                    "object" == typeof r && (i = r.depth, o = r.prototype, r.filter, r = r.circular);
                    var u = [], l = [], c = void 0 !== e;
                    return void 0 === r && (r = !0), void 0 === i && (i = 1 / 0), s(n, i)
                }

                function n(t) {
                    return Object.prototype.toString.call(t)
                }

                function r(t) {
                    return "object" == typeof t && "[object Date]" === n(t)
                }

                function i(t) {
                    return "object" == typeof t && "[object Array]" === n(t)
                }

                function o(t) {
                    return "object" == typeof t && "[object RegExp]" === n(t)
                }

                function a(t) {
                    var e = "";
                    return t.global && (e += "g"), t.ignoreCase && (e += "i"), t.multiline && (e += "m"), e
                }

                return t.clonePrototype = function (t) {
                    if (null === t)return null;
                    var e = function () {
                    };
                    return e.prototype = t, new e
                }, t.__objToStr = n, t.__isDate = r, t.__isArray = i, t.__isRegExp = o, t.__getRegExpFlags = a, t
            }();
            "object" == typeof t && t.exports && (t.exports = n)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        t.exports = n(274).BrotliDecompressBuffer
    }, function (t, e, n) {
        function r(t) {
            var e;
            return 0 === t.readBits(1) ? 16 : (e = t.readBits(3)) > 0 ? 17 + e : (e = t.readBits(3), e > 0 ? 8 + e : 17)
        }

        function i(t) {
            if (t.readBits(1)) {
                var e = t.readBits(3);
                return 0 === e ? 1 : t.readBits(e) + (1 << e)
            }
            return 0
        }

        function o() {
            this.meta_block_length = 0, this.input_end = 0, this.is_uncompressed = 0, this.is_metadata = !1
        }

        function a(t) {
            var e, n, r, i = new o;
            if (i.input_end = t.readBits(1), i.input_end && t.readBits(1))return i;
            if (7 === (e = t.readBits(2) + 4)) {
                if (i.is_metadata = !0, 0 !== t.readBits(1))throw new Error("Invalid reserved bit");
                if (0 === (n = t.readBits(2)))return i;
                for (r = 0; r < n; r++) {
                    var a = t.readBits(8);
                    if (r + 1 === n && n > 1 && 0 === a)throw new Error("Invalid size byte");
                    i.meta_block_length |= a << 8 * r
                }
            } else for (r = 0; r < e; ++r) {
                var s = t.readBits(4);
                if (r + 1 === e && e > 4 && 0 === s)throw new Error("Invalid size nibble");
                i.meta_block_length |= s << 4 * r
            }
            return ++i.meta_block_length, i.input_end || i.is_metadata || (i.is_uncompressed = t.readBits(1)), i
        }

        function s(t, e, n) {
            var r;
            return n.fillBitWindow(), e += n.val_ >>> n.bit_pos_ & N, r = t[e].bits - D, r > 0 && (n.bit_pos_ += D, e += t[e].value, e += n.val_ >>> n.bit_pos_ & (1 << r) - 1), n.bit_pos_ += t[e].bits, t[e].value
        }

        function u(t, e, n, r) {
            for (var i = 0, o = O, a = 0, s = 0, u = 32768, l = [], c = 0; c < 32; c++)l.push(new A(0, 0));
            for (P(l, 0, 5, t, W); i < e && u > 0;) {
                var f, h = 0;
                if (r.readMoreInput(), r.fillBitWindow(), h += r.val_ >>> r.bit_pos_ & 31, r.bit_pos_ += l[h].bits, (f = 255 & l[h].value) < B)a = 0, n[i++] = f, 0 !== f && (o = f, u -= 32768 >> f); else {
                    var p, d, g = f - 14, y = 0;
                    if (f === B && (y = o), s !== y && (a = 0, s = y), p = a, a > 0 && (a -= 2, a <<= g), a += r.readBits(g) + 3, d = a - p, i + d > e)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");
                    for (var v = 0; v < d; v++)n[i + v] = s;
                    i += d, 0 !== s && (u -= d << 15 - s)
                }
            }
            if (0 !== u)throw new Error("[ReadHuffmanCodeLengths] space = " + u);
            for (; i < e; i++)n[i] = 0
        }

        function l(t, e, n, r) {
            var i, o = 0, a = new Uint8Array(t);
            if (r.readMoreInput(), 1 === (i = r.readBits(2))) {
                for (var s, l = t - 1, c = 0, f = new Int32Array(4), h = r.readBits(2) + 1; l;)l >>= 1, ++c;
                for (s = 0; s < h; ++s)f[s] = r.readBits(c) % t, a[f[s]] = 2;
                switch (a[f[0]] = 1, h) {
                    case 1:
                        break;
                    case 3:
                        if (f[0] === f[1] || f[0] === f[2] || f[1] === f[2])throw new Error("[ReadHuffmanCode] invalid symbols");
                        break;
                    case 2:
                        if (f[0] === f[1])throw new Error("[ReadHuffmanCode] invalid symbols");
                        a[f[1]] = 1;
                        break;
                    case 4:
                        if (f[0] === f[1] || f[0] === f[2] || f[0] === f[3] || f[1] === f[2] || f[1] === f[3] || f[2] === f[3])throw new Error("[ReadHuffmanCode] invalid symbols");
                        r.readBits(1) ? (a[f[2]] = 3, a[f[3]] = 3) : a[f[0]] = 2
                }
            } else {
                var s, p = new Uint8Array(W), d = 32, g = 0, y = [new A(2, 0), new A(2, 4), new A(2, 3), new A(3, 2), new A(2, 0), new A(2, 4), new A(2, 3), new A(4, 1), new A(2, 0), new A(2, 4), new A(2, 3), new A(3, 2), new A(2, 0), new A(2, 4), new A(2, 3), new A(4, 5)];
                for (s = i; s < W && d > 0; ++s) {
                    var v, b = j[s], m = 0;
                    r.fillBitWindow(), m += r.val_ >>> r.bit_pos_ & 15, r.bit_pos_ += y[m].bits, v = y[m].value, p[b] = v, 0 !== v && (d -= 32 >> v, ++g)
                }
                if (1 !== g && 0 !== d)throw new Error("[ReadHuffmanCode] invalid num_codes or space");
                u(p, t, a, r)
            }
            if (0 === (o = P(e, n, D, a, t)))throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");
            return o
        }

        function c(t, e, n) {
            var r, i;
            return r = s(t, e, n), i = I.kBlockLengthPrefixCode[r].nbits, I.kBlockLengthPrefixCode[r].offset + n.readBits(i)
        }

        function f(t, e, n) {
            var r;
            return t < G ? (n += V[t], n &= 3, r = e[n] + H[t]) : r = t - G + 1, r
        }

        function h(t, e) {
            for (var n = t[e], r = e; r; --r)t[r] = t[r - 1];
            t[0] = n
        }

        function p(t, e) {
            var n, r = new Uint8Array(256);
            for (n = 0; n < 256; ++n)r[n] = n;
            for (n = 0; n < e; ++n) {
                var i = t[n];
                t[n] = r[i], i && h(r, i)
            }
        }

        function d(t, e) {
            this.alphabet_size = t, this.num_htrees = e, this.codes = new Array(e + e * q[t + 31 >>> 5]), this.htrees = new Uint32Array(e)
        }

        function g(t, e) {
            var n, r, o, a = {num_htrees: null, context_map: null}, u = 0;
            e.readMoreInput();
            var c = a.num_htrees = i(e) + 1, f = a.context_map = new Uint8Array(t);
            if (c <= 1)return a;
            for (n = e.readBits(1), n && (u = e.readBits(4) + 1), r = [], o = 0; o < U; o++)r[o] = new A(0, 0);
            for (l(c + u, r, 0, e), o = 0; o < t;) {
                var h;
                if (e.readMoreInput(), 0 === (h = s(r, 0, e)))f[o] = 0, ++o; else if (h <= u)for (var d = 1 + (1 << h) + e.readBits(h); --d;) {
                    if (o >= t)throw new Error("[DecodeContextMap] i >= context_map_size");
                    f[o] = 0, ++o
                } else f[o] = h - u, ++o
            }
            return e.readBits(1) && p(f, t), a
        }

        function y(t, e, n, r, i, o, a) {
            var u, l = 2 * n, c = n, f = s(e, n * U, a);
            u = 0 === f ? i[l + (1 & o[c])] : 1 === f ? i[l + (o[c] - 1 & 1)] + 1 : f - 2, u >= t && (u -= t), r[n] = u, i[l + (1 & o[c])] = u, ++o[c]
        }

        function v(t, e, n, r, i, o) {
            var a, s = i + 1, u = n & i, l = o.pos_ & S.IBUF_MASK;
            if (e < 8 || o.bit_pos_ + (e << 3) < o.bit_end_pos_)for (; e-- > 0;)o.readMoreInput(), r[u++] = o.readBits(8), u === s && (t.write(r, s), u = 0); else {
                if (o.bit_end_pos_ < 32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");
                for (; o.bit_pos_ < 32;)r[u] = o.val_ >>> o.bit_pos_, o.bit_pos_ += 8, ++u, --e;
                if (a = o.bit_end_pos_ - o.bit_pos_ >> 3, l + a > S.IBUF_MASK) {
                    for (var c = S.IBUF_MASK + 1 - l, f = 0; f < c; f++)r[u + f] = o.buf_[l + f];
                    a -= c, u += c, e -= c, l = 0
                }
                for (var f = 0; f < a; f++)r[u + f] = o.buf_[l + f];
                if (u += a, e -= a, u >= s) {
                    t.write(r, s), u -= s;
                    for (var f = 0; f < u; f++)r[f] = r[s + f]
                }
                for (; u + e >= s;) {
                    if (a = s - u, o.input_.read(r, u, a) < a)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                    t.write(r, s), e -= a, u = 0
                }
                if (o.input_.read(r, u, e) < e)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                o.reset()
            }
        }

        function b(t) {
            var e = t.bit_pos_ + 7 & -8;
            return 0 == t.readBits(e - t.bit_pos_)
        }

        function m(t) {
            var e = new _(t), n = new S(e);
            return r(n), a(n).meta_block_length
        }

        function w(t, e) {
            var n = new _(t);
            null == e && (e = m(t));
            var r = new Uint8Array(e), i = new k(r);
            return x(n, i), i.pos < i.buffer.length && (i.buffer = i.buffer.subarray(0, i.pos)), i.buffer
        }

        function x(t, e) {
            var n, o, u, h, p, m, w, x, _, k = 0, P = 0, O = 0, B = 0, D = [16, 15, 11, 4], N = 0, W = 0, j = 0, V = [new d(0, 0), new d(0, 0), new d(0, 0)], H = 128 + S.READ_SIZE;
            _ = new S(t), O = r(_), o = (1 << O) - 16, u = 1 << O, h = u - 1, p = new Uint8Array(u + H + C.maxDictionaryWordLength), m = u, w = [], x = [];
            for (var q = 0; q < 3 * U; q++)w[q] = new A(0, 0), x[q] = new A(0, 0);
            for (; !P;) {
                var Z, Y, X, K, J, Q, $, tt, et, nt = 0, rt = [1 << 28, 1 << 28, 1 << 28], it = [0], ot = [1, 1, 1], at = [0, 1, 0, 1, 0, 1], st = [0], ut = null, lt = null, ct = null, ft = 0, ht = null, pt = 0, dt = 0, gt = null, yt = 0, vt = 0, bt = 0;
                for (n = 0; n < 3; ++n)V[n].codes = null, V[n].htrees = null;
                _.readMoreInput();
                var mt = a(_);
                if (nt = mt.meta_block_length, k + nt > e.buffer.length) {
                    var wt = new Uint8Array(k + nt);
                    wt.set(e.buffer), e.buffer = wt
                }
                if (P = mt.input_end, Z = mt.is_uncompressed, mt.is_metadata)for (b(_); nt > 0; --nt)_.readMoreInput(), _.readBits(8); else if (0 !== nt)if (Z)_.bit_pos_ = _.bit_pos_ + 7 & -8, v(e, nt, k, p, h, _), k += nt; else {
                    for (n = 0; n < 3; ++n)ot[n] = i(_) + 1, ot[n] >= 2 && (l(ot[n] + 2, w, n * U, _), l(R, x, n * U, _), rt[n] = c(x, n * U, _), st[n] = 1);
                    for (_.readMoreInput(), Y = _.readBits(2), X = G + (_.readBits(4) << Y), K = (1 << Y) - 1, J = X + (48 << Y), lt = new Uint8Array(ot[0]), n = 0; n < ot[0]; ++n)_.readMoreInput(), lt[n] = _.readBits(2) << 1;
                    var xt = g(ot[0] << F, _);
                    Q = xt.num_htrees, ut = xt.context_map;
                    var _t = g(ot[2] << z, _);
                    for ($ = _t.num_htrees, ct = _t.context_map, V[0] = new d(L, Q), V[1] = new d(M, ot[1]), V[2] = new d(J, $), n = 0; n < 3; ++n)V[n].decode(_);
                    for (ht = 0, gt = 0, tt = lt[it[0]], vt = E.lookupOffsets[tt], bt = E.lookupOffsets[tt + 1], et = V[1].htrees[0]; nt > 0;) {
                        var kt, St, Ct, At, Pt, Et, It, Tt, Ot, Bt, Lt;
                        for (_.readMoreInput(), 0 === rt[1] && (y(ot[1], w, 1, it, at, st, _), rt[1] = c(x, U, _), et = V[1].htrees[it[1]]), --rt[1], kt = s(V[1].codes, et, _), St = kt >> 6, St >= 2 ? (St -= 2, It = -1) : It = 0, Ct = I.kInsertRangeLut[St] + (kt >> 3 & 7), At = I.kCopyRangeLut[St] + (7 & kt), Pt = I.kInsertLengthPrefixCode[Ct].offset + _.readBits(I.kInsertLengthPrefixCode[Ct].nbits), Et = I.kCopyLengthPrefixCode[At].offset + _.readBits(I.kCopyLengthPrefixCode[At].nbits), W = p[k - 1 & h], j = p[k - 2 & h], Bt = 0; Bt < Pt; ++Bt)_.readMoreInput(), 0 === rt[0] && (y(ot[0], w, 0, it, at, st, _), rt[0] = c(x, 0, _), ft = it[0] << F, ht = ft, tt = lt[it[0]], vt = E.lookupOffsets[tt], bt = E.lookupOffsets[tt + 1]), Ot = E.lookup[vt + W] | E.lookup[bt + j], pt = ut[ht + Ot], --rt[0], j = W, W = s(V[0].codes, V[0].htrees[pt], _), p[k & h] = W, (k & h) === h && e.write(p, u), ++k;
                        if ((nt -= Pt) <= 0)break;
                        if (It < 0) {
                            var Ot;
                            if (_.readMoreInput(), 0 === rt[2] && (y(ot[2], w, 2, it, at, st, _), rt[2] = c(x, 2 * U, _), dt = it[2] << z, gt = dt), --rt[2], Ot = 255 & (Et > 4 ? 3 : Et - 2), yt = ct[gt + Ot], (It = s(V[2].codes, V[2].htrees[yt], _)) >= X) {
                                var Mt, Rt, Ft;
                                It -= X, Rt = It & K, It >>= Y, Mt = 1 + (It >> 1), Ft = (2 + (1 & It) << Mt) - 4, It = X + (Ft + _.readBits(Mt) << Y) + Rt
                            }
                        }
                        if ((Tt = f(It, D, N)) < 0)throw new Error("[BrotliDecompress] invalid distance");
                        if (B = k < o && B !== o ? k : o, Lt = k & h, Tt > B) {
                            if (!(Et >= C.minDictionaryWordLength && Et <= C.maxDictionaryWordLength))throw new Error("Invalid backward reference. pos: " + k + " distance: " + Tt + " len: " + Et + " bytes left: " + nt);
                            var Ft = C.offsetsByLength[Et], zt = Tt - B - 1, Dt = C.sizeBitsByLength[Et], Nt = (1 << Dt) - 1, Ut = zt & Nt, Wt = zt >> Dt;
                            if (Ft += Ut * Et, !(Wt < T.kNumTransforms))throw new Error("Invalid backward reference. pos: " + k + " distance: " + Tt + " len: " + Et + " bytes left: " + nt);
                            var jt = T.transformDictionaryWord(p, Lt, Ft, Et, Wt);
                            if (Lt += jt, k += jt, nt -= jt, Lt >= m) {
                                e.write(p, u);
                                for (var Gt = 0; Gt < Lt - m; Gt++)p[Gt] = p[m + Gt]
                            }
                        } else {
                            if (It > 0 && (D[3 & N] = Tt, ++N), Et > nt)throw new Error("Invalid backward reference. pos: " + k + " distance: " + Tt + " len: " + Et + " bytes left: " + nt);
                            for (Bt = 0; Bt < Et; ++Bt)p[k & h] = p[k - Tt & h], (k & h) === h && e.write(p, u), ++k, --nt
                        }
                        W = p[k - 1 & h], j = p[k - 2 & h]
                    }
                    k &= 1073741823
                }
            }
            e.write(p, k & h)
        }

        var _ = n(275).BrotliInput, k = n(275).BrotliOutput, S = n(276), C = n(277), A = n(281).HuffmanCode, P = n(281).BrotliBuildHuffmanTable, E = n(282), I = n(283), T = n(284), O = 8, B = 16, L = 256, M = 704, R = 26, F = 6, z = 2, D = 8, N = 255, U = 1080, W = 18, j = new Uint8Array([1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15]), G = 16, V = new Uint8Array([3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2]), H = new Int8Array([0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3]), q = new Uint16Array([256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822, 854, 886, 920, 952, 984, 1016, 1048, 1080]);
        d.prototype.decode = function (t) {
            var e, n, r = 0;
            for (e = 0; e < this.num_htrees; ++e)this.htrees[e] = r, n = l(this.alphabet_size, this.codes, r, t), r += n
        }, e.BrotliDecompressedSize = m, e.BrotliDecompressBuffer = w, e.BrotliDecompress = x, C.init()
    }, function (t, e) {
        function n(t) {
            this.buffer = t, this.pos = 0
        }

        function r(t) {
            this.buffer = t, this.pos = 0
        }

        n.prototype.read = function (t, e, n) {
            this.pos + n > this.buffer.length && (n = this.buffer.length - this.pos);
            for (var r = 0; r < n; r++)t[e + r] = this.buffer[this.pos + r];
            return this.pos += n, n
        }, e.BrotliInput = n, r.prototype.write = function (t, e) {
            if (this.pos + e > this.buffer.length)throw new Error("Output buffer is not large enough");
            return this.buffer.set(t.subarray(0, e), this.pos), this.pos += e, e
        }, e.BrotliOutput = r
    }, function (t, e) {
        function n(t) {
            this.buf_ = new Uint8Array(r), this.input_ = t, this.reset()
        }

        var r = 8224, i = new Uint32Array([0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215]);
        n.READ_SIZE = 4096, n.IBUF_MASK = 8191, n.prototype.reset = function () {
            this.buf_ptr_ = 0, this.val_ = 0, this.pos_ = 0, this.bit_pos_ = 0, this.bit_end_pos_ = 0, this.eos_ = 0, this.readMoreInput();
            for (var t = 0; t < 4; t++)this.val_ |= this.buf_[this.pos_] << 8 * t, ++this.pos_;
            return this.bit_end_pos_ > 0
        }, n.prototype.readMoreInput = function () {
            if (!(this.bit_end_pos_ > 256))if (this.eos_) {
                if (this.bit_pos_ > this.bit_end_pos_)throw new Error("Unexpected end of input " + this.bit_pos_ + " " + this.bit_end_pos_)
            } else {
                var t = this.buf_ptr_, e = this.input_.read(this.buf_, t, 4096);
                if (e < 0)throw new Error("Unexpected end of input");
                if (e < 4096) {
                    this.eos_ = 1;
                    for (var n = 0; n < 32; n++)this.buf_[t + e + n] = 0
                }
                if (0 === t) {
                    for (var n = 0; n < 32; n++)this.buf_[8192 + n] = this.buf_[n];
                    this.buf_ptr_ = 4096
                } else this.buf_ptr_ = 0;
                this.bit_end_pos_ += e << 3
            }
        }, n.prototype.fillBitWindow = function () {
            for (; this.bit_pos_ >= 8;)this.val_ >>>= 8, this.val_ |= this.buf_[8191 & this.pos_] << 24, ++this.pos_, this.bit_pos_ = this.bit_pos_ - 8 >>> 0, this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0
        }, n.prototype.readBits = function (t) {
            32 - this.bit_pos_ < t && this.fillBitWindow();
            var e = this.val_ >>> this.bit_pos_ & i[t];
            return this.bit_pos_ += t, e
        }, t.exports = n
    }, function (t, e, n) {
        var r = n(278);
        e.init = function () {
            e.dictionary = r.init()
        }, e.offsetsByLength = new Uint32Array([0, 0, 0, 0, 0, 4096, 9216, 21504, 35840, 44032, 53248, 63488, 74752, 87040, 93696, 100864, 104704, 106752, 108928, 113536, 115968, 118528, 119872, 121280, 122016]), e.sizeBitsByLength = new Uint8Array([0, 0, 0, 0, 10, 10, 11, 11, 10, 10, 10, 10, 10, 9, 9, 8, 7, 7, 8, 7, 7, 6, 6, 5, 5]), e.minDictionaryWordLength = 4, e.maxDictionaryWordLength = 24
    }, function (t, e, n) {
        var r = n(279);
        n(56);
        e.init = function () {
            return (0, n(274).BrotliDecompressBuffer)(r.toByteArray(n(280)))
        }
    }, function (t, e) {
        "use strict";
        function n(t) {
            var e = t.length;
            if (e % 4 > 0)throw new Error("Invalid string. Length must be a multiple of 4");
            return "=" === t[e - 2] ? 2 : "=" === t[e - 1] ? 1 : 0
        }

        function r(t) {
            return 3 * t.length / 4 - n(t)
        }

        function i(t) {
            var e, r, i, o, a, s = t.length;
            o = n(t), a = new c(3 * s / 4 - o), r = o > 0 ? s - 4 : s;
            var u = 0;
            for (e = 0; e < r; e += 4)i = l[t.charCodeAt(e)] << 18 | l[t.charCodeAt(e + 1)] << 12 | l[t.charCodeAt(e + 2)] << 6 | l[t.charCodeAt(e + 3)], a[u++] = i >> 16 & 255, a[u++] = i >> 8 & 255, a[u++] = 255 & i;
            return 2 === o ? (i = l[t.charCodeAt(e)] << 2 | l[t.charCodeAt(e + 1)] >> 4, a[u++] = 255 & i) : 1 === o && (i = l[t.charCodeAt(e)] << 10 | l[t.charCodeAt(e + 1)] << 4 | l[t.charCodeAt(e + 2)] >> 2, a[u++] = i >> 8 & 255, a[u++] = 255 & i), a
        }

        function o(t) {
            return u[t >> 18 & 63] + u[t >> 12 & 63] + u[t >> 6 & 63] + u[63 & t]
        }

        function a(t, e, n) {
            for (var r, i = [], a = e; a < n; a += 3)r = (t[a] << 16) + (t[a + 1] << 8) + t[a + 2], i.push(o(r));
            return i.join("")
        }

        function s(t) {
            for (var e, n = t.length, r = n % 3, i = "", o = [], s = 0, l = n - r; s < l; s += 16383)o.push(a(t, s, s + 16383 > l ? l : s + 16383));
            return 1 === r ? (e = t[n - 1], i += u[e >> 2], i += u[e << 4 & 63], i += "==") : 2 === r && (e = (t[n - 2] << 8) + t[n - 1], i += u[e >> 10], i += u[e >> 4 & 63], i += u[e << 2 & 63], i += "="), o.push(i), o.join("")
        }

        e.byteLength = r, e.toByteArray = i, e.fromByteArray = s;
        for (var u = [], l = [], c = "undefined" != typeof Uint8Array ? Uint8Array : Array, f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", h = 0, p = f.length; h < p; ++h)u[h] = f[h], l[f.charCodeAt(h)] = h;
        l["-".charCodeAt(0)] = 62, l["_".charCodeAt(0)] = 63
    }, function (t, e) {
        t.exports = ""
    }, function (t, e) {
        function n(t, e) {
            this.bits = t, this.value = e
        }

        function r(t, e) {
            for (var n = 1 << e - 1; t & n;)n >>= 1;
            return (t & n - 1) + n
        }

        function i(t, e, r, i, o) {
            do {
                i -= r, t[e + i] = new n(o.bits, o.value)
            } while (i > 0)
        }

        function o(t, e, n) {
            for (var r = 1 << e - n; e < a && !((r -= t[e]) <= 0);)++e, r <<= 1;
            return e - n
        }

        e.HuffmanCode = n;
        var a = 15;
        e.BrotliBuildHuffmanTable = function (t, e, s, u, l) {
            var c, f, h, p, d, g, y, v, b, m, w, x = e, _ = new Int32Array(a + 1), k = new Int32Array(a + 1);
            for (w = new Int32Array(l), h = 0; h < l; h++)_[u[h]]++;
            for (k[1] = 0, f = 1; f < a; f++)k[f + 1] = k[f] + _[f];
            for (h = 0; h < l; h++)0 !== u[h] && (w[k[u[h]]++] = h);
            if (v = s, b = 1 << v, m = b, 1 === k[a]) {
                for (p = 0; p < m; ++p)t[e + p] = new n(0, 65535 & w[0]);
                return m
            }
            for (p = 0, h = 0, f = 1, d = 2; f <= s; ++f, d <<= 1)for (; _[f] > 0; --_[f])c = new n(255 & f, 65535 & w[h++]), i(t, e + p, d, b, c), p = r(p, f);
            for (y = m - 1, g = -1, f = s + 1, d = 2; f <= a; ++f, d <<= 1)for (; _[f] > 0; --_[f])(p & y) !== g && (e += b, v = o(_, f, s), b = 1 << v, m += b, g = p & y, t[x + g] = new n(v + s & 255, e - x - g & 65535)), c = new n(f - s & 255, 65535 & w[h++]), i(t, e + (p >> s), d, b, c), p = r(p, f);
            return m
        }
    }, function (t, e) {
        e.lookup = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12, 12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12, 12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31, 32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35, 36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39, 40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47, 48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51, 52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55, 56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59, 60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), e.lookupOffsets = new Uint16Array([1024, 1536, 1280, 1536, 0, 256, 768, 512])
    }, function (t, e) {
        function n(t, e) {
            this.offset = t, this.nbits = e
        }

        e.kBlockLengthPrefixCode = [new n(1, 2), new n(5, 2), new n(9, 2), new n(13, 2), new n(17, 3), new n(25, 3), new n(33, 3), new n(41, 3), new n(49, 4), new n(65, 4), new n(81, 4), new n(97, 4), new n(113, 5), new n(145, 5), new n(177, 5), new n(209, 5), new n(241, 6), new n(305, 6), new n(369, 7), new n(497, 8), new n(753, 9), new n(1265, 10), new n(2289, 11), new n(4337, 12), new n(8433, 13), new n(16625, 24)], e.kInsertLengthPrefixCode = [new n(0, 0), new n(1, 0), new n(2, 0), new n(3, 0), new n(4, 0), new n(5, 0), new n(6, 1), new n(8, 1), new n(10, 2), new n(14, 2), new n(18, 3), new n(26, 3), new n(34, 4), new n(50, 4), new n(66, 5), new n(98, 5), new n(130, 6), new n(194, 7), new n(322, 8), new n(578, 9), new n(1090, 10), new n(2114, 12), new n(6210, 14), new n(22594, 24)], e.kCopyLengthPrefixCode = [new n(2, 0), new n(3, 0), new n(4, 0), new n(5, 0), new n(6, 0), new n(7, 0), new n(8, 0), new n(9, 0), new n(10, 1), new n(12, 1), new n(14, 2), new n(18, 2), new n(22, 3), new n(30, 3), new n(38, 4), new n(54, 4), new n(70, 5), new n(102, 5), new n(134, 6), new n(198, 7), new n(326, 8), new n(582, 9), new n(1094, 10), new n(2118, 24)], e.kInsertRangeLut = [0, 0, 8, 8, 0, 16, 8, 16, 16], e.kCopyRangeLut = [0, 8, 0, 8, 16, 0, 16, 8, 16]
    }, function (t, e, n) {
        function r(t, e, n) {
            this.prefix = new Uint8Array(t.length), this.transform = e, this.suffix = new Uint8Array(n.length);
            for (var r = 0; r < t.length; r++)this.prefix[r] = t.charCodeAt(r);
            for (var r = 0; r < n.length; r++)this.suffix[r] = n.charCodeAt(r)
        }

        function i(t, e) {
            return t[e] < 192 ? (t[e] >= 97 && t[e] <= 122 && (t[e] ^= 32), 1) : t[e] < 224 ? (t[e + 1] ^= 32, 2) : (t[e + 2] ^= 5, 3)
        }

        var o = n(277), a = [new r("", 0, ""), new r("", 0, " "), new r(" ", 0, " "), new r("", 12, ""), new r("", 10, " "), new r("", 0, " the "), new r(" ", 0, ""), new r("s ", 0, " "), new r("", 0, " of "), new r("", 10, ""), new r("", 0, " and "), new r("", 13, ""), new r("", 1, ""), new r(", ", 0, " "), new r("", 0, ", "), new r(" ", 10, " "), new r("", 0, " in "), new r("", 0, " to "), new r("e ", 0, " "), new r("", 0, '"'), new r("", 0, "."), new r("", 0, '">'), new r("", 0, "\n"), new r("", 3, ""), new r("", 0, "]"), new r("", 0, " for "), new r("", 14, ""), new r("", 2, ""), new r("", 0, " a "), new r("", 0, " that "), new r(" ", 10, ""), new r("", 0, ". "), new r(".", 0, ""), new r(" ", 0, ", "), new r("", 15, ""), new r("", 0, " with "), new r("", 0, "'"), new r("", 0, " from "), new r("", 0, " by "), new r("", 16, ""), new r("", 17, ""), new r(" the ", 0, ""), new r("", 4, ""), new r("", 0, ". The "), new r("", 11, ""), new r("", 0, " on "), new r("", 0, " as "), new r("", 0, " is "), new r("", 7, ""), new r("", 1, "ing "), new r("", 0, "\n\t"), new r("", 0, ":"), new r(" ", 0, ". "), new r("", 0, "ed "), new r("", 20, ""), new r("", 18, ""), new r("", 6, ""), new r("", 0, "("), new r("", 10, ", "), new r("", 8, ""), new r("", 0, " at "), new r("", 0, "ly "), new r(" the ", 0, " of "), new r("", 5, ""), new r("", 9, ""), new r(" ", 10, ", "), new r("", 10, '"'), new r(".", 0, "("), new r("", 11, " "), new r("", 10, '">'), new r("", 0, '="'), new r(" ", 0, "."), new r(".com/", 0, ""), new r(" the ", 0, " of the "), new r("", 10, "'"), new r("", 0, ". This "), new r("", 0, ","), new r(".", 0, " "), new r("", 10, "("), new r("", 10, "."), new r("", 0, " not "), new r(" ", 0, '="'), new r("", 0, "er "), new r(" ", 11, " "), new r("", 0, "al "), new r(" ", 11, ""), new r("", 0, "='"), new r("", 11, '"'), new r("", 10, ". "), new r(" ", 0, "("), new r("", 0, "ful "), new r(" ", 10, ". "), new r("", 0, "ive "), new r("", 0, "less "), new r("", 11, "'"), new r("", 0, "est "), new r(" ", 10, "."), new r("", 11, '">'), new r(" ", 0, "='"), new r("", 10, ","), new r("", 0, "ize "), new r("", 11, "."), new r("Â ", 0, ""), new r(" ", 0, ","), new r("", 10, '="'), new r("", 11, '="'), new r("", 0, "ous "), new r("", 11, ", "), new r("", 10, "='"), new r(" ", 10, ","), new r(" ", 11, '="'), new r(" ", 11, ", "), new r("", 11, ","), new r("", 11, "("), new r("", 11, ". "), new r(" ", 11, "."), new r("", 11, "='"), new r(" ", 11, ". "), new r(" ", 10, '="'), new r(" ", 11, "='"), new r(" ", 10, "='")];
        e.kTransforms = a, e.kNumTransforms = a.length, e.transformDictionaryWord = function (t, e, n, r, s) {
            var u, l = a[s].prefix, c = a[s].suffix, f = a[s].transform, h = f < 12 ? 0 : f - 11, p = 0, d = e;
            h > r && (h = r);
            for (var g = 0; g < l.length;)t[e++] = l[g++];
            for (n += h, r -= h, f <= 9 && (r -= f), p = 0; p < r; p++)t[e++] = o.dictionary[n + p];
            if (u = e - r, 10 === f)i(t, u); else if (11 === f)for (; r > 0;) {
                var y = i(t, u);
                u += y, r -= y
            }
            for (var v = 0; v < c.length;)t[e++] = c[v++];
            return e - d
        }
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i, o, a, s = function (t, e) {
                    function n() {
                        this.constructor = t
                    }

                    for (var r in e)u.call(e, r) && (t[r] = e[r]);
                    return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                }, u = {}.hasOwnProperty;
                r = n(286), i = n(82), a = n(56), o = function (t) {
                    function n(t, e, n) {
                        var o;
                        this.document = t, this.name = e, this.id = n, this.font = new r(i[this.name]()), o = this.font, this.ascender = o.ascender, this.descender = o.descender, this.bbox = o.bbox, this.lineGap = o.lineGap
                    }

                    var i;
                    return s(n, t), n.prototype.embed = function () {
                        return this.dictionary.data = {
                            Type: "Font",
                            BaseFont: this.name,
                            Subtype: "Type1",
                            Encoding: "WinAnsiEncoding"
                        }, this.dictionary.end()
                    }, n.prototype.encode = function (t) {
                        var e, n, r, i, o, a, s, u;
                        for (n = this.font.encodeText(t), i = this.font.glyphsForString("" + t), e = this.font.advancesForGlyphs(i), u = [], o = a = 0, s = i.length; a < s; o = ++a)r = i[o], u.push({
                            xAdvance: e[o],
                            yAdvance: 0,
                            xOffset: 0,
                            yOffset: 0,
                            advanceWidth: this.font.widthOfGlyph(r)
                        });
                        return [n, u]
                    }, n.prototype.widthOfString = function (t, e) {
                        var n, r, i, o, a, s, u;
                        for (i = this.font.glyphsForString("" + t), r = this.font.advancesForGlyphs(i), u = 0, o = 0, a = r.length; o < a; o++)n = r[o], u += n;
                        return s = e / 1e3, u * s
                    }, n.isStandardFont = function (t) {
                        return t in i
                    }, i = {
                        Courier: function () {
                            return a.readFileSync(e + "/../font/data/Courier.afm", "utf8")
                        }, "Courier-Bold": function () {
                            return a.readFileSync(e + "/../font/data/Courier-Bold.afm", "utf8")
                        }, "Courier-Oblique": function () {
                            return a.readFileSync(e + "/../font/data/Courier-Oblique.afm", "utf8")
                        }, "Courier-BoldOblique": function () {
                            return a.readFileSync(e + "/../font/data/Courier-BoldOblique.afm", "utf8")
                        }, Helvetica: function () {
                            return a.readFileSync(e + "/../font/data/Helvetica.afm", "utf8")
                        }, "Helvetica-Bold": function () {
                            return a.readFileSync(e + "/../font/data/Helvetica-Bold.afm", "utf8")
                        }, "Helvetica-Oblique": function () {
                            return a.readFileSync(e + "/../font/data/Helvetica-Oblique.afm", "utf8")
                        }, "Helvetica-BoldOblique": function () {
                            return a.readFileSync(e + "/../font/data/Helvetica-BoldOblique.afm", "utf8")
                        }, "Times-Roman": function () {
                            return a.readFileSync(e + "/../font/data/Times-Roman.afm", "utf8")
                        }, "Times-Bold": function () {
                            return a.readFileSync(e + "/../font/data/Times-Bold.afm", "utf8")
                        }, "Times-Italic": function () {
                            return a.readFileSync(e + "/../font/data/Times-Italic.afm", "utf8")
                        }, "Times-BoldItalic": function () {
                            return a.readFileSync(e + "/../font/data/Times-BoldItalic.afm", "utf8")
                        }, Symbol: function () {
                            return a.readFileSync(e + "/../font/data/Symbol.afm", "utf8")
                        }, ZapfDingbats: function () {
                            return a.readFileSync(e + "/../font/data/ZapfDingbats.afm", "utf8")
                        }
                    }, n
                }(i), t.exports = o
            }).call(this)
        }).call(e, "/")
    }, function (t, e, n) {
        (function () {
            var e, r;
            r = n(56), e = function () {
                function t(t) {
                    var e, r;
                    this.contents = t, this.attributes = {}, this.glyphWidths = {}, this.boundingBoxes = {}, this.kernPairs = {}, this.parse(), this.charWidths = function () {
                        var t, e;
                        for (e = [], r = t = 0; t <= 255; r = ++t)e.push(this.glyphWidths[n[r]]);
                        return e
                    }.call(this), this.bbox = function () {
                        var t, n, r, i;
                        for (r = this.attributes.FontBBox.split(/\s+/), i = [], t = 0, n = r.length; t < n; t++)e = r[t], i.push(+e);
                        return i
                    }.call(this), this.ascender = +(this.attributes.Ascender || 0), this.descender = +(this.attributes.Descender || 0), this.lineGap = this.bbox[3] - this.bbox[1] - (this.ascender - this.descender)
                }

                var e, n;
                return t.open = function (e) {
                    return new t(r.readFileSync(e, "utf8"))
                }, t.prototype.parse = function () {
                    var t, e, n, r, i, o, a, s, u, l;
                    for (u = "", s = this.contents.split("\n"), e = 0, r = s.length; e < r; e++)if (i = s[e], o = i.match(/^Start(\w+)/))u = o[1]; else if (o = i.match(/^End(\w+)/))u = ""; else switch (u) {
                        case"FontMetrics":
                            o = i.match(/(^\w+)\s+(.*)/), n = o[1], l = o[2], (t = this.attributes[n]) ? (Array.isArray(t) || (t = this.attributes[n] = [t]), t.push(l)) : this.attributes[n] = l;
                            break;
                        case"CharMetrics":
                            if (!/^CH?\s/.test(i))continue;
                            a = i.match(/\bN\s+(\.?\w+)\s*;/)[1], this.glyphWidths[a] = +i.match(/\bWX\s+(\d+)\s*;/)[1];
                            break;
                        case"KernPairs":
                            o = i.match(/^KPX\s+(\.?\w+)\s+(\.?\w+)\s+(-?\d+)/), o && (this.kernPairs[o[1] + "\0" + o[2]] = parseInt(o[3]))
                    }
                }, e = {
                    402: 131,
                    8211: 150,
                    8212: 151,
                    8216: 145,
                    8217: 146,
                    8218: 130,
                    8220: 147,
                    8221: 148,
                    8222: 132,
                    8224: 134,
                    8225: 135,
                    8226: 149,
                    8230: 133,
                    8364: 128,
                    8240: 137,
                    8249: 139,
                    8250: 155,
                    710: 136,
                    8482: 153,
                    338: 140,
                    339: 156,
                    732: 152,
                    352: 138,
                    353: 154,
                    376: 159,
                    381: 142,
                    382: 158
                }, t.prototype.encodeText = function (t) {
                    var n, r, i, o, a;
                    for (a = [], r = i = 0, o = t.length; 0 <= o ? i < o : i > o; r = 0 <= o ? ++i : --i)n = t.charCodeAt(r), n = e[n] || n, a.push(n.toString(16));
                    return a
                }, t.prototype.glyphsForString = function (t) {
                    var e, n, r, i, o;
                    for (n = [], r = i = 0, o = t.length; 0 <= o ? i < o : i > o; r = 0 <= o ? ++i : --i)e = t.charCodeAt(r), n.push(this.characterToGlyph(e));
                    return n
                }, t.prototype.characterToGlyph = function (t) {
                    return n[e[t] || t] || ".notdef"
                }, t.prototype.widthOfGlyph = function (t) {
                    return this.glyphWidths[t] || 0
                }, t.prototype.getKernPair = function (t, e) {
                    return this.kernPairs[t + "\0" + e] || 0
                }, t.prototype.advancesForGlyphs = function (t) {
                    var e, n, r, i, o, a;
                    for (e = [], n = r = 0, o = t.length; r < o; n = ++r)i = t[n], a = t[n + 1], e.push(this.widthOfGlyph(i) + this.getKernPair(i, a));
                    return e
                }, n = ".notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n\nspace         exclam         quotedbl       numbersign\ndollar        percent        ampersand      quotesingle\nparenleft     parenright     asterisk       plus\ncomma         hyphen         period         slash\nzero          one            two            three\nfour          five           six            seven\neight         nine           colon          semicolon\nless          equal          greater        question\n\nat            A              B              C\nD             E              F              G\nH             I              J              K\nL             M              N              O\nP             Q              R              S\nT             U              V              W\nX             Y              Z              bracketleft\nbackslash     bracketright   asciicircum    underscore\n\ngrave         a              b              c\nd             e              f              g\nh             i              j              k\nl             m              n              o\np             q              r              s\nt             u              v              w\nx             y              z              braceleft\nbar           braceright     asciitilde     .notdef\n\nEuro          .notdef        quotesinglbase florin\nquotedblbase  ellipsis       dagger         daggerdbl\ncircumflex    perthousand    Scaron         guilsinglleft\nOE            .notdef        Zcaron         .notdef\n.notdef       quoteleft      quoteright     quotedblleft\nquotedblright bullet         endash         emdash\ntilde         trademark      scaron         guilsinglright\noe            .notdef        zcaron         ydieresis\n\nspace         exclamdown     cent           sterling\ncurrency      yen            brokenbar      section\ndieresis      copyright      ordfeminine    guillemotleft\nlogicalnot    hyphen         registered     macron\ndegree        plusminus      twosuperior    threesuperior\nacute         mu             paragraph      periodcentered\ncedilla       onesuperior    ordmasculine   guillemotright\nonequarter    onehalf        threequarters  questiondown\n\nAgrave        Aacute         Acircumflex    Atilde\nAdieresis     Aring          AE             Ccedilla\nEgrave        Eacute         Ecircumflex    Edieresis\nIgrave        Iacute         Icircumflex    Idieresis\nEth           Ntilde         Ograve         Oacute\nOcircumflex   Otilde         Odieresis      multiply\nOslash        Ugrave         Uacute         Ucircumflex\nUdieresis     Yacute         Thorn          germandbls\n\nagrave        aacute         acircumflex    atilde\nadieresis     aring          ae             ccedilla\negrave        eacute         ecircumflex    edieresis\nigrave        iacute         icircumflex    idieresis\neth           ntilde         ograve         oacute\nocircumflex   otilde         odieresis      divide\noslash        ugrave         uacute         ucircumflex\nudieresis     yacute         thorn          ydieresis".split(/\s+/), t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r, i = function (t, e) {
                function n() {
                    this.constructor = t
                }

                for (var r in e)o.call(e, r) && (t[r] = e[r]);
                return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
            }, o = {}.hasOwnProperty, a = [].slice;
            r = n(82), n(57), e = function (t) {
                function e(t, e, n) {
                    this.document = t, this.font = e, this.id = n, this.subset = this.font.createSubset(), this.unicode = [[0]], this.widths = [this.font.getGlyph(0).advanceWidth], this.name = this.font.postscriptName, this.scale = 1e3 / this.font.unitsPerEm, this.ascender = this.font.ascent * this.scale, this.descender = this.font.descent * this.scale, this.lineGap = this.font.lineGap * this.scale, this.bbox = this.font.bbox, this.layoutCache = Object.create(null)
                }

                var n;
                return i(e, t), e.prototype.layoutRun = function (t, e) {
                    var n, r, i, o, a, s, u;
                    for (u = this.font.layout(t, e), s = u.positions, n = r = 0, o = s.length; r < o; n = ++r) {
                        a = s[n];
                        for (i in a)a[i] *= this.scale;
                        a.advanceWidth = u.glyphs[n].advanceWidth * this.scale
                    }
                    return u
                }, e.prototype.layoutCached = function (t) {
                    var e, n;
                    return (e = this.layoutCache[t]) ? e : (n = this.layoutRun(t), this.layoutCache[t] = n, n)
                }, e.prototype.layout = function (t, e, n) {
                    var r, i, o, a, s, u, l;
                    if (null == n && (n = !1), e)return this.layoutRun(t, e);
                    for (i = n ? null : [], s = n ? null : [], r = 0, a = 0, o = 0; o <= t.length;)o === t.length && a < o || " " === (u = t.charAt(o)) || "\t" === u ? (l = this.layoutCached(t.slice(a, ++o)), n || (i.push.apply(i, l.glyphs), s.push.apply(s, l.positions)), r += l.advanceWidth, a = o) : o++;
                    return {glyphs: i, positions: s, advanceWidth: r}
                }, e.prototype.encode = function (t, e) {
                    var n, r, i, o, a, s, u, l, c, f, h;
                    for (f = this.layout(t, e), a = f.glyphs, c = f.positions, h = [], s = u = 0, l = a.length; u < l; s = ++u)o = a[s], i = this.subset.includeGlyph(o.id), h.push(("0000" + i.toString(16)).slice(-4)), null == (n = this.widths)[i] && (n[i] = o.advanceWidth * this.scale), null == (r = this.unicode)[i] && (r[i] = o.codePoints);
                    return [h, c]
                }, e.prototype.widthOfString = function (t, e, n) {
                    var r, i;
                    return i = this.layout(t, n, !0).advanceWidth, r = e / 1e3, i * r
                }, e.prototype.embed = function () {
                    var t, e, n, r, i, o, a, s, u, l, c;
                    return s = null != this.subset.cff, o = this.document.ref(), s && (o.data.Subtype = "CIDFontType0C"), this.subset.encodeStream().pipe(o), r = ((null != (l = this.font["OS/2"]) ? l.sFamilyClass : void 0) || 0) >> 8, i = 0, this.font.post.isFixedPitch && (i |= 1), 1 <= r && r <= 7 && (i |= 2), i |= 4, 10 === r && (i |= 8), this.font.head.macStyle.italic && (i |= 64), c = function () {
                        var t, e;
                        for (e = [], a = t = 0; t < 6; a = ++t)e.push(String.fromCharCode(26 * Math.random() + 65));
                        return e
                    }().join(""), u = c + "+" + this.font.postscriptName, t = this.font.bbox, n = this.document.ref({
                        Type: "FontDescriptor",
                        FontName: u,
                        Flags: i,
                        FontBBox: [t.minX * this.scale, t.minY * this.scale, t.maxX * this.scale, t.maxY * this.scale],
                        ItalicAngle: this.font.italicAngle,
                        Ascent: this.ascender,
                        Descent: this.descender,
                        CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,
                        XHeight: (this.font.xHeight || 0) * this.scale,
                        StemV: 0
                    }), s ? n.data.FontFile3 = o : n.data.FontFile2 = o, n.end(), e = this.document.ref({
                        Type: "Font",
                        Subtype: s ? "CIDFontType0" : "CIDFontType2",
                        BaseFont: u,
                        CIDSystemInfo: {Registry: new String("Adobe"), Ordering: new String("Identity"), Supplement: 0},
                        FontDescriptor: n,
                        W: [0, this.widths]
                    }), e.end(), this.dictionary.data = {
                        Type: "Font",
                        Subtype: "Type0",
                        BaseFont: u,
                        Encoding: "Identity-H",
                        DescendantFonts: [e],
                        ToUnicode: this.toUnicodeCmap()
                    }, this.dictionary.end()
                }, n = function () {
                    var t, e, n;
                    return e = 1 <= arguments.length ? a.call(arguments, 0) : [], n = function () {
                        var n, r, i;
                        for (i = [], n = 0, r = e.length; n < r; n++)t = e[n], i.push(("0000" + t.toString(16)).slice(-4));
                        return i
                    }(), n.join("")
                }, e.prototype.toUnicodeCmap = function () {
                    var t, e, r, i, o, a, s, u, l, c;
                    for (t = this.document.ref(), i = [], l = this.unicode, o = 0, s = l.length; o < s; o++) {
                        for (e = l[o], r = [], a = 0, u = e.length; a < u; a++)c = e[a], c > 65535 && (c -= 65536, r.push(n(c >>> 10 & 1023 | 55296)), c = 56320 | 1023 & c), r.push(n(c));
                        i.push("<" + r.join(" ") + ">")
                    }
                    return t.end("/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange\n1 beginbfrange\n<0000> <" + n(i.length - 1) + "> [" + i.join(" ") + "]\nendbfrange\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend"), t
                }, e
            }(r), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r;
            e = n(289), r = n(57).number, t.exports = {
                initText: function () {
                    return this.x = 0, this.y = 0, this._lineGap = 0
                }, lineGap: function (t) {
                    return this._lineGap = t, this
                }, moveDown: function (t) {
                    return null == t && (t = 1), this.y += this.currentLineHeight(!0) * t + this._lineGap, this
                }, moveUp: function (t) {
                    return null == t && (t = 1), this.y -= this.currentLineHeight(!0) * t + this._lineGap, this
                }, _text: function (t, n, r, i, o) {
                    var a, s, u, l, c;
                    if (i = this._initOptions(n, r, i), t = null == t ? "" : "" + t, i.wordSpacing && (t = t.replace(/\s{2,}/g, " ")), i.width)c = this._wrapper, c || (c = new e(this, i), c.on("line", o)), this._wrapper = i.continued ? c : null, this._textOptions = i.continued ? i : null, c.wrap(t, i); else for (l = t.split("\n"), a = 0, s = l.length; a < s; a++)u = l[a], o(u, i);
                    return this
                }, text: function (t, e, n, r) {
                    return this._text(t, e, n, r, this._line.bind(this))
                }, widthOfString: function (t, e) {
                    return null == e && (e = {}), this._font.widthOfString(t, this._fontSize, e.features) + (e.characterSpacing || 0) * (t.length - 1)
                }, heightOfString: function (t, e) {
                    var n, r, i, o, a;
                    return null == e && (e = {}), i = this, o = i.x, a = i.y, e = this._initOptions(e), e.height = Infinity, r = e.lineGap || this._lineGap || 0, this._text(t, this.x, this.y, e, function (t) {
                        return function (e, n) {
                            return t.y += t.currentLineHeight(!0) + r
                        }
                    }(this)), n = this.y - a, this.x = o, this.y = a, n
                }, list: function (t, n, r, i, o) {
                    var a, s, u, l, c, f, h, p, d;
                    return i = this._initOptions(n, r, i), p = Math.round(this._font.ascender / 1e3 * this._fontSize / 2), d = i.bulletRadius || Math.round(this._font.ascender / 1e3 * this._fontSize / 3), u = i.textIndent || 5 * d, l = i.bulletIndent || 8 * d, f = 1, c = [], h = [], a = function (t) {
                        var e, n, r, i, o;
                        for (o = [], e = r = 0, i = t.length; r < i; e = ++r)n = t[e], Array.isArray(n) ? (f++, a(n), o.push(f--)) : (c.push(n), o.push(h.push(f)));
                        return o
                    }, a(t), o = new e(this, i), o.on("line", this._line.bind(this)), f = 1, s = 0, o.on("firstLine", function (t) {
                        return function () {
                            var e, n;
                            return (n = h[s++]) !== f && (e = l * (n - f), t.x += e, o.lineWidth -= e, f = n), t.circle(t.x - u + d, t.y + p, d), t.fill()
                        }
                    }(this)), o.on("sectionStart", function (t) {
                        return function () {
                            var e;
                            return e = u + l * (f - 1), t.x += e, o.lineWidth -= e
                        }
                    }(this)), o.on("sectionEnd", function (t) {
                        return function () {
                            var e;
                            return e = u + l * (f - 1), t.x -= e, o.lineWidth += e
                        }
                    }(this)), o.wrap(c.join("\n"), i), this
                }, _initOptions: function (t, e, n) {
                    var r, i, o;
                    if (null == t && (t = {}), null == n && (n = {}), "object" == typeof t && (n = t, t = null), n = function () {
                            var t, e, r;
                            e = {};
                            for (t in n)r = n[t], e[t] = r;
                            return e
                        }(), this._textOptions) {
                        i = this._textOptions;
                        for (r in i)o = i[r], "continued" !== r && null == n[r] && (n[r] = o)
                    }
                    return null != t && (this.x = t), null != e && (this.y = e), !1 !== n.lineBreak && null == n.width && (n.width = this.page.width - this.x - this.page.margins.right), n.columns || (n.columns = 0), null == n.columnGap && (n.columnGap = 18), n
                }, _line: function (t, e, n) {
                    var r;
                    return null == e && (e = {}), this._fragment(t, this.x, this.y, e), r = e.lineGap || this._lineGap || 0, n ? this.y += this.currentLineHeight(!0) + r : this.x += this.widthOfString(t)
                }, _fragment: function (t, e, n, i) {
                    var o, a, s, u, l, c, f, h, p, d, g, y, v, b, m, w, x, _, k, S, C, A, P, E, I, T, O, B, L, M, R, F, z, D, N, U;
                    if (t = ("" + t).replace(/\n/g, ""), 0 !== t.length) {
                        if (a = i.align || "left", N = i.wordSpacing || 0, u = i.characterSpacing || 0, i.width)switch (a) {
                            case"right":
                                F = this.widthOfString(t.replace(/\s+$/, ""), i), e += i.lineWidth - F;
                                break;
                            case"center":
                                e += i.lineWidth / 2 - i.textWidth / 2;
                                break;
                            case"justify":
                                U = t.trim().split(/\s+/), F = this.widthOfString(t.replace(/\s+/g, ""), i), R = this.widthOfString(" ") + u, N = Math.max(0, (i.lineWidth - F) / Math.max(1, U.length - 1) - R)
                        }
                        if (B = i.textWidth + N * (i.wordCount - 1) + u * (t.length - 1), i.link && this.link(e, n, B, this.currentLineHeight(), i.link), (i.underline || i.strike) && (this.save(), i.stroke || this.strokeColor.apply(this, this._fillColor), x = this._fontSize < 10 ? .5 : Math.floor(this._fontSize / 10), this.lineWidth(x), c = i.underline ? 1 : 2, _ = n + this.currentLineHeight() / c, i.underline && (_ -= x), this.moveTo(e, _), this.lineTo(e + B, _), this.stroke(), this.restore()), this.save(), this.transform(1, 0, 0, -1, 0, this.page.height), n = this.page.height - n - this._font.ascender / 1e3 * this._fontSize, null == (s = this.page.fonts)[C = this._font.id] && (s[C] = this._font.ref()), this.addContent("BT"), this.addContent("1 0 0 1 " + r(e) + " " + r(n) + " Tm"), this.addContent("/" + this._font.id + " " + r(this._fontSize) + " Tf"), S = i.fill && i.stroke ? 2 : i.stroke ? 1 : 0, S && this.addContent(S + " Tr"), u && this.addContent(r(u) + " Tc"), N)for (U = t.trim().split(/\s+/), N += this.widthOfString(" ") + u, N *= 1e3 / this._fontSize, f = [], P = [], y = 0, m = U.length; y < m; y++) {
                            D = U[y], I = this._font.encode(D, i.features), h = I[0], E = I[1], f.push.apply(f, h), P.push.apply(P, E), M = {}, T = P[P.length - 1];
                            for (v in T)z = T[v], M[v] = z;
                            M.xAdvance += N, P[P.length - 1] = M
                        } else O = this._font.encode(t, i.features), f = O[0], P = O[1];
                        for (L = this._fontSize / 1e3, l = [], b = 0, d = !1, o = function (t) {
                            return function (t) {
                                var e, n;
                                return b < t && (n = f.slice(b, t).join(""), e = P[t - 1].xAdvance - P[t - 1].advanceWidth, l.push("<" + n + "> " + r(-e))), b = t
                            }
                        }(), p = function (t) {
                            return function (e) {
                                if (o(e), l.length > 0)return t.addContent("[" + l.join(" ") + "] TJ"), l.length = 0
                            }
                        }(this), g = k = 0, w = P.length; k < w; g = ++k)A = P[g], A.xOffset || A.yOffset ? (p(g), this.addContent("1 0 0 1 " + r(e + A.xOffset * L) + " " + r(n + A.yOffset * L) + " Tm"), p(g + 1), d = !0) : (d && (this.addContent("1 0 0 1 " + r(e) + " " + r(n) + " Tm"), d = !1), A.xAdvance - A.advanceWidth != 0 && o(g + 1)), e += A.xAdvance * L;
                        return p(g), this.addContent("ET"), this.restore()
                    }
                }
            }
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r, i, o = function (t, e) {
                function n() {
                    this.constructor = t
                }

                for (var r in e)a.call(e, r) && (t[r] = e[r]);
                return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
            }, a = {}.hasOwnProperty;
            e = n(32).EventEmitter, r = n(16), i = function (t) {
                function e(t, e) {
                    var n;
                    this.document = t, this.indent = e.indent || 0, this.characterSpacing = e.characterSpacing || 0, this.wordSpacing = 0 === e.wordSpacing, this.columns = e.columns || 1, this.columnGap = null != (n = e.columnGap) ? n : 18, this.lineWidth = (e.width - this.columnGap * (this.columns - 1)) / this.columns, this.spaceLeft = this.lineWidth, this.startX = this.document.x, this.startY = this.document.y, this.column = 1, this.ellipsis = e.ellipsis, this.continuedX = 0, this.features = e.features, null != e.height ? (this.height = e.height, this.maxY = this.startY + e.height) : this.maxY = this.document.page.maxY(), this.on("firstLine", function (t) {
                        return function (e) {
                            var n;
                            return n = t.continuedX || t.indent, t.document.x += n, t.lineWidth -= n, t.once("line", function () {
                                if (t.document.x -= n, t.lineWidth += n, e.continued && !t.continuedX && (t.continuedX = t.indent), !e.continued)return t.continuedX = 0
                            })
                        }
                    }(this)), this.on("lastLine", function (t) {
                        return function (e) {
                            var n;
                            return n = e.align, "justify" === n && (e.align = "left"), t.lastLine = !0, t.once("line", function () {
                                return t.document.y += e.paragraphGap || 0, e.align = n, t.lastLine = !1
                            })
                        }
                    }(this))
                }

                return o(e, t), e.prototype.wordWidth = function (t) {
                    return this.document.widthOfString(t, this) + this.characterSpacing + this.wordSpacing
                }, e.prototype.eachWord = function (t, e) {
                    var n, i, o, a, s, u, l, c, f, h;
                    for (i = new r(t), s = null, h = Object.create(null); n = i.nextBreak();) {
                        if (f = t.slice((null != s ? s.position : void 0) || 0, n.position), (c = null != h[f] ? h[f] : h[f] = this.wordWidth(f)) > this.lineWidth + this.continuedX)for (u = s, o = {}; f.length;) {
                            for (a = f.length; c > this.spaceLeft;)c = this.wordWidth(f.slice(0, --a));
                            if (o.required = a < f.length, l = e(f.slice(0, a), c, o, u), u = {required: !1}, f = f.slice(a), c = this.wordWidth(f), !1 === l)break
                        } else l = e(f, c, n, s);
                        if (!1 === l)break;
                        s = n
                    }
                }, e.prototype.wrap = function (t, e) {
                    var n, r, i, o, a, s, u;
                    return null != e.indent && (this.indent = e.indent), null != e.characterSpacing && (this.characterSpacing = e.characterSpacing), null != e.wordSpacing && (this.wordSpacing = e.wordSpacing), null != e.ellipsis && (this.ellipsis = e.ellipsis), o = this.document.y + this.document.currentLineHeight(!0), (this.document.y > this.maxY || o > this.maxY) && this.nextSection(), n = "", a = 0, s = 0, i = 0, u = this.document.y, r = function (t) {
                        return function () {
                            return e.textWidth = a + t.wordSpacing * (s - 1), e.wordCount = s, e.lineWidth = t.lineWidth, u = t.document.y, t.emit("line", n, e, t), i++
                        }
                    }(this), this.emit("sectionStart", e, this), this.eachWord(t, function (t) {
                        return function (i, o, u, l) {
                            var c;
                            if ((null == l || l.required) && (t.emit("firstLine", e, t), t.spaceLeft = t.lineWidth), o <= t.spaceLeft && (n += i, a += o, s++), u.required || o > t.spaceLeft) {
                                if (u.required && t.emit("lastLine", e, t), c = t.document.currentLineHeight(!0), null != t.height && t.ellipsis && t.document.y + 2 * c > t.maxY && t.column >= t.columns) {
                                    for (!0 === t.ellipsis && (t.ellipsis = "…"), n = n.replace(/\s+$/, ""), a = t.wordWidth(n + t.ellipsis); a > t.lineWidth;)n = n.slice(0, -1).replace(/\s+$/, ""), a = t.wordWidth(n + t.ellipsis);
                                    n += t.ellipsis
                                }
                                return u.required && o > t.spaceLeft && (n = i, a = o, s = 1), r(), t.document.y + c > t.maxY && !t.nextSection() ? (s = 0, n = "", !1) : u.required ? (t.spaceLeft = t.lineWidth, n = "", a = 0, s = 0) : (t.spaceLeft = t.lineWidth - o, n = i, a = o, s = 1)
                            }
                            return t.spaceLeft -= o
                        }
                    }(this)), s > 0 && (this.emit("lastLine", e, this), r()), this.emit("sectionEnd", e, this), !0 === e.continued ? (i > 1 && (this.continuedX = 0), this.continuedX += e.textWidth, this.document.y = u) : this.document.x = this.startX
                }, e.prototype.nextSection = function (t) {
                    var e;
                    if (this.emit("sectionEnd", t, this), ++this.column > this.columns) {
                        if (null != this.height)return !1;
                        this.document.addPage(), this.column = 1, this.startY = this.document.page.margins.top, this.maxY = this.document.page.maxY(), this.document.x = this.startX, this.document._fillColor && (e = this.document).fillColor.apply(e, this.document._fillColor), this.emit("pageBreak", t, this)
                    } else this.document.x += this.lineWidth + this.columnGap, this.document.y = this.startY, this.emit("columnBreak", t, this);
                    return this.emit("sectionStart", t, this), !0
                }, e
            }(e), t.exports = i
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e;
            e = n(291), t.exports = {
                initImages: function () {
                    return this._imageRegistry = {}, this._imageCount = 0
                }, image: function (t, e, n, r) {
                    var i, o, a, s, u, l, c, f, h, p, d, g, y, v, b;
                    return null == r && (r = {}), "object" == typeof e && (r = e, e = null), e = null != (p = null != e ? e : r.x) ? p : this.x, n = null != (d = null != n ? n : r.y) ? d : this.y, "string" == typeof t && (c = this._imageRegistry[t]), c || (c = t.width && t.height ? t : this.openImage(t)), c.obj || c.embed(this), null == (i = this.page.xobjects)[h = c.label] && (i[h] = c.obj), v = r.width || c.width, u = r.height || c.height, r.width && !r.height ? (b = v / c.width, v = c.width * b, u = c.height * b) : r.height && !r.width ? (l = u / c.height, v = c.width * l, u = c.height * l) : r.scale ? (v = c.width * r.scale, u = c.height * r.scale) : r.fit ? (g = r.fit, s = g[0], o = g[1], a = s / o, f = c.width / c.height, f > a ? (v = s, u = s / f) : (u = o, v = o * f)) : r.cover && (y = r.cover, s = y[0], o = y[1], a = s / o, f = c.width / c.height, f > a ? (u = o, v = o * f) : (v = s, u = s / f)), (r.fit || r.cover) && ("center" === r.align ? e = e + s / 2 - v / 2 : "right" === r.align && (e = e + s - v), "center" === r.valign ? n = n + o / 2 - u / 2 : "bottom" === r.valign && (n = n + o - u)), this.y === n && (this.y += u), this.save(), this.transform(v, 0, 0, -u, e, n + u),
                        this.addContent("/" + c.label + " Do"), this.restore(), this
                }, openImage: function (t) {
                    var n;
                    return "string" == typeof t && (n = this._imageRegistry[t]), n || (n = e.open(t, "I" + ++this._imageCount), "string" == typeof t && (this._imageRegistry[t] = n)), n
                }
            }
        }).call(this)
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i, o, a;
                a = n(56), n(292), r = n(293), o = n(294), i = function () {
                    function t() {
                    }

                    return t.open = function (t, n) {
                        var i, s;
                        if (e.isBuffer(t))i = t; else if (t instanceof ArrayBuffer)i = new e(new Uint8Array(t)); else if (s = /^data:.+;base64,(.*)$/.exec(t))i = new e(s[1], "base64"); else if (!(i = a.readFileSync(t)))return;
                        if (255 === i[0] && 216 === i[1])return new r(i, n);
                        if (137 === i[0] && "PNG" === i.toString("ascii", 1, 4))return new o(i, n);
                        throw new Error("Unknown image format.")
                    }, t
                }(), t.exports = i
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e) {
        (function () {
            var e;
            e = function () {
                function t(t) {
                    this.data = null != t ? t : [], this.pos = 0, this.length = this.data.length
                }

                return t.prototype.readByte = function () {
                    return this.data[this.pos++]
                }, t.prototype.writeByte = function (t) {
                    return this.data[this.pos++] = t
                }, t.prototype.byteAt = function (t) {
                    return this.data[t]
                }, t.prototype.readBool = function () {
                    return !!this.readByte()
                }, t.prototype.writeBool = function (t) {
                    return this.writeByte(t ? 1 : 0)
                }, t.prototype.readUInt32 = function () {
                    var t, e, n, r;
                    return t = 16777216 * this.readByte(), e = this.readByte() << 16, n = this.readByte() << 8, r = this.readByte(), t + e + n + r
                }, t.prototype.writeUInt32 = function (t) {
                    return this.writeByte(t >>> 24 & 255), this.writeByte(t >> 16 & 255), this.writeByte(t >> 8 & 255), this.writeByte(255 & t)
                }, t.prototype.readInt32 = function () {
                    var t;
                    return t = this.readUInt32(), t >= 2147483648 ? t - 4294967296 : t
                }, t.prototype.writeInt32 = function (t) {
                    return t < 0 && (t += 4294967296), this.writeUInt32(t)
                }, t.prototype.readUInt16 = function () {
                    var t, e;
                    return t = this.readByte() << 8, e = this.readByte(), t | e
                }, t.prototype.writeUInt16 = function (t) {
                    return this.writeByte(t >> 8 & 255), this.writeByte(255 & t)
                }, t.prototype.readInt16 = function () {
                    var t;
                    return t = this.readUInt16(), t >= 32768 ? t - 65536 : t
                }, t.prototype.writeInt16 = function (t) {
                    return t < 0 && (t += 65536), this.writeUInt16(t)
                }, t.prototype.readString = function (t) {
                    var e, n, r, i;
                    for (i = [], e = n = 0, r = t; 0 <= r ? n < r : n > r; e = 0 <= r ? ++n : --n)i[e] = String.fromCharCode(this.readByte());
                    return i.join("")
                }, t.prototype.writeString = function (t) {
                    var e, n, r, i;
                    for (i = [], e = n = 0, r = t.length; 0 <= r ? n < r : n > r; e = 0 <= r ? ++n : --n)i.push(this.writeByte(t.charCodeAt(e)));
                    return i
                }, t.prototype.stringAt = function (t, e) {
                    return this.pos = t, this.readString(e)
                }, t.prototype.readShort = function () {
                    return this.readInt16()
                }, t.prototype.writeShort = function (t) {
                    return this.writeInt16(t)
                }, t.prototype.readLongLong = function () {
                    var t, e, n, r, i, o, a, s;
                    return t = this.readByte(), e = this.readByte(), n = this.readByte(), r = this.readByte(), i = this.readByte(), o = this.readByte(), a = this.readByte(), s = this.readByte(), 128 & t ? -1 * (72057594037927940 * (255 ^ t) + 281474976710656 * (255 ^ e) + 1099511627776 * (255 ^ n) + 4294967296 * (255 ^ r) + 16777216 * (255 ^ i) + 65536 * (255 ^ o) + 256 * (255 ^ a) + (255 ^ s) + 1) : 72057594037927940 * t + 281474976710656 * e + 1099511627776 * n + 4294967296 * r + 16777216 * i + 65536 * o + 256 * a + s
                }, t.prototype.writeLongLong = function (t) {
                    var e, n;
                    return e = Math.floor(t / 4294967296), n = 4294967295 & t, this.writeByte(e >> 24 & 255), this.writeByte(e >> 16 & 255), this.writeByte(e >> 8 & 255), this.writeByte(255 & e), this.writeByte(n >> 24 & 255), this.writeByte(n >> 16 & 255), this.writeByte(n >> 8 & 255), this.writeByte(255 & n)
                }, t.prototype.readInt = function () {
                    return this.readInt32()
                }, t.prototype.writeInt = function (t) {
                    return this.writeInt32(t)
                }, t.prototype.slice = function (t, e) {
                    return this.data.slice(t, e)
                }, t.prototype.read = function (t) {
                    var e, n, r;
                    for (e = [], n = 0, r = t; 0 <= r ? n < r : n > r; 0 <= r ? ++n : --n)e.push(this.readByte());
                    return e
                }, t.prototype.write = function (t) {
                    var e, n, r, i;
                    for (i = [], n = 0, r = t.length; n < r; n++)e = t[n], i.push(this.writeByte(e));
                    return i
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function () {
            var e, r = [].indexOf || function (t) {
                    for (var e = 0, n = this.length; e < n; e++)if (e in this && this[e] === t)return e;
                    return -1
                };
            n(56), e = function () {
                function t(t, n) {
                    var i, o, a;
                    if (this.data = t, this.label = n, 65496 !== this.data.readUInt16BE(0))throw"SOI not found in JPEG";
                    for (a = 2; a < this.data.length && (o = this.data.readUInt16BE(a), a += 2, !(r.call(e, o) >= 0));)a += this.data.readUInt16BE(a);
                    if (r.call(e, o) < 0)throw"Invalid JPEG.";
                    a += 2, this.bits = this.data[a++], this.height = this.data.readUInt16BE(a), a += 2, this.width = this.data.readUInt16BE(a), a += 2, i = this.data[a++], this.colorSpace = function () {
                        switch (i) {
                            case 1:
                                return "DeviceGray";
                            case 3:
                                return "DeviceRGB";
                            case 4:
                                return "DeviceCMYK"
                        }
                    }(), this.obj = null
                }

                var e;
                return e = [65472, 65473, 65474, 65475, 65477, 65478, 65479, 65480, 65481, 65482, 65483, 65484, 65485, 65486, 65487], t.prototype.embed = function (t) {
                    if (!this.obj)return this.obj = t.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        BitsPerComponent: this.bits,
                        Width: this.width,
                        Height: this.height,
                        ColorSpace: this.colorSpace,
                        Filter: "DCTDecode"
                    }), "DeviceCMYK" === this.colorSpace && (this.obj.data.Decode = [1, 0, 1, 0, 1, 0, 1, 0]), this.obj.end(this.data), this.data = null
                }, t
            }(), t.exports = e
        }).call(this)
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i, o;
                o = n(59), r = n(295), i = function () {
                    function t(t, e) {
                        this.label = e, this.image = new r(t), this.width = this.image.width, this.height = this.image.height, this.imgData = this.image.imgData, this.obj = null
                    }

                    return t.prototype.embed = function (t) {
                        var n, r, i, o, a, s, u, l;
                        if (this.document = t, !this.obj) {
                            if (this.obj = this.document.ref({
                                    Type: "XObject",
                                    Subtype: "Image",
                                    BitsPerComponent: this.image.bits,
                                    Width: this.width,
                                    Height: this.height,
                                    Filter: "FlateDecode"
                                }), this.image.hasAlphaChannel || (a = this.document.ref({
                                    Predictor: 15,
                                    Colors: this.image.colors,
                                    BitsPerComponent: this.image.bits,
                                    Columns: this.width
                                }), this.obj.data.DecodeParms = a, a.end()), 0 === this.image.palette.length ? this.obj.data.ColorSpace = this.image.colorSpace : (o = this.document.ref(), o.end(new e(this.image.palette)), this.obj.data.ColorSpace = ["Indexed", "DeviceRGB", this.image.palette.length / 3 - 1, o]), this.image.transparency.grayscale)return u = this.image.transparency.greyscale, this.obj.data.Mask = [u, u];
                            if (this.image.transparency.rgb) {
                                for (s = this.image.transparency.rgb, i = [], n = 0, r = s.length; n < r; n++)l = s[n], i.push(l, l);
                                return this.obj.data.Mask = i
                            }
                            return this.image.transparency.indexed ? this.loadIndexedAlphaChannel() : this.image.hasAlphaChannel ? this.splitAlphaChannel() : this.finalize()
                        }
                    }, t.prototype.finalize = function () {
                        var t;
                        return this.alphaChannel && (t = this.document.ref({
                            Type: "XObject",
                            Subtype: "Image",
                            Height: this.height,
                            Width: this.width,
                            BitsPerComponent: 8,
                            Filter: "FlateDecode",
                            ColorSpace: "DeviceGray",
                            Decode: [0, 1]
                        }), t.end(this.alphaChannel), this.obj.data.SMask = t), this.obj.end(this.imgData), this.image = null, this.imgData = null
                    }, t.prototype.splitAlphaChannel = function () {
                        return this.image.decodePixels(function (t) {
                            return function (n) {
                                var r, i, a, s, u, l, c, f, h;
                                for (a = t.image.colors * t.image.bits / 8, h = t.width * t.height, l = new e(h * a), i = new e(h), u = f = r = 0, c = n.length; u < c;)l[f++] = n[u++], l[f++] = n[u++], l[f++] = n[u++], i[r++] = n[u++];
                                return s = 0, o.deflate(l, function (e, n) {
                                    if (t.imgData = n, e)throw e;
                                    if (2 == ++s)return t.finalize()
                                }), o.deflate(i, function (e, n) {
                                    if (t.alphaChannel = n, e)throw e;
                                    if (2 == ++s)return t.finalize()
                                })
                            }
                        }(this))
                    }, t.prototype.loadIndexedAlphaChannel = function (t) {
                        var n;
                        return n = this.image.transparency.indexed, this.image.decodePixels(function (t) {
                            return function (r) {
                                var i, a, s, u, l;
                                for (i = new e(t.width * t.height), a = 0, s = u = 0, l = r.length; u < l; s = u += 1)i[a++] = n[r[s]];
                                return o.deflate(i, function (e, n) {
                                    if (t.alphaChannel = n, e)throw e;
                                    return t.finalize()
                                })
                            }
                        }(this))
                    }, t
                }(), t.exports = i
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e, n) {
        (function (e) {
            (function () {
                var r, i;
                r = n(56), i = n(59), t.exports = function () {
                    function t(t) {
                        var n, r, i, o, a, s, u, l, c, f;
                        for (this.data = t, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.text = {}; ;) {
                            switch (n = this.readUInt32(), function () {
                                var t, e;
                                for (e = [], i = t = 0; t < 4; i = ++t)e.push(String.fromCharCode(this.data[this.pos++]));
                                return e
                            }.call(this).join("")) {
                                case"IHDR":
                                    this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
                                    break;
                                case"PLTE":
                                    this.palette = this.read(n);
                                    break;
                                case"IDAT":
                                    for (i = l = 0; l < n; i = l += 1)this.imgData.push(this.data[this.pos++]);
                                    break;
                                case"tRNS":
                                    switch (this.transparency = {}, this.colorType) {
                                        case 3:
                                            if (this.transparency.indexed = this.read(n), (s = 255 - this.transparency.indexed.length) > 0)for (i = c = 0; 0 <= s ? c < s : c > s; i = 0 <= s ? ++c : --c)this.transparency.indexed.push(255);
                                            break;
                                        case 0:
                                            this.transparency.grayscale = this.read(n)[0];
                                            break;
                                        case 2:
                                            this.transparency.rgb = this.read(n)
                                    }
                                    break;
                                case"tEXt":
                                    u = this.read(n), o = u.indexOf(0), a = String.fromCharCode.apply(String, u.slice(0, o)), this.text[a] = String.fromCharCode.apply(String, u.slice(o + 1));
                                    break;
                                case"IEND":
                                    return this.colors = function () {
                                        switch (this.colorType) {
                                            case 0:
                                            case 3:
                                            case 4:
                                                return 1;
                                            case 2:
                                            case 6:
                                                return 3
                                        }
                                    }.call(this), this.hasAlphaChannel = 4 === (f = this.colorType) || 6 === f, r = this.colors + (this.hasAlphaChannel ? 1 : 0), this.pixelBitlength = this.bits * r, this.colorSpace = function () {
                                        switch (this.colors) {
                                            case 1:
                                                return "DeviceGray";
                                            case 3:
                                                return "DeviceRGB"
                                        }
                                    }.call(this), void(this.imgData = new e(this.imgData));
                                default:
                                    this.pos += n
                            }
                            if (this.pos += 4, this.pos > this.data.length)throw new Error("Incomplete or corrupt PNG file")
                        }
                    }

                    return t.decode = function (e, n) {
                        return r.readFile(e, function (e, r) {
                            var i;
                            return i = new t(r), i.decode(function (t) {
                                return n(t)
                            })
                        })
                    }, t.load = function (e) {
                        var n;
                        return n = r.readFileSync(e), new t(n)
                    }, t.prototype.read = function (t) {
                        var e, n;
                        for (n = [], e = 0; 0 <= t ? e < t : e > t; 0 <= t ? ++e : --e)n.push(this.data[this.pos++]);
                        return n
                    }, t.prototype.readUInt32 = function () {
                        var t, e, n, r;
                        return t = this.data[this.pos++] << 24, e = this.data[this.pos++] << 16, n = this.data[this.pos++] << 8, r = this.data[this.pos++], t | e | n | r
                    }, t.prototype.readUInt16 = function () {
                        var t, e;
                        return t = this.data[this.pos++] << 8, e = this.data[this.pos++], t | e
                    }, t.prototype.decodePixels = function (t) {
                        var n = this;
                        return i.inflate(this.imgData, function (r, i) {
                            var o, a, s, u, l, c, f, h, p, d, g, y, v, b, m, w, x, _, k, S, C, A, P;
                            if (r)throw r;
                            for (y = n.pixelBitlength / 8, w = y * n.width, v = new e(w * n.height), c = i.length, m = 0, b = 0, a = 0; b < c;) {
                                switch (i[b++]) {
                                    case 0:
                                        for (u = k = 0; k < w; u = k += 1)v[a++] = i[b++];
                                        break;
                                    case 1:
                                        for (u = S = 0; S < w; u = S += 1)o = i[b++], l = u < y ? 0 : v[a - y], v[a++] = (o + l) % 256;
                                        break;
                                    case 2:
                                        for (u = C = 0; C < w; u = C += 1)o = i[b++], s = (u - u % y) / y, x = m && v[(m - 1) * w + s * y + u % y], v[a++] = (x + o) % 256;
                                        break;
                                    case 3:
                                        for (u = A = 0; A < w; u = A += 1)o = i[b++], s = (u - u % y) / y, l = u < y ? 0 : v[a - y], x = m && v[(m - 1) * w + s * y + u % y], v[a++] = (o + Math.floor((l + x) / 2)) % 256;
                                        break;
                                    case 4:
                                        for (u = P = 0; P < w; u = P += 1)o = i[b++], s = (u - u % y) / y, l = u < y ? 0 : v[a - y], 0 === m ? x = _ = 0 : (x = v[(m - 1) * w + s * y + u % y], _ = s && v[(m - 1) * w + (s - 1) * y + u % y]), f = l + x - _, h = Math.abs(f - l), d = Math.abs(f - x), g = Math.abs(f - _), p = h <= d && h <= g ? l : d <= g ? x : _, v[a++] = (o + p) % 256;
                                        break;
                                    default:
                                        throw new Error("Invalid filter algorithm: " + i[b - 1])
                                }
                                m++
                            }
                            return t(v)
                        })
                    }, t.prototype.decodePalette = function () {
                        var t, n, r, i, o, a, s, u, l;
                        for (r = this.palette, a = this.transparency.indexed || [], o = new e(a.length + r.length), i = 0, r.length, t = 0, n = s = 0, u = r.length; s < u; n = s += 3)o[i++] = r[n], o[i++] = r[n + 1], o[i++] = r[n + 2], o[i++] = null != (l = a[t++]) ? l : 255;
                        return o
                    }, t.prototype.copyToImageData = function (t, e) {
                        var n, r, i, o, a, s, u, l, c, f, h;
                        if (r = this.colors, c = null, n = this.hasAlphaChannel, this.palette.length && (c = null != (h = this._decodedPalette) ? h : this._decodedPalette = this.decodePalette(), r = 4, n = !0), i = (null != t ? t.data : void 0) || t, l = i.length, a = c || e, o = s = 0, 1 === r)for (; o < l;)u = c ? 4 * e[o / 4] : s, f = a[u++], i[o++] = f, i[o++] = f, i[o++] = f, i[o++] = n ? a[u++] : 255, s = u; else for (; o < l;)u = c ? 4 * e[o / 4] : s, i[o++] = a[u++], i[o++] = a[u++], i[o++] = a[u++], i[o++] = n ? a[u++] : 255, s = u
                    }, t.prototype.decode = function (t) {
                        var n, r = this;
                        return n = new e(this.width * this.height * 4), this.decodePixels(function (e) {
                            return r.copyToImageData(n, e), t(n)
                        })
                    }, t
                }()
            }).call(this)
        }).call(e, n(2).Buffer)
    }, function (t, e) {
        (function () {
            t.exports = {
                annotate: function (t, e, n, r, i) {
                    var o, a, s;
                    i.Type = "Annot", i.Rect = this._convertRect(t, e, n, r), i.Border = [0, 0, 0], "Link" !== i.Subtype && null == i.C && (i.C = this._normalizeColor(i.color || [0, 0, 0])), delete i.color, "string" == typeof i.Dest && (i.Dest = new String(i.Dest));
                    for (o in i)s = i[o], i[o[0].toUpperCase() + o.slice(1)] = s;
                    return a = this.ref(i), this.page.annotations.push(a), a.end(), this
                }, note: function (t, e, n, r, i, o) {
                    return null == o && (o = {}), o.Subtype = "Text", o.Contents = new String(i), o.Name = "Comment", null == o.color && (o.color = [243, 223, 92]), this.annotate(t, e, n, r, o)
                }, link: function (t, e, n, r, i, o) {
                    return null == o && (o = {}), o.Subtype = "Link", o.A = this.ref({
                        S: "URI",
                        URI: new String(i)
                    }), o.A.end(), this.annotate(t, e, n, r, o)
                }, _markup: function (t, e, n, r, i) {
                    var o, a, s, u, l;
                    return null == i && (i = {}), o = this._convertRect(t, e, n, r), a = o[0], u = o[1], s = o[2], l = o[3], i.QuadPoints = [a, l, s, l, a, u, s, u], i.Contents = new String, this.annotate(t, e, n, r, i)
                }, highlight: function (t, e, n, r, i) {
                    return null == i && (i = {}), i.Subtype = "Highlight", null == i.color && (i.color = [241, 238, 148]), this._markup(t, e, n, r, i)
                }, underline: function (t, e, n, r, i) {
                    return null == i && (i = {}), i.Subtype = "Underline", this._markup(t, e, n, r, i)
                }, strike: function (t, e, n, r, i) {
                    return null == i && (i = {}), i.Subtype = "StrikeOut", this._markup(t, e, n, r, i)
                }, lineAnnotation: function (t, e, n, r, i) {
                    return null == i && (i = {}), i.Subtype = "Line", i.Contents = new String, i.L = [t, this.page.height - e, n, this.page.height - r], this.annotate(t, e, n, r, i)
                }, rectAnnotation: function (t, e, n, r, i) {
                    return null == i && (i = {}), i.Subtype = "Square", i.Contents = new String, this.annotate(t, e, n, r, i)
                }, ellipseAnnotation: function (t, e, n, r, i) {
                    return null == i && (i = {}), i.Subtype = "Circle", i.Contents = new String, this.annotate(t, e, n, r, i)
                }, textAnnotation: function (t, e, n, r, i, o) {
                    return null == o && (o = {}), o.Subtype = "FreeText", o.Contents = new String(i), o.DA = new String, this.annotate(t, e, n, r, o)
                }, _convertRect: function (t, e, n, r) {
                    var i, o, a, s, u, l, c, f, h;
                    return h = e, e += r, f = t + n, c = this._ctm, i = c[0], o = c[1], a = c[2], s = c[3], u = c[4], l = c[5], t = i * t + a * e + u, e = o * t + s * e + l, f = i * f + a * h + u, h = o * f + s * h + l, [t, e, f, h]
                }
            }
        }).call(this)
    }, function (t, e) {
        "use strict";
        t.exports = {
            "4A0": [4767.87, 6740.79],
            "2A0": [3370.39, 4767.87],
            A0: [2383.94, 3370.39],
            A1: [1683.78, 2383.94],
            A2: [1190.55, 1683.78],
            A3: [841.89, 1190.55],
            A4: [595.28, 841.89],
            A5: [419.53, 595.28],
            A6: [297.64, 419.53],
            A7: [209.76, 297.64],
            A8: [147.4, 209.76],
            A9: [104.88, 147.4],
            A10: [73.7, 104.88],
            B0: [2834.65, 4008.19],
            B1: [2004.09, 2834.65],
            B2: [1417.32, 2004.09],
            B3: [1000.63, 1417.32],
            B4: [708.66, 1000.63],
            B5: [498.9, 708.66],
            B6: [354.33, 498.9],
            B7: [249.45, 354.33],
            B8: [175.75, 249.45],
            B9: [124.72, 175.75],
            B10: [87.87, 124.72],
            C0: [2599.37, 3676.54],
            C1: [1836.85, 2599.37],
            C2: [1298.27, 1836.85],
            C3: [918.43, 1298.27],
            C4: [649.13, 918.43],
            C5: [459.21, 649.13],
            C6: [323.15, 459.21],
            C7: [229.61, 323.15],
            C8: [161.57, 229.61],
            C9: [113.39, 161.57],
            C10: [79.37, 113.39],
            RA0: [2437.8, 3458.27],
            RA1: [1729.13, 2437.8],
            RA2: [1218.9, 1729.13],
            RA3: [864.57, 1218.9],
            RA4: [609.45, 864.57],
            SRA0: [2551.18, 3628.35],
            SRA1: [1814.17, 2551.18],
            SRA2: [1275.59, 1814.17],
            SRA3: [907.09, 1275.59],
            SRA4: [637.8, 907.09],
            EXECUTIVE: [521.86, 756],
            FOLIO: [612, 936],
            LEGAL: [612, 1008],
            LETTER: [612, 792],
            TABLOID: [792, 1224]
        }
    }, function (t, e, n) {
        (function (e) {
            "use strict";
            function r(t, e) {
                this.pdfKitDoc = t, this.imageDictionary = e || {}
            }

            var i = n(291);
            r.prototype.measureImage = function (t) {
                var n, r, o = this;
                if (this.pdfKitDoc._imageRegistry[t])n = this.pdfKitDoc._imageRegistry[t]; else {
                    r = "I" + ++this.pdfKitDoc._imageCount;
                    try {
                        n = i.open(function (t) {
                            var n = o.imageDictionary[t];
                            if (!n)return t;
                            var r = n.indexOf("base64,");
                            return r < 0 ? o.imageDictionary[t] : new e(n.substring(r + 7), "base64")
                        }(t), r)
                    } catch (t) {
                        n = null
                    }
                    if (null === n || void 0 === n)throw"invalid image, images dictionary should contain dataURL entries (or local file paths in node.js)";
                    n.embed(this.pdfKitDoc), this.pdfKitDoc._imageRegistry[t] = n
                }
                return {width: n.width, height: n.height}
            }, t.exports = r
        }).call(e, n(2).Buffer)
    }, function (t, e) {
        "use strict";
        function n(t) {
            for (var e = [], n = null, r = 0, i = t.inlines.length; r < i; r++) {
                var o = t.inlines[r], a = o.decoration;
                if (a) {
                    var s = o.decorationColor || o.color || "black", u = o.decorationStyle || "solid";
                    a = Array.isArray(a) ? a : [a];
                    for (var l = 0, c = a.length; l < c; l++) {
                        var f = a[l];
                        n && f === n.decoration && u === n.decorationStyle && s === n.decorationColor && "lineThrough" !== f ? n.inlines.push(o) : (n = {
                            line: t,
                            decoration: f,
                            decorationColor: s,
                            decorationStyle: u,
                            inlines: [o]
                        }, e.push(n))
                    }
                } else n = null
            }
            return e
        }

        function r(t, e, n, r) {
            var i = t.inlines[0], o = function () {
                for (var e = 0, n = 0, r = t.inlines.length; n < r; n++) {
                    e = t.inlines[n].fontSize > e ? n : e
                }
                return t.inlines[e]
            }(), a = function () {
                for (var e = 0, n = 0, r = t.inlines.length; n < r; n++)e += t.inlines[n].width;
                return e
            }(), s = t.line.getAscenderHeight(), u = o.font.ascender / 1e3 * o.fontSize, l = o.height, c = l - u, f = .5 + .12 * Math.floor(Math.max(o.fontSize - 8, 0) / 2);
            switch (t.decoration) {
                case"underline":
                    n += s + .45 * c;
                    break;
                case"overline":
                    n += s - .85 * u;
                    break;
                case"lineThrough":
                    n += s - .25 * u;
                    break;
                default:
                    throw"Unkown decoration : " + t.decoration
            }
            if (r.save(), "double" === t.decorationStyle) {
                var h = Math.max(.5, 2 * f);
                r.fillColor(t.decorationColor).rect(e + i.x, n - f / 2, a, f / 2).fill().rect(e + i.x, n + h - f / 2, a, f / 2).fill()
            } else if ("dashed" === t.decorationStyle) {
                var p = Math.ceil(a / 6.8), d = e + i.x;
                r.rect(d, n, a, f).clip(), r.fillColor(t.decorationColor);
                for (var g = 0; g < p; g++)r.rect(d, n - f / 2, 3.96, f).fill(), d += 6.8
            } else if ("dotted" === t.decorationStyle) {
                var y = Math.ceil(a / (3 * f)), v = e + i.x;
                r.rect(v, n, a, f).clip(), r.fillColor(t.decorationColor);
                for (var b = 0; b < y; b++)r.rect(v, n - f / 2, f, f).fill(), v += 3 * f
            } else if ("wavy" === t.decorationStyle) {
                var m = Math.ceil(a / 1.4) + 1, w = e + i.x - 1;
                r.rect(e + i.x, n - 1, a, n + 1).clip(), r.lineWidth(.24), r.moveTo(w, n);
                for (var x = 0; x < m; x++)r.bezierCurveTo(w + .7, n - 1, w + 1.4, n - 1, w + .7 * 3, n).bezierCurveTo(w + 2.8, n + 1, w + 3.5, n + 1, w + .7 * 6, n), w += .7 * 6;
                r.stroke(t.decorationColor)
            } else r.fillColor(t.decorationColor).rect(e + i.x, n - f / 2, a, f).fill();
            r.restore()
        }

        function i(t, e, i, o) {
            for (var a = n(t), s = 0, u = a.length; s < u; s++)r(a[s], e, i, o)
        }

        function o(t, e, n, r) {
            for (var i = t.getHeight(), o = 0, a = t.inlines.length; o < a; o++) {
                var s = t.inlines[o];
                if (s.background) {
                    var u = s.justifyShift || 0;
                    r.fillColor(s.background).rect(e + s.x - u, n, s.width + u, i).fill()
                }
            }
        }

        t.exports = {drawBackground: o, drawDecorations: i}
    }, function (t, e, n) {
        var r, i = i || function (t) {
                "use strict";
                if (!(void 0 === t || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
                    var e = t.document, n = function () {
                        return t.URL || t.webkitURL || t
                    }, r = e ? e.createElementNS("http://www.w3.org/1999/xhtml", "a") : [], i = "download" in r, o = function (t) {
                        var e = new MouseEvent("click");
                        t.dispatchEvent(e)
                    }, a = /constructor/i.test(t.HTMLElement) || t.safari, s = /CriOS\/[\d]+/.test(navigator.userAgent), u = function (e) {
                        (t.setImmediate || t.setTimeout)(function () {
                            throw e
                        }, 0)
                    }, l = function (t) {
                        var e = function () {
                            "string" == typeof t ? n().revokeObjectURL(t) : t.remove()
                        };
                        setTimeout(e, 4e4)
                    }, c = function (t, e, n) {
                        e = [].concat(e);
                        for (var r = e.length; r--;) {
                            var i = t["on" + e[r]];
                            if ("function" == typeof i)try {
                                i.call(t, n || t)
                            } catch (t) {
                                u(t)
                            }
                        }
                    }, f = function (t) {
                        return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type) ? new Blob([String.fromCharCode(65279), t], {type: t.type}) : t
                    }, h = function (e, u, h) {
                        h || (e = f(e));
                        var p, d = this, g = e.type, y = "application/octet-stream" === g, v = function () {
                            c(d, "writestart progress write writeend".split(" "))
                        };
                        if (d.readyState = d.INIT, i)return p = n().createObjectURL(e), void setTimeout(function () {
                            r.href = p, r.download = u, o(r), v(), l(p), d.readyState = d.DONE
                        });
                        !function () {
                            if ((s || y && a) && t.FileReader) {
                                var r = new FileReader;
                                return r.onloadend = function () {
                                    var e = s ? r.result : r.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                                    t.open(e, "_blank") || (t.location.href = e), e = void 0, d.readyState = d.DONE, v()
                                }, r.readAsDataURL(e), void(d.readyState = d.INIT)
                            }
                            if (p || (p = n().createObjectURL(e)), y)t.location.href = p; else {
                                t.open(p, "_blank") || (t.location.href = p)
                            }
                            d.readyState = d.DONE, v(), l(p)
                        }()
                    }, p = h.prototype, d = function (t, e, n) {
                        return new h(t, e || t.name || "download", n)
                    };
                    return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function (t, e, n) {
                        return e = e || t.name || "download", n || (t = f(t)), navigator.msSaveOrOpenBlob(t, e)
                    } : (p.abort = function () {
                    }, p.readyState = p.INIT = 0, p.WRITING = 1, p.DONE = 2, p.error = p.onwritestart = p.onprogress = p.onwrite = p.onabort = p.onerror = p.onwriteend = null, d)
                }
            }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);
        void 0 !== t && t.exports ? t.exports.saveAs = i : null !== n(301) && null !== n(302) && void 0 !== (r = function () {
            return i
        }.call(e, n, e, t)) && (t.exports = r)
    }, function (t, e) {
        t.exports = function () {
            throw new Error("define cannot be used indirect")
        }
    }, function (t, e) {
        (function (e) {
            t.exports = e
        }).call(e, {})
    }])
});
//# sourceMappingURL=pdfmake.min.js.map


this.pdfMake = this.pdfMake || {};
this.pdfMake.vfs = {
    "consola.ttf": "",
    "consolab.ttf": "AAEAAAATAQAABAAwRFNJRwou4HYABYYoAAAa3EdERUaj/qyvAATuAAAAA3ZHUE9T07GcwAAE8XgAAGqiR1NVQmPMiMEABVwcAAAqAE1FUkcAFgABAAWGHAAAAAxPUy8ySoLaBQAAAbgAAABgY21hcJ9NyUsAACwUAAAmXmN2dCAu+Qi2AABr3AAABQ5mcGdtIKQmwAAAUnQAAAkQZ2FzcAAYACMABO3wAAAAEGdseWa0wQK2AACbsAAEQIpoZWFk7DuW+AAAATwAAAA2aGhlYQkdCvcAAAF0AAAAJGhtdHhDNSrIAAACGAAAKfxsb2NhFgEI6AAAcOwAACrEbWF4cBTcEjsAAAGYAAAAIG5hbWUkc47XAATcPAAAEZRwb3N0/yoAwwAE7dAAAAAgcHJlcCnEdk8AAFuEAAAQWAABAAAABVcKkneMh18PPPUACQgAAAAAALvjGygAAAAAz2raZ/wx/aEFmgfAAAEACAACAAEAAAAAAAEAAAXx/fEBXgRm/DH+UQWaAAEAAAAAAAAAAAAAAAAAAApOAAEAAAqwATsATgB2AAcAAgAQAC8AYAAACWMQWAADAAEAAwRmArwABQAIBZkFMwAAAR4FmQUzAAAD0ADCAgAICQILBwkCAgQDAgThAAL/QAD8/wAAAAkAAAAATVMgIAAgAAD+/wXx/fEBXgdcAgJgAAGf39cAAAP4BRsAAAAgAAMEZgBOBGYAAAAAAAAEZgAABGYABARmAIEEZgBSBGYAVgRmALgEZgC4BGYALwRmAF8EZgCWBGYArARmAIEEZgDFBGYALQRmAF4EZgAlBGYAhwRmACUEZgCBBGYAYgRmAE8EZgBXBGYAAARmACEEZgAIBGYACgRmAGgEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAEBGb/1wRm/9cEZgApBGYAPQRmAD0EZgA9BGYAUgRm/9kEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAuARmAC8EZgAvBGYALwRmAC8EZgAABGYAFARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAlgRmAGAEZgAABGYAgQRmAAAEZv8MBGYAxQRmACMEZgCeBGYAAARmAAAEZgAABGYAXgRmAF4EZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmACUEZv81BGYAGwRmAIcEZv/ZBGb/2QRmAIEEZgAABGYAAARmAAAEZgBiBGYAYgRmAAAEZgBPBGYATwRmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAFcEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAG0EZgCLBGYAhQRmAEwEZgBmBGYAAARmAEwEZgCLBGYAkQRmAHcEZgCVBGYAkQRmADsEZgCLBGYASARmAIsEZgBMBGYAtARmAJwEZgA7BGYAiQRmABcEZgAIBGYAIQRmABcEZgCWBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAbQRmABIEZgAABGYAKQRmACkEZgApBGYAKQRmAIUEZgAUBGYATARmAEwEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAGYEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmABQEZgAUBGYAAARmABQEZgAUBGYAFARmABQEZgCRBGYAkQRmAGgEZgB3BGYAEQRmAJUEZgCWBGYAAARm/3sEZgCRBGYAkQRmAFUEZgAABGYAAARmAAAEZgCLBGYAAARmAIsEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAEgEZv/FBGYAHQRmAIsEZgAABGYAAARmALQEZgAABGYAAARmAAAEZgCcBGYAnARmAIsEZgEGBGb/ZARmADsEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAiQRmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYASARmAEgEZgB7BGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAHsEZgB7BGYAeQRmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgB5BGYAeQRmADcEZgA3BGYAAARmARcEZgBSBGb/BwRmARcEZgBCBGYAyARmAHkEZgBSBGb/nQRmAHkEZgB5BGb/+ARmAFQEZgAABGYAAARmAFQEZgCgBGYAAARmAAAEZgCgBGYAUgRmAAAEZgAABGYAUgRmAB8EZgAh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BGb/nQRm/88EZgBDBGb/uwRmAEMEZgAKBGYAAARmAG0EZgBtBGYAbQRm/7QEZgBtBGYAbQRmAAAEZgBtBGYAbQRmAG0EZgBtBGYAAARmAGYEZgBmBGYAAARmAGYEZv+0BGYAZgRmAGYEZgAABGYAkQRmAJEEZgBIBGYASARmAEgEZv+0BGYASARmAEgEZgAABGYANARm/+0EZgAABGYANARmAAAEZgA0BGYAiQRmAIkEZgBrBGb/mgRm/+gEZgBrBGb/wARmAGsEZgAXBGYACgRmABcEZgAABGYATARmADgEZgAABGYAAARmAAAEZgAABGYAAARmAPMEZgCwBGYATQRmAEwEZgAyBGYAiQRmAGIEZgCFBGYBwwRmAHsEZgAuBGYATgRmAA4EZgBkBGYAHwRmACEEZgAkBGYAKQRmAKgEZgAUBGYAPgRmACsEZgBpBGYBCARmAAAEZgASBGYAAARmAAAEZgAABGYAAARmAREEZgDLBGYAywRmAPsEZgD7BGYAMgRmADIEZgCoBGYAqARmAKgEZgCoBGYAFARmABQEZgAKBGYAMgRmADIEZgAABGYAAARmAAAEZgIzBGYAAARmAAAEZgAABGYAAARmAegEZgAABGYAAARmAegEZgAABGYAAARmAegEZgAABGYAAARmAegEZgAABGYAAARmAAAEZgHoBGYAAARmAAAEZgHoBGYAAARmAAAEZgHoBGYBUgRmAAAEZgAABGYBUgRmAAAEZgAABGYBUgRmAAAEZgAABGYBUgRmAAAEZgAABGYAAARmAVIEZgAABGYAAARmAVIEZgAABGYAAARmAVIEZgAyBGYAXgRmAF4EZgBeBGYATwRmADsEZgCRBGYA9ARmATwEZgEhBGYBIwRmAVsEZgFbBGYBDQRmASgEZgFIBGYBVARmATwEZgFiBGYA/ARmASgEZgEHBGYBPwRmAQcEZgE8BGYBKgRmAR8EZgEkBGYA8gRmAPwEZgD3BGYA8wRmAS0EZgAABGYAAARmAAAEZgAABGYAAARmAAAEZv/zBGb/nQRmAK8EZgCvBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAWAEZgFgBGYBdgRmAXYEZv/5BGYBYARmAWAEZgFgBGYBYARmAWYEZgFmBGYA2QRmAUMEZgHaBGYA8QRmAPEEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYA0gRmANIEZgCFBGYAhQRmAAAEZgAABGb/kgRm/5IEZv/5BGYA8QRmAW0EZgDzBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgF2BGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYARgRmAXoEZgAABGYAAARmAAAEZgAABGYAAARmAK8EZgCvBGYAAARmAacEZgGnBGYA4gRmAAAEZgAABGYAAARmAAAEZgF+BGYA3gRmAAAEZgAABGYAAwRmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAYEZgE1BGYBNQRmATMEZgEzBGYBZgRmAWYEZgFHBGYBRwRmAWkEZgFpBGYBUwRmAVMEZgE9BGYBPQRmAU0EZgFNBGYBGgRmARoEZgFLBGYBSwRmATwEZgE8BGYBDgRmAQ4EZgESBGYBEgRmAJ0EZgCdBGYAnQRmAJ0EZgHQBGYAAARmAG4EZgBuBGYAbgRmAG4EZgCZBGYAmQRmAJkEZgCZBGb/2gRm/9sEZv/aBGb/2gRmAUsEZgAABGYAAARmAOIEZv/aBGYAgQRmAAAEZgB6BGYAUgRmAAAEZv/aBGYATQRmAJsEZgAqBGYAagRm/6EEZgAvBGYAAARmAYQEZgCWBGYAgQRmADsEZv+UBGYAJQRmAFEEZv/aBGYAgQRmAGIEZgBmBGb/8QRmAE8EZgAjBGYAVwRmAAoEZgBoBGYAXARmAGoEZgA1BGYATQRmAE0EZgBOBGYATgRmADIEZgAyBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARm/9cEZgAvBGYAHgRm//IEZgAlBGYAAgRmAAAEZgBNBGYATQRmAAAEZgBVBGYAXwRmADIEZv+1BGYAAARm/7UEZgAABGb/tQRmAAAEZv+1BGYAAARm/7UEZgAABGb/tQRmAAAEZgBcBGYAAARmAIsEZgBeBGYAaARmAAAEZgC4BGYAAARmAAAEZgAABGYAAARmAAAEZv+SBGb/kgRmAAwEZv+SBGYBFQRmAAAEZgAABGYABARm/5IEZgCsBGYAOQRmAAAEZgAABGYABARmAAAEZgCBBGYAAARmAAAEZgAABGYAVgRmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAC8EZgAABGYAXwRmAAAEZgAkBGYAAARmAAAEZgAABGYAAARmAIEEZgAABGYAxQRmACgEZgAyBGYAMgRmAAAEZgAABGYALQRmAAAEZgBeBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAgQRmAAAEZgAABGYAAARmAGIEZgAABGYAAARmAAAEZgAABGYATwRmAAAEZgAABGYAVwRmAAAEZgAABGb//wRmAAAEZgAABGYAAARmAAAEZgAhBGYAAARmAAAEZgAABGYAAARmAGgEZgAABGb/3wRm/xkEZv+JBGYAgQRmAF8EZgCBBGYAaARmAHoEZgCqBGYAcwRmAAAEZgCLBGYACgRmAIUEZgBKBGYASARmADAEZgBXBGYAiwRmAJUEZgCRBGYAMgRmAHkEZgAOBGYAeQRmAE4EZgCLBGYAmwRmADsEZgA7BGYAFwRmAJYEZgB0BGYAgwRmAE0EZgAsBGYAKgRmADIEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAZgRmAAAEZgAABGYAAARm/+wEZgAABGYAMgRmAEgEZgAMBGYAAARmAAAEZgAABGYALARmAAIEZgA0BGb/8wRmAA4EZv/zBGYAAARm//MEZv/zBGb/8wRmAAAEZgAABGYAAARm//MEZgAABGb/8wRm//MEZv/zBGb/8wRmAAAEZgAABGYAAARmAAAEZv/zBGYAAARmAG4EZgAABGYATARmAF4EZgCWBGYAAARmAGYEZgAABGYAAARmAAAEZgAABGYAAARmALQEZgCLBGYAOwRmADIEZgAyBGYAAARmAJwEZgCWBGYBGQRmAAAEZgB3BGYANwRmAHcEZgA3BGYATARmABAEZgCJBGYAEARmAIcEZgAABGYAHARmAHsEZgDhBGYBwwRmAPsEZgDRBGYBmARmAG0EZgBkBGYAiwRmAAAEZgAABGb/nQRmAEwEZgAABGYAAARmAAAEZgAABGYAAARmACgEZgAlBGYAAARmAAAEZgBIBGYASARmAAAEZgBhBGYAiwRmAAAEZgBRBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAlQRmAAAEZgCRBGYBFwRmAHkEZv/kBGb/YgRm/+QEZgAZBGYAGQRmAHkEZgAWBGYAPgRmAHkEZgAABGYAAARmADsEZgAABGYAiwRmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAJQEZgBUBGYAggRmAFIEZgAABGYAAARmAAAEZgAABGb/AARm/3cEZv7sBGYAAARmAAAEZgCcBGYAAARmAAAEZgAABGb/nARmADsEZgAABGYAAARmAIkEZgAABGYAAARmAAAEZgAABGYAAARmABcEZgAABGYACARmAAAEZgAABGYAAARmAAAEZgCWBGYAAARmAAAEZgAABGYAAARmAAAEZgAZBGYAUARmAJEEZgAzBGYAeQRmAAAEZgAABGYAiwRmAJUEZgCWBGYASARmAKUEZgCxBGYAtgRmABkEZgCLBGYATARmAIsEZgCLBGYApQRmAIUEZgBMBGYATARmAGYEZgBmBGYAPgRmAGQEZgBpBGYAaQRmAFUEZgB3BGYATARmAEwEZgCFBGYAHARmAGYEZgCJBGYAiwRmAIsEZgCRBGYAewRmAHkEZgCRBGYAewRmAHkEZgB7BGYAmwRmABcEZgAUBGYAlwRmAAAEZgA7BGYAOwRmADsEZv+hBGYAiwRmAHIEZgBIBGYAXARmADIEZgAZBGYAUgRmAFIEZgBSBGYAtARmALQEZgC0BGYAWARmALQEZgC0BGYAnARmAHsEZgB7BGYAewRmAAYEZgCVBGYAOwRmAAAEZgAvBGYAewRmABYEZgAtBGYAFwRmADIEZgCWBGYAbgRmAG4EZgBLBGYBFQRmAJcEZgEVBGYAhQRmACUEZgCfBGYAVQRmAIUEZgCLBGYAIwRmACcEZgDvBGYATARmAIMEZgCXBGYALARmACwEZgAsBGYAGQRmABkEZgAABGYADARmABkEZgAqBGYAkwRmAJUEZv+RBGb/kQRmACQEZgAEBGYAHwRmADMEZgCFBGYAlARmADQEZgC5BGYAjARmAJUEZgDcBGYAqQRmAGAEZgAtBGYAfgRmAEgEZgCLBGYAIARmACcEZgAABGYAFQRmAHQEZgArBGYAKwRmAKkEZgBCBGYArARmAGEEZgB/BGYAQgRmABkEZgBLBGYAIgRmAA4EZgCWBGYAbgRmAJkEZgBGBGYAzARmABEEZgCGBGYAuQRmAFIEZv/5BGYAuARmAHkEZgEPBGYAqARmARAEZgEsBGYBKgRmANIEZgD1BGYBIARmAQ0EZgELBGYBTgRmAMUEZgD7BGYA/QRmAMwEZgDyBGYBHQRmARMEZgDpBGYA9wRmAMMEZgETBGYBEwRmAQMEZgC5BGYBFARmAQMEZgD/BGYA/wRmAQ0EZgEIBGYA8gRmARkEZgEqBGYAwQRmARkEZgD5BGYBJQRmAOoEZgDqBGYBFARmAOgEZgEZBGYA8ARmAMsEZgDaBGYA7gRmAQYEZgDoBGYA8gRmAMcEZgDABGYBGARmATQEZgEZBGYA2gRmAQYEZgDoBGYBFARmAMcEZgDABGYAQQRm/tUEZgBMBGb/wgRm/7MEZv+zBGb+ygRm/xEEZv7zBGYAEQRm/6cEZgCPBGYATARmAO8EZgBMBGb/kgRmAJEEZgB7BGb/lgRmAAoEZgAKBGYAiwRmAEwEZgAABGYAFgRmAJUEZgCRBGYAHgRmAIsEZgCLBGYAtARmAJwEZgB7BGYAFwRmACEEZgCWBGYAbQRmAEwEZgBMBGYAZgRmAGoEZgBpBGYAZgRmAJEEZgClBGYAewRmAIkEZgBuBGYBCwRmAREEZgEEBGYBAARmAQgEZgDzBGYA8wRmAPIEZgEeBGYBGwRmAQsEZgEjBGYBIwRmAOsEZgEhBGYBAgRmAUgEZgDBBGYAwQRmAJIEZgEiBGYBCARmAPoEZgDaBGYBMARmAQ0EZgDqBGYAwgRmAOcEZgEGBGYBBgRmAMoEZgEgBGYBIARmARgEZgEsBGYA8gRmAP4EZgD+BGYBDwRmAP4EZgEBBGYBAARmAP4EZgCSBGYAwQRmAAAEZv8HBGYBdQRmANMEZgAABGYAAARmAAAEZgE6BGYBOgRmAGYEZgDDBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYBrgRmAa4EZv/5BGb/+QRmAWAEZgFgBGYBYARmAWAEZgFYBGYAAARmALwEZgEkBGYBKQRmAO0EZgAABGYBQQRmAUEEZgFBBGYBQQRmAUEEZgCWBGYAlgRmAJYEZgCWBGYAQwRmAEMEZgBDBGYAQwRmAEMEZgBDBGYAQwRmAC8EZgAvBGYALwRmAC8EZgAvBGYALwRmACUEZgAlBGYAJQRmACUEZgAlBGYAGgRmABoEZgAaBGYAGgRmABoEZgAaBGYAQgRmAEIEZgBCBGYAQgRmAEIEZgBCBGYAlgRmAJYEZgCWBGYAlgRmAEIEZgBCBGYAQgRmAEIEZgBCBGYAQgRmAEIEZgAvBGYALwRmAC8EZgAvBGYALwRmAC8EZgAvBGYALwRmAC8EZgAvBGYALwRmACYEZgAmBGYAJgRmACYEZgAmBGYAJgRmAEIEZgBCBGYAQgRmAEIEZgBCBGYAQgRmAJYEZgCWBGYAlgRmAJYEZgBCBGYAQgRmAEIEZgBCBGYAQgRmAEIEZgAmBGYAJgRmACYEZgAmBGYAJgRmACYEZgAjBGYAIwRmACMEZgAjBGYAIwRmACMEZgAvBGYALwRmAC8EZgAvBGYALwRmAC8EZgBLBGYASwRmAEsEZgBLBGYASwRmAEsEZgCWBGYAlgRmAJYEZgCWBGYAQgRmAEIEZgBCBGYAQgRmAEIEZgBCBGYAGgRmABoEZgAaBGYAGgRmABoEZgAaBGYAJARmACQEZgAkBGYAJARmACQEZgAkBGYALwRmAC8EZgAvBGYALwRmAC8EZgAvBGYATgRmAE4EZgBOBGYATgRmAE4EZgBOBGYAlgRmAJYEZgCWBGYAlgRmAUAEZgFABGYAAARmAAAEZgA3BGYBZARmAWQEZgGnBGYBpwRmAW4EZgAABGb//gRmAAAEZgAABGYBfwRmAXYEZgF2BGYBdgRmAXYEZgAeBGYAHgRmAUgEZgEyBGYAAARmAAAEZgAABGYAPARmADwEZgETBGYA/wRmAPkEZgDsBGYA/wRmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAUEZgAFBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYBZgRmAWYEZgAlBGYAUgRmAHoEZgBSBGYAegRmAC8EZvzXBGYAAARmALgEZgAgBGYARgRmAEYEZgBGBGYAXARmAIcEZgBSBGYAhQRmAJwEZgAABGYABgRm/7kEZgCJBGYAAARmAIUEZgClBGYAbwRm/5YEZgAvBGYAuARmAEgEZgBGBGYAZARmADsEZgCFBGYAdwRm/6EEZgAGBGb+TgRm/ZMEZv1oBGb+TgRm/k4EZv2TBGb9ZwRm/k4EZv4eBGb+GwRmAAAEZgAABGYABARm/k4EZv2aBGb9aARm/k4EZv5OBGb9kwRm/WcEZv5OBGb9wARm/OQEZvzxBGb9xARm/OMEZvzwBGb9cARm/ZgEZv1oBGb8jQRm/JcEZv1tBGb9agRm/I0EZvyXBGb9bgRm/RgEZv1PBGYAXwRm/WgEZvyNBGb8lwRm/W0EZv1qBGb8jQRm/JcEZv1uBGb9lwRm/MgEZvzwBGb9nARm/ZoEZvzIBGb88ARm/Z0EZv1TBGb9pQRmAAAEZgAABGb9hgRm/REEZvyHBGb9iARm/REEZvyHBGb9rQRm/VkEZv2TBGb9KwRm/DEEZvygBGb9LwRm/MsEZv1NBGYAAARmAAAEZv2ZBGb9IgRm/JsEZv2eBGb9mwRm/SIEZvybBGb9ngRm/awEZv1PBGYAIwRm/ZkEZv0iBGb8mwRm/Z4EZv2bBGb9IgRm/JsEZv2eBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAC0EZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAnBGYAAARmAAAEZgAUBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGb/vQRmAAAEZgB5BGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAyBGb/xwRmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAFBGb//wRmADUEZv/KBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYADgRm/8wEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAUEZgAABGYAHwRm/9oEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmABkEZv/aBGYAAARmABkEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmABkEZv/IBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAUEZgAABGYAAARmAAAEZgAABGYBqARmAQsEZgBdBGYAAARmAIcEZgAABGYAgQRm//gEZgBcBGYAgQRmAIEEZgAQBGYAAARmAF8EZgBfBGYANQRmAC8EZgBSBGYATwRmAAoEZgAKBGYACARm//8EZgBQBGYAUARmAFwEZv/ABGb/wARmAJYEZv/4BGYAgQRmAAgEZgBfBGYAXwRmAFAEZgAtBGYAAARmAAAEZv/XBGYAAARmACoEZgAABGb/+ARm/+MEZgBcBGYAAARmAAAEZgAABGYAJQRmAAAEZv/JBGYAAARmAAAEZgAABGYAAARmAMUEZgAABGYAAARmAAgEZgAIBGYAOwRmACwEZgAuBGYALQRmAAEEZgBJBGYALwRmADEEZgBqBGYACARmAH4EZgAABGYAiwRmAAoEZgCHBGb/+gRmAGkEZgCWBGYAlgRmAAAEZgAABGYAfwRmAH8EZgBBBGYAXARmAIUEZgBVBGYAFARmABQEZgAhBGYAAARmAFAEZgBQBGYAfQRm/+MEZv/jBGb/+gRmAIIEZgAQBGYAfwRmAH8EZgBQBGYALQRmAJYEZgAABGYAAARmABIEZgAABGYAZgRmAAAEZv/6BGb/7QRmAG4EZgAABGYAAARmAAAEZgBIBGYAAARmAAQEZgAABGYAAARmAAAEZgAABGYAzQRmAAAEZgAKBGYAIQRmACEEZgBMBGYALARmAD4EZgBnBGYABQRmAFoEZgBnBGYALQRmAGoEZgAQBGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAABGYAAARmAAAEZgAAAAD/3AAA/yUEZgCFBGYAhQRmAOYEZgAABGYBdARmADkEZgAABGYAAARmAAAEZgAABGYAhQRmACEEZgBSBGYAUgRmAAEEZgAABGYAOwRmAAAEZgBTBGYAAARmAE8EZv/8BGYAGARmAAAEZgAvBGYAAARmABQEZgBSBGYAAARm/+0EZgAABGYAAARmAAAEZgAABGYAAARmAAMEZgAABGYAAARmADsEZgBUBGYAiwRmAGYEZgAUBGYARARmAFwEZgA7BGYAVARmAD8EZgCsBGYAPARmAFoEZgA8BGYArgRmAAAEZgAA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AlQCYQFxArcBXgJWAUkCuAKtAn8CgAE+AsABjwF9AVQCfgJiAXICpgKnAqgBZAAeAB8AIAAhACIAJQAoAC4AMgAzADQANgBBAEIAQwBFADAAVABXAFgAWQBaAFsCrgBfAG4AbwBwAHIAfQBiAO8AnQCeAJ8AoAChAKQApwCtALEAsgCzALUAwgDDAMQAxgCvANcA2wDcAN0A3gDfAq8A4wD0APUA9gD4AQMA5gEFACMAogAkAKMAJwCmACoAqQArAKoALQCsACwAqwAvAK4AMQCwADcAtgA4ALcAOQC4ADoAuQA1ALQAOwC8ADwAvQA9AL4APgC/AD8AwABAAMEARADFAEYAxwBHAMgASQDJAEgAygBKAMsASwDNAEwAzgDPAE0A0ABPANIATgDRAFEA1ABQANMAUgDVAFUA2ABTANYA2QBWANoAXADgAF0A4QBeAOIAYQDlAGMA5wBlAOkAZADoAGYA6gBnAOsAaQDtAGgA7AOdA54AawDxAG0A8wBxAPcAcwD5AHQA+gB1APsAdgD8AHcA/QB6AQAAfgEEAH8AgAEGAIIBCACBAQcA8AUPBFkEWgUQBFsFEQRcBF0FEgReBF8EYAUTBRQEYQRiBGMEZAJfBGUEZgUWBGcEaARpBRgFGQUcBGoEawUdBGwC9QMiBG0FHgRuBR8EbwRwBSAEcQV6BSEEcgUiBHMC/QMqBHQEdQR2BSMEdwUkBHgEeQUlBSYFewR6BScFfAUXBX0FfgV/BYAEewR8BSgEfQR+BSkEfwSABSoEgQUrBIIFLASDBS8EhAUwBIUFMQSGBTIEhwUzBIgFNAU1BIkFNgSKBTcEiwU4BIwFOQSNBToEjgU7BI8FPASQBT0EkQU+BT8EkgSTBUEElAVCBJUElgSXBUMAJgClACkAqABgAOQEmAVEBJkFRQSaBUYEmwVHBJwFSASdBUsEngVOBJ8FTwSgBVAEoQVUBKIFWASjBVkAagDuAGwA8gSkBVoEpQVbBKYFXASnBV0EqAVeBKkFXwSqBWAEqwVhBKwFYgStBWMErgVkBK8FZQVmBWcFaADMBWkFagSwBLEFawSyBLMFbAVtBLQFbgS1BLYEtwS4BW8EuQVwBLoFdAS7BXUEvAV5BfcF+AX5BfoF+wX8Bf0F/gX/BgAGAQYCBgMGBAYFBgYGBwYIBgkGCgYLBgwGDQYOBg8HHAcdBx4HHwcgByEHIgcjByQJ1QosBycHKAcpByoHKwcsBy0HLgcvBzAHMQFAAUIHMgFJBzMHNAc1BzYHNwc4BzkHOgc7BzwHPQc+Bz8HQAFLAVIBTQFVAUUBUAdBB0IHQwdEB0UHRgdHB0gHSQdKB0sHTAfZB9oH2wfcB90H3gffB+AH4QfiB+MH5AflB+YH5wfoB+kH6gfrB+wH7QfuCi0KLgovCjAKMQO6CjIKMwo0AsUKNQo2CjcDvAO+A8ADwgPEAVcDyAPKAUQDzAPNA84DzwPQCjgD0gPTA9QD1QPWA9cD2ALXA9kD2gFWCjkKOgPbA9wD3QPeA98D4APhA+ID4wPkA+UD5gPoA+oD7APuA/AD8QPyA/MD9AP2A/gD+gP8CAIIGAo7CCYD/gQABAEEAgQDBAUEBwQJBAoECwQMBA4EEAQSBBMEFAQVBBYEGAQaBBsEHAQeBB8EIQQjBCQEJgQoBCkEKwQtBC8EMQQzBDUENwQ5BDsEPQQ/BEEJNwhACEEIQgHdAdgB2gGoAdsBqQGqAasBrgGwAdIBkAGRAZIBkwGUAZUBlgGXAZgBmQGaAZsBnAGdAZ4BnwGgAaEBogGjAaQBpQGmAacBrAGvAc0BzgHPAdAB1QGxAbIBtAG1AbYBtwG4AbkBuwG8Ab0BvgG/AcABwQHCAcMBxQHEAcYBxwHIAcoBywHMAdEB1gHTAdQB1wg3CDoILQguCC8IQwg8CEwIMQhFCDUISQgwCEQIMghGCDQISAn1CfwJ9gn9CfcJ/gn4Cf8J+QoACfoKAQn7CgIIOwg9CD8ISggoCDgIOQg2CEsIKQgzCEcIPggqCCsILAIFAgYCAgIAAgMCBAIHAggCCQIMAg0CDgILAgoCDwIQAjkCOgI2AjQCNwI4AjsCPAI9AkACQQJCAj8CPgJDAkQKEAoeAhECRQoRCh8KEgogChMKIQoUCiIKFQojChYKJAoXCiUCEgJGAhMCRwoYCiYKGQonChoKKAobCikKHAoqCh0KKwoMCgMKBAoGCggKDgoPCTkJfQk6CX4JOwl/AgECNQk8CYAJPQmBCT4Jggk/CYMJQAmECUEJhQlCCYYJQwmHCUQJiAlFCYkJRgmKCUcJiwlICYwJSQmNCUoJjglLCY8JTAmQCU0JkQlOCZIJTwmTCVAJlAlRCZUJUgmWCVMJVAmXCVUJmAlWCZkJVwmaCVgJmwlZCZwJWgmdCZ4JWwmfCVwJoAldCaEJXgmiCV8JowlgCaQJYQmlCWIJpgljCacJZAmoCWUJqQlmCaoJZwmrCWgJrAlpCa0JagmuCWsJrwlsCbAJbQmxCW4JsglvCbMJcAm0CXEJtQlyCbYJcwm3CXQJuAl1CbkJdgm6CXcJuwl4CbwJeQm9CXoJvgl7Cb8JfAnABEMERQRHBEgESQRLBE0ETwRRBFMEVQRWBFgEvQWBBL4FggS/BYMEwAWEBMEFhQTCBYYEwwWHBMQFiATFBYkExgWKBMcFiwTIBYwEyQWNBMoFjgTLBY8EzAWQBM0FkwTOBZQEzwWVBNAFlgTRBZcE0gWYBNMFmQTUBZ8E1QWgBNYFoQTXBaIE2AWjBNkFpgTaBakE2wWsBNwFrwTdBbAE3gWxBN8FsgTgBbME4QW0BOIFtQTjBbYE5AW3BOUFuATmBbkE5wW6BOgFuwTpBbwE6gXABOsFxATsBcgE7QXMBO4FzQTvBc4E8AXPBPEF0ATyBdEE8wXSBPQF0wT1BdQE9gXVBPcF1gT4BdcE+QXYBPoF2QT7BdoE/AXbAHgA/gB5AP8AewEBBP0F3AT+Bd0E/wXeBQAF3wUBBeAFAgXhBQMF4gUEBeMF5AXlBeYF5wXoBekC2AMFAtkDBgLaAwcC2wMIAtwDCQLdAwoC3gMLAt8DDALgAw0C4QMOAuIDDwLjAxAC5AMRAuUDEgLmAxMC5wMUAugDFQLpAxYC6gMXAusDGALsAxkC7QMaAu4DGwLvAxwC8AMdAvEDHgLyAx8C8wMgAvQDIQL2AyMC9wMkAvgDJQL5AyYC+gMnAvsDKAL8AykC/gMrAv8DLAMAAy0DAQMuAwIDLwB8AQIDAwMwAzEDMgMEAzMIrQixCK8IswiuCLIIsAi0CE0IUQhPCFMITghSCFAIVAjGCMkIyAjLCMcIyghiCGUIZAhnCGMIZgjOCNII0AjUCM8I0wjRCNUIaghuCGwIcAhrCG8IbQhxCOUI6QjnCOsI5gjqCOgI7Ah9CIEIfwiDCH4IggiACIQI9Qj4CPcI+gj2CPkIiQiMCIsIjgiKCI0I/wkDCQEJBQkACQQJAgkGCJUJDwkTCREJFQkQCRQJEgkWCJoIngicCKAImwifCJ0IoQi2CLUIzQjMCNcI1gjxCPAI/Aj7CQsJCgkYCRcIuwi/CL0IwQi8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AD4AvwA/AMAAQADBAEQAxQBGAMcARwDIAEkAyQBIAMoASgDLAEsAzQBMAM4AzwBNANAATwDSAE4A0QBRANQAUADTAFIA1QBVANgAUwDWANkAVgDaAFwA4ABdAOEAXgDiAGEA5QBjAOcAZQDpAGQA6ABmAOoAZwDrAGkA7QBoAOwDnQOeAGsA8QBtAPMAcQD3AHMA+QB0APoAdQD7AHYA/AB3AP0AegEAAH4BBAB/AIABBgCCAQgAgQEHAPAFDwRZBFoFEARbBREEXARdBRIEXgRfBGAFEwUUBGEEYgRjBGQCXwRlBGYFFgRnBGgEaQUYBRkFHARqBGsFHQRsAvUDIgRtBR4EbgUfBG8EcAUgBHEFegUhBHIFIgRzAv0DKgR0BHUEdgUjBHcFJAR4BHkFJQUmBXsEegUnBXwFFwV9BX4FfwWABHsEfAUoBH0EfgUpBH8EgAUqBIEFKwSCBSwEgwUvBIQFMASFBTEEhgUyBIcFMwSIBTQFNQSJBTYEigU3BIsFOASMBTkEjQU6BI4FOwSPBTwEkAU9BJEFPgU/BJIEkwVBBJQFQgSVBJYElwVDACYApQApAKgAYADkBJgFRASZBUUEmgVGBJsFRwScBUgEnQVLBJ4FTgSfBU8EoAVQBKEFVASiBVgEowVZAGoA7gBsAPIEpAVaBKUFWwSmBVwEpwVdBKgFXgSpBV8EqgVgBKsFYQSsBWIErQVjBK4FZASvBWUFZgVnBWgAzAVpBWoEsASxBWsEsgSzBWwFbQS0BW4EtQS2BLcEuAVvBLkFcAS6BXQEuwV1BLwFeQX3BfgF+QX6BfsF/AX9Bf4F/wYABgEGAgYDBgQGBQYGBgcGCAYJBgoGCwYMBg0GDgYPBxwHHQceBx8HIAchByIHIwckCdUKLAcnBygHKQcqBysHLActBy4HLwcwBzEBQAFCBzIBSQczBzQHNQc2BzcHOAc5BzoHOwc8Bz0HPgc/B0ABSwFSAU0BVQFFAVAHQQdCB0MHRAdFB0YHRwdIB0kHSgdLB0wH2QfaB9sH3AfdB94H3wfgB+EH4gfjB+QH5QfmB+cH6AfpB+oH6wfsB+0H7gotCi4KLwowCjEDugoyCjMKNALFCjUKNgo3A7wDvgPAA8IDxAFXA8gDygFEA8wDzQPOA88D0Ao4A9ID0wPUA9UD1gPXA9gC1wPZA9oBVgo5CjoD2wPcA90D3gPfA+AD4QPiA+MD5APlA+YD6APqA+wD7gPwA/ED8gPzA/QD9gP4A/oD/AgCCBgKOwgmA/4EAAQBBAIEAwQFBAcECQQKBAsEDAQOBBAEEgQTBBQEFQQWBBgEGgQbBBwEHgQfBCEEIwQkBCYEKAQpBCsELQQvBDEEMwQ1BDcEOQQ7BD0EPwRBCTcIQAhBCEIB3QHYAdoBqAHbAakBqgGrAa4BsAHSAZABkQGSAZMBlAGVAZYBlwGYAZkBmgGbAZwBnQGeAZ8BoAGhAaIBowGkAaUBpgGnAawBrwHNAc4BzwHQAdUBsQGyAbQBtQG2AbcBuAG5AbsBvAG9Ab4BvwHAAcEBwgHDAcUBxAHGAccByAHKAcsBzAHRAdYB0wHUAdcINwg6CC0ILggvCEMIPAhMCDEIRQg1CEkIMAhECDIIRgg0CEgJ9Qn8CfYJ/Qn3Cf4J+An/CfkKAAn6CgEJ+woCCDsIPQg/CEoIKAg4CDkINghLCCkIMwhHCD4IKggrCCwCBQIGAgICAAIDAgQCBwIIAgkCDAINAg4CCwIKAg8CEAI5AjoCNgI0AjcCOAI7AjwCPQJAAkECQgI/Aj4CQwJEChAKHgIRAkUKEQofChIKIAoTCiEKFAoiChUKIwoWCiQKFwolAhICRgITAkcKGAomChkKJwoaCigKGwopChwKKgodCisKDAoDCgQKBgoICg4KDwk5CX0JOgl+CTsJfwIBAjUJPAmACT0JgQk+CYIJPwmDCUAJhAlBCYUJQgmGCUMJhwlECYgJRQmJCUYJiglHCYsJSAmMCUkJjQlKCY4JSwmPCUwJkAlNCZEJTgmSCU8JkwlQCZQJUQmVCVIJlglTCVQJlwlVCZgJVgmZCVcJmglYCZsJWQmcCVoJnQmeCVsJnwlcCaAJXQmhCV4JoglfCaMJYAmkCWEJpQliCaYJYwmnCWQJqAllCakJZgmqCWcJqwloCawJaQmtCWoJrglrCa8JbAmwCW0JsQluCbIJbwmzCXAJtAlxCbUJcgm2CXMJtwl0CbgJdQm5CXYJugl3CbsJeAm8CXkJvQl6Cb4Jewm/CXwJwARDBEUERwRIBEkESwRNBE8EUQRTBFUEVgRYBL0FgQS+BYIEvwWDBMAFhATBBYUEwgWGBMMFhwTEBYgExQWJBMYFigTHBYsEyAWMBMkFjQTKBY4EywWPBMwFkATNBZMEzgWUBM8FlQTQBZYE0QWXBNIFmATTBZkE1AWfBNUFoATWBaEE1wWiBNgFowTZBaYE2gWpBNsFrATcBa8E3QWwBN4FsQTfBbIE4AWzBOEFtATiBbUE4wW2BOQFtwTlBbgE5gW5BOcFugToBbsE6QW8BOoFwATrBcQE7AXIBO0FzATuBc0E7wXOBPAFzwTxBdAE8gXRBPMF0gT0BdME9QXUBPYF1QT3BdYE+AXXBPkF2AT6BdkE+wXaBPwF2wB4AP4AeQD/AHsBAQT9BdwE/gXdBP8F3gUABd8FAQXgBQIF4QUDBeIFBAXjBeQF5QXmBecF6AXpAtgDBQLZAwYC2gMHAtsDCALcAwkC3QMKAt4DCwLfAwwC4AMNAuEDDgLiAw8C4wMQAuQDEQLlAxIC5gMTAucDFALoAxUC6QMWAuoDFwLrAxgC7AMZAu0DGgLuAxsC7wMcAvADHQLxAx4C8gMfAvMDIAL0AyEC9gMjAvcDJAL4AyUC+QMmAvoDJwL7AygC/AMpAv4DKwL/AywDAAMtAwEDLgMCAy8AfAECAwMDMAMxAzIDBAMzCK0IsQivCLMIrgiyCLAItAhNCFEITwhTCE4IUghQCFQIxgjJCMgIywjHCMoIYghlCGQIZwhjCGYIzgjSCNAI1AjPCNMI0QjVCGoIbghsCHAIawhvCG0IcQjlCOkI5wjrCOYI6gjoCOwIfQiBCH8Igwh+CIIIgAiECPUI+Aj3CPoI9gj5CIkIjAiLCI4IigiNCP8JAwkBCQUJAAkECQIJBgiVCQ8JEwkRCRUJEAkUCRIJFgiaCJ4InAigCJsInwidCKEItgi1CM0IzAjXCNYI8QjwCPwI+wkLCQoJGAkXCLsIvwi9CMEIvAjACL4IwghaCF4IXAhgCFsIXwhdCGEI2gjeCNwI4AjbCN8I3QjhCHUIeQh3CHsIdgh6CHgIfAkbCR8JHQkhCRwJIAkeCSIIpQipCKcIqwimCKoIqAisCLkIuAjECLoIwwi3CMUIWAhXCFYIVQhZCTQJNwkmCSoJMwjjCNkI4gjYCOQIaQhoCHMIcgh0CSwJKwktCPQI8wjuCO0I8gjvCIgIhwiGCIUJLwkuCTAJDgkNCQgJBwj9CP4JDAkJCJkImAiXCJYIkQkyCTEJKQkkCRoJIwkZCSUIkAiPCKMIogikCSgJJwnBCcIJwwnECcUJxgnH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sBFLUVpYsQEBjlmFjY0AQh1LsB1TWLCgHVlLsIBTWLBAHVlLsP9TWLAAHbEWAEJZc3R1XnMrXnN0dSsrXnN0KytecwFzK3Qrc3R1cysrKysrKysrdHVzdCt0c3QAKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysBKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysAKytzKysrKytzcysrc3N0dHR0K3N0K3NzdHQrcysrKysrKysrc3R1K3Nzc3NzdHUrc3N0dHUrKytzdCtzc3NzcytecysYAAAHbAM3/lwAAAAAAAAAAAAAAAAAAABuAH4AkQCpAL8A4QETATgBaQGHAIcAlAC7AMIAxgDZAOMA/wEUAUgBYAGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUbABYAAP/q/mr+hf8pBfL+5f5cBhf/BgXXBeUD+AAWAAD/6gWFABP+c//p/mr+2f8pBM/+XP8ABmb/Kf/wAjkAEQUbABYAAP/qBHsAFv8p//AFagWFBbIF0wNM/hUAAAAAB54AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeAGkAbwBIAIMAhQCGAIcAiACJAI0AeAB6AH0AhgB9AIUAkQCSAJUAlwCYAJsAowCkAI4AmgCLAIwAjgCRAJwAjgCZAJoAmwCIAJcApgCoAKkAqgCsAK0ArgC2ALgAugC7ALwAvQDBAMIAoACsAK4AqACrAJ8AoACmAKgAqgCsAK4ArwCwALIAswC0ALYAtwC7ALwAvgC/AMAAwQDDAMQAxQDHAMkAygDLAMwAzQDOAM8AugC8AMEAwwDFAMYAxwDKAMsAzADNAM4AzwC0ALYAuAC5ALoAuwC8AL0AvgC/AMAAwQDCAMMAxADFAMcAyADJAMoAywDMAM0AzgDPANAA0QDTANUA1gDXANgA2QDaANsA3ADdAN4A3wDgAOEA4wDlAOYA6ADqAO4A8ADxAPMA9ADRANMA1ADVANcA2ADZAOEA5QDmAOwA0ADRANMA1ADVANYA1wDZANoA2wDcAN0A3gDfAOAA4wDtARMBEgETASsBNQErATMBNwE4ATkBPwFAAWgBfQGHAYgAfwCFAIsAiwCUAJ0AjwCSAJQAnACiAJQAoACSAKUApgCnAKoApgCoAKoAqwCyAKQAsACqAKwArgCvALEAsgCvALAAsgCzALUAtgC8AL0AuwDDAL8AwADBALkAvADBAMIAwwDHAMYAxADFAMoAywDNAM4AzwDEAMUAxgDLAMwAzQDOAM8AygDMAM0AzgDPANEA0gDTANUA0QDTANUA1gDXANgA2QDbANwA3QDQANEA0wDVANcA2ADZANoA2wDdAOMA5ADrAOwA7QDuANYA2QDbAN8A4QDjAOcA6ADsANkA3gDfAOAA4QDjAOQA5QDmAOcA6QDqAOsA7ADtAO4A8ADxAPIA8wDeAN8A4QDiAOMA5ADlAOcA6ADpAOoA6wDsAO0A7gDvAPAA8QD0APYA9wD6APwA/gEAAQIBBAEFAQgA8wD+AQAA9AD1APYA9wD4APkA+gD7APwA/QD+AP8BAAECAQMBBAEFAQYBCAEJAQoA8QDyAPMA9AD1APYA9wD4APkA+gD7APwA/QD+AP8BAAECAQQBBQEGAQgBDgEPARABEQESARMBIwEKAQwBDQESARMBFgEaARsBIQElAScBUAE9ATEBNgE5AUkBSgEvATUBNwE5AToBPgE/AUABQgFDAUQBRwFKAU4BUQFSAXEBaAFwAXQBdQGFAAAAAAAAAAAAAAAA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AAD/IAAA/zIAAP9EAAD/VgAA/2gAAP/+AAEAXAABAO4AAQHYAAECTgABAuoAAQOiAAED6gABBPwAAQXKAAEGHAABBkIAAQaCAAEG6gABB1IAAQdkAAEHdgABB4gAAQeaAAEHrAABB74AAQfQAAEH4gABB/QAAQgGAAEIMgABCPAAAQnAAAELDAABC/gAAQ0uAAENigABDbQAAQ4sAAEOqgABD2AAAQ+gAAEQQgABERoAARFaAAERmgABEfwAARJeAAESmAABEx4AARP8AAEU5AABFcYAARZkAAEW0AABFuAAARbwAAEXAAABF1wAARfQAAEYKAABGdgAARpmAAEbBgABG5QAARwwAAEcvgABHVoAAR5WAAEfggABIFYAASFiAAEh4gABIogAASMKAAEjrgABJKoAASYwAAEm+gABKGgAASjEAAEo2gABKPAAASkGAAEpHAABKTIAASlIAAEpZAABKXoAASmQAAEppgABKbwAASnYAAEp7gABKgQAASoaAAEqMAABKkYAASpcAAEqcgABKo4AASqkAAEqugABKtAAASrmAAEq/AABKxIAASsoAAErPgABK1oAASw4AAEsTgABLGQAASx6AAEskAABLKYAASy8AAEs0gABLYgAAS2eAAEttAABLcoAAS3gAAEt9gABLgwAAS4iAAEuOAABLk4AAS5kAAEuegABLpAAAS6mAAEuwgABLtgAAS7uAAEvBAABLxoAAS82AAEvTAABL2IAAS94AAEvjgABL6QAAS+6AAEv0AABL+wAATACAAEwGAABMC4AATBEAAEwWgABMHAAATCGAAEwnAABMLgAATGSAAExqAABMb4AATHUAAEx6gABMgAAATIWAAEyLAABMuQAATL6AAEzEAABMyYAATM8AAEzUgABM2oAATOCAAEzmAABM64AATSgAAE1OAABNYAAATbeAAE42gABOpwAATv+AAE8gAABPVYAAT32AAE+ogABP9wAAUAUAAFAiAABQOAAAUFAAAFBoAABQyAAAURAAAFFEAABRdwAAUZWAAFGtAABR4gAAUgSAAFItAABSXAAAUqOAAFLGgABS4IAAUuwAAFMIAABTLQAAU1iAAFNjAABTboAAU3qAAFOGAABTkYAAU50AAFOuAABTvgAAU9QAAFPpAABUAoAAVBuAAFQ8gABUZAAAVHoAAFSQAABUroAAVL4AAFTJAABU1YAAVOEAAFTuAABU+wAAVQcAAFXQgABXZ4AAWPSAAFkCgABZHQAAWTGAAFlGAABZXAAAWW0AAFl+gABZkwAAWaSAAFm2AABZwoAAWeIAAFn7gABaFYAAWi8AAFpFgABaXIAAWncAAFqOAABao4AAWrcAAFrjgABbBQAAWygAAFtIgABbYwAAW34AAFueAABbuQAAW9QAAFvmAABcBwAAXCIAAFw9gABcVoAAXG6AAFyHAABcoAAAXLgAAFzQAABdpoAAXc+AAF34AABeJYAAXisAAF4wgABeNgAAXlYAAF59gABepQAAXsIAAF7cAABe8gAAXxyAAF81gABfTgAAX2yAAF+GAABflgAAX70AAF/VgABf9wAAYBoAAGBQAABgeoAAYLIAAGDEgABg4gAAYPiAAGEfgABhQYAAYVoAAGFxgABhfgAAYYKAAGGQgABhnoAAYbMAAGHIAABh4IAAYeoAAGIVAABiQgAAYl8AAGJ6gABimQAAYqCAAGLBAABiyIAAYusAAGLygABjA4AAYxSAAGMnAABjOQAAY0eAAGNMAABjaAAAY3gAAGOHgABjm4AAY6YAAGO/gABj2IAAY/8AAGQhgABkLYAAZEGAAGRvgABkgIAAZJGAAGSlgABkuQAAZNAAAGTogABk7IAAZPoAAGUGgABlEYAAZRWAAGUjAABlLwAAZTMAAGU3AABlOwAAZT8AAGVDAABlWgAAZWyAAGWCgABlrgAAZdMAAGXagABmCQAAZhCAAGYnAABmNIAAZjiAAGY8gABmQIAAZkSAAGZZAABmYIAAZmuAAGZ7gABmiQAAZrwAAGbAgABm/AAAZxaAAGchAABnPQAAZ1aAAGdqAABnagAAZ4AAAGeHgABnoYAAZ6kAAGfSgABoAoAAaBSAAGgsAABoQwAAaGiAAGiCAABoiYAAaI2AAGiRgABo4QAAaRmAAGkwAABpOYAAaVAAAGlogABpcAAAaXSAAGl+gABpgoAAaagAAGmxgABpygAAadOAAGnnAABqHQAAaiGAAGpQgABqVQAAanwAAGqAgABqogAAaqaAAGrFAABqyYAAauoAAGrugABrGAAAaxyAAGs7AABrP4AAa3AAAGt0gABrkwAAa5eAAGu5gABrvgAAa9SAAGvZAABr/wAAbAOAAGw3AABsO4AAbG6AAGxzAABsogAAbMAAAGzSAABs4wAAbPWAAG0HAABtG4AAbTAAAG1EgABtWQAAbWwAAG1+gABtkYAAbaQAAG2rgABtwgAAbcmAAG3rgABuKQAAbi0AAG5UgABufAAAbrIAAG62AABu4IAAbwSAAG8fAABvTgAAb4SAAG+ngABv5IAAcAmAAHAhgABwLAAAcFGAAHCDAABwqAAAcKwAAHDdAABxCwAAcTcAAHFpgABxbYAAcYyAAHGsAABx34AAcgqAAHIsgAByVYAAcoUAAHK0AABy4IAAcykAAHNrgABzjoAAc8kAAHPzAAB0M4AAdDkAAHQ+gAB0RAAAdEmAAHRPAAB0VIAAdFoAAHRfgAB0ZQAAdGqAAHRwgAB0tAAAdLmAAHS/AAB0xQAAdMyAAHTSAAB1BAAAdTOAAHU5AAB1YAAAdYkAAHWOgAB1lAAAdZmAAHWfAAB1pIAAdaoAAHWvgAB1tQAAdbqAAHXAAAB1xYAAdcsAAHXQgAB1/4AAdgUAAHYkAAB2bIAAdpQAAHaZgAB2nwAAdqSAAHaqAAB2r4AAdrUAAHa6gAB2wAAAdsWAAHbOgAB21AAAdtgAAHcfAAB3S4AAd0+AAHdVAAB3XgAAd5iAAHfIAAB3+YAAd/8AAHgEgAB4CgAAeBwAAHghgAB4JwAAeCyAAHg+gAB4X4AAeHmAAHh/AAB4hIAAeJ6AAHi9AAB4xAAAeMmAAHjPAAB41IAAeNoAAHjfgAB45YAAeQOAAHkiAAB5J4AAeS0AAHkygAB5RIAAeUoAAHlRAAB5YwAAeX0AAHmCgAB5iAAAeY2AAHmTAAB5mIAAeaqAAHnCgAB5yAAAec2AAHnTAAB52IAAed4AAHnjgAB56QAAee6AAHn1gAB6B4AAeg0AAHoSgAB6GAAAeh2AAHokgAB6KgAAei+AAHpBgAB6W4AAemEAAHp/gAB6mYAAep8AAHqkgAB6qgAAeq+AAHq1AAB6uoAAesAAAHrFgAB6ywAAetCAAHrWAAB66AAAevmAAHr/gAB7GQAAe1OAAHtXgAB7eoAAe5YAAHu+AAB71IAAe+cAAHwbAAB8RwAAfHaAAHysAAB82YAAfRkAAH1KgAB9eYAAfX2AAH2kAAB9rwAAfbUAAH2/gAB9/AAAfgAAAH4vgAB+ZYAAfpsAAH7NAAB+/AAAfywAAH9WAAB/hgAAf8iAAH/3gACARYAAgIaAAIDTgACA2QAAgN6AAIDkAACA6YAAgO8AAID0gACA+gAAgP+AAIEFAACBCoAAgTeAAIE9AACBQoAAgUgAAIHYAACB3YAAgeMAAIHpAACB8IAAgfYAAIH7gACCAQAAgjwAAIJBgACCRwAAgkyAAIJSAACCV4AAgl0AAIJigACCaAAAgm2AAIJzAACCeIAAgn4AAIKDgACCiQAAgo6AAIKUAACCmYAAgp8AAIKkgACCqgAAgq+AAIK1AACCuoAAgsAAAILwAACC9YAAg06AAIOagACDwQAAg8aAAIPMAACD0YAAg+QAAIPpgACD7wAAg/SAAIQzgACEggAAhMuAAIUaAACFXwAAhWSAAIWrgACF04AAhfWAAIX7AACGBIAAhg4AAIYXgACGIQAAhlyAAIZogACGdYAAhoGAAIaPgACG0IAAhwEAAIc3gACHcQAAh3UAAIeHAACHqgAAh64AAIezgACHuQAAh76AAIfQgACH1gAAh9uAAIfhAACH8wAAiBQAAIguAACIM4AAiDkAAIhTAACIcYAAiHiAAIiBgACIioAAiJOAAIiZAACInoAAiKQAAIitAACIswAAiNEAAIjvgACJDgAAiSyAAIlLAACJaYAAiYgAAImNgACJkwAAiZiAAImqgACJsAAAibWAAIm7AACJxYAAidAAAInagACJ7IAAif6AAIoQgACKKoAAikSAAIpegACKZAAAimmAAIpvAACKdIAAinoAAIqMAACKpAAAiqmAAIqvAACKtIAAiroAAIq/gACKxQAAisqAAIrQAACK1YAAitsAAIrhAACK5wAAiu0AAIrygACK+gAAiwGAAIsJAACLEAAAiyIAAIs0AACLRgAAi1gAAItdgACLYwAAi2iAAItuAACLdQAAi4IAAIuHgACLmYAAi7OAAIu5AACL14AAi/GAAIv3AACL/IAAjAIAAIwHgACMDQAAjBKAAIwYAACMHYAAjCMAAIwogACMLgAAjEAAAIxSAACMX4AAjGUAAIxqgACMcAAAjHkAAIyfgACMxoAAjO0AAIzygACM+AAAjR8AAI1BgACNXQAAjZwAAI2gAACNuQAAjcuAAI3+gACOM4AAjmGAAI6KAACOwAAAjuaAAI8nAACPYgAAj5qAAI/MgACP+wAAkEKAAJBGgACQSoAAkJoAAJDUAACQ3YAAkSSAAJFggACRjwAAkb8AAJILAACSKYAAklWAAJKQgACSnYAAkqqAAJK3gACSxIAAktGAAJLegACS4oAAkvwAAJMCAACTOgAAk1aAAJONgACTvgAAk+4AAJQqAACUVYAAlICAAJSWgACUxwAAlPgAAJUxAACVNQAAlVGAAJVuAACVl4AAlbSAAJXeAACV+gAAlhWAAJZAgACWcIAAlr8AAJbngACXGIAAl0IAAJeIAACXqoAAl80AAJf5gACYLIAAmFuAAJhwAACYkwAAmLcAAJjOAACY9YAAmS+AAJliAACZt4AAmdmAAJn6gACaG4AAmkEAAJqBAACatAAAmu+AAJsrAACbR4AAm5CAAJusAACbugAAm/QAAJwEgACcFQAAnE8AAJyegACc+wAAnUKAAJ2GAACd4gAAnh8AAJ5bgACeeAAAnqeAAJ7FgACe8wAAnyyAAJ9KgACfcwAAn8YAAJ/6gACf/oAAoBwAAKBHgACgYQAAoJmAAKC/gACg2gAAoPMAAKERgAChFYAAoRmAAKE+AAChZAAAoYiAAKGugACh7IAAojgAAKJ+AACil4AAorEAAKLRgACi+YAAoyQAAKM3AACjVIAAo3iAAKPEAACj/AAApA4AAKQyAACkSIAApHwAAKS9AACk8gAApQAAAKUSgAClJIAApUQAAKVqAAClioAApaaAAKXOAACl+gAApiuAAKZIAACmYoAApn4AAKaogACmwwAAptuAAKb5AACnFAAApyOAAKdIAACnZAAAp3+AAKelAACn8QAAqBEAAKg5gACoTAAAqGiAAKiNgACowgAAqPYAAKkdgACpcwAAqZqAAKnFgACp84AAqiIAAKpcgACqlwAAqvAAAKsXAACrNAAAq2cAAKuGAACrp4AAq8uAAKvkgACr/gAArCiAAKxLAACsaYAArIaAAKy6gACs0AAArQWAAK0+gACtdQAArbaAAK3iAACuGAAArkWAAK53gACufwAAroaAAK6OgACupgAArswAAK7TgACu6wAArzeAAK89gACvQ4AAr1cAAK+3gACv/IAAsBAAALAfAACwLgAAsHeAALCIgACwzwAAsTWAALFOgACxkIAAseaAALH3AACyB4AAsicAALJSAACyigAAssgAALMIAACzDYAAs3yAALOCgACzqIAAs/YAALQogAC0LoAAtDQAALQ6AAC0QAAAtEYAALR8AAC0ggAAtIgAALSOAAC0lAAAtJoAALSgAAC0pgAAtKwAALSyAAC0uAAAtO8AALT1AAC1KoAAtVQAALV1gAC1tAAAtfUAALX8gAC2IYAAtkUAALZJAAC2Z4AAtp0AALa5AAC20gAAtvYAALdDAAC3X4AAt4QAALeUAAC30QAAuAQAALgugAC4WgAAuHKAALifAAC40gAAuRoAALk9gAC5bQAAuZsAALnOgAC56wAAuhKAALoogAC6P4AAumWAALqdgAC6yQAAuvWAALsTgAC7PoAAu2eAALuIgAC7qQAAu9cAALwFAAC8K4AAvFAAALxUAAC8WoAAvF6AALxigAC8hAAAvJqAALyxAAC80gAAvPOAALz3gAC8+4AAvQ4AAL0hgAC9L4AAvTOAAL03gAC9PAAAvUCAAL1FAAC9SYAAvWAAAL1tAAC9egAAvYcAAL2YgAC9qYAAvcAAAL3KAAC96YAAvg0AAL5FAAC+W4AAvqiAAL7FgAC+64AAvvmAAL8KgAC/G4AAvyyAAL87AAC/RoAAv1GAAL9cgAC/ZwAAv3EAAL99AAC/iIAAv5KAAL+fAAC/qoAAv7SAAL/AgAC/zQAAv9iAAL/kgAC/7gAAv/gAAMAEAADAEIAAwB0AAMAogADANAAAwD2AAMBKAADAVoAAwGMAAMBvgADAeYAAwIMAAMCNgADAmgAAwKaAAMCzAADAvoAAwMkAAMDUgADA34AAwOoAAMD0AADBAAAAwQyAAMEYAADBIgAAwS2AAME3gADBQ4AAwVAAAMFcgADBaAAAwXOAAMF9AADBiQAAwZWAAMGiAADBroAAwbiAAMHCAADBzIAAwdkAAMHlgADB8gAAwf4AAMIIAADCEYAAwh0AAMIpgADCNgAAwkIAAMJMgADCWAAAwmOAAMJuAADCeAAAwoQAAMKQgADCnQAAwqiAAMKyAADCu4AAwseAAMLUAADC4IAAwu0AAML3AADDAIAAwwqAAMMXAADDI4AAwzAAAMM8AADDRgAAw1GAAMNdAADDaYAAw3YAAMOCAADDjAAAw5eAAMOhgADDrQAAw7mAAMPFgADD0AAAw9sAAMPmgADD8QAAw/qAAMQGgADEEwAAxB+AAMQsAADENoAAxEAAAMRKAADEVoAAxGMAAMRvgADEe4AAxIWAAMSRAADEnIAAxKkAAMS1gADEwYAAxMuAAMTVAADE4YAAxO0AAMT5gADFBYAAxQ+AAMUbAADFJwAAxTEAAMU8gADFSIAAxVMAAMVeAADFaQAAxXSAAMWCAADFk4AAxaSAAMWyAADFtgAAxcmAAMXcgADF8QAAxgaAAMYsAADGOQAAxlyAAMZqAADGeYAAxn4AAMaOgADGnQAAxq4AAMa+AADGz4AAxt4AAMb7AADHGQAAxzyAAMdeAADHcQAAx4+AAMepAADHsQAAx7kAAMfBAADH5wAAx+8AAMfzAADH9wAAx/sAAMf/AADIAwAAyAcAAMgLAADIDwAAyBMAAMgXAADIGwAAyB8AAMgjAADIJwAAyCsAAMgvAADIMwAAyDcAAMg7AADIPwAAyEMAAMhHAADISwAAyE8AAMhTAADIVwAAyFsAAMhfAADIYwAAyGcAAMhrAADIbwAAyHsAAMiHAADIkwAAyJ8AAMixAADIwwAAyNUAAMjnAADI8oAAyP4AAMkKAADJFgAAyRoAAMkeAADJIgAAySYAAMlNgADJWAAAyWKAAMmIgADJjoAAyZQAAMmwgADJ2wAAyfEAAMoRgADKSYAAyoOAAMqHgADKyoAAyviAAMsmAADLcoAAy7KAAMv8gADMOQAAzHMAAMx3AADMewAAzISAAMyOAADMyQAAzO+AAM0agADNMQAAzVAAAM2GgADNwAAAzcQAAM4IgADOU4AAzlyAAM5nAADOcYAAznsAAM6EAADOjoAAzpkAAM6igADOq4AAzrSAAM66AADOv4AAzsUAAM7PgADO24AAzueAAM7ygADO/QAAzwkAAM8VAADPIAAAzykAAM8zgADPPgAAz0cAAM9RgADPXAAAz2UAAM9uAADPdwAAz4GAAM+MAADPlYAAz56AAM+pAADPs4AAz70AAM/GAADPzwAAz9SAAM/fAADP6wAAz/cAANACAADQDIAA0BiAANAkgADQL4AA0DiAANBDAADQTYAA0FcAANBgAADQaoAA0HUAANB+gADQh4AA0JCAANCWAADQm4AA0KSAANCvAADQuYAA0MKAANDNAADQ14AA0OCAANDpgADQ8oAA0PuAANEGAADREIAA0RoAANEjAADRLAAA0TGAANE3AADRQAAA0UqAANFVAADRXoAA0WeAANFyAADRfIAA0YYAANGPAADRmAAA0Z2AANGoAADRtAAA0cAAANHLAADR1YAA0eGAANHtgADR+IAA0f4AANIDgADSCQAA0g6AANIUAADSGYAA0h8AANIkgADSKgAA0i+AANI1AADSOoAA0kAAANJFgADSTIAA0lOAANJagADSYYAA0miAANJvgADSdoAA0n2AANKEgADSi4AA0pKAANKYAADSnYAA0qMAANKogADSrgAA0rOAANK5AADSvoAA0sQAANLJgADSzwAA0tSAANLaAADS34AA0uUAANLqgADS8AAA0vWAANL7AADTAQAA0wiAANMQAADTF4AA0x8AANMmgADTLgAA0zWAANM9AADTRIAA00wAANNTgADTWQAA016AANNkAADTaYAA028AANN0gADTegAA03+AANOFAADTioAA05AAANOVgADTmwAA06CAANOmAADTq4AA07EAANO2gADTvAAA08GAANPHAADTzIAA09IAANPXgADT3QAA0+KAANPoAADT7YAA0/MAANP4gADT/gAA1AOAANQJAADUDoAA1BQAANQZgADUHwAA1CSAANQqAADUL4AA1DUAANQ6gADUQAAA1EWAANRLAADUUIAA1FYAANRbgADUYQAA1GaAANRsAADUcYAA1HcAANR8gADUg4AA1IqAANSRgADUmIAA1J+AANSmgADUrYAA1LSAANS7gADUwoAA1MmAANTnAADVBIAA1RQAANUjgADVQ4AA1W0AANWWgADV0AAA1fkAANYhgADWWYAA1o0AANbBAADXA4AA1x+AANcjgADXJ4AA1z6AANdGAADXewAA16kAANe1AADX0AAA2AIAANgwgADYNgAA2FgAANiBgADYpoAA2MSAANjkgADY/wAA2TAAANl2gADZfAAA2ZYAANmaAADZvIAA2eOAANoEgADaJ4AA2k8AANpuAADasYAA2vyAANsAgADbBgAA2zSAANtbgADbgQAA26KAANvHgADb94AA2/0AANwCgADcBoAA3AwAANw7gADcQQAA3EaAANxMAADcfAAA3IGAANyHAADcjIAA3LcAANy8gADcwgAA3MeAANzNAADc0oAA3NgAANzugADc9AAA3SOAAN1ZAADdhYAA3aWAAN3XgADeEoAA3kYAAN55AADeowAA3tKAAN72gADfMIAA32QAAN+YgADfzIAA39cAAN/yAADgIIAA4FEAAOBWgADgeAAA4KOAAODLAADg6QAA4QiAAOEjAADhVIAA4ZsAAOGggADhuwAA4dM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BRsCJgAVAAAABgLXAAD//wAA/k0ENQZkAiYAFQAAACYC1wAAAAYBSgAA//8AAP4dBDUFGwImABUAAAEHAUkAAPolAC6xAiS4/8CzHBxIJLj/wEAOERJIJEAQEEgkQA0NSCS4/8CzCgtIJAARKysrKys1//8AAP/pA/wGpgImABYAAAAGAVMAAP//AGL+TQP8BTECJgAWAAAABgLXAAD//wAA/+kECAdsAiYAFgAAAAYKZQAA//8AAP/pA/wHngImABYAAAAGCl8AAP//AAD+TQP8BqYCJgAWAAAAJgFTAAAABgLXAAD//wAAAAAEFwamAiYAFwAAAAYBUwAA//8AT/5NBBcFGwImABcAAAAGAtcAAP//AAD+HQQXBRsCJgAXAAABBwFJAAD6JQAusQEJuP/AsxwcSAm4/8BADhESSAlAEBBICUANDUgJuP/AswoLSAkAESsrKysrNf//AAD+HQQXBRsCJgAXAAABBwFAAAD6JQBOsQEOuP/AsyQkSA64/8CzHBxIDrj/wLMREkgOuP/Asw8PSA64/4CzDg5IDrj/wLMMDEgOuP+AswoLSA64/8CzCQlIDgARKysrKysrKys1//8AV/6cBA8FGwImABgAAAAGA9kAAP//AAD+HQQPBRsCJgAYAAABBwFFAAD6JQBgsQEpuP/AsyQkSCm4/8CzICBIKbj/wLMdHkgpuP+AsxwcSCm4/8CzERJIKbj/wLMPD0gpuP+Asw4OSCm4/8CzDAxIKbj/gLMKC0gpuP/AswkJSCkAESsrKysrKysrKys1//8AAP4dBA8FGwImABgAAAEHAUAAAPolAE6xASC4/8CzJCRIILj/wLMcHEgguP/AsxESSCC4/8CzDw9IILj/gLMODkgguP/AswwMSCC4/4CzCgtIILj/wLMJCUggABErKysrKysrKzX//////+kEDweeAiYAGAAAAAYKVv8A//8AAP/pBA8HngImABgAAAAGClwAAP//AAAAAARmBqACJgAZAAAABgFGAAD//wAA/k0EZgUbAiYAGQAAAAYC1wAA//8AAAAABEYGpgImABoAAAAGAVMAAP//ACH+TQRGBRsCJgAaAAAABgLXAAD//wAAAAAEXgamAiYAGwAAAAYBUwAA//8AAAAABF4GmgImABsAAAAGAUgAAP//AAAAAARaBqYCJgAcAAAABgFTAAD//wAA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AAgAAAEHCSv85P9/ABC3AQ5BDgIbQhsAET81ET81///88QAAA8sFMwImAAgAAAEHCSz88f9/ABC3AQxBDAIbQhsAET81ET81///9xAAAA8sFMwImAAgAAAEHCSf9xP9/AAmzARZCFgARPzUA///84wAAA8sFMwImAAgAAAEHCS784/9/ABC3AQ5BDgIaQhoAET81ET81///88AAAA8sFMwImAAgAAAEHCS/88P9/ABC3AQxBDAIaQhoAET81ET81///9cAAAA8sFHAImAAgAAAEHCSj9cP9/AAmzAQ5BDgARPzUA///9mAAAA8sFHAImAAgAAAEHCSn9mP9/AAmzAQxBDAARPzUA///9aAAABAcFMwImAAsAAAEHCTT9aP9/AAmzARdCFwARPzUA///8jQAABAcFMwImAAsAAAEHCSv8jf9/ABC3AQ5BDgIbQhsAET81ET81///8lwAABAcFMwImAAsAAAEHCSz8l/9/ABC3AQxBDAIbQhsAET81ET81///9bQAABAcGfwImAAsAAAEHCS39bf97AAu0AgEvQi8AET81NQD///1qAAAEBwUzAiYACwAAAQcJJ/1q/38ACbMBFkIWABE/NQD///yNAAAEBwUzAiYACwAAAQcJLvyN/38AELcBDkEOAhpCGgARPzURPzX///yXAAAEBwUzAiYACwAAAQcJL/yX/38AELcBDEEMAhpCGgARPzURPzX///1uAAAEBwZ/AiYACwAAAQcJMP1u/3sAC7QCAS5CLgARPzU1AP///RgAAAQHBRwCJgALAAABBwko/Rj/fwAJswEOQQ4AET81AP///U8AAAQHBRwCJgALAAABBwkp/U//fwAJswEMQQwAET81AP//AF/+eQQHBRsCJgALAAAABgk3NQD///1o/nkEBwUzAiYACwAAACcJNP1o/38BBgk3KAAACbMBF0IXABE/NQD///yN/nkEBwUzAiYACwAAACcJK/yN/38BBgk3KAAAELcBDkEOAhtCGwARPzURPzX///yX/nkEBwUzAiYACwAAACcJLPyX/38BBgk3KAAAELcBDEEMAhtCGwARPzURPzX///1t/nkEBwZ/AiYACwAAACcJLf1t/3sBBgk3KAAAC7QCAS9CLwARPzU1AP///Wr+eQQHBTMCJgALAAAAJwkn/Wr/fwEGCTcoAAAJswEWQhYAET81AP///I3+eQQHBTMCJgALAAAAJwku/I3/fwEGCTcoAAAQtwEOQQ4CGkIaABE/NRE/Nf///Jf+eQQHBTMCJgALAAAAJwkv/Jf/fwEGCTcoAAAQtwEMQQwCGkIaABE/NRE/Nf///W7+eQQHBn8CJgALAAAAJwkw/W7/ewEGCTcoAAALtAIBLkIuABE/NTUA///9lwAAA9AFMwImAAwAAAEHCTT9l/9/AAmzARdCFwARPzUA///8yAAAA9AFMwImAAwAAAEHCSv8yP9/ABC3AQ5BDgIbQhsAET81ET81///88AAAA9AFMwImAAwAAAEHCSz88P9/ABC3AQxBDAIbQhsAET81ET81///9nAAAA9AGgwImAAwAAAEHCS39nP9/AAu0AgEvQi8AET81NQD///2aAAAD0AUzAiYADAAAAQcJJ/2a/38ACbMBF0IXABE/NQD///zIAAAD0AUzAiYADAAAAQcJLvzI/38AELcBDkEOAhpCGgARPzURPzX///zwAAAD0AUzAiYADAAAAQcJL/zw/38AELcBDEEMAhpCGgARPzURPzX///2dAAAD0AZ/AiYADAAAAQcJMP2d/3sAC7QCAS5CLgARPzU1AP///VMAAAPQBRwCJgAMAAABBwko/VP/fwAJswEOQQ4AET81AP///aUAAAPQBRwCJgAMAAABBwkp/aX/fwAJswEMQQwAET81AP//AAAAAAPQBmQCJgAMAAAABgFKAAD//wAAAAAD0AaPAiYADAAAAAYBTAAA///9hv/pBEEFMwImABIAAAEHCTT9hv9/AAmzAitCKwARPzUA///9Ef/pBEEFMQImABIAAAEHCSv9Ef97ABC3AiJBIgMvQi8AET81ET81///8h//pBEEFMwImABIAAAEHCSz8h/9/ABC3AiBBIAMvQi8AET81ET81///9iP/pBEEFMwImABIAAAEHCSf9iP9/AAmzAipCKgARPzUA///9Ef/pBEEFMQImABIAAAEHCS79Ef97ABC3AiJBIgMuQi4AET81ET81///8h//pBEEFMwImABIAAAEHCS/8h/9/ABC3AiBBIAMuQi4AET81ET81///9rf/pBEEFMQImABIAAAEHCSj9rf9/AAmzAiJBIgARPzUA///9Wf/pBEEFMQImABIAAAEHCSn9Wf9/AAmzAiBBIAARPzUA///9kwAABBIFMwImABMAAAEHCSf9k/9/AAmzAiZCJgARPzUA///9KwAABFoFMwImABwAAAEHCSf9K/9/AAmzARVCFQARPzUA///8MQAABFoFMwImABwAAAEHCS78Mf9/ABC3AQ1BDQIZQhkAET81ET81///8oAAABFoFMwImABwAAAEHCS/8oP9/ABC3AQtBCwIZQhkAET81ET81///9LwAABFoGgwImABwAAAEHCTD9L/9/AAu0AgEtQi0AET81NQD///zLAAAEWgUcAiYAHAAAAQcJKPzL/38ACbMBDUENABE/NQD///1NAAAEWgUcAiYAHAAAAQcJKf1N/38ACbMBC0ELABE/NQD//wAAAAAEWgZkAiYAHAAAAAYBSgAA//8AAAAABFoGjwImABwAAAAGAUwAAP///ZkAAARDBTMCJgGnAAABBwk0/Zn/fwAJswE7QjsAET81AP///SIAAARDBTMCJgGnAAABBwkr/SL/fwAQtwEyQTICP0I/ABE/NRE/Nf///JsAAARDBTMCJgGnAAABBwks/Jv/fwAQtwEwQTACP0I/ABE/NRE/Nf///Z4AAARDBoMCJgGnAAABBwkt/Z7/fwALtAIBU0JTABE/NTUA///9mwAABEMFMwImAacAAAEHCSf9m/9/AAmzATpCOgARPzUA///9IgAABEMFMwImAacAAAEHCS79Iv9/ABC3ATJBMgI+Qj4AET81ET81///8mwAABEMFMwImAacAAAEHCS/8m/9/ABC3ATBBMAI+Qj4AET81ET81///9ngAABEMGgwImAacAAAEHCTD9nv9/AAu0AgFSQlIAET81NQD///2sAAAEQwUxAiYBpwAAAQcJKP2s/38ACbMBMkEyABE/NQD///1PAAAEQwUxAiYBpwAAAQcJKf1P/38ACbMBMEEwABE/NQD//wAj/nkEQwUxAiYBpwAAAAYJNzcA///9mf55BEMFMwImAacAAAAnCTT9mf9/AQYJNzcAAAmzATtCOwARPzUA///9Iv55BEMFMwImAacAAAAnCSv9Iv9/AQYJNzcAABC3ATJBMgI/Qj8AET81ET81///8m/55BEMFMwImAacAAAAnCSz8m/9/AQYJNzcAABC3ATBBMAI/Qj8AET81ET81///9nv55BEMGgwImAacAAAAnCS39nv9/AQYJNzcAAAu0AgFTQlMAET81NQD///2b/nkEQwUzAiYBpwAA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ACAAcAByAG8AZwByAGEAbQBtAGkAbgBnACAAZQBuAHYAaQByAG8AbgBtAGUAbgB0AHMAIABhAG4AZAAgAG8AdABoAGUAcgAgAGMAaQByAGMAdQBtAHMAdABhAG4AYwBlAHMAIAB3AGgAZQByAGUAIABhACAAbQBvAG4AbwBzAHAAYQBjAGUAZAAgAGYAbwBuAHQAIABpAHMAIABzAHAAZQBjAGkAZgBpAGUAZAAuACAAQQBsAGwAIABjAGgAYQByAGEAYwB0AGUAcgBzACAAaABhAHYAZQAgAHQAaABlACAAcwBhAG0AZQAgAHcAaQBkAHQAaAAsACAAbABpAGsAZQAgAG8AbABkACAAdAB5AHAAZQB3AHIAaQB0AGUAcgBzACwAIABtAGEAawBpAG4AZwAgAGkAdAAgAGEAIABnAG8AbwBkACAAYwBoAG8AaQBjAGUAIABmAG8AcgAgAHAAZQByAHMAbwBuAGEAbAAgAGEAbgBkACAAYgB1AHMAaQBuAGUAcwBzACAAYwBvAHIAcgBlAHMAcABvAG4AZABhAG4AYwBlAC4AIABUAGgAZQAgAGkAbQBwAHIAbwB2AGUAZAAgAFcAaQBuAGQAbwB3AHMAIABmAG8AbgB0ACAAZABpAHMAcABsAGEAeQAgAGEAbABsAG8AdwBlAGQAIABhACAAZABlAHMAaQBnAG4AIAB3AGkAdABoACAAcAByAG8AcABvAHIAdABpAG8AbgBzACAAYwBsAG8AcwBlAHIAIAB0AG8AIABuAG8AcgBtAGEAbAAgAHQAZQB4AHQAIAB0AGgAYQBuACAAdAByAGEAZABpAHQAaQBvAG4AYQBsACAAbQBvAG4AbwBzAHAAYQBjAGUAZAAgAGYAbwBuAHQAcwAgAGwAaQBrAGUAIABDAG8AdQByAGkAZQByAC4AIABUAGgAaQBzACAAYQBsAGwAbwB3AHMAIABmAG8AcgAgAG0AbwByAGUAIABjAG8AbQBmAG8AcgB0AGEAYgBsAHkAIAByAGUAYQBkAGkAbgBnACAAbwBmACAAZQB4AHQAZQBuAGQAZQBkACAAdABlAHgAdAAgAG8AbgAgAHMAYwByAGUAZQBuAC4AIABPAHAAZQBuAFQAeQBwAGUAIABmAGUAYQB0AHUAcgBlAHMAIABpAG4AYwBsAHUAZABlACAAaABhAG4AZwBpAG4AZwAgAG8AcgAgAGwAaQBuAGkAbgBnACAAbgB1AG0AZQByAGEAbABzADsAIABzAGwAYQBzAGgAZQBkACwAIABkAG8AdAB0AGUAZAAgAGEAbgBkACAAbgBvAHIAbQBhAGwAIAB6AGUAcgBvAHMAOwAgAGEAbgBkACAAYQBsAHQAZQByAG4AYQB0AGkAdgBlACAAcwBoAGEAcABlAHMAIABmAG8AcgAgAGEAIABuAHUAbQBiAGUAcgAgAG8AZgAgAGwAbwB3AGUAcgBjAGEAcwBlACAAbABlAHQAdABlAHIAcwAuACAAVABoAGUAIABsAG8AbwBrACAAbwBmACAAdABlAHgAdAAgAGMAYQBuACAAYgBlACAAdAB1AG4AZQBkACAAdABvACAAcABlAHIAcwBvAG4AYQBsACAAdABhAHMAdABlACAAYgB5ACAAdgBhAHIAeQBpAG4AZwAgAHQAaABlACAAbgB1AG0AYgBlAHIAIABvAGYAIABiAGEAcgBzACAAYQBuAGQAIAB3AGEAdgBlAHMALgBoAHQAdABwADoALwAvAHcAdwB3AC4AbQBpAGMAcgBvAHMAbwBmAHQALgBjAG8AbQAvAHQAeQBwAG8AZwByAGEAcABoAHkALwBjAHQAZgBvAG4AdABzAGgAdAB0AHAAOgAvAC8AZgBvAG4AdABmAGEAYgByAGkAawAuAGMAbwBtAFkAbwB1ACAAbQBhAHkAIAB1AHMAZQAgAHQAaABpAHMAIABmAG8AbgB0ACAAYQBzACAAcABlAHIAbQBpAHQAdABlAGQAIABiAHkAIAB0AGgAZQAgAEUAVQBMAEEAIABmAG8AcgAgAHQAaABlACAAcAByAG8AZAB1AGMAdAAgAGkAbgAgAHcAaABpAGMAaAAgAHQAaABpAHMAIABmAG8AbgB0ACAAaQBzACAAaQBuAGMAbAB1AGQAZQBkACAAdABvACAAZABpAHMAcABsAGEAeQAgAGEAbgBkACAAcAByAGkAbgB0ACAAYwBvAG4AdABlAG4AdAAuACAAWQBvAHUAIABtAGEAeQAgAG8AbgBsAHkAIAAoAGkAKQAgAGUAbQBiAGUAZAAgAHQAaABpAHMAIABmAG8AbgB0ACAAaQBuACAAYwBvAG4AdABlAG4AdAAgAGEAcwAgAHAAZQByAG0AaQB0AHQAZQBkACAAYgB5ACAAdABoAGUAIABlAG0AYgBlAGQAZABpAG4AZwAgAHIAZQBzAHQAcgBpAGMAdABpAG8AbgBzACAAaQBuAGMAbAB1AGQAZQBkACAAaQBuACAAdABoAGkAcwAgAGYAbwBuAHQAOwAgAGEAbgBkACAAKABpAGkAKQAgAHQAZQBtAHAAbwByAGEAcgBpAGwAeQAgAGQAbwB3AG4AbABvAGEAZAAgAHQAaABpAHMAIABmAG8AbgB0ACAAdABvACAAYQAgAHAAcgBpAG4AdABlAHIAIABvAHIAIABvAHQAaABlAHIAIABvAHUAdABwAHUAdAAgAGQAZQB2AGkAYwBlACAAdABvACAAaABlAGwAcAAgAHAAcgBpAG4AdAAgAGMAbwBuAHQAZQBuAHQALgBoAHQAdABwADoALwAvAHcAdwB3AC4AbQBpAGMAcgBvAHMAbwBmAHQALgBjAG8AbQAvAHQAeQBwAG8AZwByAGEAcABoAHkALwBmAG8AbgB0AHMALwBkAGUAZgBhAHUAbAB0AC4AYQBzAHAAeKkgMjAxNCBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuQ29uc29sYXNCb2xkTWljcm9zb2Z0OiBDb25zb2xhcyBCb2xkVmVyc2lvbiA1LjM0Q29uc29sYXMtQm9sZENvbnNvbGFzIGlzIGEgdHJhZGVtYXJrIG9mIHRoZSBNaWNyb3NvZnQgZ3JvdXAgb2YgY29tcGFuaWVzLkx1YyhhcykgZGUgR3Jvb3RDb25zb2xhcyBpcyBhaW1lZCBmb3IgdXNlIGluIHByb2dyYW1taW5nIGVudmlyb25tZW50cyBhbmQgb3RoZXIgY2lyY3Vtc3RhbmNlcyB3aGVyZSBhIG1vbm9zcGFjZWQgZm9udCBpcyBzcGVjaWZpZWQuIEFsbCBjaGFyYWN0ZXJzIGhhdmUgdGhlIHNhbWUgd2lkdGgsIGxpa2Ugb2xkIHR5cGV3cml0ZXJzLCBtYWtpbmcgaXQgYSBnb29kIGNob2ljZSBmb3IgcGVyc29uYWwgYW5kIGJ1c2luZXNzIGNvcnJlc3BvbmRhbmNlLiBUaGUgaW1wcm92ZWQgV2luZG93cyBmb250IGRpc3BsYXkgYWxsb3dlZCBhIGRlc2lnbiB3aXRoIHByb3BvcnRpb25zIGNsb3NlciB0byBub3JtYWwgdGV4dCB0aGFuIHRyYWRpdGlvbmFsIG1vbm9zcGFjZWQgZm9udHMgbGlrZSBDb3VyaWVyLiBUaGlzIGFsbG93cyBmb3IgbW9yZSBjb21mb3J0YWJseSByZWFkaW5nIG9mIGV4dGVuZGVkIHRleHQgb24gc2NyZWVuLiBPcGVuVHlwZSBmZWF0dXJlcyBpbmNsdWRlIGhhbmdpbmcgb3IgbGluaW5nIG51bWVyYWxzOyBzbGFzaGVkLCBkb3R0ZWQgYW5kIG5vcm1hbCB6ZXJvczsgYW5kIGFsdGVybmF0aXZlIHNoYXBlcyBmb3IgYSBudW1iZXIgb2YgbG93ZXJjYXNlIGxldHRlcnMuIFRoZSBsb29rIG9mIHRleHQgY2FuIGJlIHR1bmVkIHRvIHBlcnNvbmFsIHRhc3RlIGJ5IHZhcnlpbmcgdGhlIG51bWJlciBvZiBiYXJzIGFuZCB3YXZlcy5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vdHlwb2dyYXBoeS9jdGZvbnRzaHR0cDovL2ZvbnRmYWJyaWsuY29tWW91IG1heSB1c2UgdGhpcyBmb250IGFzIHBlcm1pdHRlZCBieSB0aGUgRVVMQSBmb3IgdGhlIHByb2R1Y3QgaW4gd2hpY2ggdGhpcyBmb250IGlzIGluY2x1ZGVkIHRvIGRpc3BsYXkgYW5kIHByaW50IGNvbnRlbnQuIFlvdSBtYXkgb25seSAoaSkgZW1iZWQgdGhpcyBmb250IGluIGNvbnRlbnQgYXMgcGVybWl0dGVkIGJ5IHRoZSBlbWJlZGRpbmcgcmVzdHJpY3Rpb25zIGluY2x1ZGVkIGluIHRoaXMgZm9udDsgYW5kIChpaSkgdGVtcG9yYXJpbHkgZG93bmxvYWQgdGhpcyBmb250IHRvIGEgcHJpbnRlciBvciBvdGhlciBvdXRwdXQgZGV2aWNlIHRvIGhlbHAgcHJpbnQgY29udGVudC5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vdHlwb2dyYXBoeS9mb250cy9kZWZhdWx0LmFzcHgAAwAAAAAAAP8nAMIAAAABAAAAAAAAAAAAAAAAAAAAAAABAAMACgAKAA4AB///AA8AAQAAAAwAAAFaAWIAAgA3AAABPAABAT0BPQADAT4BPgABAT8BPwADAUABQAABAUEBQQADAUIBQgABAUMBRAADAUUBRQABAUYBRgADAUcBRwABAUgBSAADAUkBSQABAUoBSgADAUsBSwABAUwBTAADAU0BTQABAU4BTgADAU8BUAABAVEBUQADAVIBUgABAVMBUwADAVQBVQABAVYBVgADAVcCSAABAkkCSgADAksCxAABAsUC1wADAtgDuQABA7oD+gADA/sD+wABA/wD/AADA/0D/QABA/4ECgADBAsECwABBAwEWAADBFkHQAABB0EHQQADB0IH+QABB/oH+gADB/sH+wABB/wH/AADB/0H/QABB/4H/gADB/8H/wABCAAIAAADCAEIAQABCAIIJgADCCcKAgABCgMKCwADCgwKLAABCi0KOwADCjwKRwABCkgKSwADCkwKrwABAAQAAAABAAAAAgBYAkkCSQABAsUCxQABAscCxwABAskCyQABAssCywABAs0CzQABAs8CzwABAtEC0QABAtMC0wABAtUC1QABA7oDugABA7wDvAABA74DvgABA8ADwAABA8IDwgABA8QDxAABA8YDxgABA8gDyAABA8oDygABA9AD0AABA+YD5gABA+gD6AABA+oD6gABA+wD7AABA+4D7gABA/QD9AABA/YD9gABA/gD+AABA/oD+gABA/wD/AABA/4D/gABBAMEAwABBAUEBQABBAcEBwABBAwEDAABBA4EDgABBBAEEAABBBYEFgABBBgEGAABBBwEHAABBB8EHwABBCEEIQABBCQEJAABBCYEJgABBCkEKQABBCsEKwABBC0ELQABBC8ELwABBDEEMQABBDMEMwABBDUENQABBDcENwABBDkEOQABBDsEOwABBD0EPQABBD8EPwABBEEEQQABBEMEQwABBEUERQABBEkESQABBEsESwABBE0ETQABBE8ETwABBFEEUQABBFMEUwABBFYEVgABB/oH+gABB/wH/AABB/4H/gABCAAIAAABCAIIAgABCAQIBAABCAYIBgABCAgICAABCAoICgABCAwIDAABCA4IDgABCBAIEAABCBIIEgABCBQIFAABCBgIGAABCCYIJgABCgQKBAABCgYKBgABCggKCAABCgoKCgABCi0KNwABCkgKSwACAAAAAQAAAAoAiAG+AANjeXJsABRncmVrADJsYXRuAEAACgABU1JCIAAUAAD//wACAAAABwAA//8AAgABAAgABAAAAAD//wACAAIACQAWAANJUFBIACBST00gACpUUksgADQAAP//AAIAAwAKAAD//wACAAQACwAA//8AAgAFAAwAAP//AAIABgANAA5tYXJrAFZtYXJrAGxtYXJrAIJtYXJrAJhtYXJrAK5tYXJrAMRtYXJrANpta21rAPBta21rAPpta21rAQRta21rAQ5ta21rARhta21rASJta21rASwAAAAJAAAAAQACAAQABQAGAAcACQAKAAAACQAAAAEAAgAEAAUABgAHAAkACgAAAAkAAAABAAIABAAFAAYABwAJAAoAAAAJAAAAAQACAAQABQAGAAcACQAKAAAACQAAAAEAAgAEAAUABgAHAAkACgAAAAkAAAABAAIABAAFAAYABwAJAAoAAAAJAAAAAQACAAQABQAGAAcACQAKAAAAAwAKAAsADAAAAAMACgALAAwAAAADAAoACwAMAAAAAwAKAAsADAAAAAMACgALAAwAAAADAAoACwAMAAAAAwAKAAsADAANABwAJAAsADQAPABEAEwAVABcAGQAbAB0AHwABAAAAAEAaAAEAAAAARf2AAQAAAABGNQABAAAAAEaVgAEAAAAARtIAAQAAAABKRoABAAAAAEqFAAEAAAAASrsAAQAAAABMqIABAIAAAEzLAABAAAAAUDiAAYAAAABQ1wABgAAAAFIsgABFVQV4gADAAwDggDdAABKYAAASmYAAEpsAABKbAABT8oAAEpyAABKeAAASn4AAEqEAABKigAASpAAAEqWAAJa1AAASpwAAEqiAABKqAAASmwAAEqoAABKbAAASqgAAEpsAABKqAAASmwAAEquAABKeAAASq4AAEq0AABKrgAASngAAEquAABKeAACWtoAAEq6AABKugAASsAAAErGAABKwAAASsYAAErMAABK0gAASq4AAErYAABKrgAASt4AAErkAABKbAAASuQAAEpsAABK6gAASmwAAlrgAAJa4AACWuYAAlrmAAFP0AABTuAAAlrsAAJa5gACWuYAAlrmAAJa8gACWvgAAlrmAAJa/gACWuYAAlrmAAJa4AACWuAAAlrgAAJa4AACWwQAAlsKAAJbEAACWxYAAlscAAJa5gACWyIAAlrmAABK6gAASvAAAEr2AABK/AAASwIAAEp4AABK9gAASmwAAlsW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RMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKpEwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEqkTCRKpEwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKpEwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEqkTCRKREwkSqRMJEqkTCRKpEwkSkRMJEpETCRKpEwkSqRMJEpETCRKpEwkSqRMJEpETCRKpEwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKpEwkSkRMJEpETCRLBEwkSkRMJEpETCRKREwkSkRMJEqkTCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEqkTCRKREwkSkRMJEpETCRKREwkSkRMJEqkTCRKpEwkSqRMJEqkTCRKpEwkSkRMJEqkTCRKpEwkSkRMJEqkTCRKpEwkSkRMJEpETCRKpEwkSkRMJEpETCRKpEwkSqRMJEqkTCRKpEwkSqRMJEqkTCRKpEwkSqRMJEqkTCRKpEwkSqRMJEqkTCRKpEwkSkRMJEqkTCRKREwkSkRMJEpETCRKpEwkSkRMJEqkTCRKpEwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEqkTCRKpEwkSqRMJEpETCRKpEwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEqkTCRKREwkSkRMJEqkTCRKpEwkSkRMJEqkTCRKREwkSkRMJEpETCRKpEwkSqRMJEqkTCRKREwkSkRMJEqkTCRKREwkSqRMJEqkTCRKpEwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEqkTCRKREwkSqRMJEpETCRKpEwkSqRMJEqkTCRKpEwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEsETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKpEwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEsETCRKpEwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKpEwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKpEwkSkRMJEpETCRKREwkSqRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMJEpETCRKREwkSkRMIAAgABBB4EKAAAAAIASAAEACUAAAAnACgAIgAqAF8AJABhAGkAWgBrAKQAYwCmAKcAnQCpALkAnwC8AOMAsADlAO0A2ADvAQgA4QJfAl8A+wLYAtkA/ALkAuYA/gLsAu8BAQL1AvUBBQL7Av0BBgMDAwYBCQMRAxMBDQMZAxwBEAMiAyIBFAMoAyoBFQMwAzMBGAOfA58BHARZBIQBHQSLBKoBSQStBK0BaQSvBLQBagS9BMABcATCBMYBdATJBMoBeQTMBNMBewTVBOIBgwTnBOoBkQTsBPgBlQT7BQQBogUPBRQBrAUWBRkBsgUcBSQBtgUnBSwBvwUvBTABxQU1BTUBxwU4BT8ByAVBBUgB0AVLBUsB2AVOBVAB2QVUBVQB3AVYBWAB3QVjBWMB5gVlBW0B5wVyBXIB8AV6BXoB8QWBBYQB8gWGBYoB9gWNBY4B+wWQBZAB/QWTBZkB/gWcBZwCBQWgBaMCBgWmBaYCCgWpBakCCwWsBawCDAWvBbUCDQW6BbwCFAXABcACFwXIBcgCGAXMBdcCGQXaBekCJQX3Bg8CNQYSBhICTgYVBocCTwbIBvYCwgqECooC8QABAKQAqgABAAwAEgABAAA3HABINxw3IjcoNy41BjUGNyg09DUGNQA1Bjc0NPQ1Njc6NyI3OjciN0A3RjU2NUI3TDVIN1I1SDc6Nzo3OjU2NTY1NjdYN143ZDVgN2o1bDdwN1g3djd8NcA3gjeIN2o3jjdkNaI3ZDeUNcA3mjegNbo1xjegN3w3jjeON443mjeaN5o3Ojc6NTY1NjeON443mjeaAAEAAQo4AAIADgAEAB0AAABXAFgAGgBaAFoAHABuAG8AHQBxAHEAHwCDAJwAIADbANwAOgDeAN4APAD0APUAPQD3APcAPwLuAu8AQAL7AvwAQgMbAxwARAMoAykARgABAFgAXgABAAwAEgABAAA2qgAiNgI2qjawNqo2sDYCNqo2AjawNgI2sDawNrA2sDawNrA2tjaqNqoycjawNgI2sDYCNrA2vDawNsI2tjawNrA2sDa2NrYAAQABCjkAAgAVAAQABAAAAAYABgABAAgACAACAAoACgADAAwADAAEAA4ADwAFABEAEgAHABUAGAAJAEMAQwANAG8AcAAOAIMAgwAQAIUAhQARAIcAhwASAIkAiQATAIsAiwAUAI0AjgAVAJAAkQAXAJQAlwAZAMMAxAAdANAA0AAfAPUA9gAgAAEGBAYKAAEADAASAAEAADXuAvg17jX0Nfo2ADYGNgw2EjYYNgY2HjYkNio2MDY2Njw13DZCNkg2TjZUNlo2PDZgNmY2bDYYNe417jXuNe417jXuNe417ja6NjA1+jX6Nfo1+jbANgA2ADYANgY2BjYGNgY2BjYGNgY2BjbGNhI2EjYSNsw2GDZgNgY2BjYGNgY2BjYGNgY2BjbSNhI2HjYkNio2KjYqNmA22DY2NjY2NjY2Nt42PDY8Njw2PDY8Njw2PDY8Njw25DXcNkg2SDZINk42TjZONuo2VDbMNlQ2WjZaNlo2WjZaNlo2WjZaNlo28DZgNmA2YDZgNmw2bDZsNmw2GDYYNhg2cjZ4Nn42hDZ+Noo2kDaENpY2nDYkNpY2SDaENqI2qDauNgw1yjZ+NnI2TjZyNiQ2tDZyNnI2cjZyNnI2cjZyNnI2cjbSNnI2fjZ+Nn42fjb2Nvw3AjaENn42fjZ+Nn42fjZ+Nn42fjcINpA2kDaQNpA2hDaENpY2ljaWNpY2ljaWNpY3DjaWNxQ2nDacNiQ2JDaWNpY2ljaWNvw2hDaENoQ2hDaWNxo2ojaiNqI2ojaiNqI2ojaiNqI2cjcgNgw2DDbMNco1yjXKNyY3LDcyNn42zDZ+NnI2cjZyNnI2cjZyNnI2cjZyNtI2cjZyNnI2cja0NrQ2tDa0NnI2cjZyNzg17jXuNgY2BjYGNgY3Pjc+Njw2PDc+Nlo3RDc+Nmw2cjZyNz42fjZ+NpY3Pjc+NqI3SjZyNnI3UDa0Nmw2tDa0N1Y3XDdiN2I3aDduNgA3dDYqN3o2PDeAN4Y2EjYqN3o2cjYkNiQ3jDY8NjY3kjeYN542YDZUN6Q2PDZaNlQ2GDeqN7A10DZmNmY3tje8N8I3yDXuNgY2PDZaNjA2EjYSNiQ3zjfON6o2ZjZmNhI31DfaNjY17jXuNgY2BjYGNgY2PDY8Nkg2SDZaNlo34DYYN+Y37DfyNe42BjY8Nmw17jX6NnI2VDf4Ne419Dc+N/42ADc+N/44BDgKOAo4EDYMNhI2GDYYNhg2GDYYOBA2JDYkN/44FjgWOBw4IjYwNjA2MDY2NjY3/jgKNdw13DZINkg3/jZONz42TjZONz42VDc+N/44CjgoOBA4CjY8Nz42YDZgNmY2ZjZsNhg2GDf+Nng2eDZ4Nn42cjguODQ3IDYkNpY2Zjg6NjY3IDfsOEA2fja0NoQ3qjZmN7w3yDZyNpY2ojaENjw2cjaQNpA2JDhGOEY4TDacNmY2kDaENnI2cjZ+Nn42ljaWNqI2ojYMNgw2cjZyOEw2hDhSN544WDZyOF42oja0OGQ4ajhwOHY4fDZ+OII4iDacNq42cjZ4OI43/jaENz43/jiUOAo4mjigNoo2kDaENz42hDaEOKY4EDgQNiQ2JDf+OKw4rDiyOLg2SDZINkg2hDc+N/44CjaoNqg2DDc+N/41yjc+Nco1yjc+Nn43Pjf+OAo4KDgQOAo2Tjc+NnI3PjYkNiQ2tDZyNnI3/jf+Nn42cja0NnI3MjZaNio4vji+OMQ4yjjQNoQ41jjWONw3gDjiOOg47jj0OPo4+jkAOQY5DDkSNoQ5GDaWNpY2KjYqNpY2ljauOR42SDkkOSo2hDkwNmA2ojY2N245Njb8Nvw5PDlCOUg2DDbYNkg41jlOOVQ5VDlaNqg47jlgNoQ5ZjlsNmY25DbkNmw5cjbYOEw5eDl+OYQ5ijkYNjw5kDmWOZw2hDmiORI3ejg6OX43njZmOag2ljmcOa45tDeMNn42GDm6NnI2rjnANiQ2SDnGOcw50jdiN2I2/DaiOdg2bDZINio2JDYqNqI53jnkOeo58DdQN5459jY8Ofw22DeMOOg2PDoCOgI6CDjoNtg2cjlmOg43jDoUNiQ2hDoaOOg2BjZ4NoQ2ijeMNoQ2qDYMNgw1yjZ+NnI6IDomOiw2MDaWNio2qDoyOjg6PjpEOko6RDpQOlY6UDpENqg6XDpiOmg4QDpEOFg6bjpuOTw6dDp6OoA6hjqMOpI6mDqeOqQ3Pjc+Nz43Pjc+NtI20gABAAEKOgACAEgABAAlAAAAJwAoACIAKgBfACQAYQBpAFoAawCkAGMApgCnAJ0AqQC5AJ8AvADjALAA5QDtANgA7wEIAOECXwJfAPsC2ALZAPwC5ALmAP4C7ALvAQEC9QL1AQUC+wL9AQYDAwMGAQkDEQMTAQ0DGQMcARADIgMiARQDKAMqARUDMAMzARgDnwOfARwEWQSEAR0EiwSqAUkErQStAWkErwS0AWoEvQTAAXAEwgTGAXQEyQTKAXkEzATTAXsE1QTiAYME5wTqAZEE7AT4AZUE+wUEAaIFDwUUAawFFgUZAbIFHAUkAbYFJwUsAb8FLwUwAcUFNQU1AccFOAU/AcgFQQVIAdAFSwVLAdgFTgVQAdkFVAVUAdwFWAVgAd0FYwVjAeYFZQVtAecFcgVyAfAFegV6AfEFgQWEAfIFhgWKAfYFjQWOAfsFkAWQAf0FkwWZAf4FnAWcAgUFoAWjAgYFpgWmAgoFqQWpAgsFrAWsAgwFrwW1Ag0FugW8AhQFwAXAAhcFyAXIAhgFzAXXAhkF2gXpAiUF9wYPAjUGEgYSAk4GFQaHAk8GyAb2AsIKhAqKAvEAAQBoAHAAAgAMABYAAgAAMvIAATM0ABQy7jLuMvQy9C/KL8ouqi6qMvoy+i/KL8ozADMAMwYzBi6GLoYzDDMML8ovyjMSMxIzGDMYMx4zHjMSMxIzJDMkL8ovyjHCMcIuVi5WMyQzJAABAAID1wPYAAIABQCEAIYAAACIAIoAAwCMAJAABgCSAJkACwCcAJwAEwABDAAMCgACAAwAHgAEAAAyqAABMrQAADKuAAEyugL4LLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyriy0Mq4stDKuLLQyrgACAAEKSApLAAAAAgBIAAQAJQAAACcAKAAiACoAXwAkAGEAaQBaAGsApABjAKYApwCdAKkAuQCfALwA4wCwAOUA7QDYAO8BCADhAl8CXwD7AtgC2QD8AuQC5gD+AuwC7wEBAvUC9QEFAvsC/QEGAwMDBgEJAxEDEwENAxkDHAEQAyIDIgEUAygDKgEVAzADMwEYA58DnwEcBFkEhAEdBIsEqgFJBK0ErQFpBK8EtAFqBL0EwAFwBMIExgF0BMkEygF5BMwE0wF7BNUE4gGDBOcE6gGRBOwE+AGVBPsFBAGiBQ8FFAGsBRYFGQGyBRwFJAG2BScFLAG/BS8FMAHFBTUFNQHHBTgFPwHIBUEFSAHQBUsFSwHYBU4FUAHZBVQFVAHcBVgFYAHdBWMFYwHmBWUFbQHnBXIFcgHwBXoFegHxBYEFhAHyBYYFigH2BY0FjgH7BZAFkAH9BZMFmQH+BZwFnAIFBaAFowIGBaYFpgIKBakFqQILBawFrAIMBa8FtQINBboFvAIUBcAFwAIXBcgFyAIYBcwF1wIZBdoF6QIlBfcGDwI1BhIGEgJOBhUGhwJPBsgG9gLCCoQKigLxAAICAAAEAPz7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5r7mvua+5oAAgAVAT0BPQAAAT8BPwABAUEBQQACAUMBRAADAUYBRgAFAUgBSAAGAUoBSgAHAUwBTAAIAU4BTgAJAVEBUQAKAVMBUwALAVYBVgAMAsUC1wANA7oD+QAgA/4ECgBgBAwEWABtB0EHQQC6CAIIJgC7CgMKCwDgCi0KOwDpCkgKSwD4AAEEHgS+AAEADALCAK0AAAcUAAAHGgAAByAAAAcgAAAHJgAABywAAAcyAAAHOAAABz4AAAdEAAAHSgAAB1AAAAdWAAAHXAAAByAAAAdcAAAHIAAAB1wAAAcgAAAHXAAAByAAAAdiAAAHLAAAB2IAAAdoAAAHYgAABywAAAdiAAAHLAAAB24AAAduAAAHdAAAB3oAAAd0AAAHegAAB4AAAAeGAAAHYgAAB4wAAAdiAAAHkgAAB5gAAAcgAAAHmAAAByAAAAeeAAAHIAAAB54AAAekAAAHqgAAB7AAAAe2AAAHLAAAB6oAAAcgAAAHvAAAB0oAAAfCAAAHyAAAB84AAAfUAAAHqgAAByAAAAfaAAAH4AAAB2IAAAfmAAAH7AAAB/IAAAeqAAAHIAAAB/gAAAf+AAAH+AAAB/4AAAgEAAAICgAACBAAAAgWAAAIEAAACBYAAAgcAAAIFgAACBAAAAgWAAAIIgAACCgAAAgiAAAIKAAACCIAAAgoAAAIHAAACBYAAAgiAAAIKAAACCIAAAgoAAAILgAACDQAAAguAAAINAAAB2IAAAg6AAAIQAAACEYAAAhMAAAIUgAACFgAAAheAAAIZAAACGoAAAhwAAAIagAACHAAAAeqAAAIdgAACHwAAAh8AAAIggAACIIAAAiCAAAIggAACIIAAAiCAAAIggAACIIAAAiCAAAIggAACIIAAAiCAAAIiAAACIgAAAiIAAAIiAAACI4AAAiOAAAIlAAAB2IAAAiaAAAImgAACJQAAAiUAAAIlAAACJQAAAdiAAAHYgAAB2IAAAdiAAAIiAAACIgAAAiIAAAIiAAACKAAAAimAAAIrAAACLIAAAi4AAAIsgAACLgAAAi+AAAIrAAACMQAAAjKAAAHXAAAB84AAAjQAAAHYgAAB8IAAAjWAAAH7AAACNwAAAdcAAAI4gCtH9Af1gZoBmgf3B/iH+gGmB/uH/Qf+iAAIAYgDCASIAwgEiAYCDAgHiAkICogMCAqIDYgPAgwIEIgJCBIIEggTiBUIE4gVCBaIGAgZggwBsIgbCByIHgHRiB+IHIgeCCEIIogkCAkIJYgnCCiIKggriCcILQIMCC6CDAgwCDGIMwg0iDYCDAg3iDkIOog8CD2IJAg9iCQIPwhAiEIIQ4hFCEaISAhJiEOISwgkCEyITghPiD2IJAhRCFKIVAhViFQIVYhXAgwIVwIMCFiIWghbiF0IXohgCGGIYwhkiGYIZ4hmCGeIMAgxgcEBwQHKAcoBygHKCGkIaQHKAcoBygHKCGkIaQhqiGqIaohqiGwIbAG7AbCB0YHRiG2IbYhtiG2IbYhtiG2IbYhvCG8IcIhwiHIBO4gqCHOIGYhziBmCDYh1CHaIeAGwgcEBuwGwgb4BkQg3glcBsIhqgACABoBPQE9AAABPwE/AAEBQQFBAAIBQwFDAAMBRgFGAAQBSAFIAAUBSgFKAAYBTAFMAAcBTgFOAAgBUQFRAAkBUwFTAAoCxQLWAAsDugPLAB0D9AP5AC8D/gP/ADUEAwQIADcEDAQRAD0EFgQXAEMEHAQdAEUEKQRGAEcESARUAGUEVgRXAHIIAgglAHQKAwoLAJgKLQo3AKEKOwo7AKwAAgAaAT0BPQAAAT8BPwABAUEBQQACAUMBQwADAUYBRgAEAUgBSAAFAUoBSgAGAUwBTAAHAU4BTgAIAVEBUQAJAVMBUwAKAsUC1gALA7oDywAdA/QD+QAvA/4D/wA1BAMECAA3BAwEEQA9BBYEFwBDBBwEHQBFBCkERgBHBEgEVABlBFYEVwByCAIIJQB0CgMKCwCYCi0KNwChCjsKOwCsAAEBEgFqAAEADAC6ACsAABIqAAASMAAAEjYAABI2AAASPAAAEjwAABJCAAASPAAAEjwAABI8AAASSAAAEk4AABI8AAASVAAAEjwAABI8AAASNgAAEjYAABI2AAASNgAAEloAABJgAAASZgAAEmwAABJyAAASPAAAEngAABI8AAASbAAAEn4AABKEAAASPAAAEooAABI8AAASkAAAEpAAABKQAAASlgAAEjwAABKcAAASogAAEpAAABKoACsSEhISE1wTXB6QHpAelh6QHpAekB6cE1weoh6oHpwerhNcE1wTXBNcE1wetBISHqgeuh6cHsAerh6oHsYezB6QHtIexh7YHtge2B7eHuQe6h7wHtge9gACAA4BVgFWAAAC1wLXAAEDzAPPAAID0gPWAAYD2QPlAAsD8APzABgEAAQCABwECQQKAB8EEgQVACEEGgQbACUERwRHACcEVQRVACgEWARYACkIJggmACoAAgAOAVYBVgAAAtcC1wABA8wDzwACA9ID1gAGA9kD5QALA/AD8wAYBAAEAgAcBAkECgAfBBIEFQAhBBoEGwAlBEcERwAnBFUEVQAoBFgEWAApCCYIJgAqAAECGgWmAAECQgWmAAECMwWmAAECMwWQAAECMwWSAAECMwW3AAECMwWaAAECMwVEAAECUQWcAAECMwWCAAECCAR2AAECCAWbAAECMwR/AAECMwR1AAECMwWXAAECMwYNAAECMwRaAAECMwWbAAEClwR/AAEClwWnAAECMwWRAAECMwWuAAECMwQlAAECMwQ5AAECMwWlAAECMwRDAAECMwUEAAECMwUvAAECMwQcAAECMwSDAAECMwUUAAECMwSAAAECMwVWAAECMwQPAAECMwVsAAECMwWFAAECMwRAAAECMwWdAAECMwQLAAECMwTFAAECUQQVAAECUQTPAAECUQQLAAECUQTFAAECUQQOAAECMwQVAAECMwTPAAECMwQqAAECMwU/AAEBzwS1AAEBzwW2AAEClwS1AAEClwW2AAEBzwT+AAEBzwX8AAEClwT+AAEClwX8AAECMwTIAAECMwXKAAECMwWqAAECMwR2AAECMwQ0AAECMwRmAAECRwRIAAECMwS1AAECMwQRAAECMwRFAAECMwQpAAECMwVzAAECMwPhAAECMwWcAAECMwSUAAECFQR/AAECPQR/AAECMwSwAAECMwSIAAECRwR/AAECMwRvAAECMwWWAAECbwWWAAECCwWWAAECMwXwAAECbwSwAAEClwXwAAEC3QXwAAEBsQWqAAECMwbVAAECMwbhAAECMwaqAAECMwbbAAECMwcmAAECtQWWAAECbwbVAAECbwbpAAECCwbVAAECMwbpAAECbwbbAAECMwV1AAECMwYUAAECRwWWAAECMwZMAAECqwWWAAECMwXfAAECMwXXAAECMwWoAAECMwZfAAECbwXfAAECWwXfAAECWwXnAAECMwW8AAECMwXxAAECMwXnAAECMwccAAECMwXzAAECMwXcAAECMwSgAAEC3QSgAAECUQXfAAECMwcSAAECMwYOAAEB9wXwAAECowZxAAECMwWyAAECMwUnAAECMwXrAAECugXtAAEBsQYUAAECMwZVAAEDFAX6AAECMwfRAAECMwb1AAECMwYXAAECMwbrAAECMwaiAAECRwXwAAECMwUKAAECCwUKAAECMwe1AAECowZ0AAECbwV1AAECMwWEAAECGAXfAAECMwV7AAECMwWHAAECbwWCAAECMwV2AAECMwWDAAEDXAbzAAEDXAXfAAEDUgV1AAEDgAXrAAEDegV1AAEDqAXrAAEC+waqAAECWwbVAAECHwbVAAEDXAWMAAEDXAUyAAEBfAWWAAECMwXvAAECbwXvAAECbwaqAAECMwfAAAECMwf4AAECMwXPAAECowVFAAEBpwXpAAECMwSyAAECMwYJAAECbwSuAAEBpwWqAAECMwShAAEDdgXrAAECZQb9AAEDcAXcAAEBuwWqAAECMwSCAAEBXgZNAAEBzwXwAAEC5wddAAEClwXxAAECMwclAAECMwceAAECMwZ3AAECMwcvAAEB2QcFAAECMwbOAAECgAdrAAECMwSuAAEBpwSyAAECCwSyAAECqwSgAAECMwW5AAECMwR4AAECMwSiAAEB+gSgAAEC2wXcAAECbwSgAAECMwSxAAEDPASgAAEDPAXfAAECowXrAAEBwgXrAAECMwWGAAECMwSqAAECMwXmAAECFQSwAAECjQXfAAEB4wXfAAECMwSLAAEDGQXwAAECCwSgAAECowXXAAECRwXfAAECgwXfAAEDSAXfAAEDFAXfAAEDFAWHAAEDFAXrAAEC7AXfAAECMwWJAAECoQSgAAECMwSQAAECMwRzAAECMwSBAAECMwK5AAECRwSyAAECMwSsAAECMwSMAAECowXmAAECYASyAAEDwQR1AAECMwRhAAEBiQRvAAEBiQVuAAEDlAVuAAED5AVuAAEEFQVuAAED6wVuAAED4gVuAAED4AVuAAEEJgVuAAEEKgVuAAED7AVuAAEDnwVuAAEENQVuAAED2QVuAAEEIgVuAAEEAgVuAAED+AVuAAEDtwVuAAEDxwVuAAEEQgVuAAEELAVuAAEElAVuAAEEawVuAAEEYgVuAAEEmAVuAAEEKAVuAAEDwQSIAAEDqgV4AAED3gSIAAED/QXcAAED8ASIAAEETQXcAAEERgSIAAEDCQXcAAEDqQXcAAEEJwV4AAEC+wXcAAEEPgSIAAED+QSIAAED4gSIAAED3ASIAAED8wSIAAEEHASIAAEDpwSIAAEDyQV4AAEEbQSIAAEEdASIAAEERwSIAAEETwSIAAED9QSIAAEC9AbVAAEEAgbVAAEDqAbVAAEEAgbhAAEEAgaqAAEEAgbbAAEDqAcmAAEETQVuAAEEJQbVAAED4wbVAAEEFQaPAAEEHQbVAAEDsAbVAAED8gbVAAED8gaqAAED8gbbAAED4gaPAAED9AbVAAEENgbbAAEENgaPAAED+AbVAAEEigV1AAEDugbVAAED/AbVAAED/AbhAAED/AaqAAED/AbbAAED/AbpAAEEOgV1AAEDbwbVAAED2QbVAAEEIQYUAAEEMgbVAAEEMgbhAAEELwbVAAEEcQbVAAEEcQbhAAEEcQaqAAEEcQbbAAEEqAbVAAEEbwZMAAEEYAVuAAED+AUbAAEEGwbVAAEEJwbVAAED5QbVAAEEEAbVAAEEUgV1AAED+gbVAAEEPAbVAAEEPAbhAAEEPAaqAAED+gbbAAED+gcmAAEEewZ7AAEEZgbVAAEEOAbVAAEEKAaPAAEDwQXfAAEEAwXfAAEEAwXXAAEEAwWoAAEDwQY3AAEEWQSIAAEEIwXfAAED7gXfAAED3gWNAAEFBwYUAAEEMAXfAAED8AXfAAEEMgXfAAEEMgXXAAEEMgWoAAEEMgWNAAEEVgXfAAEERgWNAAEEFAYUAAEESQV4AAEDxwWFAAEDCQXfAAEEEwXfAAEDrwXfAAED1wXXAAEDpQWoAAEDhwXfAAEDCQSgAAEEPgXpAAEDigRGAAEDsQXfAAEEOARGAAEEEwcSAAEEiAYUAAEDBQXcAAEC3QXcAAEECQXfAAEEHQSIAAEECgXfAAEETAXfAAED6AXfAAED/AXfAAED6AXXAAED6AWoAAEEkAXfAAEEBgUdAAEEUgSIAAED0gWFAAEESgXfAAEEHAXfAAED/QXfAAEDpwXfAAEDywXfAAEDpAXrAAEESAXtAAEEXwYUAAEDyQWHAAEDxwXfAAEECQXXAAEECQWoAAEDxwY3AAEEhAWFAAEEhAXXAAEEHQXfAAEEXwXfAAEETwXfAAEETwXXAAEEDwXfAAED1wXfAAED1wWNAAEERAXpAAEDqAdPAAED4gdPAAED8gbhAAED7AepAAEEAgdPAAEE5QYXAAEELAdPAAEEmAbhAAED0QYqAAED7AYqAAEEFAXfAAEDRQaEAAEECgYqAAEExwToAAEECQYqAAEEqAczAAEEXwYqAAED7gV1AAED6gV1AAEEDAUbAAEECgWFAAEE2AaNAAEEHQV1AAEECgV1AAED3wV1AAEELQWEAAED8wWFAAED8AV1AAEE4waNAAEEpAV1AAEDnAXfAAED9gV1AAEETwV7AAEETgV1AAEEMgV1AAEENQWHAAEEQgWCAAEEJQV1AAEDwQV1AAED5QVuAAEEOAV1AAEEfQV2AAEEPAWDAAEEqAV9AAED9AVuAAEECwVuAAEEmwbVAAEEmgXfAAEEPwVuAAEESwXcAAEEbAVuAAEEfAXcAAEEfwaqAAEENgbVAAEEMQbVAAEELwaqAAED8AbVAAEEbgVuAAEEeAS1AAEETwVuAAEEEAV7AAED1QbVAAEELwbbAAEEGwbbAAEEPAbbAAED9AXPAAEEJgbVAAEEAAWHAAEEAwXPAAEDlAaPAAEEAgaPAAEEqAaqAAEE/gXvAAEFFQXvAAED7QVuAAEFKAXvAAEDiQXfAAED5AaPAAED6waPAAED8AaPAAEEJgaqAAEEKgaPAAEEOgbVAAED1QaqAAEEdwZ7AAEENQaPAAEEIgaPAAED+AaPAAEDtwaPAAEDxwaPAAEDxwdmAAEDxweeAAEEQgaPAAEEpAbhAAEEawaPAAEEYgaPAAEEkAbVAAEEmAaPAAED9gbVAAEDqgXfAAED2AXfAAED+gUbAAEEjQWQAAED5AXrAAEEJgWFAAED7ASyAAEDwwXrAAEDiwXrAAEEDQSyAAEERASuAAED0gWRAAEDpwXrAAEEoASoAAED2gShAAEEkgXfAAEEHQVOAAEERgXfAAEEBQb9AAEDpgWoAAEDvgXfAAEDigXfAAEEjASIAAED6gSgAAEECQbVAAEEEQXfAAEEDQXfAAEEAwXnAAED4gXnAAEEXwWoAAEDBQXfAAED+QSyAAED0AV4AAEEKgSIAAEEogSCAAEDqQSgAAEC3QZNAAEEXQddAAEEVgWoAAEDqgclAAEEaQbVAAEDaQceAAEETgWFAAEEPgWNAAED+QWNAAEEPAXfAAED3AWNAAEEHAWNAAEDpwWNAAED/QYdAAED/Qa3AAEDyQarAAEEdAWNAAEEPQWNAAEEawXXAAEETwWNAAEDzQXfAAEEIwbOAAEEhAXdAAEEXwXdAAED5QY3AAEESAcRAAED0QSyAAEEAwSyAAEEAASyAAEDzgRUAAED7QRUAAED/gXfAAEFDwXrAAEDzwSyAAEDTgSyAAED+wSyAAEDswSyAAEDsgSyAAED3wSuAAEDlwSgAAEECgSIAAEEAQSuAAEEXwSgAAEEOwSiAAEECQSgAAEDCQXrAAEEEASgAAEDHQXfAAEEMAUrAAEETgSgAAEEJwSgAAEELwSgAAEEGwRXAAED5QWFAAED3wSgAAED3wXfAAED+wSgAAEEGASyAAED4wSyAAEDmQSyAAEDywSgAAEENQSgAAEEEAXrAAEDLgXrAAEEBgXrAAEDwwWGAAEECgSgAAEEUwSgAAED4QSqAAEDuQSgAAEEJASgAAEEWQXmAAEEZASgAAED1wSIAAED4ASgAAEDnQXfAAEDdQXfAAEDKQXfAAED2gSuAAED/QWHAAED3wRGAAED3wRUAAEECwSuAAED0gXrAAED8gSgAAEDKQPsAAEDeQXfAAEEcASIAAEEZwSIAAEEYgSIAAEEGQUtAAEEgQXrAAEEYgUtAAEEFgWRAAEELQSIAAEEJwSIAAED7QV1AAED7gVXAAEEIQWRAAED1gRGAAEERgSgAAEEgQSyAAED7gSgAAED7wSyAAEEBwSgAAED6QSgAAEEHQSyAAEEEwSgAAEDxASgAAEEVQSgAAED5gPsAAEEdwSgAAEEDgSgAAEEYARYAAEEFwRYAAEEaQQ2AAEEaQQZAAEEXAQnAAEEIASyAAED6wSgAAEENwSxAAEEVQK5AAEEMQSgAAEEFwSgAAEETAQ0AAEEVgQ0AAEELgSCAAEEhASgAAED8QSgAAEDtwSgAAEDuwSyAAEDsgSxAAED5QSgAAED6ASgAAEEQQSgAAEEAASgAAEEBAXfAAEFDQXfAAEETAXrAAEEAgSIAAED+gSIAAEEDgSIAAEECwSIAAEDywSIAAED+wSIAAEEVgSsAAEDpAVQAAEExgXvAAEDYwSgAAED/QSgAAEEFgXrAAEEgQSIAAEEBwSIAAEEDQRYAAEDrQSgAAECM/+NAAECM/+AAAECM/+0AAECM/+tAAECM/+nAAECM/8pAAECM/+rAAECM/+TAAECM//SAAECM//NAAECM/8yAAECM/+ZAAECM/+xAAECM/+uAAECMwAQAAECM/+aAAECM/+sAAECM//dAAECM/+6AAECM//TAAECMwAcAAEBu//sAAECM/9MAAECb/9MAAECC/9MAAECM/4MAAEB7f9MAAECM/3aAAECM/4lAAECtf9MAAECb/5/AAECb/4MAAECR/9MAAECM/4CAAECM/7PAAECq/9MAAECM/5/AAEB9/9MAAEBUf69AAECM/4cAAECM/4GAAECo/9MAAEBUf4OAAECcv9MAAECo/4BAAECM/6YAAECM/4AAAEDXP9MAAEC/v9MAAEDHP3aAAEDRP9MAAEDYv3aAAEC+/9MAAEBmv9MAAEBc/4MAAECM/4jAAECM/7yAAECb/7yAAEBz/9MAAECM/2oAAECC/3XAAECM/5NAAECb/4cAAECZf5NAAECM/5wAAEBp/9MAAECM/4IAAECo/4GAAEDcP9MAAEC/v3aAAECM/5jAAECM/5PAAECM/3rAAECM/4EAAECM/24AAECM/3XAAECUf5NAAECR/4cAAECR/5/AAECR/5NAAECM/5SAAECM/7cAAEB+v9MAAEC2/5FAAEBwv4MAAEBwv4EAAEBwv4CAAECa/4CAAEBwv3rAAECM/36AAECM/7ZAAECM/5FAAECM/3uAAEB4/9MAAECjf9MAAECb/3/AAECg/9MAAEDSP9MAAEDFP5jAAEDFP75AAEDFP9MAAEC2P4CAAEDFP7cAAEC7P9MAAECM/4NAAECof9MAAECM/38AAEB7f4EAAEBUf3uAAECR/4EAAEBwv4FAAECM/37AAEClwSTAAEBzwSTAAECMwTJAAECMwSTAAECMwbAAAECMwbEAAECMwXTAAECMwXJAAEBVAKoAAECngUUAAEDcATOAAEDhAT2AAEDjgSSAAEDXAUUAAEDUgUUAAEDmAT2AAEDmAUUAAEDZgUUAAEDFgUUAAEDSAUUAAEBVAUUAAEDjgUUAAEDmASSAAEDhASwAAEDXAS6AAEDNAUAAAEDsQUUAAEDogUUAAEDwAUUAAEDygUUAAEDcAUUAAEDXAO2AAEDhAO2AAEDUgPKAAEDcAWFAAEDegOiAAEDrAWFAAEDhAPoAAECYgPoAAEDAgPoAAEDIAPoAAECYgWFAAEDtgPKAAEDZgPKAAEDjgOiAAEDcAPyAAEDjgO2AAEDcAPoAAEDogPoAAED1APoAAEDUgPoAAEDXAPoAAED1AOiAAEDygOiAAEDcAOiAAEDSAOiAAEDXAOiAAEDmAP8AAEDhAPyAAEDrAPoAAED1AP8AAECngPoAAECMwI4AAECMwKYAAECMwIAAAECMwKNAAECMwHtAAECMwKOAAECMwG+AAECMwJ0AAECMwKVAAECMwKWAAECowKNAAEBXgKNAAEBrgKNAAECMwN0AAECMwOSAAECMwIKAAECMwEyAAECMwHuAAECMwH9AAECMwH/AAEB9AI6AAECMwKrAAEA4QSHAAECTgIPAAEClAGBAAEBcgImAAECTgLCAAEBIgH/AAEBrgISAAECMwIoAAECMwH2AAECMwIxAAECMwI6AAEDPgBkAAECMwTqAAECMwaLAAECMwYMAAECMwTzAAECMwaBAAEEZgakAAEEZgdsAAEETAakAAECM//OAAECM/+IAAEEZv6iAAEBhgMCAAECWAUUAAEDAgTiAAEDhATiAAEDAgTOAAEBQAUUAAEDcASSAAEDNAT7AAEDhAUUAAED3gUUAAEDrAUUAAEDNAPKAAEDPgPKAAEDSAPKAAEDIAPKAAEDhAPeAAECqAPoAAEDSAPoAAECWAWFAAEDrAPKAAEDIAO2AAEDDAPoAAEDZgPoAAEDmAPoAAECWP/7AAECgAAAAAECMwAAAAEB4AAAAAEBLAAAAAECqAAAAAECYv/2AAEEFQAAAAEClAAZAAEC2gAAAAECOgAZAAEDegAAAAEBXgAAAAEC7gAAAAEDtgAAAAECJgAAAAED6AAAAAEDmAAAAAED8gAAAAEDwAAAAAECigAAAAECvP7UAAED3gAAAAECdgAAAAECYgAAAAECngAAAAEDrAAAAAEEBgAAAAECWAAAAAEDhAAAAAECbAAAAAEDDAAAAAEDjgAAAAECHAAAAAEC2v5/AAEDogAAAAECdv6iAAEClAAAAAEBLP5wAAEDjv5wAAEBaP6iAAED/P5/AAECHP7ZAAEDov5/AAEB/v5mAAEDrP5/AAEDcAAAAAEDKv6iAAED/AAAAAEB4P7ZAAECvP5/AAECEv7ZAAEDZgAAAAECvAAUAAEDIP5/AAED1P5/AAEDDP6iAAEC5P6iAAEBLP5mAAEB+f7ZAAEDAgAAAAEBuAAAAAEBNv84AAECYv6JAAECSQAAAAECewAAAAEDPgAAAAEDyv5/AAECngAZAAECqAAZAAECMAAAAAEDIAAAAAECigAZAAEDXAAAAAEC5wAAAAEA+v6iAAEDygAAAAEBwgAAAAED3v9cAAECvAAAAAEDFv5aAAECigAUAAEC5//uAAEDPgAyAAEDNP6iAAEDhAAyAAEDev6iAAECiv5/AAEDQwAAAAEBBP5wAAECqAAUAAEDov5mAAEC0AAAAAEDa/6iAAECEgAAAAECjf7tAAECMP5cAAECXf6JAAEChf7UAAECqP6JAAECv/7tAAECj/6JAAECRP6JAAECdgAUAAEDZgAUAAEDjv5mAAEDDP6JAAECnv5/AAECYv7UAAEEzv5XAAEDKv6JAAECCP7ZAAEDrP5XAAEExP5XAAEDKv5XAAEDegAZAAECTv5wAAEDSP5wAAED3v5wAAECYv6LAAECJv5XAAECcf6JAAECo/7UAAECnv7UAAECgP6JAAECof7tAAECZ/6JAAECngAPAAECYgAPAAEDcAAyAAEEnP5wAAECqAAPAAECHAAPAAEC2gAZAAECTgAAAAECxgAAAAECEv5wAAECxv5/AAEC5AAAAAECmf6JAAEClAAUAAEDhP5mAAEC5/5wAAEC5/7UAAED3v5mAAEDPv5wAAEEfv5wAAECWP5mAAEEVv5wAAEBXv5mAAECWP5wAAEB6v5wAAEBfP5wAAEDmP5wAAEDhP5wAAEC0AAZAAECngAUAAEETP5wAAEBaP7tAAECCAAAAAECsgAAAAECCAAUAAECvAAPAAECvAAZAAEC+AAAAAEBSv7tAAEDPv7UAAECM/5cAAEDhAAKAAEDNAAAAAEEpv5wAAEDSAAAAAEC5AAZAAEDBwAAAAECWP6JAAECOgAAAAECgAAZAAEDygBnAAECgAAjAAED3gHmAAEBQAAAAAEDIABkAAEDegAjAAECyAAAAAEBaAAAAAEBVAAAAAEC0P5/AAEDIAKSAAECqP5wAAECjQAAAAECjQAPAAEC2v6JAAEDwP6JAAECdv6JAAED6P6JAAEDSP6JAAEB6v6JAAEDmP6JAAEDyv6JAAEExP5wAAEEQv5wAAEEdP5wAAEBwv5wAAEEBv5wAAEEav5wAAEB9P5wAAEBzP5wAAEE2P5wAAEBuP5wAAEC5P/iAAEDSABaAAEDrAAyAAEDPv6iAAEC0P7KAAEEGgAKAAEEGgAAAAEDKgAyAAEDyv5wAAEBnwAAAAEDvAAAAAEB9P/iAAEEagS6AAEEagRWAAEACgS6AAEACgRWAAEAAAakAAECGgbhAAECQgbhAAECMwb6AAECMwb0AAECMwa+AAECMwcnAAECUQbhAAECMwcAAAECCAa+AAECCAfjAAECMwZRAAECMwd4AAECMwbYAAECMwbTAAECMwf3AAECMwbSAAECMwf0AAECMwfzAAECMwdHAAECMwbfAAECMwcVAAECMwadAAECMwfeAAEClwXfAAEClwbhAAECMwdJAAECMwcWAAECMwX/AAECMweAAAECMwdsAAECMwYYAAECMweEAAECMwc2AAECMwdfAAECMwfDAAECMwWMAAECMwbvAAECMwZbAAECMwdhAAECMwcgAAECMwY6AAECMwedAAECMwXSAAECMwcwAAECMwdMAAECMwZqAAECMwfIAAECMwaHAAECMwfqAAECMwZ8AAECUQdgAAECUQgaAAECUQZ8AAECUQc2AAECUQZxAAECUQcrAAECUQZ5AAECUQczAAECUQfwAAECMwfwAAECMwZ7AAECMwc1AAECUQcUAAECUQfOAAECMwZxAAECMwcrAAECMwbuAAECMwZSAAEBzwYUAAEBzwcVAAEClwYUAAEClwcVAAEBzwZyAAEBzwdzAAEClwZyAAEClwdzAAECMwYoAAECMwcpAAECMwdeAAECMwX0AAECRwcAAAECMwduAAECMwcbAAECMweHAAECMwXqAAECMwWLAAECMwauAAECFQXfAAECPQXfAAECM/3hAAECM/3kAAECM/5kAAECM/2KAAECM/2XAAECM/53AAECM/62AAECM/3NAAECM/3JAAECM/3BAAECM/3IAAECM/27AAECM/3mAAECM/3RAAECM/3qAAECM/3VAAECM/26AAEBu/4aAAAAAQAAAAoBcAf4AANjeXJsABRncmVrAHpsYXRuAKwACgABU1JCIAA4AAD//wAUAAYAAAAXAB4ADAAlACkAMABAADoARgBMAFIAWABeAGQAagBwAHYAfAAA//8AFAAHAAEAGAAfAA0AJgAqADEAQQA7AEcATQBTAFkAXwBlAGsAcQB3AH0ABAAAAAD//wAUAAgAAgAZACAADgAnACsAMgBCADwASABOAFQAWgBgAGYAbAByAHgAfgAWAANJUFBIAEZST00gAFhUUksgAIoAAP//ABUACQADABoAEwAhAA8ALAAzADcAQwA9AEkATwBVAFsAYQBnAG0AcwB5AH8AAP//AAYAGwAUACIAEAAtADQAAP//ABYACgAEABwAFQAjABEAKAAuADUAOABEAD4ASgBQAFYAXABiAGgAbgB0AHoAgAAA//8AFQALAAUAHQAWACQAEgAvADYAOQBFAD8ASwBRAFcAXQBjAGkAbwB1AHsAgQCCY2FsdAMOY2FsdAMWY2FsdAMeY2FsdAMmY2FsdAMuY2FsdAM2Y2FzZQM+Y2FzZQNEY2FzZQNKY2FzZQNQY2FzZQNWY2FzZQNcY2NtcANiY2NtcANwY2NtcAN+Y2NtcAOMY2NtcAOaY2NtcAOoY2NtcAO2ZGxpZwPCZGxpZwPIZGxpZwPOZGxpZwPUZG5vbQPaZG5vbQPgZG5vbQPmZG5vbQPsZG5vbQPyZG5vbQP4ZG5vbQP+ZnJhYwQEZnJhYwQMZnJhYwQUZnJhYwQcZnJhYwQkZnJhYwQsZnJhYwQ0bG9jbAQ8bG9jbARCbG9jbARKbG9jbARQbnVtcgRWbnVtcgRcbnVtcgRibnVtcgRobnVtcgRubnVtcgR0bnVtcgR6b251bQSAb251bQSGb251bQSMb251bQSSb251bQSYb251bQSeb251bQSkb3JkbgSqb3JkbgSwb3JkbgS2c2FsdAS8c2FsdATCc2FsdATKc2FsdATQc2FsdATWc2FsdATec2luZgTkc2luZgTqc2luZgTwc2luZgT2c2luZgT8c2luZgUCc3MwMQUIc3MwMQUOc3MwMQUUc3MwMQUac3MwMQUgc3MwMQUmc3MwMgUsc3MwMgU0c3MwMgU8c3MwMgVEc3MwMgVMc3MwMgVUc3MwMwVcc3MwMwVkc3MwMwVsc3MwMwV0c3MwMwV8c3MwMwWEc3MwNAWMc3MwNAWSc3MwNAWYc3MwNAWec3MwNAWkc3MwNAWqc3MwNQWwc3MwNQW2c3MwNQW8c3MwNQXCc3MwNQXIc3MwNQXOc3MwNgXUc3MwNgXac3MwNgXgc3MwNgXmc3MwNgXsc3MwNgXyc3MwNwX4c3MwNwX+c3MwNwYEc3MwNwYKc3MwNwYQc3MwNwYWc3MwOAYcc3MwOAYic3MwOAYoc3MwOAYuc3MwOAY0c3MwOAY6c3VicwZAc3VicwZGc3VicwZMc3VicwZSc3VicwZYc3VicwZec3VwcwZkc3VwcwZqc3VwcwZwc3VwcwZ2c3VwcwZ8c3VwcwaCAAAAAgARABIAAAACABEAEgAAAAIAEQASAAAAAgARABIAAAACABEAEgAAAAIAEQASAAAAAQAJAAAAAQAJAAAAAQAJAAAAAQAJAAAAAQAJAAAAAQAJAAAABQAEAAUABgAHAAgAAAAFAAQABQAGAAcACAAAAAUABAAFAAYABwAIAAAABQAEAAUABgAHAAgAAAAFAAQABQAGAAcACAAAAAUABAAFAAYABwAIAAAABAAEAAUABwAIAAAAAQAUAAAAAQAUAAAAAQAUAAAAAQAUAAAAAQANAAAAAQANAAAAAQANAAAAAQANAAAAAQANAAAAAQANAAAAAQANAAAAAgALAAwAAAACAAsADAAAAAIACwAMAAAAAgALAAwAAAACAAsADAAAAAIACwAMAAAAAgALAAwAAAABAAIAAAACAAIAAwAAAAEAAQAAAAEAAAAAAAEACgAAAAEACgAAAAEACgAAAAEACgAAAAEACgAAAAEACgAAAAEACgAAAAEAEAAAAAEAEAAAAAEAEAAAAAEAEAAAAAEAEAAAAAEAEAAAAAEAEAAAAAEAEwAAAAEAEwAAAAEAEwAAAAEAFQAAAAIAAwAVAAAAAQAVAAAAAQAVAAAAAgAAABUAAAABABUAAAABAA8AAAABAA8AAAABAA8AAAABAA8AAAABAA8AAAABAA8AAAABABYAAAABABYAAAABABYAAAABABYAAAABABYAAAABABYAAAACABcAGAAAAAIAFwAYAAAAAgAXABgAAAACABcAGAAAAAIAFwAYAAAAAgAXABgAAAACABkAGgAAAAIAGQAaAAAAAgAZABoAAAACABkAGgAAAAIAGQAaAAAAAgAZABoAAAABABsAAAABABsAAAABABsAAAABABsAAAABABsAAAABABsAAAABABwAAAABABwAAAABABwAAAABABwAAAABABwAAAABABwAAAABAB0AAAABAB0AAAABAB0AAAABAB0AAAABAB0AAAABAB0AAAABAB4AAAABAB4AAAABAB4AAAABAB4AAAABAB4AAAABAB4AAAABAB8AAAABAB8AAAABAB8AAAABAB8AAAABAB8AAAABAB8AAAABAA8AAAABAA8AAAABAA8AAAABAA8AAAABAA8AAAABAA8AAAABAA4AAAABAA4AAAABAA4AAAABAA4AAAABAA4AAAABAA4AKABSAFoAYgBqAHIAegCCAIoAkgCaAKIAqgCyALoAwgDKANIA2gDkAPIA+gECAQoBEgEaASIBKgEyAToBQgFKAVIBWgFiAWoBcgF6AYIBigGSAAEAAAABAUgAAQAAAAEBZAABAAAAAQGQAAEAAAABAZoABAAAAAEBoAAGAAAAAQLuAAYBAAABB/gABgEAAAEKMgAEAAAAAQxSAAEAAAABEb4AAQAAAAESOgAGAAAAARJcAAYAAAABEnYAAQAAAAESmgABAAAAARK8AAEAAAABE4IAAQAAAAET2gAGAAAAAhQEFFYABgAAAAQUthTIFNoU7gABAAAAARUyAAQAAAABFYIAAwAAAAEVmgABAAAAARh6AAEAAAABGIAAAQAAAAEYlAABAAAAARiaAAEAAAABGLQAAQAAAAEYugABAAAAARkYAAMAAAABGhYAAQAAAAEcLgABAAAAARw4AAEAAAABHEIAAQEAAAEfEAABAQAAAR86AAEAAAABH0QAAQAAAAEfSgABAAAAAR9mAAEAAAABH2wAAQAAAAEfcgACAA4ABABqAO4AbADyAAIAAwBpAGkAAADtAO0AAQOdA54AAgACABIABgkpCSgH+gf8CAAH/gACAAUBPAE8AAABPgE+AAEDyAPIAAIDygPKAAMKLQouAAQAAgAKAAICSQJJAAEAAgFLCjIAAgAIAAECSAABAAECFQABAS4ACAAWADAASgBkAH4AmADCAOwAAwAIAA4AFAkxAAIJKAkyAAIJKQkzAAIJKgADAAgADgAUCAQAAgf+CAYAAggACAgAAggCAAMACAAOABQICgACB/4IDAACCAAIDgACCAIAAwAIAA4AFAkrAAIJKAksAAIJKQktAAIJKgADAAgADgAUCS4AAgkoCS8AAgkpCTAAAgkqAAQACgASABoAIggaAAMH+gf+CBsAAwf6CAAIHAADB/wH/ggdAAMH/AgAAAQACgASABoAIggeAAMH+gf+CB8AAwf6CAAIIAADB/wH/gghAAMH/AgAAAcAEAAYACAAKAAwADYAPAgiAAMKMQf+CCMAAwoxCAAIJAADCjIH/gglAAMKMggACBAAAgf+CBIAAggACBQAAggCAAIABgFHAUcAAAf6B/oAAQf8B/wAAgkmCScAAwoxCjIABQo0CjQABwADAAEAEgABAwQAAAABAAAAIAACAH0ABACCAAAAhACEAH8AhgCGAIAAiACIAIEAigCKAIIAjQCOAIMArgCwAIUAwADBAIgAzgDOAIoA0QDUAIsA5gDmAI8A7wDwAJABPQE9AJIBPwE/AJMBQQFBAJQBQwFDAJUBRgFGAJYBSAFIAJcBSgFKAJgBTAFMAJkBTgFOAJoBUQFRAJsBUwFTAJwBkAGwAJ0BsgGzAL4BtQG1AMABtwG3AMEBuQG6AMIBvQG9AMQBwAHAAMUByAHIAMYBywHLAMcB4AITAMgCFQIVAPwCKAIoAP0CNgI2AP4CQgJCAP8CRQJFAQACSAJIAQECSgJKAQICxgLGAQMCyALIAQQCygLKAQUCzALMAQYCzgLOAQcC0ALQAQgC0gLSAQkC1ALUAQoC1gLWAQsDuwO7AQwDvQO9AQ0DvwO/AQ4DwQPBAQ8DwwPDARADxQPFAREDxwPHARIDyQPJARMDywPLARQD0QPRARUD5wPnARYD6QPpARcD6wPrARgD7QPtARkD7wPvARoD9QP1ARsD9wP3ARwD+QP5AR0D+wP7AR4D/QP9AR8D/wP/ASAEBAQEASEEBgQGASIECAQIASMEDQQNASQEDwQPASUEEQQRASYEFwQXAScEGQQZASgEHQQdASkEIAQgASoEIgQiASsEJQQlASwEJwQnAS0EKgQqAS4ELAQsAS8ELgQuATAEMAQwATEEMgQyATIENAQ0ATMENgQ2ATQEOAQ4ATUEOgQ6ATYEPAQ8ATcEPgQ+ATgEQARAATkEQgRCAToERAREATsERgRGATwESgRKAT0ETARMAT4ETgROAT8EUARQAUAEUgRSAUEEVARUAUIEVwRXAUMH+wf7AUQH/Qf9AUUH/wf/AUYIAQgBAUcIAwgDAUgIBQgFAUkIBwgHAUoICQgJAUsICwgLAUwIDQgNAU0IDwgPAU4IEQgRAU8IEwgTAVAIFQgVAVEIGQgZAVIIJwgnAVMKBQoFAVQKBwoHAVUKCQoJAVYKCwoLAVcAAgBXAkkCSQAAAsUCxQABAscCxwACAskCyQADAssCywAEAs0CzQAFAs8CzwAGAtEC0QAHAtMC0wAIAtUC1QAJA7oDugAKA7wDvAALA74DvgAMA8ADwAANA8IDwgAOA8QDxAAPA8YDxgAQA8gDyAARA8oDygASA9AD0AATA+YD5gAUA+gD6AAVA+oD6gAWA+wD7AAXA+4D7gAYA/QD9AAZA/YD9gAaA/gD+AAbA/oD+gAcA/wD/AAdA/4D/gAeBAMEAwAfBAUEBQAgBAcEBwAhBAwEDAAiBA4EDgAjBBAEEAAkBBYEFgAlBBgEGAAmBBwEHAAnBB8EHwAoBCEEIQApBCQEJAAqBCYEJgArBCkEKQAsBCsEKwAtBC0ELQAuBC8ELwAvBDEEMQAwBDMEMwAxBDUENQAyBDcENwAzBDkEOQA0BDsEOwA1BD0EPQA2BD8EPwA3BEEEQQA4BEMEQwA5BEUERQA6BEkESQA7BEsESwA8BE0ETQA9BE8ETwA+BFEEUQA/BFMEUwBABFYEVgBBB/oH+gBCB/wH/ABDB/4H/gBECAAIAABFCAIIAgBGCAQIBABHCAYIBgBICAgICABJCAoICgBKCAwIDABLCA4IDgBMCBAIEABNCBIIEgBOCBQIFABPCBgIGABQCCYIJgBRCgQKBABSCgYKBgBTCggKCABUCgoKCgBVCi0KNwBWAAMAAAABABIAAQA0AAEAAAAhAAIABQCLAIsAAADJ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",
    "consolai.ttf": "",
    "consolaz.ttf": "",
    "sampleImage.jpg": ""
};

/*!
 DataTables 1.10.16
 ©2008-2017 SpryMedia Ltd - datatables.net/license
 */
(function (h) {
    "function" === typeof define && define.amd ? define(["jquery"], function (E) {
        return h(E, window, document)
    }) : "object" === typeof exports ? module.exports = function (E, G) {
        E || (E = window);
        G || (G = "undefined" !== typeof window ? require("jquery") : require("jquery")(E));
        return h(G, E, E.document)
    } : h(jQuery, window, document)
})(function (h, E, G, k) {
    function X(a) {
        var b, c, d = {};
        h.each(a, function (e) {
            if ((b = e.match(/^([^A-Z]+?)([A-Z])/)) && -1 !== "a aa ai ao as b fn i m o s ".indexOf(b[1] + " "))c = e.replace(b[0], b[2].toLowerCase()),
                d[c] = e, "o" === b[1] && X(a[e])
        });
        a._hungarianMap = d
    }

    function I(a, b, c) {
        a._hungarianMap || X(a);
        var d;
        h.each(b, function (e) {
            d = a._hungarianMap[e];
            if (d !== k && (c || b[d] === k))"o" === d.charAt(0) ? (b[d] || (b[d] = {}), h.extend(!0, b[d], b[e]), I(a[d], b[d], c)) : b[d] = b[e]
        })
    }

    function Ca(a) {
        var b = m.defaults.oLanguage, c = a.sZeroRecords;
        !a.sEmptyTable && (c && "No data available in table" === b.sEmptyTable) && F(a, a, "sZeroRecords", "sEmptyTable");
        !a.sLoadingRecords && (c && "Loading..." === b.sLoadingRecords) && F(a, a, "sZeroRecords", "sLoadingRecords");
        a.sInfoThousands && (a.sThousands = a.sInfoThousands);
        (a = a.sDecimal) && cb(a)
    }

    function db(a) {
        A(a, "ordering", "bSort");
        A(a, "orderMulti", "bSortMulti");
        A(a, "orderClasses", "bSortClasses");
        A(a, "orderCellsTop", "bSortCellsTop");
        A(a, "order", "aaSorting");
        A(a, "orderFixed", "aaSortingFixed");
        A(a, "paging", "bPaginate");
        A(a, "pagingType", "sPaginationType");
        A(a, "pageLength", "iDisplayLength");
        A(a, "searching", "bFilter");
        "boolean" === typeof a.sScrollX && (a.sScrollX = a.sScrollX ? "100%" : "");
        "boolean" === typeof a.scrollX && (a.scrollX =
            a.scrollX ? "100%" : "");
        if (a = a.aoSearchCols)for (var b = 0, c = a.length; b < c; b++)a[b] && I(m.models.oSearch, a[b])
    }

    function eb(a) {
        A(a, "orderable", "bSortable");
        A(a, "orderData", "aDataSort");
        A(a, "orderSequence", "asSorting");
        A(a, "orderDataType", "sortDataType");
        var b = a.aDataSort;
        "number" === typeof b && !h.isArray(b) && (a.aDataSort = [b])
    }

    function fb(a) {
        if (!m.__browser) {
            var b = {};
            m.__browser = b;
            var c = h("<div/>").css({
                position: "fixed",
                top: 0,
                left: -1 * h(E).scrollLeft(),
                height: 1,
                width: 1,
                overflow: "hidden"
            }).append(h("<div/>").css({
                position: "absolute",
                top: 1, left: 1, width: 100, overflow: "scroll"
            }).append(h("<div/>").css({
                width: "100%",
                height: 10
            }))).appendTo("body"), d = c.children(), e = d.children();
            b.barWidth = d[0].offsetWidth - d[0].clientWidth;
            b.bScrollOversize = 100 === e[0].offsetWidth && 100 !== d[0].clientWidth;
            b.bScrollbarLeft = 1 !== Math.round(e.offset().left);
            b.bBounding = c[0].getBoundingClientRect().width ? !0 : !1;
            c.remove()
        }
        h.extend(a.oBrowser, m.__browser);
        a.oScroll.iBarWidth = m.__browser.barWidth
    }

    function gb(a, b, c, d, e, f) {
        var g, j = !1;
        c !== k && (g = c, j = !0);
        for (; d !==
               e;)a.hasOwnProperty(d) && (g = j ? b(g, a[d], d, a) : a[d], j = !0, d += f);
        return g
    }

    function Da(a, b) {
        var c = m.defaults.column, d = a.aoColumns.length, c = h.extend({}, m.models.oColumn, c, {
            nTh: b ? b : G.createElement("th"),
            sTitle: c.sTitle ? c.sTitle : b ? b.innerHTML : "",
            aDataSort: c.aDataSort ? c.aDataSort : [d],
            mData: c.mData ? c.mData : d,
            idx: d
        });
        a.aoColumns.push(c);
        c = a.aoPreSearchCols;
        c[d] = h.extend({}, m.models.oSearch, c[d]);
        ja(a, d, h(b).data())
    }

    function ja(a, b, c) {
        var b = a.aoColumns[b], d = a.oClasses, e = h(b.nTh);
        if (!b.sWidthOrig) {
            b.sWidthOrig =
                e.attr("width") || null;
            var f = (e.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/);
            f && (b.sWidthOrig = f[1])
        }
        c !== k && null !== c && (eb(c), I(m.defaults.column, c), c.mDataProp !== k && !c.mData && (c.mData = c.mDataProp), c.sType && (b._sManualType = c.sType), c.className && !c.sClass && (c.sClass = c.className), c.sClass && e.addClass(c.sClass), h.extend(b, c), F(b, c, "sWidth", "sWidthOrig"), c.iDataSort !== k && (b.aDataSort = [c.iDataSort]), F(b, c, "aDataSort"));
        var g = b.mData, j = Q(g), i = b.mRender ? Q(b.mRender) : null, c = function (a) {
            return "string" === typeof a && -1 !== a.indexOf("@")
        };
        b._bAttrSrc = h.isPlainObject(g) && (c(g.sort) || c(g.type) || c(g.filter));
        b._setter = null;
        b.fnGetData = function (a, b, c) {
            var d = j(a, b, k, c);
            return i && b ? i(d, b, a, c) : d
        };
        b.fnSetData = function (a, b, c) {
            return R(g)(a, b, c)
        };
        "number" !== typeof g && (a._rowReadObject = !0);
        a.oFeatures.bSort || (b.bSortable = !1, e.addClass(d.sSortableNone));
        a = -1 !== h.inArray("asc", b.asSorting);
        c = -1 !== h.inArray("desc", b.asSorting);
        !b.bSortable || !a && !c ? (b.sSortingClass = d.sSortableNone, b.sSortingClassJUI = "") : a && !c ? (b.sSortingClass =
            d.sSortableAsc, b.sSortingClassJUI = d.sSortJUIAscAllowed) : !a && c ? (b.sSortingClass = d.sSortableDesc, b.sSortingClassJUI = d.sSortJUIDescAllowed) : (b.sSortingClass = d.sSortable, b.sSortingClassJUI = d.sSortJUI)
    }

    function Y(a) {
        if (!1 !== a.oFeatures.bAutoWidth) {
            var b = a.aoColumns;
            Ea(a);
            for (var c = 0, d = b.length; c < d; c++)b[c].nTh.style.width = b[c].sWidth
        }
        b = a.oScroll;
        ("" !== b.sY || "" !== b.sX) && ka(a);
        r(a, null, "column-sizing", [a])
    }

    function Z(a, b) {
        var c = la(a, "bVisible");
        return "number" === typeof c[b] ? c[b] : null
    }

    function $(a, b) {
        var c =
            la(a, "bVisible"), c = h.inArray(b, c);
        return -1 !== c ? c : null
    }

    function aa(a) {
        var b = 0;
        h.each(a.aoColumns, function (a, d) {
            d.bVisible && "none" !== h(d.nTh).css("display") && b++
        });
        return b
    }

    function la(a, b) {
        var c = [];
        h.map(a.aoColumns, function (a, e) {
            a[b] && c.push(e)
        });
        return c
    }

    function Fa(a) {
        var b = a.aoColumns, c = a.aoData, d = m.ext.type.detect, e, f, g, j, i, h, l, q, t;
        e = 0;
        for (f = b.length; e < f; e++)if (l = b[e], t = [], !l.sType && l._sManualType)l.sType = l._sManualType; else if (!l.sType) {
            g = 0;
            for (j = d.length; g < j; g++) {
                i = 0;
                for (h = c.length; i < h; i++) {
                    t[i] ===
                    k && (t[i] = B(a, i, e, "type"));
                    q = d[g](t[i], a);
                    if (!q && g !== d.length - 1)break;
                    if ("html" === q)break
                }
                if (q) {
                    l.sType = q;
                    break
                }
            }
            l.sType || (l.sType = "string")
        }
    }

    function hb(a, b, c, d) {
        var e, f, g, j, i, n, l = a.aoColumns;
        if (b)for (e = b.length - 1; 0 <= e; e--) {
            n = b[e];
            var q = n.targets !== k ? n.targets : n.aTargets;
            h.isArray(q) || (q = [q]);
            f = 0;
            for (g = q.length; f < g; f++)if ("number" === typeof q[f] && 0 <= q[f]) {
                for (; l.length <= q[f];)Da(a);
                d(q[f], n)
            } else if ("number" === typeof q[f] && 0 > q[f])d(l.length + q[f], n); else if ("string" === typeof q[f]) {
                j = 0;
                for (i = l.length; j <
                i; j++)("_all" == q[f] || h(l[j].nTh).hasClass(q[f])) && d(j, n)
            }
        }
        if (c) {
            e = 0;
            for (a = c.length; e < a; e++)d(e, c[e])
        }
    }

    function M(a, b, c, d) {
        var e = a.aoData.length, f = h.extend(!0, {}, m.models.oRow, {src: c ? "dom" : "data", idx: e});
        f._aData = b;
        a.aoData.push(f);
        for (var g = a.aoColumns, j = 0, i = g.length; j < i; j++)g[j].sType = null;
        a.aiDisplayMaster.push(e);
        b = a.rowIdFn(b);
        b !== k && (a.aIds[b] = f);
        (c || !a.oFeatures.bDeferRender) && Ga(a, e, c, d);
        return e
    }

    function ma(a, b) {
        var c;
        b instanceof h || (b = h(b));
        return b.map(function (b, e) {
            c = Ha(a, e);
            return M(a,
                c.data, e, c.cells)
        })
    }

    function B(a, b, c, d) {
        var e = a.iDraw, f = a.aoColumns[c], g = a.aoData[b]._aData, j = f.sDefaultContent, i = f.fnGetData(g, d, {
            settings: a,
            row: b,
            col: c
        });
        if (i === k)return a.iDrawError != e && null === j && (J(a, 0, "Requested unknown parameter " + ("function" == typeof f.mData ? "{function}" : "'" + f.mData + "'") + " for row " + b + ", column " + c, 4), a.iDrawError = e), j;
        if ((i === g || null === i) && null !== j && d !== k)i = j; else if ("function" === typeof i)return i.call(g);
        return null === i && "display" == d ? "" : i
    }

    function ib(a, b, c, d) {
        a.aoColumns[c].fnSetData(a.aoData[b]._aData,
            d, {settings: a, row: b, col: c})
    }

    function Ia(a) {
        return h.map(a.match(/(\\.|[^\.])+/g) || [""], function (a) {
            return a.replace(/\\\./g, ".")
        })
    }

    function Q(a) {
        if (h.isPlainObject(a)) {
            var b = {};
            h.each(a, function (a, c) {
                c && (b[a] = Q(c))
            });
            return function (a, c, f, g) {
                var j = b[c] || b._;
                return j !== k ? j(a, c, f, g) : a
            }
        }
        if (null === a)return function (a) {
            return a
        };
        if ("function" === typeof a)return function (b, c, f, g) {
            return a(b, c, f, g)
        };
        if ("string" === typeof a && (-1 !== a.indexOf(".") || -1 !== a.indexOf("[") || -1 !== a.indexOf("("))) {
            var c = function (a,
                              b, f) {
                var g, j;
                if ("" !== f) {
                    j = Ia(f);
                    for (var i = 0, n = j.length; i < n; i++) {
                        f = j[i].match(ba);
                        g = j[i].match(U);
                        if (f) {
                            j[i] = j[i].replace(ba, "");
                            "" !== j[i] && (a = a[j[i]]);
                            g = [];
                            j.splice(0, i + 1);
                            j = j.join(".");
                            if (h.isArray(a)) {
                                i = 0;
                                for (n = a.length; i < n; i++)g.push(c(a[i], b, j))
                            }
                            a = f[0].substring(1, f[0].length - 1);
                            a = "" === a ? g : g.join(a);
                            break
                        } else if (g) {
                            j[i] = j[i].replace(U, "");
                            a = a[j[i]]();
                            continue
                        }
                        if (null === a || a[j[i]] === k)return k;
                        a = a[j[i]]
                    }
                }
                return a
            };
            return function (b, e) {
                return c(b, e, a)
            }
        }
        return function (b) {
            return b[a]
        }
    }

    function R(a) {
        if (h.isPlainObject(a))return R(a._);
        if (null === a)return function () {
        };
        if ("function" === typeof a)return function (b, d, e) {
            a(b, "set", d, e)
        };
        if ("string" === typeof a && (-1 !== a.indexOf(".") || -1 !== a.indexOf("[") || -1 !== a.indexOf("("))) {
            var b = function (a, d, e) {
                var e = Ia(e), f;
                f = e[e.length - 1];
                for (var g, j, i = 0, n = e.length - 1; i < n; i++) {
                    g = e[i].match(ba);
                    j = e[i].match(U);
                    if (g) {
                        e[i] = e[i].replace(ba, "");
                        a[e[i]] = [];
                        f = e.slice();
                        f.splice(0, i + 1);
                        g = f.join(".");
                        if (h.isArray(d)) {
                            j = 0;
                            for (n = d.length; j < n; j++)f = {}, b(f, d[j], g), a[e[i]].push(f)
                        } else a[e[i]] = d;
                        return
                    }
                    j && (e[i] = e[i].replace(U,
                        ""), a = a[e[i]](d));
                    if (null === a[e[i]] || a[e[i]] === k)a[e[i]] = {};
                    a = a[e[i]]
                }
                if (f.match(U))a[f.replace(U, "")](d); else a[f.replace(ba, "")] = d
            };
            return function (c, d) {
                return b(c, d, a)
            }
        }
        return function (b, d) {
            b[a] = d
        }
    }

    function Ja(a) {
        return D(a.aoData, "_aData")
    }

    function na(a) {
        a.aoData.length = 0;
        a.aiDisplayMaster.length = 0;
        a.aiDisplay.length = 0;
        a.aIds = {}
    }

    function oa(a, b, c) {
        for (var d = -1, e = 0, f = a.length; e < f; e++)a[e] == b ? d = e : a[e] > b && a[e]--;
        -1 != d && c === k && a.splice(d, 1)
    }

    function ca(a, b, c, d) {
        var e = a.aoData[b], f, g = function (c, d) {
            for (; c.childNodes.length;)c.removeChild(c.firstChild);
            c.innerHTML = B(a, b, d, "display")
        };
        if ("dom" === c || (!c || "auto" === c) && "dom" === e.src)e._aData = Ha(a, e, d, d === k ? k : e._aData).data; else {
            var j = e.anCells;
            if (j)if (d !== k)g(j[d], d); else {
                c = 0;
                for (f = j.length; c < f; c++)g(j[c], c)
            }
        }
        e._aSortData = null;
        e._aFilterData = null;
        g = a.aoColumns;
        if (d !== k)g[d].sType = null; else {
            c = 0;
            for (f = g.length; c < f; c++)g[c].sType = null;
            Ka(a, e)
        }
    }

    function Ha(a, b, c, d) {
        var e = [], f = b.firstChild, g, j, i = 0, n, l = a.aoColumns, q = a._rowReadObject, d = d !== k ? d : q ? {} : [], t = function (a, b) {
            if ("string" === typeof a) {
                var c = a.indexOf("@");
                -1 !== c && (c = a.substring(c + 1), R(a)(d, b.getAttribute(c)))
            }
        }, m = function (a) {
            if (c === k || c === i)j = l[i], n = h.trim(a.innerHTML), j && j._bAttrSrc ? (R(j.mData._)(d, n), t(j.mData.sort, a), t(j.mData.type, a), t(j.mData.filter, a)) : q ? (j._setter || (j._setter = R(j.mData)), j._setter(d, n)) : d[i] = n;
            i++
        };
        if (f)for (; f;) {
            g = f.nodeName.toUpperCase();
            if ("TD" == g || "TH" == g)m(f), e.push(f);
            f = f.nextSibling
        } else {
            e = b.anCells;
            f = 0;
            for (g = e.length; f < g; f++)m(e[f])
        }
        if (b = b.firstChild ? b : b.nTr)(b = b.getAttribute("id")) && R(a.rowId)(d, b);
        return {data: d, cells: e}
    }

    function Ga(a, b, c, d) {
        var e = a.aoData[b], f = e._aData, g = [], j, i, n, l, q;
        if (null === e.nTr) {
            j = c || G.createElement("tr");
            e.nTr = j;
            e.anCells = g;
            j._DT_RowIndex = b;
            Ka(a, e);
            l = 0;
            for (q = a.aoColumns.length; l < q; l++) {
                n = a.aoColumns[l];
                i = c ? d[l] : G.createElement(n.sCellType);
                i._DT_CellIndex = {row: b, column: l};
                g.push(i);
                if ((!c || n.mRender || n.mData !== l) && (!h.isPlainObject(n.mData) || n.mData._ !== l + ".display"))i.innerHTML = B(a, b, l, "display");
                n.sClass && (i.className += " " + n.sClass);
                n.bVisible && !c ? j.appendChild(i) : !n.bVisible && c && i.parentNode.removeChild(i);
                n.fnCreatedCell && n.fnCreatedCell.call(a.oInstance, i, B(a, b, l), f, b, l)
            }
            r(a, "aoRowCreatedCallback", null, [j, f, b])
        }
        e.nTr.setAttribute("role", "row")
    }

    function Ka(a, b) {
        var c = b.nTr, d = b._aData;
        if (c) {
            var e = a.rowIdFn(d);
            e && (c.id = e);
            d.DT_RowClass && (e = d.DT_RowClass.split(" "), b.__rowc = b.__rowc ? qa(b.__rowc.concat(e)) : e, h(c).removeClass(b.__rowc.join(" ")).addClass(d.DT_RowClass));
            d.DT_RowAttr && h(c).attr(d.DT_RowAttr);
            d.DT_RowData && h(c).data(d.DT_RowData)
        }
    }

    function jb(a) {
        var b, c, d, e, f, g = a.nTHead, j = a.nTFoot, i = 0 ===
            h("th, td", g).length, n = a.oClasses, l = a.aoColumns;
        i && (e = h("<tr/>").appendTo(g));
        b = 0;
        for (c = l.length; b < c; b++)f = l[b], d = h(f.nTh).addClass(f.sClass), i && d.appendTo(e), a.oFeatures.bSort && (d.addClass(f.sSortingClass), !1 !== f.bSortable && (d.attr("tabindex", a.iTabIndex).attr("aria-controls", a.sTableId), La(a, f.nTh, b))), f.sTitle != d[0].innerHTML && d.html(f.sTitle), Ma(a, "header")(a, d, f, n);
        i && da(a.aoHeader, g);
        h(g).find(">tr").attr("role", "row");
        h(g).find(">tr>th, >tr>td").addClass(n.sHeaderTH);
        h(j).find(">tr>th, >tr>td").addClass(n.sFooterTH);
        if (null !== j) {
            a = a.aoFooter[0];
            b = 0;
            for (c = a.length; b < c; b++)f = l[b], f.nTf = a[b].cell, f.sClass && h(f.nTf).addClass(f.sClass)
        }
    }

    function ea(a, b, c) {
        var d, e, f, g = [], j = [], i = a.aoColumns.length, n;
        if (b) {
            c === k && (c = !1);
            d = 0;
            for (e = b.length; d < e; d++) {
                g[d] = b[d].slice();
                g[d].nTr = b[d].nTr;
                for (f = i - 1; 0 <= f; f--)!a.aoColumns[f].bVisible && !c && g[d].splice(f, 1);
                j.push([])
            }
            d = 0;
            for (e = g.length; d < e; d++) {
                if (a = g[d].nTr)for (; f = a.firstChild;)a.removeChild(f);
                f = 0;
                for (b = g[d].length; f < b; f++)if (n = i = 1, j[d][f] === k) {
                    a.appendChild(g[d][f].cell);
                    for (j[d][f] = 1; g[d + i] !== k && g[d][f].cell == g[d + i][f].cell;)j[d + i][f] = 1, i++;
                    for (; g[d][f + n] !== k && g[d][f].cell == g[d][f + n].cell;) {
                        for (c = 0; c < i; c++)j[d + c][f + n] = 1;
                        n++
                    }
                    h(g[d][f].cell).attr("rowspan", i).attr("colspan", n)
                }
            }
        }
    }

    function N(a) {
        var b = r(a, "aoPreDrawCallback", "preDraw", [a]);
        if (-1 !== h.inArray(!1, b))C(a, !1); else {
            var b = [], c = 0, d = a.asStripeClasses, e = d.length, f = a.oLanguage, g = a.iInitDisplayStart, j = "ssp" == y(a), i = a.aiDisplay;
            a.bDrawing = !0;
            g !== k && -1 !== g && (a._iDisplayStart = j ? g : g >= a.fnRecordsDisplay() ? 0 : g, a.iInitDisplayStart = -1);
            var g = a._iDisplayStart, n = a.fnDisplayEnd();
            if (a.bDeferLoading)a.bDeferLoading = !1, a.iDraw++, C(a, !1); else if (j) {
                if (!a.bDestroying && !kb(a))return
            } else a.iDraw++;
            if (0 !== i.length) {
                f = j ? a.aoData.length : n;
                for (j = j ? 0 : g; j < f; j++) {
                    var l = i[j], q = a.aoData[l];
                    null === q.nTr && Ga(a, l);
                    l = q.nTr;
                    if (0 !== e) {
                        var t = d[c % e];
                        q._sRowStripe != t && (h(l).removeClass(q._sRowStripe).addClass(t), q._sRowStripe = t)
                    }
                    r(a, "aoRowCallback", null, [l, q._aData, c, j]);
                    b.push(l);
                    c++
                }
            } else c = f.sZeroRecords, 1 == a.iDraw && "ajax" == y(a) ? c = f.sLoadingRecords :
            f.sEmptyTable && 0 === a.fnRecordsTotal() && (c = f.sEmptyTable), b[0] = h("<tr/>", {"class": e ? d[0] : ""}).append(h("<td />", {
                valign: "top",
                colSpan: aa(a),
                "class": a.oClasses.sRowEmpty
            }).html(c))[0];
            r(a, "aoHeaderCallback", "header", [h(a.nTHead).children("tr")[0], Ja(a), g, n, i]);
            r(a, "aoFooterCallback", "footer", [h(a.nTFoot).children("tr")[0], Ja(a), g, n, i]);
            d = h(a.nTBody);
            d.children().detach();
            d.append(h(b));
            r(a, "aoDrawCallback", "draw", [a]);
            a.bSorted = !1;
            a.bFiltered = !1;
            a.bDrawing = !1
        }
    }

    function S(a, b) {
        var c = a.oFeatures, d = c.bFilter;
        c.bSort && lb(a);
        d ? fa(a, a.oPreviousSearch) : a.aiDisplay = a.aiDisplayMaster.slice();
        !0 !== b && (a._iDisplayStart = 0);
        a._drawHold = b;
        N(a);
        a._drawHold = !1
    }

    function mb(a) {
        var b = a.oClasses, c = h(a.nTable), c = h("<div/>").insertBefore(c), d = a.oFeatures, e = h("<div/>", {
            id: a.sTableId + "_wrapper",
            "class": b.sWrapper + (a.nTFoot ? "" : " " + b.sNoFooter)
        });
        a.nHolding = c[0];
        a.nTableWrapper = e[0];
        a.nTableReinsertBefore = a.nTable.nextSibling;
        for (var f = a.sDom.split(""), g, j, i, n, l, q, k = 0; k < f.length; k++) {
            g = null;
            j = f[k];
            if ("<" == j) {
                i = h("<div/>")[0];
                n = f[k + 1];
                if ("'" == n || '"' == n) {
                    l = "";
                    for (q = 2; f[k + q] != n;)l += f[k + q], q++;
                    "H" == l ? l = b.sJUIHeader : "F" == l && (l = b.sJUIFooter);
                    -1 != l.indexOf(".") ? (n = l.split("."), i.id = n[0].substr(1, n[0].length - 1), i.className = n[1]) : "#" == l.charAt(0) ? i.id = l.substr(1, l.length - 1) : i.className = l;
                    k += q
                }
                e.append(i);
                e = h(i)
            } else if (">" == j)e = e.parent(); else if ("l" == j && d.bPaginate && d.bLengthChange)g = nb(a); else if ("f" == j && d.bFilter)g = ob(a); else if ("r" == j && d.bProcessing)g = pb(a); else if ("t" == j)g = qb(a); else if ("i" == j && d.bInfo)g = rb(a); else if ("p" ==
                j && d.bPaginate)g = sb(a); else if (0 !== m.ext.feature.length) {
                i = m.ext.feature;
                q = 0;
                for (n = i.length; q < n; q++)if (j == i[q].cFeature) {
                    g = i[q].fnInit(a);
                    break
                }
            }
            g && (i = a.aanFeatures, i[j] || (i[j] = []), i[j].push(g), e.append(g))
        }
        c.replaceWith(e);
        a.nHolding = null
    }

    function da(a, b) {
        var c = h(b).children("tr"), d, e, f, g, j, i, n, l, q, k;
        a.splice(0, a.length);
        f = 0;
        for (i = c.length; f < i; f++)a.push([]);
        f = 0;
        for (i = c.length; f < i; f++) {
            d = c[f];
            for (e = d.firstChild; e;) {
                if ("TD" == e.nodeName.toUpperCase() || "TH" == e.nodeName.toUpperCase()) {
                    l = 1 * e.getAttribute("colspan");
                    q = 1 * e.getAttribute("rowspan");
                    l = !l || 0 === l || 1 === l ? 1 : l;
                    q = !q || 0 === q || 1 === q ? 1 : q;
                    g = 0;
                    for (j = a[f]; j[g];)g++;
                    n = g;
                    k = 1 === l ? !0 : !1;
                    for (j = 0; j < l; j++)for (g = 0; g < q; g++)a[f + g][n + j] = {
                        cell: e,
                        unique: k
                    }, a[f + g].nTr = d
                }
                e = e.nextSibling
            }
        }
    }

    function ra(a, b, c) {
        var d = [];
        c || (c = a.aoHeader, b && (c = [], da(c, b)));
        for (var b = 0, e = c.length; b < e; b++)for (var f = 0, g = c[b].length; f < g; f++)if (c[b][f].unique && (!d[f] || !a.bSortCellsTop))d[f] = c[b][f].cell;
        return d
    }

    function sa(a, b, c) {
        r(a, "aoServerParams", "serverParams", [b]);
        if (b && h.isArray(b)) {
            var d = {},
                e = /(.*?)\[\]$/;
            h.each(b, function (a, b) {
                var c = b.name.match(e);
                c ? (c = c[0], d[c] || (d[c] = []), d[c].push(b.value)) : d[b.name] = b.value
            });
            b = d
        }
        var f, g = a.ajax, j = a.oInstance, i = function (b) {
            r(a, null, "xhr", [a, b, a.jqXHR]);
            c(b)
        };
        if (h.isPlainObject(g) && g.data) {
            f = g.data;
            var n = h.isFunction(f) ? f(b, a) : f, b = h.isFunction(f) && n ? n : h.extend(!0, b, n);
            delete g.data
        }
        n = {
            data: b, success: function (b) {
                var c = b.error || b.sError;
                c && J(a, 0, c);
                a.json = b;
                i(b)
            }, dataType: "json", cache: !1, type: a.sServerMethod, error: function (b, c) {
                var d = r(a, null, "xhr",
                    [a, null, a.jqXHR]);
                -1 === h.inArray(!0, d) && ("parsererror" == c ? J(a, 0, "Invalid JSON response", 1) : 4 === b.readyState && J(a, 0, "Ajax error", 7));
                C(a, !1)
            }
        };
        a.oAjaxData = b;
        r(a, null, "preXhr", [a, b]);
        a.fnServerData ? a.fnServerData.call(j, a.sAjaxSource, h.map(b, function (a, b) {
            return {name: b, value: a}
        }), i, a) : a.sAjaxSource || "string" === typeof g ? a.jqXHR = h.ajax(h.extend(n, {url: g || a.sAjaxSource})) : h.isFunction(g) ? a.jqXHR = g.call(j, b, i, a) : (a.jqXHR = h.ajax(h.extend(n, g)), g.data = f)
    }

    function kb(a) {
        return a.bAjaxDataGet ? (a.iDraw++, C(a,
            !0), sa(a, tb(a), function (b) {
            ub(a, b)
        }), !1) : !0
    }

    function tb(a) {
        var b = a.aoColumns, c = b.length, d = a.oFeatures, e = a.oPreviousSearch, f = a.aoPreSearchCols, g, j = [], i, n, l, k = V(a);
        g = a._iDisplayStart;
        i = !1 !== d.bPaginate ? a._iDisplayLength : -1;
        var t = function (a, b) {
            j.push({name: a, value: b})
        };
        t("sEcho", a.iDraw);
        t("iColumns", c);
        t("sColumns", D(b, "sName").join(","));
        t("iDisplayStart", g);
        t("iDisplayLength", i);
        var pa = {
            draw: a.iDraw,
            columns: [],
            order: [],
            start: g,
            length: i,
            search: {value: e.sSearch, regex: e.bRegex}
        };
        for (g = 0; g < c; g++)n = b[g],
            l = f[g], i = "function" == typeof n.mData ? "function" : n.mData, pa.columns.push({
            data: i,
            name: n.sName,
            searchable: n.bSearchable,
            orderable: n.bSortable,
            search: {value: l.sSearch, regex: l.bRegex}
        }), t("mDataProp_" + g, i), d.bFilter && (t("sSearch_" + g, l.sSearch), t("bRegex_" + g, l.bRegex), t("bSearchable_" + g, n.bSearchable)), d.bSort && t("bSortable_" + g, n.bSortable);
        d.bFilter && (t("sSearch", e.sSearch), t("bRegex", e.bRegex));
        d.bSort && (h.each(k, function (a, b) {
            pa.order.push({column: b.col, dir: b.dir});
            t("iSortCol_" + a, b.col);
            t("sSortDir_" +
                a, b.dir)
        }), t("iSortingCols", k.length));
        b = m.ext.legacy.ajax;
        return null === b ? a.sAjaxSource ? j : pa : b ? j : pa
    }

    function ub(a, b) {
        var c = ta(a, b), d = b.sEcho !== k ? b.sEcho : b.draw, e = b.iTotalRecords !== k ? b.iTotalRecords : b.recordsTotal, f = b.iTotalDisplayRecords !== k ? b.iTotalDisplayRecords : b.recordsFiltered;
        if (d) {
            if (1 * d < a.iDraw)return;
            a.iDraw = 1 * d
        }
        na(a);
        a._iRecordsTotal = parseInt(e, 10);
        a._iRecordsDisplay = parseInt(f, 10);
        d = 0;
        for (e = c.length; d < e; d++)M(a, c[d]);
        a.aiDisplay = a.aiDisplayMaster.slice();
        a.bAjaxDataGet = !1;
        N(a);
        a._bInitComplete ||
        ua(a, b);
        a.bAjaxDataGet = !0;
        C(a, !1)
    }

    function ta(a, b) {
        var c = h.isPlainObject(a.ajax) && a.ajax.dataSrc !== k ? a.ajax.dataSrc : a.sAjaxDataProp;
        return "data" === c ? b.aaData || b[c] : "" !== c ? Q(c)(b) : b
    }

    function ob(a) {
        var b = a.oClasses, c = a.sTableId, d = a.oLanguage, e = a.oPreviousSearch, f = a.aanFeatures, g = '<input type="search" class="form-control input-sm"/>', j = d.sSearch, j = j.match(/_INPUT_/) ? j.replace("_INPUT_", g) : j + g, b = h("<div/>", {
            id: !f.f ? c + "_filter" : null,
            "class": b.sFilter
        }).append(h("<label/>").append(j)), f = function () {
            var b = !this.value ?
                "" : this.value;
            b != e.sSearch && (fa(a, {
                sSearch: b,
                bRegex: e.bRegex,
                bSmart: e.bSmart,
                bCaseInsensitive: e.bCaseInsensitive
            }), a._iDisplayStart = 0, N(a))
        }, g = null !== a.searchDelay ? a.searchDelay : "ssp" === y(a) ? 400 : 0, i = h("input", b).val(e.sSearch).attr("placeholder", d.sSearchPlaceholder).on("keyup.DT search.DT input.DT paste.DT cut.DT", g ? Na(f, g) : f).on("keypress.DT", function (a) {
            if (13 == a.keyCode)return !1
        }).attr("aria-controls", c);
        h(a.nTable).on("search.dt.DT", function (b, c) {
            if (a === c)try {
                i[0] !== G.activeElement && i.val(e.sSearch)
            } catch (d) {
            }
        });
        return b[0]
    }

    function fa(a, b, c) {
        var d = a.oPreviousSearch, e = a.aoPreSearchCols, f = function (a) {
            d.sSearch = a.sSearch;
            d.bRegex = a.bRegex;
            d.bSmart = a.bSmart;
            d.bCaseInsensitive = a.bCaseInsensitive
        };
        Fa(a);
        if ("ssp" != y(a)) {
            vb(a, b.sSearch, c, b.bEscapeRegex !== k ? !b.bEscapeRegex : b.bRegex, b.bSmart, b.bCaseInsensitive);
            f(b);
            for (b = 0; b < e.length; b++)wb(a, e[b].sSearch, b, e[b].bEscapeRegex !== k ? !e[b].bEscapeRegex : e[b].bRegex, e[b].bSmart, e[b].bCaseInsensitive);
            xb(a)
        } else f(b);
        a.bFiltered = !0;
        r(a, null, "search", [a])
    }

    function xb(a) {
        for (var b =
            m.ext.search, c = a.aiDisplay, d, e, f = 0, g = b.length; f < g; f++) {
            for (var j = [], i = 0, n = c.length; i < n; i++)e = c[i], d = a.aoData[e], b[f](a, d._aFilterData, e, d._aData, i) && j.push(e);
            c.length = 0;
            h.merge(c, j)
        }
    }

    function wb(a, b, c, d, e, f) {
        if ("" !== b) {
            for (var g = [], j = a.aiDisplay, d = Oa(b, d, e, f), e = 0; e < j.length; e++)b = a.aoData[j[e]]._aFilterData[c], d.test(b) && g.push(j[e]);
            a.aiDisplay = g
        }
    }

    function vb(a, b, c, d, e, f) {
        var d = Oa(b, d, e, f), f = a.oPreviousSearch.sSearch, g = a.aiDisplayMaster, j, e = [];
        0 !== m.ext.search.length && (c = !0);
        j = yb(a);
        if (0 >= b.length)a.aiDisplay =
            g.slice(); else {
            if (j || c || f.length > b.length || 0 !== b.indexOf(f) || a.bSorted)a.aiDisplay = g.slice();
            b = a.aiDisplay;
            for (c = 0; c < b.length; c++)d.test(a.aoData[b[c]]._sFilterRow) && e.push(b[c]);
            a.aiDisplay = e
        }
    }

    function Oa(a, b, c, d) {
        a = b ? a : Pa(a);
        c && (a = "^(?=.*?" + h.map(a.match(/"[^"]+"|[^ ]+/g) || [""], function (a) {
                if ('"' === a.charAt(0))var b = a.match(/^"(.*)"$/), a = b ? b[1] : a;
                return a.replace('"', "")
            }).join(")(?=.*?") + ").*$");
        return RegExp(a, d ? "i" : "")
    }

    function yb(a) {
        var b = a.aoColumns, c, d, e, f, g, j, i, h, l = m.ext.type.search;
        c = !1;
        d = 0;
        for (f = a.aoData.length; d < f; d++)if (h = a.aoData[d], !h._aFilterData) {
            j = [];
            e = 0;
            for (g = b.length; e < g; e++)c = b[e], c.bSearchable ? (i = B(a, d, e, "filter"), l[c.sType] && (i = l[c.sType](i)), null === i && (i = ""), "string" !== typeof i && i.toString && (i = i.toString())) : i = "", i.indexOf && -1 !== i.indexOf("&") && (va.innerHTML = i, i = Wb ? va.textContent : va.innerText), i.replace && (i = i.replace(/[\r\n]/g, "")), j.push(i);
            h._aFilterData = j;
            h._sFilterRow = j.join("  ");
            c = !0
        }
        return c
    }

    function zb(a) {
        return {
            search: a.sSearch, smart: a.bSmart, regex: a.bRegex,
            caseInsensitive: a.bCaseInsensitive
        }
    }

    function Ab(a) {
        return {sSearch: a.search, bSmart: a.smart, bRegex: a.regex, bCaseInsensitive: a.caseInsensitive}
    }

    function rb(a) {
        var b = a.sTableId, c = a.aanFeatures.i, d = h("<div/>", {
            "class": a.oClasses.sInfo,
            id: !c ? b + "_info" : null
        });
        c || (a.aoDrawCallback.push({
            fn: Bb,
            sName: "information"
        }), d.attr("role", "status").attr("aria-live", "polite"), h(a.nTable).attr("aria-describedby", b + "_info"));
        return d[0]
    }

    function Bb(a) {
        var b = a.aanFeatures.i;
        if (0 !== b.length) {
            var c = a.oLanguage, d = a._iDisplayStart +
                1, e = a.fnDisplayEnd(), f = a.fnRecordsTotal(), g = a.fnRecordsDisplay(), j = g ? c.sInfo : c.sInfoEmpty;
            g !== f && (j += " " + c.sInfoFiltered);
            j += c.sInfoPostFix;
            j = Cb(a, j);
            c = c.fnInfoCallback;
            null !== c && (j = c.call(a.oInstance, a, d, e, f, g, j));
            h(b).html(j)
        }
    }

    function Cb(a, b) {
        var c = a.fnFormatNumber, d = a._iDisplayStart + 1, e = a._iDisplayLength, f = a.fnRecordsDisplay(), g = -1 === e;
        return b.replace(/_START_/g, c.call(a, d)).replace(/_END_/g, c.call(a, a.fnDisplayEnd())).replace(/_MAX_/g, c.call(a, a.fnRecordsTotal())).replace(/_TOTAL_/g, c.call(a,
            f)).replace(/_PAGE_/g, c.call(a, g ? 1 : Math.ceil(d / e))).replace(/_PAGES_/g, c.call(a, g ? 1 : Math.ceil(f / e)))
    }

    function ga(a) {
        var b, c, d = a.iInitDisplayStart, e = a.aoColumns, f;
        c = a.oFeatures;
        var g = a.bDeferLoading;
        if (a.bInitialised) {
            mb(a);
            jb(a);
            ea(a, a.aoHeader);
            ea(a, a.aoFooter);
            C(a, !0);
            c.bAutoWidth && Ea(a);
            b = 0;
            for (c = e.length; b < c; b++)f = e[b], f.sWidth && (f.nTh.style.width = v(f.sWidth));
            r(a, null, "preInit", [a]);
            S(a);
            e = y(a);
            if ("ssp" != e || g)"ajax" == e ? sa(a, [], function (c) {
                var f = ta(a, c);
                for (b = 0; b < f.length; b++)M(a, f[b]);
                a.iInitDisplayStart =
                    d;
                S(a);
                C(a, !1);
                ua(a, c)
            }, a) : (C(a, !1), ua(a))
        } else setTimeout(function () {
            ga(a)
        }, 200)
    }

    function ua(a, b) {
        a._bInitComplete = !0;
        (b || a.oInit.aaData) && Y(a);
        r(a, null, "plugin-init", [a, b]);
        r(a, "aoInitComplete", "init", [a, b])
    }

    function Qa(a, b) {
        var c = parseInt(b, 10);
        a._iDisplayLength = c;
        Ra(a);
        r(a, null, "length", [a, c])
    }

    function nb(a) {
        for (var b = a.oClasses, c = a.sTableId, d = a.aLengthMenu, e = h.isArray(d[0]), f = e ? d[0] : d, d = e ? d[1] : d, e = h("<select/>", {
            name: c + "_length",
            "aria-controls": c,
            "class": "form-control input-sm"
        }), g = 0, j = f.length; g < j; g++)e[0][g] =
            new Option("number" === typeof d[g] ? a.fnFormatNumber(d[g]) : d[g], f[g]);
        var i = h("<div><label/></div>").addClass(b.sLength);
        a.aanFeatures.l || (i[0].id = c + "_length");
        i.children().append(a.oLanguage.sLengthMenu.replace("_MENU_", e[0].outerHTML));
        h("select", i).val(a._iDisplayLength).on("change.DT", function () {
            Qa(a, h(this).val());
            N(a)
        });
        h(a.nTable).on("length.dt.DT", function (b, c, d) {
            a === c && h("select", i).val(d)
        });
        return i[0]
    }

    function sb(a) {
        var b = a.sPaginationType, c = m.ext.pager[b], d = "function" === typeof c, e = function (a) {
                N(a)
            },
            b = h("<div/>").addClass(a.oClasses.sPaging + b)[0], f = a.aanFeatures;
        d || c.fnInit(a, b, e);
        f.p || (b.id = a.sTableId + "_paginate", a.aoDrawCallback.push({
            fn: function (a) {
                if (d) {
                    var b = a._iDisplayStart, i = a._iDisplayLength, h = a.fnRecordsDisplay(), l = -1 === i, b = l ? 0 : Math.ceil(b / i), i = l ? 1 : Math.ceil(h / i), h = c(b, i), k, l = 0;
                    for (k = f.p.length; l < k; l++)Ma(a, "pageButton")(a, f.p[l], l, h, b, i)
                } else c.fnUpdate(a, e)
            }, sName: "pagination"
        }));
        return b
    }

    function Sa(a, b, c) {
        var d = a._iDisplayStart, e = a._iDisplayLength, f = a.fnRecordsDisplay();
        0 === f || -1 ===
        e ? d = 0 : "number" === typeof b ? (d = b * e, d > f && (d = 0)) : "first" == b ? d = 0 : "previous" == b ? (d = 0 <= e ? d - e : 0, 0 > d && (d = 0)) : "next" == b ? d + e < f && (d += e) : "last" == b ? d = Math.floor((f - 1) / e) * e : J(a, 0, "Unknown paging action: " + b, 5);
        b = a._iDisplayStart !== d;
        a._iDisplayStart = d;
        b && (r(a, null, "page", [a]), c && N(a));
        return b
    }

    function pb(a) {
        return h("<div/>", {
            id: !a.aanFeatures.r ? a.sTableId + "_processing" : null,
            "class": a.oClasses.sProcessing
        }).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]
    }

    function C(a, b) {
        a.oFeatures.bProcessing && h(a.aanFeatures.r).css("display",
            b ? "block" : "none");
        r(a, null, "processing", [a, b])
    }

    function qb(a) {
        var b = h(a.nTable);
        b.attr("role", "grid");
        var c = a.oScroll;
        if ("" === c.sX && "" === c.sY)return a.nTable;
        var d = c.sX, e = c.sY, f = a.oClasses, g = b.children("caption"), j = g.length ? g[0]._captionSide : null, i = h(b[0].cloneNode(!1)), n = h(b[0].cloneNode(!1)), l = b.children("tfoot");
        l.length || (l = null);
        i = h("<div/>", {"class": f.sScrollWrapper}).append(h("<div/>", {"class": f.sScrollHead}).css({
            overflow: "hidden",
            position: "relative",
            border: 0,
            width: d ? !d ? null : v(d) : "100%"
        }).append(h("<div/>",
            {"class": f.sScrollHeadInner}).css({
            "box-sizing": "content-box",
            width: c.sXInner || "100%"
        }).append(i.removeAttr("id").css("margin-left", 0).append("top" === j ? g : null).append(b.children("thead"))))).append(h("<div/>", {"class": f.sScrollBody}).css({
            position: "relative",
            overflow: "auto",
            width: !d ? null : v(d)
        }).append(b));
        l && i.append(h("<div/>", {"class": f.sScrollFoot}).css({
            overflow: "hidden",
            border: 0,
            width: d ? !d ? null : v(d) : "100%"
        }).append(h("<div/>", {"class": f.sScrollFootInner}).append(n.removeAttr("id").css("margin-left",
            0).append("bottom" === j ? g : null).append(b.children("tfoot")))));
        var b = i.children(), k = b[0], f = b[1], t = l ? b[2] : null;
        if (d)h(f).on("scroll.DT", function () {
            var a = this.scrollLeft;
            k.scrollLeft = a;
            l && (t.scrollLeft = a)
        });
        h(f).css(e && c.bCollapse ? "max-height" : "height", e);
        a.nScrollHead = k;
        a.nScrollBody = f;
        a.nScrollFoot = t;
        a.aoDrawCallback.push({fn: ka, sName: "scrolling"});
        return i[0]
    }

    function ka(a) {
        var b = a.oScroll, c = b.sX, d = b.sXInner, e = b.sY, b = b.iBarWidth, f = h(a.nScrollHead), g = f[0].style, j = f.children("div"), i = j[0].style, n = j.children("table"),
            j = a.nScrollBody, l = h(j), q = j.style, t = h(a.nScrollFoot).children("div"), m = t.children("table"), o = h(a.nTHead), p = h(a.nTable), s = p[0], r = s.style, u = a.nTFoot ? h(a.nTFoot) : null, x = a.oBrowser, T = x.bScrollOversize, Xb = D(a.aoColumns, "nTh"), O, K, P, w, Ta = [], y = [], z = [], A = [], B, C = function (a) {
                a = a.style;
                a.paddingTop = "0";
                a.paddingBottom = "0";
                a.borderTopWidth = "0";
                a.borderBottomWidth = "0";
                a.height = 0
            };
        K = j.scrollHeight > j.clientHeight;
        if (a.scrollBarVis !== K && a.scrollBarVis !== k)a.scrollBarVis = K, Y(a); else {
            a.scrollBarVis = K;
            p.children("thead, tfoot").remove();
            u && (P = u.clone().prependTo(p), O = u.find("tr"), P = P.find("tr"));
            w = o.clone().prependTo(p);
            o = o.find("tr");
            K = w.find("tr");
            w.find("th, td").removeAttr("tabindex");
            c || (q.width = "100%", f[0].style.width = "100%");
            h.each(ra(a, w), function (b, c) {
                B = Z(a, b);
                c.style.width = a.aoColumns[B].sWidth
            });
            u && H(function (a) {
                a.style.width = ""
            }, P);
            f = p.outerWidth();
            if ("" === c) {
                r.width = "100%";
                if (T && (p.find("tbody").height() > j.offsetHeight || "scroll" == l.css("overflow-y")))r.width = v(p.outerWidth() - b);
                f = p.outerWidth()
            } else"" !== d && (r.width =
                v(d), f = p.outerWidth());
            H(C, K);
            H(function (a) {
                z.push(a.innerHTML);
                Ta.push(v(h(a).css("width")))
            }, K);
            H(function (a, b) {
                if (h.inArray(a, Xb) !== -1)a.style.width = Ta[b]
            }, o);
            h(K).height(0);
            u && (H(C, P), H(function (a) {
                A.push(a.innerHTML);
                y.push(v(h(a).css("width")))
            }, P), H(function (a, b) {
                a.style.width = y[b]
            }, O), h(P).height(0));
            H(function (a, b) {
                a.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">' + z[b] + "</div>";
                a.style.width = Ta[b]
            }, K);
            u && H(function (a, b) {
                a.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">' +
                    A[b] + "</div>";
                a.style.width = y[b]
            }, P);
            if (p.outerWidth() < f) {
                O = j.scrollHeight > j.offsetHeight || "scroll" == l.css("overflow-y") ? f + b : f;
                if (T && (j.scrollHeight > j.offsetHeight || "scroll" == l.css("overflow-y")))r.width = v(O - b);
                ("" === c || "" !== d) && J(a, 1, "Possible column misalignment", 6)
            } else O = "100%";
            q.width = v(O);
            g.width = v(O);
            u && (a.nScrollFoot.style.width = v(O));
            !e && T && (q.height = v(s.offsetHeight + b));
            c = p.outerWidth();
            n[0].style.width = v(c);
            i.width = v(c);
            d = p.height() > j.clientHeight || "scroll" == l.css("overflow-y");
            e = "padding" +
                (x.bScrollbarLeft ? "Left" : "Right");
            i[e] = d ? b + "px" : "0px";
            u && (m[0].style.width = v(c), t[0].style.width = v(c), t[0].style[e] = d ? b + "px" : "0px");
            p.children("colgroup").insertBefore(p.children("thead"));
            l.scroll();
            if ((a.bSorted || a.bFiltered) && !a._drawHold)j.scrollTop = 0
        }
    }

    function H(a, b, c) {
        for (var d = 0, e = 0, f = b.length, g, j; e < f;) {
            g = b[e].firstChild;
            for (j = c ? c[e].firstChild : null; g;)1 === g.nodeType && (c ? a(g, j, d) : a(g, d), d++), g = g.nextSibling, j = c ? j.nextSibling : null;
            e++
        }
    }

    function Ea(a) {
        var b = a.nTable, c = a.aoColumns, d = a.oScroll,
            e = d.sY, f = d.sX, g = d.sXInner, j = c.length, i = la(a, "bVisible"), n = h("th", a.nTHead), l = b.getAttribute("width"), k = b.parentNode, t = !1, m, o, p = a.oBrowser, d = p.bScrollOversize;
        (m = b.style.width) && -1 !== m.indexOf("%") && (l = m);
        for (m = 0; m < i.length; m++)o = c[i[m]], null !== o.sWidth && (o.sWidth = Db(o.sWidthOrig, k), t = !0);
        if (d || !t && !f && !e && j == aa(a) && j == n.length)for (m = 0; m < j; m++)i = Z(a, m), null !== i && (c[i].sWidth = v(n.eq(m).width())); else {
            j = h(b).clone().css("visibility", "hidden").removeAttr("id");
            j.find("tbody tr").remove();
            var s = h("<tr/>").appendTo(j.find("tbody"));
            j.find("thead, tfoot").remove();
            j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());
            j.find("tfoot th, tfoot td").css("width", "");
            n = ra(a, j.find("thead")[0]);
            for (m = 0; m < i.length; m++)o = c[i[m]], n[m].style.width = null !== o.sWidthOrig && "" !== o.sWidthOrig ? v(o.sWidthOrig) : "", o.sWidthOrig && f && h(n[m]).append(h("<div/>").css({
                width: o.sWidthOrig,
                margin: 0,
                padding: 0,
                border: 0,
                height: 1
            }));
            if (a.aoData.length)for (m = 0; m < i.length; m++)t = i[m], o = c[t], h(Eb(a, t)).clone(!1).append(o.sContentPadding).appendTo(s);
            h("[name]",
                j).removeAttr("name");
            o = h("<div/>").css(f || e ? {
                position: "absolute",
                top: 0,
                left: 0,
                height: 1,
                right: 0,
                overflow: "hidden"
            } : {}).append(j).appendTo(k);
            f && g ? j.width(g) : f ? (j.css("width", "auto"), j.removeAttr("width"), j.width() < k.clientWidth && l && j.width(k.clientWidth)) : e ? j.width(k.clientWidth) : l && j.width(l);
            for (m = e = 0; m < i.length; m++)k = h(n[m]), g = k.outerWidth() - k.width(), k = p.bBounding ? Math.ceil(n[m].getBoundingClientRect().width) : k.outerWidth(), e += k, c[i[m]].sWidth = v(k - g);
            b.style.width = v(e);
            o.remove()
        }
        l && (b.style.width =
            v(l));
        if ((l || f) && !a._reszEvt)b = function () {
            h(E).on("resize.DT-" + a.sInstance, Na(function () {
                Y(a)
            }))
        }, d ? setTimeout(b, 1E3) : b(), a._reszEvt = !0
    }

    function Db(a, b) {
        if (!a)return 0;
        var c = h("<div/>").css("width", v(a)).appendTo(b || G.body), d = c[0].offsetWidth;
        c.remove();
        return d
    }

    function Eb(a, b) {
        var c = Fb(a, b);
        if (0 > c)return null;
        var d = a.aoData[c];
        return !d.nTr ? h("<td/>").html(B(a, c, b, "display"))[0] : d.anCells[b]
    }

    function Fb(a, b) {
        for (var c, d = -1, e = -1, f = 0, g = a.aoData.length; f < g; f++)c = B(a, f, b, "display") + "", c = c.replace(Yb,
            ""), c = c.replace(/&nbsp;/g, " "), c.length > d && (d = c.length, e = f);
        return e
    }

    function v(a) {
        return null === a ? "0px" : "number" == typeof a ? 0 > a ? "0px" : a + "px" : a.match(/\d$/) ? a + "px" : a
    }

    function V(a) {
        var b, c, d = [], e = a.aoColumns, f, g, j, i;
        b = a.aaSortingFixed;
        c = h.isPlainObject(b);
        var n = [];
        f = function (a) {
            a.length && !h.isArray(a[0]) ? n.push(a) : h.merge(n, a)
        };
        h.isArray(b) && f(b);
        c && b.pre && f(b.pre);
        f(a.aaSorting);
        c && b.post && f(b.post);
        for (a = 0; a < n.length; a++) {
            i = n[a][0];
            f = e[i].aDataSort;
            b = 0;
            for (c = f.length; b < c; b++)g = f[b], j = e[g].sType ||
                "string", n[a]._idx === k && (n[a]._idx = h.inArray(n[a][1], e[g].asSorting)), d.push({
                src: i,
                col: g,
                dir: n[a][1],
                index: n[a]._idx,
                type: j,
                formatter: m.ext.type.order[j + "-pre"]
            })
        }
        return d
    }

    function lb(a) {
        var b, c, d = [], e = m.ext.type.order, f = a.aoData, g = 0, j, i = a.aiDisplayMaster, h;
        Fa(a);
        h = V(a);
        b = 0;
        for (c = h.length; b < c; b++)j = h[b], j.formatter && g++, Gb(a, j.col);
        if ("ssp" != y(a) && 0 !== h.length) {
            b = 0;
            for (c = i.length; b < c; b++)d[i[b]] = b;
            g === h.length ? i.sort(function (a, b) {
                var c, e, g, j, i = h.length, k = f[a]._aSortData, m = f[b]._aSortData;
                for (g =
                         0; g < i; g++)if (j = h[g], c = k[j.col], e = m[j.col], c = c < e ? -1 : c > e ? 1 : 0, 0 !== c)return "asc" === j.dir ? c : -c;
                c = d[a];
                e = d[b];
                return c < e ? -1 : c > e ? 1 : 0
            }) : i.sort(function (a, b) {
                var c, g, j, i, k = h.length, m = f[a]._aSortData, o = f[b]._aSortData;
                for (j = 0; j < k; j++)if (i = h[j], c = m[i.col], g = o[i.col], i = e[i.type + "-" + i.dir] || e["string-" + i.dir], c = i(c, g), 0 !== c)return c;
                c = d[a];
                g = d[b];
                return c < g ? -1 : c > g ? 1 : 0
            })
        }
        a.bSorted = !0
    }

    function Hb(a) {
        for (var b, c, d = a.aoColumns, e = V(a), a = a.oLanguage.oAria, f = 0, g = d.length; f < g; f++) {
            c = d[f];
            var j = c.asSorting;
            b = c.sTitle.replace(/<.*?>/g,
                "");
            var i = c.nTh;
            i.removeAttribute("aria-sort");
            c.bSortable && (0 < e.length && e[0].col == f ? (i.setAttribute("aria-sort", "asc" == e[0].dir ? "ascending" : "descending"), c = j[e[0].index + 1] || j[0]) : c = j[0], b += "asc" === c ? a.sSortAscending : a.sSortDescending);
            i.setAttribute("aria-label", b)
        }
    }

    function Ua(a, b, c, d) {
        var e = a.aaSorting, f = a.aoColumns[b].asSorting, g = function (a, b) {
            var c = a._idx;
            c === k && (c = h.inArray(a[1], f));
            return c + 1 < f.length ? c + 1 : b ? null : 0
        };
        "number" === typeof e[0] && (e = a.aaSorting = [e]);
        c && a.oFeatures.bSortMulti ? (c = h.inArray(b,
            D(e, "0")), -1 !== c ? (b = g(e[c], !0), null === b && 1 === e.length && (b = 0), null === b ? e.splice(c, 1) : (e[c][1] = f[b], e[c]._idx = b)) : (e.push([b, f[0], 0]), e[e.length - 1]._idx = 0)) : e.length && e[0][0] == b ? (b = g(e[0]), e.length = 1, e[0][1] = f[b], e[0]._idx = b) : (e.length = 0, e.push([b, f[0]]), e[0]._idx = 0);
        S(a);
        "function" == typeof d && d(a)
    }

    function La(a, b, c, d) {
        var e = a.aoColumns[c];
        Va(b, {}, function (b) {
            !1 !== e.bSortable && (a.oFeatures.bProcessing ? (C(a, !0), setTimeout(function () {
                Ua(a, c, b.shiftKey, d);
                "ssp" !== y(a) && C(a, !1)
            }, 0)) : Ua(a, c, b.shiftKey, d))
        })
    }

    function wa(a) {
        var b = a.aLastSort, c = a.oClasses.sSortColumn, d = V(a), e = a.oFeatures, f, g;
        if (e.bSort && e.bSortClasses) {
            e = 0;
            for (f = b.length; e < f; e++)g = b[e].src, h(D(a.aoData, "anCells", g)).removeClass(c + (2 > e ? e + 1 : 3));
            e = 0;
            for (f = d.length; e < f; e++)g = d[e].src, h(D(a.aoData, "anCells", g)).addClass(c + (2 > e ? e + 1 : 3))
        }
        a.aLastSort = d
    }

    function Gb(a, b) {
        var c = a.aoColumns[b], d = m.ext.order[c.sSortDataType], e;
        d && (e = d.call(a.oInstance, a, b, $(a, b)));
        for (var f, g = m.ext.type.order[c.sType + "-pre"], j = 0, i = a.aoData.length; j < i; j++)if (c = a.aoData[j],
            c._aSortData || (c._aSortData = []), !c._aSortData[b] || d)f = d ? e[j] : B(a, j, b, "sort"), c._aSortData[b] = g ? g(f) : f
    }

    function xa(a) {
        if (a.oFeatures.bStateSave && !a.bDestroying) {
            var b = {
                time: +new Date,
                start: a._iDisplayStart,
                length: a._iDisplayLength,
                order: h.extend(!0, [], a.aaSorting),
                search: zb(a.oPreviousSearch),
                columns: h.map(a.aoColumns, function (b, d) {
                    return {visible: b.bVisible, search: zb(a.aoPreSearchCols[d])}
                })
            };
            r(a, "aoStateSaveParams", "stateSaveParams", [a, b]);
            a.oSavedState = b;
            a.fnStateSaveCallback.call(a.oInstance, a,
                b)
        }
    }

    function Ib(a, b, c) {
        var d, e, f = a.aoColumns, b = function (b) {
            if (b && b.time) {
                var g = r(a, "aoStateLoadParams", "stateLoadParams", [a, b]);
                if (-1 === h.inArray(!1, g) && (g = a.iStateDuration, !(0 < g && b.time < +new Date - 1E3 * g) && !(b.columns && f.length !== b.columns.length))) {
                    a.oLoadedState = h.extend(!0, {}, b);
                    b.start !== k && (a._iDisplayStart = b.start, a.iInitDisplayStart = b.start);
                    b.length !== k && (a._iDisplayLength = b.length);
                    b.order !== k && (a.aaSorting = [], h.each(b.order, function (b, c) {
                        a.aaSorting.push(c[0] >= f.length ? [0, c[1]] : c)
                    }));
                    b.search !==
                    k && h.extend(a.oPreviousSearch, Ab(b.search));
                    if (b.columns) {
                        d = 0;
                        for (e = b.columns.length; d < e; d++)g = b.columns[d], g.visible !== k && (f[d].bVisible = g.visible), g.search !== k && h.extend(a.aoPreSearchCols[d], Ab(g.search))
                    }
                    r(a, "aoStateLoaded", "stateLoaded", [a, b])
                }
            }
            c()
        };
        if (a.oFeatures.bStateSave) {
            var g = a.fnStateLoadCallback.call(a.oInstance, a, b);
            g !== k && b(g)
        } else c()
    }

    function ya(a) {
        var b = m.settings, a = h.inArray(a, D(b, "nTable"));
        return -1 !== a ? b[a] : null
    }

    function J(a, b, c, d) {
        c = "DataTables warning: " + (a ? "table id=" + a.sTableId +
            " - " : "") + c;
        d && (c += ". For more information about this error, please see http://datatables.net/tn/" + d);
        if (b)E.console && console.log && console.log(c); else if (b = m.ext, b = b.sErrMode || b.errMode, a && r(a, null, "error", [a, d, c]), "alert" == b)alert(c); else {
            if ("throw" == b)throw Error(c);
            "function" == typeof b && b(a, d, c)
        }
    }

    function F(a, b, c, d) {
        h.isArray(c) ? h.each(c, function (c, d) {
            h.isArray(d) ? F(a, b, d[0], d[1]) : F(a, b, d)
        }) : (d === k && (d = c), b[c] !== k && (a[d] = b[c]))
    }

    function Jb(a, b, c) {
        var d, e;
        for (e in b)b.hasOwnProperty(e) && (d = b[e],
            h.isPlainObject(d) ? (h.isPlainObject(a[e]) || (a[e] = {}), h.extend(!0, a[e], d)) : a[e] = c && "data" !== e && "aaData" !== e && h.isArray(d) ? d.slice() : d);
        return a
    }

    function Va(a, b, c) {
        h(a).on("click.DT", b, function (b) {
            a.blur();
            c(b)
        }).on("keypress.DT", b, function (a) {
            13 === a.which && (a.preventDefault(), c(a))
        }).on("selectstart.DT", function () {
            return !1
        })
    }

    function z(a, b, c, d) {
        c && a[b].push({fn: c, sName: d})
    }

    function r(a, b, c, d) {
        var e = [];
        b && (e = h.map(a[b].slice().reverse(), function (b) {
            return b.fn.apply(a.oInstance, d)
        }));
        null !== c && (b = h.Event(c +
            ".dt"), h(a.nTable).trigger(b, d), e.push(b.result));
        return e
    }

    function Ra(a) {
        var b = a._iDisplayStart, c = a.fnDisplayEnd(), d = a._iDisplayLength;
        b >= c && (b = c - d);
        b -= b % d;
        if (-1 === d || 0 > b)b = 0;
        a._iDisplayStart = b
    }

    function Ma(a, b) {
        var c = a.renderer, d = m.ext.renderer[b];
        return h.isPlainObject(c) && c[b] ? d[c[b]] || d._ : "string" === typeof c ? d[c] || d._ : d._
    }

    function y(a) {
        return a.oFeatures.bServerSide ? "ssp" : a.ajax || a.sAjaxSource ? "ajax" : "dom"
    }

    function ha(a, b) {
        var c = [], c = Kb.numbers_length, d = Math.floor(c / 2);
        b <= c ? c = W(0, b) : a <= d ? (c = W(0,
            c - 2), c.push("ellipsis"), c.push(b - 1)) : (a >= b - 1 - d ? c = W(b - (c - 2), b) : (c = W(a - d + 2, a + d - 1), c.push("ellipsis"), c.push(b - 1)), c.splice(0, 0, "ellipsis"), c.splice(0, 0, 0));
        c.DT_el = "span";
        return c
    }

    function cb(a) {
        h.each({
            num: function (b) {
                return za(b, a)
            }, "num-fmt": function (b) {
                return za(b, a, Wa)
            }, "html-num": function (b) {
                return za(b, a, Aa)
            }, "html-num-fmt": function (b) {
                return za(b, a, Aa, Wa)
            }
        }, function (b, c) {
            x.type.order[b + a + "-pre"] = c;
            b.match(/^html\-/) && (x.type.search[b + a] = x.type.search.html)
        })
    }

    function Lb(a) {
        return function () {
            var b =
                [ya(this[m.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));
            return m.ext.internal[a].apply(this, b)
        }
    }

    var m = function (a) {
        this.$ = function (a, b) {
            return this.api(!0).$(a, b)
        };
        this._ = function (a, b) {
            return this.api(!0).rows(a, b).data()
        };
        this.api = function (a) {
            return a ? new s(ya(this[x.iApiIndex])) : new s(this)
        };
        this.fnAddData = function (a, b) {
            var c = this.api(!0), d = h.isArray(a) && (h.isArray(a[0]) || h.isPlainObject(a[0])) ? c.rows.add(a) : c.row.add(a);
            (b === k || b) && c.draw();
            return d.flatten().toArray()
        };
        this.fnAdjustColumnSizing =
            function (a) {
                var b = this.api(!0).columns.adjust(), c = b.settings()[0], d = c.oScroll;
                a === k || a ? b.draw(!1) : ("" !== d.sX || "" !== d.sY) && ka(c)
            };
        this.fnClearTable = function (a) {
            var b = this.api(!0).clear();
            (a === k || a) && b.draw()
        };
        this.fnClose = function (a) {
            this.api(!0).row(a).child.hide()
        };
        this.fnDeleteRow = function (a, b, c) {
            var d = this.api(!0), a = d.rows(a), e = a.settings()[0], h = e.aoData[a[0][0]];
            a.remove();
            b && b.call(this, e, h);
            (c === k || c) && d.draw();
            return h
        };
        this.fnDestroy = function (a) {
            this.api(!0).destroy(a)
        };
        this.fnDraw = function (a) {
            this.api(!0).draw(a)
        };
        this.fnFilter = function (a, b, c, d, e, h) {
            e = this.api(!0);
            null === b || b === k ? e.search(a, c, d, h) : e.column(b).search(a, c, d, h);
            e.draw()
        };
        this.fnGetData = function (a, b) {
            var c = this.api(!0);
            if (a !== k) {
                var d = a.nodeName ? a.nodeName.toLowerCase() : "";
                return b !== k || "td" == d || "th" == d ? c.cell(a, b).data() : c.row(a).data() || null
            }
            return c.data().toArray()
        };
        this.fnGetNodes = function (a) {
            var b = this.api(!0);
            return a !== k ? b.row(a).node() : b.rows().nodes().flatten().toArray()
        };
        this.fnGetPosition = function (a) {
            var b = this.api(!0), c = a.nodeName.toUpperCase();
            return "TR" == c ? b.row(a).index() : "TD" == c || "TH" == c ? (a = b.cell(a).index(), [a.row, a.columnVisible, a.column]) : null
        };
        this.fnIsOpen = function (a) {
            return this.api(!0).row(a).child.isShown()
        };
        this.fnOpen = function (a, b, c) {
            return this.api(!0).row(a).child(b, c).show().child()[0]
        };
        this.fnPageChange = function (a, b) {
            var c = this.api(!0).page(a);
            (b === k || b) && c.draw(!1)
        };
        this.fnSetColumnVis = function (a, b, c) {
            a = this.api(!0).column(a).visible(b);
            (c === k || c) && a.columns.adjust().draw()
        };
        this.fnSettings = function () {
            return ya(this[x.iApiIndex])
        };
        this.fnSort = function (a) {
            this.api(!0).order(a).draw()
        };
        this.fnSortListener = function (a, b, c) {
            this.api(!0).order.listener(a, b, c)
        };
        this.fnUpdate = function (a, b, c, d, e) {
            var h = this.api(!0);
            c === k || null === c ? h.row(b).data(a) : h.cell(b, c).data(a);
            (e === k || e) && h.columns.adjust();
            (d === k || d) && h.draw();
            return 0
        };
        this.fnVersionCheck = x.fnVersionCheck;
        var b = this, c = a === k, d = this.length;
        c && (a = {});
        this.oApi = this.internal = x.internal;
        for (var e in m.ext.internal)e && (this[e] = Lb(e));
        this.each(function () {
            var e = {}, g = 1 < d ? Jb(e, a, !0) :
                a, j = 0, i, e = this.getAttribute("id"), n = !1, l = m.defaults, q = h(this);
            if ("table" != this.nodeName.toLowerCase())J(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2); else {
                db(l);
                eb(l.column);
                I(l, l, !0);
                I(l.column, l.column, !0);
                I(l, h.extend(g, q.data()));
                var t = m.settings, j = 0;
                for (i = t.length; j < i; j++) {
                    var o = t[j];
                    if (o.nTable == this || o.nTHead.parentNode == this || o.nTFoot && o.nTFoot.parentNode == this) {
                        var s = g.bRetrieve !== k ? g.bRetrieve : l.bRetrieve;
                        if (c || s)return o.oInstance;
                        if (g.bDestroy !== k ? g.bDestroy : l.bDestroy) {
                            o.oInstance.fnDestroy();
                            break
                        } else {
                            J(o, 0, "Cannot reinitialise DataTable", 3);
                            return
                        }
                    }
                    if (o.sTableId == this.id) {
                        t.splice(j, 1);
                        break
                    }
                }
                if (null === e || "" === e)this.id = e = "DataTables_Table_" + m.ext._unique++;
                var p = h.extend(!0, {}, m.models.oSettings, {
                    sDestroyWidth: q[0].style.width,
                    sInstance: e,
                    sTableId: e
                });
                p.nTable = this;
                p.oApi = b.internal;
                p.oInit = g;
                t.push(p);
                p.oInstance = 1 === b.length ? b : q.dataTable();
                db(g);
                g.oLanguage && Ca(g.oLanguage);
                g.aLengthMenu && !g.iDisplayLength && (g.iDisplayLength = h.isArray(g.aLengthMenu[0]) ? g.aLengthMenu[0][0] : g.aLengthMenu[0]);
                g = Jb(h.extend(!0, {}, l), g);
                F(p.oFeatures, g, "bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" "));
                F(p, g, ["asStripeClasses", "ajax", "fnServerData", "fnFormatNumber", "sServerMethod", "aaSorting", "aaSortingFixed", "aLengthMenu", "sPaginationType", "sAjaxSource", "sAjaxDataProp", "iStateDuration", "sDom", "bSortCellsTop", "iTabIndex", "fnStateLoadCallback", "fnStateSaveCallback", "renderer", "searchDelay", "rowId", ["iCookieDuration", "iStateDuration"],
                    ["oSearch", "oPreviousSearch"], ["aoSearchCols", "aoPreSearchCols"], ["iDisplayLength", "_iDisplayLength"]]);
                F(p.oScroll, g, [["sScrollX", "sX"], ["sScrollXInner", "sXInner"], ["sScrollY", "sY"], ["bScrollCollapse", "bCollapse"]]);
                F(p.oLanguage, g, "fnInfoCallback");
                z(p, "aoDrawCallback", g.fnDrawCallback, "user");
                z(p, "aoServerParams", g.fnServerParams, "user");
                z(p, "aoStateSaveParams", g.fnStateSaveParams, "user");
                z(p, "aoStateLoadParams", g.fnStateLoadParams, "user");
                z(p, "aoStateLoaded", g.fnStateLoaded, "user");
                z(p, "aoRowCallback",
                    g.fnRowCallback, "user");
                z(p, "aoRowCreatedCallback", g.fnCreatedRow, "user");
                z(p, "aoHeaderCallback", g.fnHeaderCallback, "user");
                z(p, "aoFooterCallback", g.fnFooterCallback, "user");
                z(p, "aoInitComplete", g.fnInitComplete, "user");
                z(p, "aoPreDrawCallback", g.fnPreDrawCallback, "user");
                p.rowIdFn = Q(g.rowId);
                fb(p);
                var u = p.oClasses;
                h.extend(u, m.ext.classes, g.oClasses);
                q.addClass(u.sTable);
                p.iInitDisplayStart === k && (p.iInitDisplayStart = g.iDisplayStart, p._iDisplayStart = g.iDisplayStart);
                null !== g.iDeferLoading && (p.bDeferLoading = !0, e = h.isArray(g.iDeferLoading), p._iRecordsDisplay = e ? g.iDeferLoading[0] : g.iDeferLoading, p._iRecordsTotal = e ? g.iDeferLoading[1] : g.iDeferLoading);
                var v = p.oLanguage;
                h.extend(!0, v, g.oLanguage);
                v.sUrl && (h.ajax({
                    dataType: "json", url: v.sUrl, success: function (a) {
                        Ca(a);
                        I(l.oLanguage, a);
                        h.extend(true, v, a);
                        ga(p)
                    }, error: function () {
                        ga(p)
                    }
                }), n = !0);
                null === g.asStripeClasses && (p.asStripeClasses = [u.sStripeOdd, u.sStripeEven]);
                var e = p.asStripeClasses, x = q.children("tbody").find("tr").eq(0);
                -1 !== h.inArray(!0, h.map(e, function (a) {
                    return x.hasClass(a)
                })) &&
                (h("tbody tr", this).removeClass(e.join(" ")), p.asDestroyStripes = e.slice());
                e = [];
                t = this.getElementsByTagName("thead");
                0 !== t.length && (da(p.aoHeader, t[0]), e = ra(p));
                if (null === g.aoColumns) {
                    t = [];
                    j = 0;
                    for (i = e.length; j < i; j++)t.push(null)
                } else t = g.aoColumns;
                j = 0;
                for (i = t.length; j < i; j++)Da(p, e ? e[j] : null);
                hb(p, g.aoColumnDefs, t, function (a, b) {
                    ja(p, a, b)
                });
                if (x.length) {
                    var w = function (a, b) {
                        return a.getAttribute("data-" + b) !== null ? b : null
                    };
                    h(x[0]).children("th, td").each(function (a, b) {
                        var c = p.aoColumns[a];
                        if (c.mData ===
                            a) {
                            var d = w(b, "sort") || w(b, "order"), e = w(b, "filter") || w(b, "search");
                            if (d !== null || e !== null) {
                                c.mData = {
                                    _: a + ".display",
                                    sort: d !== null ? a + ".@data-" + d : k,
                                    type: d !== null ? a + ".@data-" + d : k,
                                    filter: e !== null ? a + ".@data-" + e : k
                                };
                                ja(p, a)
                            }
                        }
                    })
                }
                var T = p.oFeatures, e = function () {
                    if (g.aaSorting === k) {
                        var a = p.aaSorting;
                        j = 0;
                        for (i = a.length; j < i; j++)a[j][1] = p.aoColumns[j].asSorting[0]
                    }
                    wa(p);
                    T.bSort && z(p, "aoDrawCallback", function () {
                        if (p.bSorted) {
                            var a = V(p), b = {};
                            h.each(a, function (a, c) {
                                b[c.src] = c.dir
                            });
                            r(p, null, "order", [p, a, b]);
                            Hb(p)
                        }
                    });
                    z(p, "aoDrawCallback", function () {
                        (p.bSorted || y(p) === "ssp" || T.bDeferRender) && wa(p)
                    }, "sc");
                    var a = q.children("caption").each(function () {
                        this._captionSide = h(this).css("caption-side")
                    }), b = q.children("thead");
                    b.length === 0 && (b = h("<thead/>").appendTo(q));
                    p.nTHead = b[0];
                    b = q.children("tbody");
                    b.length === 0 && (b = h("<tbody/>").appendTo(q));
                    p.nTBody = b[0];
                    b = q.children("tfoot");
                    if (b.length === 0 && a.length > 0 && (p.oScroll.sX !== "" || p.oScroll.sY !== ""))b = h("<tfoot/>").appendTo(q);
                    if (b.length === 0 || b.children().length === 0)q.addClass(u.sNoFooter);
                    else if (b.length > 0) {
                        p.nTFoot = b[0];
                        da(p.aoFooter, p.nTFoot)
                    }
                    if (g.aaData)for (j = 0; j < g.aaData.length; j++)M(p, g.aaData[j]); else(p.bDeferLoading || y(p) == "dom") && ma(p, h(p.nTBody).children("tr"));
                    p.aiDisplay = p.aiDisplayMaster.slice();
                    p.bInitialised = true;
                    n === false && ga(p)
                };
                g.bStateSave ? (T.bStateSave = !0, z(p, "aoDrawCallback", xa, "state_save"), Ib(p, g, e)) : e()
            }
        });
        b = null;
        return this
    }, x, s, o, u, Xa = {}, Mb = /[\r\n]/g, Aa = /<.*?>/g, Zb = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/, $b = RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)",
        "g"), Wa = /[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi, L = function (a) {
        return !a || !0 === a || "-" === a ? !0 : !1
    }, Nb = function (a) {
        var b = parseInt(a, 10);
        return !isNaN(b) && isFinite(a) ? b : null
    }, Ob = function (a, b) {
        Xa[b] || (Xa[b] = RegExp(Pa(b), "g"));
        return "string" === typeof a && "." !== b ? a.replace(/\./g, "").replace(Xa[b], ".") : a
    }, Ya = function (a, b, c) {
        var d = "string" === typeof a;
        if (L(a))return !0;
        b && d && (a = Ob(a, b));
        c && d && (a = a.replace(Wa, ""));
        return !isNaN(parseFloat(a)) && isFinite(a)
    }, Pb = function (a, b, c) {
        return L(a) ? !0 : !(L(a) || "string" === typeof a) ? null : Ya(a.replace(Aa, ""), b, c) ? !0 : null
    }, D = function (a, b, c) {
        var d = [], e = 0, f = a.length;
        if (c !== k)for (; e < f; e++)a[e] && a[e][b] && d.push(a[e][b][c]); else for (; e < f; e++)a[e] && d.push(a[e][b]);
        return d
    }, ia = function (a, b, c, d) {
        var e = [], f = 0, g = b.length;
        if (d !== k)for (; f < g; f++)a[b[f]][c] && e.push(a[b[f]][c][d]); else for (; f < g; f++)e.push(a[b[f]][c]);
        return e
    }, W = function (a, b) {
        var c = [], d;
        b === k ? (b = 0, d = a) : (d = b, b = a);
        for (var e = b; e < d; e++)c.push(e);
        return c
    }, Qb = function (a) {
        for (var b = [], c = 0, d = a.length; c < d; c++)a[c] && b.push(a[c]);
        return b
    }, qa = function (a) {
        var b;
        a:{
            if (!(2 > a.length)) {
                b = a.slice().sort();
                for (var c = b[0], d = 1, e = b.length; d < e; d++) {
                    if (b[d] === c) {
                        b = !1;
                        break a
                    }
                    c = b[d]
                }
            }
            b = !0
        }
        if (b)return a.slice();
        b = [];
        var e = a.length, f, g = 0, d = 0;
        a:for (; d < e; d++) {
            c = a[d];
            for (f = 0; f < g; f++)if (b[f] === c)continue a;
            b.push(c);
            g++
        }
        return b
    };
    m.util = {
        throttle: function (a, b) {
            var c = b !== k ? b : 200, d, e;
            return function () {
                var b = this, g = +new Date, j = arguments;
                d && g < d + c ? (clearTimeout(e), e = setTimeout(function () {
                    d = k;
                    a.apply(b, j)
                }, c)) : (d = g, a.apply(b, j))
            }
        }, escapeRegex: function (a) {
            return a.replace($b,
                "\\$1")
        }
    };
    var A = function (a, b, c) {
        a[b] !== k && (a[c] = a[b])
    }, ba = /\[.*?\]$/, U = /\(\)$/, Pa = m.util.escapeRegex, va = h("<div>")[0], Wb = va.textContent !== k, Yb = /<.*?>/g, Na = m.util.throttle, Rb = [], w = Array.prototype, ac = function (a) {
        var b, c, d = m.settings, e = h.map(d, function (a) {
            return a.nTable
        });
        if (a) {
            if (a.nTable && a.oApi)return [a];
            if (a.nodeName && "table" === a.nodeName.toLowerCase())return b = h.inArray(a, e), -1 !== b ? [d[b]] : null;
            if (a && "function" === typeof a.settings)return a.settings().toArray();
            "string" === typeof a ? c = h(a) : a instanceof h && (c = a)
        } else return [];
        if (c)return c.map(function () {
            b = h.inArray(this, e);
            return -1 !== b ? d[b] : null
        }).toArray()
    };
    s = function (a, b) {
        if (!(this instanceof s))return new s(a, b);
        var c = [], d = function (a) {
            (a = ac(a)) && (c = c.concat(a))
        };
        if (h.isArray(a))for (var e = 0, f = a.length; e < f; e++)d(a[e]); else d(a);
        this.context = qa(c);
        b && h.merge(this, b);
        this.selector = {rows: null, cols: null, opts: null};
        s.extend(this, this, Rb)
    };
    m.Api = s;
    h.extend(s.prototype, {
        any: function () {
            return 0 !== this.count()
        }, concat: w.concat, context: [], count: function () {
            return this.flatten().length
        },
        each: function (a) {
            for (var b = 0, c = this.length; b < c; b++)a.call(this, this[b], b, this);
            return this
        }, eq: function (a) {
            var b = this.context;
            return b.length > a ? new s(b[a], this[a]) : null
        }, filter: function (a) {
            var b = [];
            if (w.filter)b = w.filter.call(this, a, this); else for (var c = 0, d = this.length; c < d; c++)a.call(this, this[c], c, this) && b.push(this[c]);
            return new s(this.context, b)
        }, flatten: function () {
            var a = [];
            return new s(this.context, a.concat.apply(a, this.toArray()))
        }, join: w.join, indexOf: w.indexOf || function (a, b) {
            for (var c = b || 0,
                     d = this.length; c < d; c++)if (this[c] === a)return c;
            return -1
        }, iterator: function (a, b, c, d) {
            var e = [], f, g, j, h, n, l = this.context, m, o, u = this.selector;
            "string" === typeof a && (d = c, c = b, b = a, a = !1);
            g = 0;
            for (j = l.length; g < j; g++) {
                var r = new s(l[g]);
                if ("table" === b)f = c.call(r, l[g], g), f !== k && e.push(f); else if ("columns" === b || "rows" === b)f = c.call(r, l[g], this[g], g), f !== k && e.push(f); else if ("column" === b || "column-rows" === b || "row" === b || "cell" === b) {
                    o = this[g];
                    "column-rows" === b && (m = Ba(l[g], u.opts));
                    h = 0;
                    for (n = o.length; h < n; h++)f = o[h], f =
                        "cell" === b ? c.call(r, l[g], f.row, f.column, g, h) : c.call(r, l[g], f, g, h, m), f !== k && e.push(f)
                }
            }
            return e.length || d ? (a = new s(l, a ? e.concat.apply([], e) : e), b = a.selector, b.rows = u.rows, b.cols = u.cols, b.opts = u.opts, a) : this
        }, lastIndexOf: w.lastIndexOf || function (a, b) {
            return this.indexOf.apply(this.toArray.reverse(), arguments)
        }, length: 0, map: function (a) {
            var b = [];
            if (w.map)b = w.map.call(this, a, this); else for (var c = 0, d = this.length; c < d; c++)b.push(a.call(this, this[c], c));
            return new s(this.context, b)
        }, pluck: function (a) {
            return this.map(function (b) {
                return b[a]
            })
        },
        pop: w.pop, push: w.push, reduce: w.reduce || function (a, b) {
            return gb(this, a, b, 0, this.length, 1)
        }, reduceRight: w.reduceRight || function (a, b) {
            return gb(this, a, b, this.length - 1, -1, -1)
        }, reverse: w.reverse, selector: null, shift: w.shift, slice: function () {
            return new s(this.context, this)
        }, sort: w.sort, splice: w.splice, toArray: function () {
            return w.slice.call(this)
        }, to$: function () {
            return h(this)
        }, toJQuery: function () {
            return h(this)
        }, unique: function () {
            return new s(this.context, qa(this))
        }, unshift: w.unshift
    });
    s.extend = function (a,
                         b, c) {
        if (c.length && b && (b instanceof s || b.__dt_wrapper)) {
            var d, e, f, g = function (a, b, c) {
                return function () {
                    var d = b.apply(a, arguments);
                    s.extend(d, d, c.methodExt);
                    return d
                }
            };
            d = 0;
            for (e = c.length; d < e; d++)f = c[d], b[f.name] = "function" === typeof f.val ? g(a, f.val, f) : h.isPlainObject(f.val) ? {} : f.val, b[f.name].__dt_wrapper = !0, s.extend(a, b[f.name], f.propExt)
        }
    };
    s.register = o = function (a, b) {
        if (h.isArray(a))for (var c = 0, d = a.length; c < d; c++)s.register(a[c], b); else for (var e = a.split("."), f = Rb, g, j, c = 0, d = e.length; c < d; c++) {
            g = (j = -1 !==
                e[c].indexOf("()")) ? e[c].replace("()", "") : e[c];
            var i;
            a:{
                i = 0;
                for (var n = f.length; i < n; i++)if (f[i].name === g) {
                    i = f[i];
                    break a
                }
                i = null
            }
            i || (i = {name: g, val: {}, methodExt: [], propExt: []}, f.push(i));
            c === d - 1 ? i.val = b : f = j ? i.methodExt : i.propExt
        }
    };
    s.registerPlural = u = function (a, b, c) {
        s.register(a, c);
        s.register(b, function () {
            var a = c.apply(this, arguments);
            return a === this ? this : a instanceof s ? a.length ? h.isArray(a[0]) ? new s(a.context, a[0]) : a[0] : k : a
        })
    };
    o("tables()", function (a) {
        var b;
        if (a) {
            b = s;
            var c = this.context;
            if ("number" === typeof a)a = [c[a]]; else var d = h.map(c, function (a) {
                return a.nTable
            }), a = h(d).filter(a).map(function () {
                var a = h.inArray(this, d);
                return c[a]
            }).toArray();
            b = new b(a)
        } else b = this;
        return b
    });
    o("table()", function (a) {
        var a = this.tables(a), b = a.context;
        return b.length ? new s(b[0]) : a
    });
    u("tables().nodes()", "table().node()", function () {
        return this.iterator("table", function (a) {
            return a.nTable
        }, 1)
    });
    u("tables().body()", "table().body()", function () {
        return this.iterator("table", function (a) {
            return a.nTBody
        }, 1)
    });
    u("tables().header()",
        "table().header()", function () {
            return this.iterator("table", function (a) {
                return a.nTHead
            }, 1)
        });
    u("tables().footer()", "table().footer()", function () {
        return this.iterator("table", function (a) {
            return a.nTFoot
        }, 1)
    });
    u("tables().containers()", "table().container()", function () {
        return this.iterator("table", function (a) {
            return a.nTableWrapper
        }, 1)
    });
    o("draw()", function (a) {
        return this.iterator("table", function (b) {
            "page" === a ? N(b) : ("string" === typeof a && (a = "full-hold" === a ? !1 : !0), S(b, !1 === a))
        })
    });
    o("page()", function (a) {
        return a ===
        k ? this.page.info().page : this.iterator("table", function (b) {
            Sa(b, a)
        })
    });
    o("page.info()", function () {
        if (0 === this.context.length)return k;
        var a = this.context[0], b = a._iDisplayStart, c = a.oFeatures.bPaginate ? a._iDisplayLength : -1, d = a.fnRecordsDisplay(), e = -1 === c;
        return {
            page: e ? 0 : Math.floor(b / c),
            pages: e ? 1 : Math.ceil(d / c),
            start: b,
            end: a.fnDisplayEnd(),
            length: c,
            recordsTotal: a.fnRecordsTotal(),
            recordsDisplay: d,
            serverSide: "ssp" === y(a)
        }
    });
    o("page.len()", function (a) {
        return a === k ? 0 !== this.context.length ? this.context[0]._iDisplayLength :
            k : this.iterator("table", function (b) {
            Qa(b, a)
        })
    });
    var Sb = function (a, b, c) {
        if (c) {
            var d = new s(a);
            d.one("draw", function () {
                c(d.ajax.json())
            })
        }
        if ("ssp" == y(a))S(a, b); else {
            C(a, !0);
            var e = a.jqXHR;
            e && 4 !== e.readyState && e.abort();
            sa(a, [], function (c) {
                na(a);
                for (var c = ta(a, c), d = 0, e = c.length; d < e; d++)M(a, c[d]);
                S(a, b);
                C(a, !1)
            })
        }
    };
    o("ajax.json()", function () {
        var a = this.context;
        if (0 < a.length)return a[0].json
    });
    o("ajax.params()", function () {
        var a = this.context;
        if (0 < a.length)return a[0].oAjaxData
    });
    o("ajax.reload()", function (a,
                                 b) {
        return this.iterator("table", function (c) {
            Sb(c, !1 === b, a)
        })
    });
    o("ajax.url()", function (a) {
        var b = this.context;
        if (a === k) {
            if (0 === b.length)return k;
            b = b[0];
            return b.ajax ? h.isPlainObject(b.ajax) ? b.ajax.url : b.ajax : b.sAjaxSource
        }
        return this.iterator("table", function (b) {
            h.isPlainObject(b.ajax) ? b.ajax.url = a : b.ajax = a
        })
    });
    o("ajax.url().load()", function (a, b) {
        return this.iterator("table", function (c) {
            Sb(c, !1 === b, a)
        })
    });
    var Za = function (a, b, c, d, e) {
        var f = [], g, j, i, n, l, m;
        i = typeof b;
        if (!b || "string" === i || "function" ===
            i || b.length === k)b = [b];
        i = 0;
        for (n = b.length; i < n; i++) {
            j = b[i] && b[i].split && !b[i].match(/[\[\(:]/) ? b[i].split(",") : [b[i]];
            l = 0;
            for (m = j.length; l < m; l++)(g = c("string" === typeof j[l] ? h.trim(j[l]) : j[l])) && g.length && (f = f.concat(g))
        }
        a = x.selector[a];
        if (a.length) {
            i = 0;
            for (n = a.length; i < n; i++)f = a[i](d, e, f)
        }
        return qa(f)
    }, $a = function (a) {
        a || (a = {});
        a.filter && a.search === k && (a.search = a.filter);
        return h.extend({search: "none", order: "current", page: "all"}, a)
    }, ab = function (a) {
        for (var b = 0, c = a.length; b < c; b++)if (0 < a[b].length)return a[0] =
            a[b], a[0].length = 1, a.length = 1, a.context = [a.context[b]], a;
        a.length = 0;
        return a
    }, Ba = function (a, b) {
        var c, d, e, f = [], g = a.aiDisplay;
        c = a.aiDisplayMaster;
        var j = b.search;
        d = b.order;
        e = b.page;
        if ("ssp" == y(a))return "removed" === j ? [] : W(0, c.length);
        if ("current" == e) {
            c = a._iDisplayStart;
            for (d = a.fnDisplayEnd(); c < d; c++)f.push(g[c])
        } else if ("current" == d || "applied" == d)f = "none" == j ? c.slice() : "applied" == j ? g.slice() : h.map(c, function (a) {
            return -1 === h.inArray(a, g) ? a : null
        }); else if ("index" == d || "original" == d) {
            c = 0;
            for (d = a.aoData.length; c <
            d; c++)"none" == j ? f.push(c) : (e = h.inArray(c, g), (-1 === e && "removed" == j || 0 <= e && "applied" == j) && f.push(c))
        }
        return f
    };
    o("rows()", function (a, b) {
        a === k ? a = "" : h.isPlainObject(a) && (b = a, a = "");
        var b = $a(b), c = this.iterator("table", function (c) {
            var e = b, f;
            return Za("row", a, function (a) {
                var b = Nb(a);
                if (b !== null && !e)return [b];
                f || (f = Ba(c, e));
                if (b !== null && h.inArray(b, f) !== -1)return [b];
                if (a === null || a === k || a === "")return f;
                if (typeof a === "function")return h.map(f, function (b) {
                    var e = c.aoData[b];
                    return a(b, e._aData, e.nTr) ? b : null
                });
                b = Qb(ia(c.aoData, f, "nTr"));
                if (a.nodeName) {
                    if (a._DT_RowIndex !== k)return [a._DT_RowIndex];
                    if (a._DT_CellIndex)return [a._DT_CellIndex.row];
                    b = h(a).closest("*[data-dt-row]");
                    return b.length ? [b.data("dt-row")] : []
                }
                if (typeof a === "string" && a.charAt(0) === "#") {
                    var i = c.aIds[a.replace(/^#/, "")];
                    if (i !== k)return [i.idx]
                }
                return h(b).filter(a).map(function () {
                    return this._DT_RowIndex
                }).toArray()
            }, c, e)
        }, 1);
        c.selector.rows = a;
        c.selector.opts = b;
        return c
    });
    o("rows().nodes()", function () {
        return this.iterator("row", function (a,
                                              b) {
            return a.aoData[b].nTr || k
        }, 1)
    });
    o("rows().data()", function () {
        return this.iterator(!0, "rows", function (a, b) {
            return ia(a.aoData, b, "_aData")
        }, 1)
    });
    u("rows().cache()", "row().cache()", function (a) {
        return this.iterator("row", function (b, c) {
            var d = b.aoData[c];
            return "search" === a ? d._aFilterData : d._aSortData
        }, 1)
    });
    u("rows().invalidate()", "row().invalidate()", function (a) {
        return this.iterator("row", function (b, c) {
            ca(b, c, a)
        })
    });
    u("rows().indexes()", "row().index()", function () {
        return this.iterator("row", function (a,
                                              b) {
            return b
        }, 1)
    });
    u("rows().ids()", "row().id()", function (a) {
        for (var b = [], c = this.context, d = 0, e = c.length; d < e; d++)for (var f = 0, g = this[d].length; f < g; f++) {
            var h = c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);
            b.push((!0 === a ? "#" : "") + h)
        }
        return new s(c, b)
    });
    u("rows().remove()", "row().remove()", function () {
        var a = this;
        this.iterator("row", function (b, c, d) {
            var e = b.aoData, f = e[c], g, h, i, n, l;
            e.splice(c, 1);
            g = 0;
            for (h = e.length; g < h; g++)if (i = e[g], l = i.anCells, null !== i.nTr && (i.nTr._DT_RowIndex = g), null !== l) {
                i = 0;
                for (n = l.length; i <
                n; i++)l[i]._DT_CellIndex.row = g
            }
            oa(b.aiDisplayMaster, c);
            oa(b.aiDisplay, c);
            oa(a[d], c, !1);
            0 < b._iRecordsDisplay && b._iRecordsDisplay--;
            Ra(b);
            c = b.rowIdFn(f._aData);
            c !== k && delete b.aIds[c]
        });
        this.iterator("table", function (a) {
            for (var c = 0, d = a.aoData.length; c < d; c++)a.aoData[c].idx = c
        });
        return this
    });
    o("rows.add()", function (a) {
        var b = this.iterator("table", function (b) {
            var c, f, g, h = [];
            f = 0;
            for (g = a.length; f < g; f++)c = a[f], c.nodeName && "TR" === c.nodeName.toUpperCase() ? h.push(ma(b, c)[0]) : h.push(M(b, c));
            return h
        }, 1), c = this.rows(-1);
        c.pop();
        h.merge(c, b);
        return c
    });
    o("row()", function (a, b) {
        return ab(this.rows(a, b))
    });
    o("row().data()", function (a) {
        var b = this.context;
        if (a === k)return b.length && this.length ? b[0].aoData[this[0]]._aData : k;
        b[0].aoData[this[0]]._aData = a;
        ca(b[0], this[0], "data");
        return this
    });
    o("row().node()", function () {
        var a = this.context;
        return a.length && this.length ? a[0].aoData[this[0]].nTr || null : null
    });
    o("row.add()", function (a) {
        a instanceof h && a.length && (a = a[0]);
        var b = this.iterator("table", function (b) {
            return a.nodeName &&
            "TR" === a.nodeName.toUpperCase() ? ma(b, a)[0] : M(b, a)
        });
        return this.row(b[0])
    });
    var bb = function (a, b) {
        var c = a.context;
        if (c.length && (c = c[0].aoData[b !== k ? b : a[0]]) && c._details)c._details.remove(), c._detailsShow = k, c._details = k
    }, Tb = function (a, b) {
        var c = a.context;
        if (c.length && a.length) {
            var d = c[0].aoData[a[0]];
            if (d._details) {
                (d._detailsShow = b) ? d._details.insertAfter(d.nTr) : d._details.detach();
                var e = c[0], f = new s(e), g = e.aoData;
                f.off("draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details");
                0 < D(g,
                    "_details").length && (f.on("draw.dt.DT_details", function (a, b) {
                    e === b && f.rows({page: "current"}).eq(0).each(function (a) {
                        a = g[a];
                        a._detailsShow && a._details.insertAfter(a.nTr)
                    })
                }), f.on("column-visibility.dt.DT_details", function (a, b) {
                    if (e === b)for (var c, d = aa(b), f = 0, h = g.length; f < h; f++)c = g[f], c._details && c._details.children("td[colspan]").attr("colspan", d)
                }), f.on("destroy.dt.DT_details", function (a, b) {
                    if (e === b)for (var c = 0, d = g.length; c < d; c++)g[c]._details && bb(f, c)
                }))
            }
        }
    };
    o("row().child()", function (a, b) {
        var c = this.context;
        if (a === k)return c.length && this.length ? c[0].aoData[this[0]]._details : k;
        if (!0 === a)this.child.show(); else if (!1 === a)bb(this); else if (c.length && this.length) {
            var d = c[0], c = c[0].aoData[this[0]], e = [], f = function (a, b) {
                if (h.isArray(a) || a instanceof h)for (var c = 0, k = a.length; c < k; c++)f(a[c], b); else a.nodeName && "tr" === a.nodeName.toLowerCase() ? e.push(a) : (c = h("<tr><td/></tr>").addClass(b), h("td", c).addClass(b).html(a)[0].colSpan = aa(d), e.push(c[0]))
            };
            f(a, b);
            c._details && c._details.detach();
            c._details = h(e);
            c._detailsShow &&
            c._details.insertAfter(c.nTr)
        }
        return this
    });
    o(["row().child.show()", "row().child().show()"], function () {
        Tb(this, !0);
        return this
    });
    o(["row().child.hide()", "row().child().hide()"], function () {
        Tb(this, !1);
        return this
    });
    o(["row().child.remove()", "row().child().remove()"], function () {
        bb(this);
        return this
    });
    o("row().child.isShown()", function () {
        var a = this.context;
        return a.length && this.length ? a[0].aoData[this[0]]._detailsShow || !1 : !1
    });
    var bc = /^([^:]+):(name|visIdx|visible)$/, Ub = function (a, b, c, d, e) {
        for (var c =
            [], d = 0, f = e.length; d < f; d++)c.push(B(a, e[d], b));
        return c
    };
    o("columns()", function (a, b) {
        a === k ? a = "" : h.isPlainObject(a) && (b = a, a = "");
        var b = $a(b), c = this.iterator("table", function (c) {
            var e = a, f = b, g = c.aoColumns, j = D(g, "sName"), i = D(g, "nTh");
            return Za("column", e, function (a) {
                var b = Nb(a);
                if (a === "")return W(g.length);
                if (b !== null)return [b >= 0 ? b : g.length + b];
                if (typeof a === "function") {
                    var e = Ba(c, f);
                    return h.map(g, function (b, f) {
                        return a(f, Ub(c, f, 0, 0, e), i[f]) ? f : null
                    })
                }
                var k = typeof a === "string" ? a.match(bc) : "";
                if (k)switch (k[2]) {
                    case "visIdx":
                    case "visible":
                        b =
                            parseInt(k[1], 10);
                        if (b < 0) {
                            var m = h.map(g, function (a, b) {
                                return a.bVisible ? b : null
                            });
                            return [m[m.length + b]]
                        }
                        return [Z(c, b)];
                    case "name":
                        return h.map(j, function (a, b) {
                            return a === k[1] ? b : null
                        });
                    default:
                        return []
                }
                if (a.nodeName && a._DT_CellIndex)return [a._DT_CellIndex.column];
                b = h(i).filter(a).map(function () {
                    return h.inArray(this, i)
                }).toArray();
                if (b.length || !a.nodeName)return b;
                b = h(a).closest("*[data-dt-column]");
                return b.length ? [b.data("dt-column")] : []
            }, c, f)
        }, 1);
        c.selector.cols = a;
        c.selector.opts = b;
        return c
    });
    u("columns().header()",
        "column().header()", function () {
            return this.iterator("column", function (a, b) {
                return a.aoColumns[b].nTh
            }, 1)
        });
    u("columns().footer()", "column().footer()", function () {
        return this.iterator("column", function (a, b) {
            return a.aoColumns[b].nTf
        }, 1)
    });
    u("columns().data()", "column().data()", function () {
        return this.iterator("column-rows", Ub, 1)
    });
    u("columns().dataSrc()", "column().dataSrc()", function () {
        return this.iterator("column", function (a, b) {
            return a.aoColumns[b].mData
        }, 1)
    });
    u("columns().cache()", "column().cache()",
        function (a) {
            return this.iterator("column-rows", function (b, c, d, e, f) {
                return ia(b.aoData, f, "search" === a ? "_aFilterData" : "_aSortData", c)
            }, 1)
        });
    u("columns().nodes()", "column().nodes()", function () {
        return this.iterator("column-rows", function (a, b, c, d, e) {
            return ia(a.aoData, e, "anCells", b)
        }, 1)
    });
    u("columns().visible()", "column().visible()", function (a, b) {
        var c = this.iterator("column", function (b, c) {
            if (a === k)return b.aoColumns[c].bVisible;
            var f = b.aoColumns, g = f[c], j = b.aoData, i, n, l;
            if (a !== k && g.bVisible !== a) {
                if (a) {
                    var m =
                        h.inArray(!0, D(f, "bVisible"), c + 1);
                    i = 0;
                    for (n = j.length; i < n; i++)l = j[i].nTr, f = j[i].anCells, l && l.insertBefore(f[c], f[m] || null)
                } else h(D(b.aoData, "anCells", c)).detach();
                g.bVisible = a;
                ea(b, b.aoHeader);
                ea(b, b.aoFooter);
                xa(b)
            }
        });
        a !== k && (this.iterator("column", function (c, e) {
            r(c, null, "column-visibility", [c, e, a, b])
        }), (b === k || b) && this.columns.adjust());
        return c
    });
    u("columns().indexes()", "column().index()", function (a) {
        return this.iterator("column", function (b, c) {
            return "visible" === a ? $(b, c) : c
        }, 1)
    });
    o("columns.adjust()",
        function () {
            return this.iterator("table", function (a) {
                Y(a)
            }, 1)
        });
    o("column.index()", function (a, b) {
        if (0 !== this.context.length) {
            var c = this.context[0];
            if ("fromVisible" === a || "toData" === a)return Z(c, b);
            if ("fromData" === a || "toVisible" === a)return $(c, b)
        }
    });
    o("column()", function (a, b) {
        return ab(this.columns(a, b))
    });
    o("cells()", function (a, b, c) {
        h.isPlainObject(a) && (a.row === k ? (c = a, a = null) : (c = b, b = null));
        h.isPlainObject(b) && (c = b, b = null);
        if (null === b || b === k)return this.iterator("table", function (b) {
            var d = a, e = $a(c), f =
                b.aoData, g = Ba(b, e), j = Qb(ia(f, g, "anCells")), i = h([].concat.apply([], j)), l, n = b.aoColumns.length, m, o, u, s, r, v;
            return Za("cell", d, function (a) {
                var c = typeof a === "function";
                if (a === null || a === k || c) {
                    m = [];
                    o = 0;
                    for (u = g.length; o < u; o++) {
                        l = g[o];
                        for (s = 0; s < n; s++) {
                            r = {row: l, column: s};
                            if (c) {
                                v = f[l];
                                a(r, B(b, l, s), v.anCells ? v.anCells[s] : null) && m.push(r)
                            } else m.push(r)
                        }
                    }
                    return m
                }
                if (h.isPlainObject(a))return [a];
                c = i.filter(a).map(function (a, b) {
                    return {row: b._DT_CellIndex.row, column: b._DT_CellIndex.column}
                }).toArray();
                if (c.length || !a.nodeName)return c;
                v = h(a).closest("*[data-dt-row]");
                return v.length ? [{row: v.data("dt-row"), column: v.data("dt-column")}] : []
            }, b, e)
        });
        var d = this.columns(b, c), e = this.rows(a, c), f, g, j, i, n, l = this.iterator("table", function (a, b) {
            f = [];
            g = 0;
            for (j = e[b].length; g < j; g++) {
                i = 0;
                for (n = d[b].length; i < n; i++)f.push({row: e[b][g], column: d[b][i]})
            }
            return f
        }, 1);
        h.extend(l.selector, {cols: b, rows: a, opts: c});
        return l
    });
    u("cells().nodes()", "cell().node()", function () {
        return this.iterator("cell", function (a, b, c) {
            return (a = a.aoData[b]) &&
            a.anCells ? a.anCells[c] : k
        }, 1)
    });
    o("cells().data()", function () {
        return this.iterator("cell", function (a, b, c) {
            return B(a, b, c)
        }, 1)
    });
    u("cells().cache()", "cell().cache()", function (a) {
        a = "search" === a ? "_aFilterData" : "_aSortData";
        return this.iterator("cell", function (b, c, d) {
            return b.aoData[c][a][d]
        }, 1)
    });
    u("cells().render()", "cell().render()", function (a) {
        return this.iterator("cell", function (b, c, d) {
            return B(b, c, d, a)
        }, 1)
    });
    u("cells().indexes()", "cell().index()", function () {
        return this.iterator("cell", function (a,
                                               b, c) {
            return {row: b, column: c, columnVisible: $(a, c)}
        }, 1)
    });
    u("cells().invalidate()", "cell().invalidate()", function (a) {
        return this.iterator("cell", function (b, c, d) {
            ca(b, c, a, d)
        })
    });
    o("cell()", function (a, b, c) {
        return ab(this.cells(a, b, c))
    });
    o("cell().data()", function (a) {
        var b = this.context, c = this[0];
        if (a === k)return b.length && c.length ? B(b[0], c[0].row, c[0].column) : k;
        ib(b[0], c[0].row, c[0].column, a);
        ca(b[0], c[0].row, "data", c[0].column);
        return this
    });
    o("order()", function (a, b) {
        var c = this.context;
        if (a === k)return 0 !==
        c.length ? c[0].aaSorting : k;
        "number" === typeof a ? a = [[a, b]] : a.length && !h.isArray(a[0]) && (a = Array.prototype.slice.call(arguments));
        return this.iterator("table", function (b) {
            b.aaSorting = a.slice()
        })
    });
    o("order.listener()", function (a, b, c) {
        return this.iterator("table", function (d) {
            La(d, a, b, c)
        })
    });
    o("order.fixed()", function (a) {
        if (!a) {
            var b = this.context, b = b.length ? b[0].aaSortingFixed : k;
            return h.isArray(b) ? {pre: b} : b
        }
        return this.iterator("table", function (b) {
            b.aaSortingFixed = h.extend(!0, {}, a)
        })
    });
    o(["columns().order()",
        "column().order()"], function (a) {
        var b = this;
        return this.iterator("table", function (c, d) {
            var e = [];
            h.each(b[d], function (b, c) {
                e.push([c, a])
            });
            c.aaSorting = e
        })
    });
    o("search()", function (a, b, c, d) {
        var e = this.context;
        return a === k ? 0 !== e.length ? e[0].oPreviousSearch.sSearch : k : this.iterator("table", function (e) {
            e.oFeatures.bFilter && fa(e, h.extend({}, e.oPreviousSearch, {
                sSearch: a + "",
                bRegex: null === b ? !1 : b,
                bSmart: null === c ? !0 : c,
                bCaseInsensitive: null === d ? !0 : d
            }), 1)
        })
    });
    u("columns().search()", "column().search()", function (a,
                                                           b, c, d) {
        return this.iterator("column", function (e, f) {
            var g = e.aoPreSearchCols;
            if (a === k)return g[f].sSearch;
            e.oFeatures.bFilter && (h.extend(g[f], {
                sSearch: a + "",
                bRegex: null === b ? !1 : b,
                bSmart: null === c ? !0 : c,
                bCaseInsensitive: null === d ? !0 : d
            }), fa(e, e.oPreviousSearch, 1))
        })
    });
    o("state()", function () {
        return this.context.length ? this.context[0].oSavedState : null
    });
    o("state.clear()", function () {
        return this.iterator("table", function (a) {
            a.fnStateSaveCallback.call(a.oInstance, a, {})
        })
    });
    o("state.loaded()", function () {
        return this.context.length ?
            this.context[0].oLoadedState : null
    });
    o("state.save()", function () {
        return this.iterator("table", function (a) {
            xa(a)
        })
    });
    m.versionCheck = m.fnVersionCheck = function (a) {
        for (var b = m.version.split("."), a = a.split("."), c, d, e = 0, f = a.length; e < f; e++)if (c = parseInt(b[e], 10) || 0, d = parseInt(a[e], 10) || 0, c !== d)return c > d;
        return !0
    };
    m.isDataTable = m.fnIsDataTable = function (a) {
        var b = h(a).get(0), c = !1;
        if (a instanceof m.Api)return !0;
        h.each(m.settings, function (a, e) {
            var f = e.nScrollHead ? h("table", e.nScrollHead)[0] : null, g = e.nScrollFoot ?
                h("table", e.nScrollFoot)[0] : null;
            if (e.nTable === b || f === b || g === b)c = !0
        });
        return c
    };
    m.tables = m.fnTables = function (a) {
        var b = !1;
        h.isPlainObject(a) && (b = a.api, a = a.visible);
        var c = h.map(m.settings, function (b) {
            if (!a || a && h(b.nTable).is(":visible"))return b.nTable
        });
        return b ? new s(c) : c
    };
    m.camelToHungarian = I;
    o("$()", function (a, b) {
        var c = this.rows(b).nodes(), c = h(c);
        return h([].concat(c.filter(a).toArray(), c.find(a).toArray()))
    });
    h.each(["on", "one", "off"], function (a, b) {
        o(b + "()", function () {
            var a = Array.prototype.slice.call(arguments);
            a[0] = h.map(a[0].split(/\s/), function (a) {
                return !a.match(/\.dt\b/) ? a + ".dt" : a
            }).join(" ");
            var d = h(this.tables().nodes());
            d[b].apply(d, a);
            return this
        })
    });
    o("clear()", function () {
        return this.iterator("table", function (a) {
            na(a)
        })
    });
    o("settings()", function () {
        return new s(this.context, this.context)
    });
    o("init()", function () {
        var a = this.context;
        return a.length ? a[0].oInit : null
    });
    o("data()", function () {
        return this.iterator("table", function (a) {
            return D(a.aoData, "_aData")
        }).flatten()
    });
    o("destroy()", function (a) {
        a = a || !1;
        return this.iterator("table", function (b) {
            var c = b.nTableWrapper.parentNode, d = b.oClasses, e = b.nTable, f = b.nTBody, g = b.nTHead, j = b.nTFoot, i = h(e), f = h(f), k = h(b.nTableWrapper), l = h.map(b.aoData, function (a) {
                return a.nTr
            }), o;
            b.bDestroying = !0;
            r(b, "aoDestroyCallback", "destroy", [b]);
            a || (new s(b)).columns().visible(!0);
            k.off(".DT").find(":not(tbody *)").off(".DT");
            h(E).off(".DT-" + b.sInstance);
            e != g.parentNode && (i.children("thead").detach(), i.append(g));
            j && e != j.parentNode && (i.children("tfoot").detach(), i.append(j));
            b.aaSorting = [];
            b.aaSortingFixed = [];
            wa(b);
            h(l).removeClass(b.asStripeClasses.join(" "));
            h("th, td", g).removeClass(d.sSortable + " " + d.sSortableAsc + " " + d.sSortableDesc + " " + d.sSortableNone);
            f.children().detach();
            f.append(l);
            g = a ? "remove" : "detach";
            i[g]();
            k[g]();
            !a && c && (c.insertBefore(e, b.nTableReinsertBefore), i.css("width", b.sDestroyWidth).removeClass(d.sTable), (o = b.asDestroyStripes.length) && f.children().each(function (a) {
                h(this).addClass(b.asDestroyStripes[a % o])
            }));
            c = h.inArray(b, m.settings);
            -1 !== c && m.settings.splice(c,
                1)
        })
    });
    h.each(["column", "row", "cell"], function (a, b) {
        o(b + "s().every()", function (a) {
            var d = this.selector.opts, e = this;
            return this.iterator(b, function (f, g, h, i, n) {
                a.call(e[b](g, "cell" === b ? h : d, "cell" === b ? d : k), g, h, i, n)
            })
        })
    });
    o("i18n()", function (a, b, c) {
        var d = this.context[0], a = Q(a)(d.oLanguage);
        a === k && (a = b);
        c !== k && h.isPlainObject(a) && (a = a[c] !== k ? a[c] : a._);
        return a.replace("%d", c)
    });
    m.version = "1.10.16";
    m.settings = [];
    m.models = {};
    m.models.oSearch = {bCaseInsensitive: !0, sSearch: "", bRegex: !1, bSmart: !0};
    m.models.oRow =
    {
        nTr: null,
        anCells: null,
        _aData: [],
        _aSortData: null,
        _aFilterData: null,
        _sFilterRow: null,
        _sRowStripe: "",
        src: null,
        idx: -1
    };
    m.models.oColumn = {
        idx: null,
        aDataSort: null,
        asSorting: null,
        bSearchable: null,
        bSortable: null,
        bVisible: null,
        _sManualType: null,
        _bAttrSrc: !1,
        fnCreatedCell: null,
        fnGetData: null,
        fnSetData: null,
        mData: null,
        mRender: null,
        nTh: null,
        nTf: null,
        sClass: null,
        sContentPadding: null,
        sDefaultContent: null,
        sName: null,
        sSortDataType: "std",
        sSortingClass: null,
        sSortingClassJUI: null,
        sTitle: null,
        sType: null,
        sWidth: null,
        sWidthOrig: null
    };
    m.defaults = {
        aaData: null,
        aaSorting: [[0, "asc"]],
        aaSortingFixed: [],
        ajax: null,
        aLengthMenu: [10, 25, 50, 100],
        aoColumns: null,
        aoColumnDefs: null,
        aoSearchCols: [],
        asStripeClasses: null,
        bAutoWidth: !0,
        bDeferRender: !1,
        bDestroy: !1,
        bFilter: !0,
        bInfo: !0,
        bLengthChange: !0,
        bPaginate: !0,
        bProcessing: !1,
        bRetrieve: !1,
        bScrollCollapse: !1,
        bServerSide: !1,
        bSort: !0,
        bSortMulti: !0,
        bSortCellsTop: !1,
        bSortClasses: !0,
        bStateSave: !1,
        fnCreatedRow: null,
        fnDrawCallback: null,
        fnFooterCallback: null,
        fnFormatNumber: function (a) {
            return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,
                this.oLanguage.sThousands)
        },
        fnHeaderCallback: null,
        fnInfoCallback: null,
        fnInitComplete: null,
        fnPreDrawCallback: null,
        fnRowCallback: null,
        fnServerData: null,
        fnServerParams: null,
        fnStateLoadCallback: function (a) {
            try {
                return JSON.parse((-1 === a.iStateDuration ? sessionStorage : localStorage).getItem("DataTables_" + a.sInstance + "_" + location.pathname))
            } catch (b) {
            }
        },
        fnStateLoadParams: null,
        fnStateLoaded: null,
        fnStateSaveCallback: function (a, b) {
            try {
                (-1 === a.iStateDuration ? sessionStorage : localStorage).setItem("DataTables_" + a.sInstance +
                    "_" + location.pathname, JSON.stringify(b))
            } catch (c) {
            }
        },
        fnStateSaveParams: null,
        iStateDuration: 7200,
        iDeferLoading: null,
        iDisplayLength: 10,
        iDisplayStart: 0,
        iTabIndex: 0,
        oClasses: {},
        oLanguage: {
            oAria: {
                sSortAscending: ": activate to sort column ascending",
                sSortDescending: ": activate to sort column descending"
            },
            oPaginate: {sFirst: "First", sLast: "Last", sNext: "Next", sPrevious: "Previous"},
            sEmptyTable: "No data available in table",
            sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
            sInfoEmpty: "Showing 0 to 0 of 0 entries",
            sInfoFiltered: "(filtered from _MAX_ total entries)",
            sInfoPostFix: "",
            sDecimal: "",
            sThousands: ",",
            sLengthMenu: "Show _MENU_ entries",
            sLoadingRecords: "Loading...",
            sProcessing: "Processing...",
            sSearch: "Search:",
            sSearchPlaceholder: "",
            sUrl: "",
            sZeroRecords: "No matching records found"
        },
        oSearch: h.extend({}, m.models.oSearch),
        sAjaxDataProp: "data",
        sAjaxSource: null,
        sDom: "lfrtip",
        searchDelay: null,
        sPaginationType: "simple_numbers",
        sScrollX: "",
        sScrollXInner: "",
        sScrollY: "",
        sServerMethod: "GET",
        renderer: null,
        rowId: "DT_RowId"
    };
    X(m.defaults);
    m.defaults.column = {
        aDataSort: null,
        iDataSort: -1,
        asSorting: ["asc", "desc"],
        bSearchable: !0,
        bSortable: !0,
        bVisible: !0,
        fnCreatedCell: null,
        mData: null,
        mRender: null,
        sCellType: "td",
        sClass: "",
        sContentPadding: "",
        sDefaultContent: null,
        sName: "",
        sSortDataType: "std",
        sTitle: null,
        sType: null,
        sWidth: null
    };
    X(m.defaults.column);
    m.models.oSettings = {
        oFeatures: {
            bAutoWidth: null,
            bDeferRender: null,
            bFilter: null,
            bInfo: null,
            bLengthChange: null,
            bPaginate: null,
            bProcessing: null,
            bServerSide: null,
            bSort: null,
            bSortMulti: null,
            bSortClasses: null,
            bStateSave: null
        },
        oScroll: {bCollapse: null, iBarWidth: 0, sX: null, sXInner: null, sY: null},
        oLanguage: {fnInfoCallback: null},
        oBrowser: {bScrollOversize: !1, bScrollbarLeft: !1, bBounding: !1, barWidth: 0},
        ajax: null,
        aanFeatures: [],
        aoData: [],
        aiDisplay: [],
        aiDisplayMaster: [],
        aIds: {},
        aoColumns: [],
        aoHeader: [],
        aoFooter: [],
        oPreviousSearch: {},
        aoPreSearchCols: [],
        aaSorting: null,
        aaSortingFixed: [],
        asStripeClasses: null,
        asDestroyStripes: [],
        sDestroyWidth: 0,
        aoRowCallback: [],
        aoHeaderCallback: [],
        aoFooterCallback: [],
        aoDrawCallback: [],
        aoRowCreatedCallback: [],
        aoPreDrawCallback: [],
        aoInitComplete: [],
        aoStateSaveParams: [],
        aoStateLoadParams: [],
        aoStateLoaded: [],
        sTableId: "",
        nTable: null,
        nTHead: null,
        nTFoot: null,
        nTBody: null,
        nTableWrapper: null,
        bDeferLoading: !1,
        bInitialised: !1,
        aoOpenRows: [],
        sDom: null,
        searchDelay: null,
        sPaginationType: "two_button",
        iStateDuration: 0,
        aoStateSave: [],
        aoStateLoad: [],
        oSavedState: null,
        oLoadedState: null,
        sAjaxSource: null,
        sAjaxDataProp: null,
        bAjaxDataGet: !0,
        jqXHR: null,
        json: k,
        oAjaxData: k,
        fnServerData: null,
        aoServerParams: [],
        sServerMethod: null,
        fnFormatNumber: null,
        aLengthMenu: null,
        iDraw: 0,
        bDrawing: !1,
        iDrawError: -1,
        _iDisplayLength: 10,
        _iDisplayStart: 0,
        _iRecordsTotal: 0,
        _iRecordsDisplay: 0,
        oClasses: {},
        bFiltered: !1,
        bSorted: !1,
        bSortCellsTop: null,
        oInit: null,
        aoDestroyCallback: [],
        fnRecordsTotal: function () {
            return "ssp" == y(this) ? 1 * this._iRecordsTotal : this.aiDisplayMaster.length
        },
        fnRecordsDisplay: function () {
            return "ssp" == y(this) ? 1 * this._iRecordsDisplay : this.aiDisplay.length
        },
        fnDisplayEnd: function () {
            var a = this._iDisplayLength,
                b = this._iDisplayStart, c = b + a, d = this.aiDisplay.length, e = this.oFeatures, f = e.bPaginate;
            return e.bServerSide ? !1 === f || -1 === a ? b + d : Math.min(b + a, this._iRecordsDisplay) : !f || c > d || -1 === a ? d : c
        },
        oInstance: null,
        sInstance: null,
        iTabIndex: 0,
        nScrollHead: null,
        nScrollFoot: null,
        aLastSort: [],
        oPlugins: {},
        rowIdFn: null,
        rowId: null
    };
    m.ext = x = {
        buttons: {},
        classes: {},
        build: "dt/jszip-2.5.0/pdfmake-0.1.32/dt-1.10.16/af-2.2.2/b-1.5.1/b-colvis-1.5.1/b-flash-1.5.1/b-html5-1.5.1/b-print-1.5.1/cr-1.4.1/fc-3.2.4/fh-3.1.3/kt-2.3.2/r-2.2.1/rg-1.0.2/rr-1.2.3/sc-1.4.4/sl-1.2.5",
        errMode: "alert",
        feature: [],
        search: [],
        selector: {cell: [], column: [], row: []},
        internal: {},
        legacy: {ajax: null},
        pager: {},
        renderer: {pageButton: {}, header: {}},
        order: {},
        type: {detect: [], search: {}, order: {}},
        _unique: 0,
        fnVersionCheck: m.fnVersionCheck,
        iApiIndex: 0,
        oJUIClasses: {},
        sVersion: m.version
    };
    h.extend(x, {
        afnFiltering: x.search,
        aTypes: x.type.detect,
        ofnSearch: x.type.search,
        oSort: x.type.order,
        afnSortData: x.order,
        aoFeatures: x.feature,
        oApi: x.internal,
        oStdClasses: x.classes,
        oPagination: x.pager
    });
    h.extend(m.ext.classes, {
        sTable: "dataTable",
        sNoFooter: "no-footer",
        sPageButton: "paginate_button",
        sPageButtonActive: "current",
        sPageButtonDisabled: "disabled",
        sStripeOdd: "odd",
        sStripeEven: "even",
        sRowEmpty: "dataTables_empty",
        sWrapper: "dataTables_wrapper",
        sFilter: "dataTables_filter",
        sInfo: "dataTables_info",
        sPaging: "dataTables_paginate paging_",
        sLength: "dataTables_length",
        sProcessing: "dataTables_processing",
        sSortAsc: "sorting_asc",
        sSortDesc: "sorting_desc",
        sSortable: "sorting",
        sSortableAsc: "sorting_asc_disabled",
        sSortableDesc: "sorting_desc_disabled",
        sSortableNone: "sorting_disabled",
        sSortColumn: "sorting_",
        sFilterInput: "",
        sLengthSelect: "",
        sScrollWrapper: "dataTables_scroll",
        sScrollHead: "dataTables_scrollHead",
        sScrollHeadInner: "dataTables_scrollHeadInner",
        sScrollBody: "dataTables_scrollBody",
        sScrollFoot: "dataTables_scrollFoot",
        sScrollFootInner: "dataTables_scrollFootInner",
        sHeaderTH: "",
        sFooterTH: "",
        sSortJUIAsc: "",
        sSortJUIDesc: "",
        sSortJUI: "",
        sSortJUIAscAllowed: "",
        sSortJUIDescAllowed: "",
        sSortJUIWrapper: "",
        sSortIcon: "",
        sJUIHeader: "",
        sJUIFooter: ""
    });
    var Kb = m.ext.pager;
    h.extend(Kb, {
        simple: function () {
            return ["previous", "next"]
        }, full: function () {
            return ["first", "previous", "next", "last"]
        }, numbers: function (a, b) {
            return [ha(a,
                b)]
        }, simple_numbers: function (a, b) {
            return ["previous", ha(a, b), "next"]
        }, full_numbers: function (a, b) {
            return ["first", "previous", ha(a, b), "next", "last"]
        }, first_last_numbers: function (a, b) {
            return ["first", ha(a, b), "last"]
        }, _numbers: ha, numbers_length: 7
    });
    h.extend(!0, m.ext.renderer, {
        pageButton: {
            _: function (a, b, c, d, e, f) {
                var g = a.oClasses, j = a.oLanguage.oPaginate, i = a.oLanguage.oAria.paginate || {}, n, l, m = 0, o = function (b, d) {
                    var k, s, u, r, v = function (b) {
                        Sa(a, b.data.action, true)
                    };
                    k = 0;
                    for (s = d.length; k < s; k++) {
                        r = d[k];
                        if (h.isArray(r)) {
                            u =
                                h("<" + (r.DT_el || "div") + "/>").appendTo(b);
                            o(u, r)
                        } else {
                            n = null;
                            l = "";
                            switch (r) {
                                case "ellipsis":
                                    b.append('<span class="ellipsis">&#x2026;</span>');
                                    break;
                                case "first":
                                    n = j.sFirst;
                                    l = r + (e > 0 ? "" : " " + g.sPageButtonDisabled);
                                    break;
                                case "previous":
                                    n = j.sPrevious;
                                    l = r + (e > 0 ? "" : " " + g.sPageButtonDisabled);
                                    break;
                                case "next":
                                    n = j.sNext;
                                    l = r + (e < f - 1 ? "" : " " + g.sPageButtonDisabled);
                                    break;
                                case "last":
                                    n = j.sLast;
                                    l = r + (e < f - 1 ? "" : " " + g.sPageButtonDisabled);
                                    break;
                                default:
                                    n = r + 1;
                                    l = e === r ? g.sPageButtonActive : ""
                            }
                            if (n !== null) {
                                u = h("<a>", {
                                    "class": g.sPageButton +
                                    " " + l,
                                    "aria-controls": a.sTableId,
                                    "aria-label": i[r],
                                    "data-dt-idx": m,
                                    tabindex: a.iTabIndex,
                                    id: c === 0 && typeof r === "string" ? a.sTableId + "_" + r : null
                                }).html(n).appendTo(b);
                                Va(u, {action: r}, v);
                                m++
                            }
                        }
                    }
                }, s;
                try {
                    s = h(b).find(G.activeElement).data("dt-idx")
                } catch (u) {
                }
                o(h(b).empty(), d);
                s !== k && h(b).find("[data-dt-idx=" + s + "]").focus()
            }
        }
    });
    h.extend(m.ext.type.detect, [function (a, b) {
        var c = b.oLanguage.sDecimal;
        return Ya(a, c) ? "num" + c : null
    }, function (a) {
        if (a && !(a instanceof Date) && !Zb.test(a))return null;
        var b = Date.parse(a);
        return null !== b && !isNaN(b) || L(a) ? "date" : null
    }, function (a, b) {
        var c = b.oLanguage.sDecimal;
        return Ya(a, c, !0) ? "num-fmt" + c : null
    }, function (a, b) {
        var c = b.oLanguage.sDecimal;
        return Pb(a, c) ? "html-num" + c : null
    }, function (a, b) {
        var c = b.oLanguage.sDecimal;
        return Pb(a, c, !0) ? "html-num-fmt" + c : null
    }, function (a) {
        return L(a) || "string" === typeof a && -1 !== a.indexOf("<") ? "html" : null
    }]);
    h.extend(m.ext.type.search, {
        html: function (a) {
            return L(a) ? a : "string" === typeof a ? a.replace(Mb, " ").replace(Aa, "") : ""
        }, string: function (a) {
            return L(a) ?
                a : "string" === typeof a ? a.replace(Mb, " ") : a
        }
    });
    var za = function (a, b, c, d) {
        if (0 !== a && (!a || "-" === a))return -Infinity;
        b && (a = Ob(a, b));
        a.replace && (c && (a = a.replace(c, "")), d && (a = a.replace(d, "")));
        return 1 * a
    };
    h.extend(x.type.order, {
        "date-pre": function (a) {
            return Date.parse(a) || -Infinity
        }, "html-pre": function (a) {
            return L(a) ? "" : a.replace ? a.replace(/<.*?>/g, "").toLowerCase() : a + ""
        }, "string-pre": function (a) {
            return L(a) ? "" : "string" === typeof a ? a.toLowerCase() : !a.toString ? "" : a.toString()
        }, "string-asc": function (a, b) {
            return a <
            b ? -1 : a > b ? 1 : 0
        }, "string-desc": function (a, b) {
            return a < b ? 1 : a > b ? -1 : 0
        }
    });
    cb("");
    h.extend(!0, m.ext.renderer, {
        header: {
            _: function (a, b, c, d) {
                h(a.nTable).on("order.dt.DT", function (e, f, g, h) {
                    if (a === f) {
                        e = c.idx;
                        b.removeClass(c.sSortingClass + " " + d.sSortAsc + " " + d.sSortDesc).addClass(h[e] == "asc" ? d.sSortAsc : h[e] == "desc" ? d.sSortDesc : c.sSortingClass)
                    }
                })
            }, jqueryui: function (a, b, c, d) {
                h("<div/>").addClass(d.sSortJUIWrapper).append(b.contents()).append(h("<span/>").addClass(d.sSortIcon + " " + c.sSortingClassJUI)).appendTo(b);
                h(a.nTable).on("order.dt.DT", function (e, f, g, h) {
                    if (a === f) {
                        e = c.idx;
                        b.removeClass(d.sSortAsc + " " + d.sSortDesc).addClass(h[e] == "asc" ? d.sSortAsc : h[e] == "desc" ? d.sSortDesc : c.sSortingClass);
                        b.find("span." + d.sSortIcon).removeClass(d.sSortJUIAsc + " " + d.sSortJUIDesc + " " + d.sSortJUI + " " + d.sSortJUIAscAllowed + " " + d.sSortJUIDescAllowed).addClass(h[e] == "asc" ? d.sSortJUIAsc : h[e] == "desc" ? d.sSortJUIDesc : c.sSortingClassJUI)
                    }
                })
            }
        }
    });
    var Vb = function (a) {
        return "string" === typeof a ? a.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g,
            "&quot;") : a
    };
    m.render = {
        number: function (a, b, c, d, e) {
            return {
                display: function (f) {
                    if ("number" !== typeof f && "string" !== typeof f)return f;
                    var g = 0 > f ? "-" : "", h = parseFloat(f);
                    if (isNaN(h))return Vb(f);
                    h = h.toFixed(c);
                    f = Math.abs(h);
                    h = parseInt(f, 10);
                    f = c ? b + (f - h).toFixed(c).substring(2) : "";
                    return g + (d || "") + h.toString().replace(/\B(?=(\d{3})+(?!\d))/g, a) + f + (e || "")
                }
            }
        }, text: function () {
            return {display: Vb}
        }
    };
    h.extend(m.ext.internal, {
        _fnExternApiFunc: Lb,
        _fnBuildAjax: sa,
        _fnAjaxUpdate: kb,
        _fnAjaxParameters: tb,
        _fnAjaxUpdateDraw: ub,
        _fnAjaxDataSrc: ta,
        _fnAddColumn: Da,
        _fnColumnOptions: ja,
        _fnAdjustColumnSizing: Y,
        _fnVisibleToColumnIndex: Z,
        _fnColumnIndexToVisible: $,
        _fnVisbleColumns: aa,
        _fnGetColumns: la,
        _fnColumnTypes: Fa,
        _fnApplyColumnDefs: hb,
        _fnHungarianMap: X,
        _fnCamelToHungarian: I,
        _fnLanguageCompat: Ca,
        _fnBrowserDetect: fb,
        _fnAddData: M,
        _fnAddTr: ma,
        _fnNodeToDataIndex: function (a, b) {
            return b._DT_RowIndex !== k ? b._DT_RowIndex : null
        },
        _fnNodeToColumnIndex: function (a, b, c) {
            return h.inArray(c, a.aoData[b].anCells)
        },
        _fnGetCellData: B,
        _fnSetCellData: ib,
        _fnSplitObjNotation: Ia,
        _fnGetObjectDataFn: Q,
        _fnSetObjectDataFn: R,
        _fnGetDataMaster: Ja,
        _fnClearTable: na,
        _fnDeleteIndex: oa,
        _fnInvalidate: ca,
        _fnGetRowElements: Ha,
        _fnCreateTr: Ga,
        _fnBuildHead: jb,
        _fnDrawHead: ea,
        _fnDraw: N,
        _fnReDraw: S,
        _fnAddOptionsHtml: mb,
        _fnDetectHeader: da,
        _fnGetUniqueThs: ra,
        _fnFeatureHtmlFilter: ob,
        _fnFilterComplete: fa,
        _fnFilterCustom: xb,
        _fnFilterColumn: wb,
        _fnFilter: vb,
        _fnFilterCreateSearch: Oa,
        _fnEscapeRegex: Pa,
        _fnFilterData: yb,
        _fnFeatureHtmlInfo: rb,
        _fnUpdateInfo: Bb,
        _fnInfoMacros: Cb,
        _fnInitialise: ga,
        _fnInitComplete: ua,
        _fnLengthChange: Qa,
        _fnFeatureHtmlLength: nb,
        _fnFeatureHtmlPaginate: sb,
        _fnPageChange: Sa,
        _fnFeatureHtmlProcessing: pb,
        _fnProcessingDisplay: C,
        _fnFeatureHtmlTable: qb,
        _fnScrollDraw: ka,
        _fnApplyToChildren: H,
        _fnCalculateColumnWidths: Ea,
        _fnThrottle: Na,
        _fnConvertToWidth: Db,
        _fnGetWidestNode: Eb,
        _fnGetMaxLenString: Fb,
        _fnStringToCss: v,
        _fnSortFlatten: V,
        _fnSort: lb,
        _fnSortAria: Hb,
        _fnSortListener: Ua,
        _fnSortAttachListener: La,
        _fnSortingClasses: wa,
        _fnSortData: Gb,
        _fnSaveState: xa,
        _fnLoadState: Ib,
        _fnSettingsFromNode: ya,
        _fnLog: J,
        _fnMap: F,
        _fnBindAction: Va,
        _fnCallbackReg: z,
        _fnCallbackFire: r,
        _fnLengthOverflow: Ra,
        _fnRenderer: Ma,
        _fnDataSource: y,
        _fnRowAttributes: Ka,
        _fnCalculateEnd: function () {
        }
    });
    h.fn.dataTable = m;
    m.$ = h;
    h.fn.dataTableSettings = m.settings;
    h.fn.dataTableExt = m.ext;
    h.fn.DataTable = function (a) {
        return h(this).dataTable(a).api()
    };
    h.each(m, function (a, b) {
        h.fn.DataTable[a] = b
    });
    return h.fn.dataTable
});


/*!
 AutoFill 2.2.2
 ©2008-2017 SpryMedia Ltd - datatables.net/license
 */
(function (e) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (l) {
        return e(l, window, document)
    }) : "object" === typeof exports ? module.exports = function (l, i) {
        l || (l = window);
        if (!i || !i.fn.dataTable)i = require("datatables.net")(l, i).$;
        return e(i, l, l.document)
    } : e(jQuery, window, document)
})(function (e, l, i, q) {
    var k = e.fn.dataTable, p = 0, j = function (c, b) {
        if (!k.versionCheck || !k.versionCheck("1.10.8"))throw"Warning: AutoFill requires DataTables 1.10.8 or greater";
        this.c = e.extend(!0, {}, k.defaults.autoFill,
            j.defaults, b);
        this.s = {
            dt: new k.Api(c),
            namespace: ".autoFill" + p++,
            scroll: {},
            scrollInterval: null,
            handle: {height: 0, width: 0},
            enabled: !1
        };
        this.dom = {
            handle: e('<div class="dt-autofill-handle"/>'),
            select: {
                top: e('<div class="dt-autofill-select top"/>'),
                right: e('<div class="dt-autofill-select right"/>'),
                bottom: e('<div class="dt-autofill-select bottom"/>'),
                left: e('<div class="dt-autofill-select left"/>')
            },
            background: e('<div class="dt-autofill-background"/>'),
            list: e('<div class="dt-autofill-list">' + this.s.dt.i18n("autoFill.info",
                    "") + "<ul/></div>"),
            dtScroll: null,
            offsetParent: null
        };
        this._constructor()
    };
    e.extend(j.prototype, {
        enabled: function () {
            return this.s.enabled
        }, enable: function (c) {
            var b = this;
            if (!1 === c)return this.disable();
            this.s.enabled = !0;
            this._focusListener();
            this.dom.handle.on("mousedown", function (a) {
                b._mousedown(a);
                return !1
            });
            return this
        }, disable: function () {
            this.s.enabled = !1;
            this._focusListenerRemove();
            return this
        }, _constructor: function () {
            var c = this, b = this.s.dt, a = e("div.dataTables_scrollBody", this.s.dt.table().container());
            b.settings()[0].autoFill = this;
            a.length && (this.dom.dtScroll = a, "static" === a.css("position") && a.css("position", "relative"));
            !1 !== this.c.enable && this.enable();
            b.on("destroy.autoFill", function () {
                c._focusListenerRemove()
            })
        }, _attach: function (c) {
            var b = this.s.dt, a = b.cell(c).index(), d = this.dom.handle, f = this.s.handle;
            if (!a || -1 === b.columns(this.c.columns).indexes().indexOf(a.column))this._detach(); else {
                this.dom.offsetParent || (this.dom.offsetParent = e(b.table().node()).offsetParent());
                if (!f.height || !f.width)d.appendTo("body"),
                    f.height = d.outerHeight(), f.width = d.outerWidth();
                b = this._getPosition(c, this.dom.offsetParent);
                this.dom.attachedTo = c;
                d.css({
                    top: b.top + c.offsetHeight - f.height,
                    left: b.left + c.offsetWidth - f.width
                }).appendTo(this.dom.offsetParent)
            }
        }, _actionSelector: function (c) {
            var b = this, a = this.s.dt, d = j.actions, f = [];
            e.each(d, function (b, d) {
                d.available(a, c) && f.push(b)
            });
            if (1 === f.length && !1 === this.c.alwaysAsk) {
                var h = d[f[0]].execute(a, c);
                this._update(h, c)
            } else {
                var g = this.dom.list.children("ul").empty();
                f.push("cancel");
                e.each(f,
                    function (f, h) {
                        g.append(e("<li/>").append('<div class="dt-autofill-question">' + d[h].option(a, c) + "<div>").append(e('<div class="dt-autofill-button">').append(e('<a class="' + j.classes.btn + '">' + a.i18n("autoFill.button", "&gt;") + "</a>").on("click", function () {
                            var f = d[h].execute(a, c, e(this).closest("li"));
                            b._update(f, c);
                            b.dom.background.remove();
                            b.dom.list.remove()
                        }))))
                    });
                this.dom.background.appendTo("body");
                this.dom.list.appendTo("body");
                this.dom.list.css("margin-top", -1 * (this.dom.list.outerHeight() /
                    2))
            }
        }, _detach: function () {
            this.dom.attachedTo = null;
            this.dom.handle.detach()
        }, _drawSelection: function (c) {
            var b = this.s.dt, a = this.s.start, d = e(this.dom.start), f = e(c), h = {
                row: b.rows({page: "current"}).nodes().indexOf(f.parent()[0]),
                column: f.index()
            }, c = b.column.index("toData", h.column);
            if (b.cell(f).any() && -1 !== b.columns(this.c.columns).indexes().indexOf(c)) {
                this.s.end = h;
                var g, b = a.row < h.row ? d : f;
                g = a.row < h.row ? f : d;
                c = a.column < h.column ? d : f;
                d = a.column < h.column ? f : d;
                b = this._getPosition(b).top;
                c = this._getPosition(c).left;
                a = this._getPosition(g).top + g.outerHeight() - b;
                d = this._getPosition(d).left + d.outerWidth() - c;
                f = this.dom.select;
                f.top.css({top: b, left: c, width: d});
                f.left.css({top: b, left: c, height: a});
                f.bottom.css({top: b + a, left: c, width: d});
                f.right.css({top: b, left: c + d, height: a})
            }
        }, _editor: function (c) {
            var b = this.s.dt, a = this.c.editor;
            if (a) {
                for (var d = {}, f = [], e = a.fields(), g = 0, i = c.length; g < i; g++)for (var j = 0, l = c[g].length; j < l; j++) {
                    var o = c[g][j], k = b.settings()[0].aoColumns[o.index.column], n = k.editField;
                    if (n === q)for (var k = k.mData,
                                         m = 0, p = e.length; m < p; m++) {
                        var r = a.field(e[m]);
                        if (r.dataSrc() === k) {
                            n = r.name();
                            break
                        }
                    }
                    if (!n)throw"Could not automatically determine field data. Please see https://datatables.net/tn/11";
                    d[n] || (d[n] = {});
                    k = b.row(o.index.row).id();
                    d[n][k] = o.set;
                    f.push(o.index)
                }
                a.bubble(f, !1).multiSet(d).submit()
            }
        }, _emitEvent: function (c, b) {
            this.s.dt.iterator("table", function (a) {
                e(a.nTable).triggerHandler(c + ".dt", b)
            })
        }, _focusListener: function () {
            var c = this, b = this.s.dt, a = this.s.namespace, d = null !== this.c.focus ? this.c.focus : b.init().keys ||
            b.settings()[0].keytable ? "focus" : "hover";
            if ("focus" === d)b.on("key-focus.autoFill", function (b, a, d) {
                c._attach(d.node())
            }).on("key-blur.autoFill", function () {
                c._detach()
            }); else if ("click" === d)e(b.table().body()).on("click" + a, "td, th", function () {
                c._attach(this)
            }), e(i.body).on("click" + a, function (a) {
                e(a.target).parents().filter(b.table().body()).length || c._detach()
            }); else e(b.table().body()).on("mouseenter" + a, "td, th", function () {
                c._attach(this)
            }).on("mouseleave" + a, function (b) {
                e(b.relatedTarget).hasClass("dt-autofill-handle") ||
                c._detach()
            })
        }, _focusListenerRemove: function () {
            var c = this.s.dt;
            c.off(".autoFill");
            e(c.table().body()).off(this.s.namespace);
            e(i.body).off(this.s.namespace)
        }, _getPosition: function (c, b) {
            var a = e(c), d, f, h = 0, g = 0;
            b || (b = e(this.s.dt.table().node()).offsetParent());
            do {
                f = a.position();
                d = a.offsetParent();
                h += f.top + d.scrollTop();
                g += f.left + d.scrollLeft();
                if ("body" === a.get(0).nodeName.toLowerCase())break;
                a = d
            } while (d.get(0) !== b.get(0));
            return {top: h, left: g}
        }, _mousedown: function (c) {
            var b = this, a = this.s.dt;
            this.dom.start =
                this.dom.attachedTo;
            this.s.start = {
                row: a.rows({page: "current"}).nodes().indexOf(e(this.dom.start).parent()[0]),
                column: e(this.dom.start).index()
            };
            e(i.body).on("mousemove.autoFill", function (a) {
                b._mousemove(a)
            }).on("mouseup.autoFill", function (a) {
                b._mouseup(a)
            });
            var d = this.dom.select, a = e(a.table().node()).offsetParent();
            d.top.appendTo(a);
            d.left.appendTo(a);
            d.right.appendTo(a);
            d.bottom.appendTo(a);
            this._drawSelection(this.dom.start, c);
            this.dom.handle.css("display", "none");
            c = this.dom.dtScroll;
            this.s.scroll =
            {
                windowHeight: e(l).height(),
                windowWidth: e(l).width(),
                dtTop: c ? c.offset().top : null,
                dtLeft: c ? c.offset().left : null,
                dtHeight: c ? c.outerHeight() : null,
                dtWidth: c ? c.outerWidth() : null
            }
        }, _mousemove: function (c) {
            var b = c.target.nodeName.toLowerCase();
            "td" !== b && "th" !== b || (this._drawSelection(c.target, c), this._shiftScroll(c))
        }, _mouseup: function () {
            e(i.body).off(".autoFill");
            var c = this.s.dt, b = this.dom.select;
            b.top.remove();
            b.left.remove();
            b.right.remove();
            b.bottom.remove();
            this.dom.handle.css("display", "block");
            var b =
                this.s.start, a = this.s.end;
            if (!(b.row === a.row && b.column === a.column)) {
                for (var d = this._range(b.row, a.row), b = this._range(b.column, a.column), a = [], f = c.settings()[0], h = f.aoColumns, g = 0; g < d.length; g++)a.push(e.map(b, function (a) {
                    var a = c.cell(":eq(" + d[g] + ")", a + ":visible", {page: "current"}), b = a.data(), e = a.index(), i = h[e.column].editField;
                    i !== q && (b = f.oApi._fnGetObjectDataFn(i)(c.row(e.row).data()));
                    return {cell: a, data: b, label: a.data(), index: e}
                }));
                this._actionSelector(a);
                clearInterval(this.s.scrollInterval);
                this.s.scrollInterval =
                    null
            }
        }, _range: function (c, b) {
            var a = [], d;
            if (c <= b)for (d = c; d <= b; d++)a.push(d); else for (d = c; d >= b; d--)a.push(d);
            return a
        }, _shiftScroll: function (c) {
            var b = this, a = this.s.scroll, d = !1, f = c.pageY - i.body.scrollTop, e = c.pageX - i.body.scrollLeft, g, j, k, l;
            65 > f ? g = -5 : f > a.windowHeight - 65 && (g = 5);
            65 > e ? j = -5 : e > a.windowWidth - 65 && (j = 5);
            null !== a.dtTop && c.pageY < a.dtTop + 65 ? k = -5 : null !== a.dtTop && c.pageY > a.dtTop + a.dtHeight - 65 && (k = 5);
            null !== a.dtLeft && c.pageX < a.dtLeft + 65 ? l = -5 : null !== a.dtLeft && c.pageX > a.dtLeft + a.dtWidth - 65 && (l = 5);
            g ||
            j || k || l ? (a.windowVert = g, a.windowHoriz = j, a.dtVert = k, a.dtHoriz = l, d = !0) : this.s.scrollInterval && (clearInterval(this.s.scrollInterval), this.s.scrollInterval = null);
            !this.s.scrollInterval && d && (this.s.scrollInterval = setInterval(function () {
                    if (a.windowVert)i.body.scrollTop = i.body.scrollTop + a.windowVert;
                    if (a.windowHoriz)i.body.scrollLeft = i.body.scrollLeft + a.windowHoriz;
                    if (a.dtVert || a.dtHoriz) {
                        var c = b.dom.dtScroll[0];
                        if (a.dtVert)c.scrollTop = c.scrollTop + a.dtVert;
                        if (a.dtHoriz)c.scrollLeft = c.scrollLeft + a.dtHoriz
                    }
                },
                20))
        }, _update: function (c, b) {
            if (!1 !== c) {
                var a = this.s.dt, d;
                this._emitEvent("preAutoFill", [a, b]);
                this._editor(b);
                if (null !== this.c.update ? this.c.update : !this.c.editor) {
                    for (var f = 0, e = b.length; f < e; f++)for (var g = 0, i = b[f].length; g < i; g++)d = b[f][g], d.cell.data(d.set);
                    a.draw(!1)
                }
                this._emitEvent("autoFill", [a, b])
            }
        }
    });
    j.actions = {
        increment: {
            available: function (c, b) {
                return e.isNumeric(b[0][0].label)
            }, option: function (c) {
                return c.i18n("autoFill.increment", 'Increment / decrement each cell by: <input type="number" value="1">')
            },
            execute: function (c, b, a) {
                for (var c = 1 * b[0][0].data, a = 1 * e("input", a).val(), d = 0, f = b.length; d < f; d++)for (var h = 0, g = b[d].length; h < g; h++)b[d][h].set = c, c += a
            }
        }, fill: {
            available: function () {
                return !0
            }, option: function (c, b) {
                return c.i18n("autoFill.fill", "Fill all cells with <i>" + b[0][0].label + "</i>")
            }, execute: function (c, b) {
                for (var a = b[0][0].data, d = 0, e = b.length; d < e; d++)for (var h = 0, g = b[d].length; h < g; h++)b[d][h].set = a
            }
        }, fillHorizontal: {
            available: function (c, b) {
                return 1 < b.length && 1 < b[0].length
            }, option: function (c) {
                return c.i18n("autoFill.fillHorizontal",
                    "Fill cells horizontally")
            }, execute: function (c, b) {
                for (var a = 0, d = b.length; a < d; a++)for (var e = 0, h = b[a].length; e < h; e++)b[a][e].set = b[a][0].data
            }
        }, fillVertical: {
            available: function (c, b) {
                return 1 < b.length && 1 < b[0].length
            }, option: function (c) {
                return c.i18n("autoFill.fillVertical", "Fill cells vertically")
            }, execute: function (c, b) {
                for (var a = 0, d = b.length; a < d; a++)for (var e = 0, h = b[a].length; e < h; e++)b[a][e].set = b[0][e].data
            }
        }, cancel: {
            available: function () {
                return !1
            }, option: function (c) {
                return c.i18n("autoFill.cancel",
                    "Cancel")
            }, execute: function () {
                return !1
            }
        }
    };
    j.version = "2.2.2";
    j.defaults = {alwaysAsk: !1, focus: null, columns: "", enable: !0, update: null, editor: null};
    j.classes = {btn: "btn"};
    var m = e.fn.dataTable.Api;
    m.register("autoFill()", function () {
        return this
    });
    m.register("autoFill().enabled()", function () {
        var c = this.context[0];
        return c.autoFill ? c.autoFill.enabled() : !1
    });
    m.register("autoFill().enable()", function (c) {
        return this.iterator("table", function (b) {
            b.autoFill && b.autoFill.enable(c)
        })
    });
    m.register("autoFill().disable()",
        function () {
            return this.iterator("table", function (c) {
                c.autoFill && c.autoFill.disable()
            })
        });
    e(i).on("preInit.dt.autofill", function (c, b) {
        if ("dt" === c.namespace) {
            var a = b.oInit.autoFill, d = k.defaults.autoFill;
            if (a || d)d = e.extend({}, a, d), !1 !== a && new j(b, d)
        }
    });
    k.AutoFill = j;
    return k.AutoFill = j
});


/*!
 Buttons for DataTables 1.5.1
 ©2016-2017 SpryMedia Ltd - datatables.net/license
 */
(function (d) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (o) {
        return d(o, window, document)
    }) : "object" === typeof exports ? module.exports = function (o, n) {
        o || (o = window);
        if (!n || !n.fn.dataTable)n = require("datatables.net")(o, n).$;
        return d(n, o, o.document)
    } : d(jQuery, window, document)
})(function (d, o, n, l) {
    var i = d.fn.dataTable, x = 0, y = 0, j = i.ext.buttons, m = function (a, b) {
        "undefined" === typeof b && (b = {});
        !0 === b && (b = {});
        d.isArray(b) && (b = {buttons: b});
        this.c = d.extend(!0, {}, m.defaults, b);
        b.buttons && (this.c.buttons = b.buttons);
        this.s = {dt: new i.Api(a), buttons: [], listenKeys: "", namespace: "dtb" + x++};
        this.dom = {container: d("<" + this.c.dom.container.tag + "/>").addClass(this.c.dom.container.className)};
        this._constructor()
    };
    d.extend(m.prototype, {
        action: function (a, b) {
            var c = this._nodeToButton(a);
            if (b === l)return c.conf.action;
            c.conf.action = b;
            return this
        }, active: function (a, b) {
            var c = this._nodeToButton(a), e = this.c.dom.button.active, c = d(c.node);
            if (b === l)return c.hasClass(e);
            c.toggleClass(e, b === l ? !0 :
                b);
            return this
        }, add: function (a, b) {
            var c = this.s.buttons;
            if ("string" === typeof b) {
                for (var e = b.split("-"), c = this.s, d = 0, g = e.length - 1; d < g; d++)c = c.buttons[1 * e[d]];
                c = c.buttons;
                b = 1 * e[e.length - 1]
            }
            this._expandButton(c, a, !1, b);
            this._draw();
            return this
        }, container: function () {
            return this.dom.container
        }, disable: function (a) {
            a = this._nodeToButton(a);
            d(a.node).addClass(this.c.dom.button.disabled);
            return this
        }, destroy: function () {
            d("body").off("keyup." + this.s.namespace);
            var a = this.s.buttons.slice(), b, c;
            b = 0;
            for (c = a.length; b <
            c; b++)this.remove(a[b].node);
            this.dom.container.remove();
            a = this.s.dt.settings()[0];
            b = 0;
            for (c = a.length; b < c; b++)if (a.inst === this) {
                a.splice(b, 1);
                break
            }
            return this
        }, enable: function (a, b) {
            if (!1 === b)return this.disable(a);
            var c = this._nodeToButton(a);
            d(c.node).removeClass(this.c.dom.button.disabled);
            return this
        }, name: function () {
            return this.c.name
        }, node: function (a) {
            a = this._nodeToButton(a);
            return d(a.node)
        }, processing: function (a, b) {
            var c = this._nodeToButton(a);
            if (b === l)return d(c.node).hasClass("processing");
            d(c.node).toggleClass("processing", b);
            return this
        }, remove: function (a) {
            var b = this._nodeToButton(a), c = this._nodeToHost(a), e = this.s.dt;
            if (b.buttons.length)for (var h = b.buttons.length - 1; 0 <= h; h--)this.remove(b.buttons[h].node);
            b.conf.destroy && b.conf.destroy.call(e.button(a), e, d(a), b.conf);
            this._removeKey(b.conf);
            d(b.node).remove();
            a = d.inArray(b, c);
            c.splice(a, 1);
            return this
        }, text: function (a, b) {
            var c = this._nodeToButton(a), e = this.c.dom.collection.buttonLiner, e = c.inCollection && e && e.tag ? e.tag : this.c.dom.buttonLiner.tag,
                h = this.s.dt, g = d(c.node), f = function (a) {
                    return "function" === typeof a ? a(h, g, c.conf) : a
                };
            if (b === l)return f(c.conf.text);
            c.conf.text = b;
            e ? g.children(e).html(f(b)) : g.html(f(b));
            return this
        }, _constructor: function () {
            var a = this, b = this.s.dt, c = b.settings()[0], e = this.c.buttons;
            c._buttons || (c._buttons = []);
            c._buttons.push({inst: this, name: this.c.name});
            for (var c = 0, h = e.length; c < h; c++)this.add(e[c]);
            b.on("destroy", function () {
                a.destroy()
            });
            d("body").on("keyup." + this.s.namespace, function (b) {
                if (!n.activeElement || n.activeElement ===
                    n.body) {
                    var c = String.fromCharCode(b.keyCode).toLowerCase();
                    a.s.listenKeys.toLowerCase().indexOf(c) !== -1 && a._keypress(c, b)
                }
            })
        }, _addKey: function (a) {
            a.key && (this.s.listenKeys += d.isPlainObject(a.key) ? a.key.key : a.key)
        }, _draw: function (a, b) {
            a || (a = this.dom.container, b = this.s.buttons);
            a.children().detach();
            for (var c = 0, e = b.length; c < e; c++)a.append(b[c].inserter), a.append(" "), b[c].buttons && b[c].buttons.length && this._draw(b[c].collection, b[c].buttons)
        }, _expandButton: function (a, b, c, e) {
            for (var h = this.s.dt, g = 0,
                     b = !d.isArray(b) ? [b] : b, f = 0, q = b.length; f < q; f++) {
                var k = this._resolveExtends(b[f]);
                if (k)if (d.isArray(k))this._expandButton(a, k, c, e); else {
                    var p = this._buildButton(k, c);
                    if (p) {
                        e !== l ? (a.splice(e, 0, p), e++) : a.push(p);
                        if (p.conf.buttons) {
                            var u = this.c.dom.collection;
                            p.collection = d("<" + u.tag + "/>").addClass(u.className).attr("role", "menu");
                            p.conf._collection = p.collection;
                            this._expandButton(p.buttons, p.conf.buttons, !0, e)
                        }
                        k.init && k.init.call(h.button(p.node), h, d(p.node), k);
                        g++
                    }
                }
            }
        }, _buildButton: function (a, b) {
            var c =
                this.c.dom.button, e = this.c.dom.buttonLiner, h = this.c.dom.collection, g = this.s.dt, f = function (b) {
                return "function" === typeof b ? b(g, k, a) : b
            };
            b && h.button && (c = h.button);
            b && h.buttonLiner && (e = h.buttonLiner);
            if (a.available && !a.available(g, a))return !1;
            var q = function (a, b, c, e) {
                e.action.call(b.button(c), a, b, c, e);
                d(b.table().node()).triggerHandler("buttons-action.dt", [b.button(c), b, c, e])
            }, k = d("<" + c.tag + "/>").addClass(c.className).attr("tabindex", this.s.dt.settings()[0].iTabIndex).attr("aria-controls", this.s.dt.table().node().id).on("click.dtb",
                function (b) {
                    b.preventDefault();
                    !k.hasClass(c.disabled) && a.action && q(b, g, k, a);
                    k.blur()
                }).on("keyup.dtb", function (b) {
                b.keyCode === 13 && !k.hasClass(c.disabled) && a.action && q(b, g, k, a)
            });
            "a" === c.tag.toLowerCase() && k.attr("href", "#");
            e.tag ? (h = d("<" + e.tag + "/>").html(f(a.text)).addClass(e.className), "a" === e.tag.toLowerCase() && h.attr("href", "#"), k.append(h)) : k.html(f(a.text));
            !1 === a.enabled && k.addClass(c.disabled);
            a.className && k.addClass(a.className);
            a.titleAttr && k.attr("title", f(a.titleAttr));
            a.attr && k.attr(a.attr);
            a.namespace || (a.namespace = ".dt-button-" + y++);
            e = (e = this.c.dom.buttonContainer) && e.tag ? d("<" + e.tag + "/>").addClass(e.className).append(k) : k;
            this._addKey(a);
            return {conf: a, node: k.get(0), inserter: e, buttons: [], inCollection: b, collection: null}
        }, _nodeToButton: function (a, b) {
            b || (b = this.s.buttons);
            for (var c = 0, e = b.length; c < e; c++) {
                if (b[c].node === a)return b[c];
                if (b[c].buttons.length) {
                    var d = this._nodeToButton(a, b[c].buttons);
                    if (d)return d
                }
            }
        }, _nodeToHost: function (a, b) {
            b || (b = this.s.buttons);
            for (var c = 0, e = b.length; c <
            e; c++) {
                if (b[c].node === a)return b;
                if (b[c].buttons.length) {
                    var d = this._nodeToHost(a, b[c].buttons);
                    if (d)return d
                }
            }
        }, _keypress: function (a, b) {
            if (!b._buttonsHandled) {
                var c = function (e) {
                    for (var h = 0, g = e.length; h < g; h++) {
                        var f = e[h].conf, q = e[h].node;
                        if (f.key)if (f.key === a)b._buttonsHandled = !0, d(q).click(); else if (d.isPlainObject(f.key) && f.key.key === a && (!f.key.shiftKey || b.shiftKey))if (!f.key.altKey || b.altKey)if (!f.key.ctrlKey || b.ctrlKey)if (!f.key.metaKey || b.metaKey)b._buttonsHandled = !0, d(q).click();
                        e[h].buttons.length &&
                        c(e[h].buttons)
                    }
                };
                c(this.s.buttons)
            }
        }, _removeKey: function (a) {
            if (a.key) {
                var b = d.isPlainObject(a.key) ? a.key.key : a.key, a = this.s.listenKeys.split(""), b = d.inArray(b, a);
                a.splice(b, 1);
                this.s.listenKeys = a.join("")
            }
        }, _resolveExtends: function (a) {
            for (var b = this.s.dt, c, e, h = function (c) {
                for (var e = 0; !d.isPlainObject(c) && !d.isArray(c);) {
                    if (c === l)return;
                    if ("function" === typeof c) {
                        if (c = c(b, a), !c)return !1
                    } else if ("string" === typeof c) {
                        if (!j[c])throw"Unknown button type: " + c;
                        c = j[c]
                    }
                    e++;
                    if (30 < e)throw"Buttons: Too many iterations";
                }
                return d.isArray(c) ? c : d.extend({}, c)
            }, a = h(a); a && a.extend;) {
                if (!j[a.extend])throw"Cannot extend unknown button type: " + a.extend;
                var g = h(j[a.extend]);
                if (d.isArray(g))return g;
                if (!g)return !1;
                c = g.className;
                a = d.extend({}, g, a);
                c && a.className !== c && (a.className = c + " " + a.className);
                var f = a.postfixButtons;
                if (f) {
                    a.buttons || (a.buttons = []);
                    c = 0;
                    for (e = f.length; c < e; c++)a.buttons.push(f[c]);
                    a.postfixButtons = null
                }
                if (f = a.prefixButtons) {
                    a.buttons || (a.buttons = []);
                    c = 0;
                    for (e = f.length; c < e; c++)a.buttons.splice(c, 0, f[c]);
                    a.prefixButtons = null
                }
                a.extend = g.extend
            }
            return a
        }
    });
    m.background = function (a, b, c) {
        c === l && (c = 400);
        a ? d("<div/>").addClass(b).css("display", "none").appendTo("body").fadeIn(c) : d("body > div." + b).fadeOut(c, function () {
            d(this).removeClass(b).remove()
        })
    };
    m.instanceSelector = function (a, b) {
        if (!a)return d.map(b, function (a) {
            return a.inst
        });
        var c = [], e = d.map(b, function (a) {
            return a.name
        }), h = function (a) {
            if (d.isArray(a))for (var f = 0, q = a.length; f < q; f++)h(a[f]); else"string" === typeof a ? -1 !== a.indexOf(",") ? h(a.split(",")) :
                (a = d.inArray(d.trim(a), e), -1 !== a && c.push(b[a].inst)) : "number" === typeof a && c.push(b[a].inst)
        };
        h(a);
        return c
    };
    m.buttonSelector = function (a, b) {
        for (var c = [], e = function (a, b, c) {
            for (var d, f, h = 0, g = b.length; h < g; h++)if (d = b[h])f = c !== l ? c + h : h + "", a.push({
                node: d.node,
                name: d.conf.name,
                idx: f
            }), d.buttons && e(a, d.buttons, f + "-")
        }, h = function (a, b) {
            var f, g, i = [];
            e(i, b.s.buttons);
            f = d.map(i, function (a) {
                return a.node
            });
            if (d.isArray(a) || a instanceof d) {
                f = 0;
                for (g = a.length; f < g; f++)h(a[f], b)
            } else if (null === a || a === l || "*" === a) {
                f = 0;
                for (g = i.length; f < g; f++)c.push({inst: b, node: i[f].node})
            } else if ("number" === typeof a)c.push({
                inst: b,
                node: b.s.buttons[a].node
            }); else if ("string" === typeof a)if (-1 !== a.indexOf(",")) {
                i = a.split(",");
                f = 0;
                for (g = i.length; f < g; f++)h(d.trim(i[f]), b)
            } else if (a.match(/^\d+(\-\d+)*$/))f = d.map(i, function (a) {
                return a.idx
            }), c.push({inst: b, node: i[d.inArray(a, f)].node}); else if (-1 !== a.indexOf(":name")) {
                var j = a.replace(":name", "");
                f = 0;
                for (g = i.length; f < g; f++)i[f].name === j && c.push({inst: b, node: i[f].node})
            } else d(f).filter(a).each(function () {
                c.push({
                    inst: b,
                    node: this
                })
            }); else"object" === typeof a && a.nodeName && (i = d.inArray(a, f), -1 !== i && c.push({
                inst: b,
                node: f[i]
            }))
        }, g = 0, f = a.length; g < f; g++)h(b, a[g]);
        return c
    };
    m.defaults = {
        buttons: ["copy", "excel", "csv", "pdf", "print"],
        name: "main",
        tabIndex: 0,
        dom: {
            container: {tag: "div", className: "dt-buttons btn-group"},
            collection: {tag: "div", className: "dt-button-collection"},
            button: {tag: "a", className: "btn btn-default", active: "active", disabled: "disabled"},
            buttonLiner: {tag: "span", className: ""}
        }
    };
    m.version = "1.5.1";
    d.extend(j, {
        collection: {
            text: function (a) {
                return a.i18n("buttons.collection",
                    "Collection")
            },
            className: "buttons-collection",
            action: function (a, b, c, e) {
                var h = d(c).parents("div.dt-button-collection"), a = c.position(), g = d(b.table().container()), f = !1, i = c;
                h.length && (f = d(".dt-button-collection").position(), i = h, d("body").trigger("click.dtb-collection"));
                e._collection.addClass(e.collectionLayout).css("display", "none").insertAfter(i).fadeIn(e.fade);
                h = e._collection.css("position");
                f && "absolute" === h ? e._collection.css({
                    top: f.top,
                    left: f.left
                }) : "absolute" === h ? (e._collection.css({
                    top: a.top + c.outerHeight(),
                    left: a.left
                }), f = g.offset().top + g.height(), c = a.top + c.outerHeight() + e._collection.outerHeight() - f, f = a.top - e._collection.outerHeight(), f = g.offset().top - f, c > f && e._collection.css("top", a.top - e._collection.outerHeight() - 5), c = a.left + e._collection.outerWidth(), g = g.offset().left + g.width(), c > g && e._collection.css("left", a.left - (c - g))) : (a = e._collection.height() / 2, a > d(o).height() / 2 && (a = d(o).height() / 2), e._collection.css("marginTop", -1 * a));
                e.background && m.background(!0, e.backgroundClassName, e.fade);
                setTimeout(function () {
                    d("div.dt-button-background").on("click.dtb-collection",
                        function () {
                        });
                    d("body").on("click.dtb-collection", function (a) {
                        var c = d.fn.addBack ? "addBack" : "andSelf";
                        if (!d(a.target).parents()[c]().filter(e._collection).length) {
                            e._collection.fadeOut(e.fade, function () {
                                e._collection.detach()
                            });
                            d("div.dt-button-background").off("click.dtb-collection");
                            m.background(false, e.backgroundClassName, e.fade);
                            d("body").off("click.dtb-collection");
                            b.off("buttons-action.b-internal")
                        }
                    })
                }, 10);
                if (e.autoClose)b.on("buttons-action.b-internal", function () {
                    d("div.dt-button-background").click()
                })
            },
            background: !0,
            collectionLayout: "",
            backgroundClassName: "dt-button-background",
            autoClose: !1,
            fade: 400,
            attr: {"aria-haspopup": !0}
        }, copy: function (a, b) {
            if (j.copyHtml5)return "copyHtml5";
            if (j.copyFlash && j.copyFlash.available(a, b))return "copyFlash"
        }, csv: function (a, b) {
            if (j.csvHtml5 && j.csvHtml5.available(a, b))return "csvHtml5";
            if (j.csvFlash && j.csvFlash.available(a, b))return "csvFlash"
        }, excel: function (a, b) {
            if (j.excelHtml5 && j.excelHtml5.available(a, b))return "excelHtml5";
            if (j.excelFlash && j.excelFlash.available(a,
                    b))return "excelFlash"
        }, pdf: function (a, b) {
            if (j.pdfHtml5 && j.pdfHtml5.available(a, b))return "pdfHtml5";
            if (j.pdfFlash && j.pdfFlash.available(a, b))return "pdfFlash"
        }, pageLength: function (a) {
            var a = a.settings()[0].aLengthMenu, b = d.isArray(a[0]) ? a[0] : a, c = d.isArray(a[0]) ? a[1] : a, e = function (a) {
                return a.i18n("buttons.pageLength", {"-1": "Show all rows", _: "Show %d rows"}, a.page.len())
            };
            return {
                extend: "collection",
                text: e,
                className: "buttons-page-length",
                autoClose: !0,
                buttons: d.map(b, function (a, b) {
                    return {
                        text: c[b], className: "button-page-length",
                        action: function (b, c) {
                            c.page.len(a).draw()
                        }, init: function (b, c, d) {
                            var e = this, c = function () {
                                e.active(b.page.len() === a)
                            };
                            b.on("length.dt" + d.namespace, c);
                            c()
                        }, destroy: function (a, b, c) {
                            a.off("length.dt" + c.namespace)
                        }
                    }
                }),
                init: function (a, b, c) {
                    var d = this;
                    a.on("length.dt" + c.namespace, function () {
                        d.text(e(a))
                    })
                },
                destroy: function (a, b, c) {
                    a.off("length.dt" + c.namespace)
                }
            }
        }
    });
    i.Api.register("buttons()", function (a, b) {
        b === l && (b = a, a = l);
        this.selector.buttonGroup = a;
        var c = this.iterator(!0, "table", function (c) {
            if (c._buttons)return m.buttonSelector(m.instanceSelector(a,
                c._buttons), b)
        }, !0);
        c._groupSelector = a;
        return c
    });
    i.Api.register("button()", function (a, b) {
        var c = this.buttons(a, b);
        1 < c.length && c.splice(1, c.length);
        return c
    });
    i.Api.registerPlural("buttons().active()", "button().active()", function (a) {
        return a === l ? this.map(function (a) {
            return a.inst.active(a.node)
        }) : this.each(function (b) {
            b.inst.active(b.node, a)
        })
    });
    i.Api.registerPlural("buttons().action()", "button().action()", function (a) {
        return a === l ? this.map(function (a) {
            return a.inst.action(a.node)
        }) : this.each(function (b) {
            b.inst.action(b.node,
                a)
        })
    });
    i.Api.register(["buttons().enable()", "button().enable()"], function (a) {
        return this.each(function (b) {
            b.inst.enable(b.node, a)
        })
    });
    i.Api.register(["buttons().disable()", "button().disable()"], function () {
        return this.each(function (a) {
            a.inst.disable(a.node)
        })
    });
    i.Api.registerPlural("buttons().nodes()", "button().node()", function () {
        var a = d();
        d(this.each(function (b) {
            a = a.add(b.inst.node(b.node))
        }));
        return a
    });
    i.Api.registerPlural("buttons().processing()", "button().processing()", function (a) {
        return a ===
        l ? this.map(function (a) {
            return a.inst.processing(a.node)
        }) : this.each(function (b) {
            b.inst.processing(b.node, a)
        })
    });
    i.Api.registerPlural("buttons().text()", "button().text()", function (a) {
        return a === l ? this.map(function (a) {
            return a.inst.text(a.node)
        }) : this.each(function (b) {
            b.inst.text(b.node, a)
        })
    });
    i.Api.registerPlural("buttons().trigger()", "button().trigger()", function () {
        return this.each(function (a) {
            a.inst.node(a.node).trigger("click")
        })
    });
    i.Api.registerPlural("buttons().containers()", "buttons().container()",
        function () {
            var a = d(), b = this._groupSelector;
            this.iterator(!0, "table", function (c) {
                if (c._buttons)for (var c = m.instanceSelector(b, c._buttons), d = 0, h = c.length; d < h; d++)a = a.add(c[d].container())
            });
            return a
        });
    i.Api.register("button().add()", function (a, b) {
        var c = this.context;
        c.length && (c = m.instanceSelector(this._groupSelector, c[0]._buttons), c.length && c[0].add(b, a));
        return this.button(this._groupSelector, a)
    });
    i.Api.register("buttons().destroy()", function () {
        this.pluck("inst").unique().each(function (a) {
            a.destroy()
        });
        return this
    });
    i.Api.registerPlural("buttons().remove()", "buttons().remove()", function () {
        this.each(function (a) {
            a.inst.remove(a.node)
        });
        return this
    });
    var r;
    i.Api.register("buttons.info()", function (a, b, c) {
        var e = this;
        if (!1 === a)return d("#datatables_buttons_info").fadeOut(function () {
            d(this).remove()
        }), clearTimeout(r), r = null, this;
        r && clearTimeout(r);
        d("#datatables_buttons_info").length && d("#datatables_buttons_info").remove();
        d('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a ? "<h2>" + a +
        "</h2>" : "").append(d("<div/>")["string" === typeof b ? "html" : "append"](b)).css("display", "none").appendTo("body").fadeIn();
        c !== l && 0 !== c && (r = setTimeout(function () {
            e.buttons.info(!1)
        }, c));
        return this
    });
    i.Api.register("buttons.exportData()", function (a) {
        if (this.context.length) {
            var b = new i.Api(this.context[0]), c = d.extend(!0, {}, {
                rows: null,
                columns: "",
                modifier: {search: "applied", order: "applied"},
                orthogonal: "display",
                stripHtml: !0,
                stripNewlines: !0,
                decodeEntities: !0,
                trim: !0,
                format: {
                    header: function (a) {
                        return e(a)
                    },
                    footer: function (a) {
                        return e(a)
                    }, body: function (a) {
                        return e(a)
                    }
                }
            }, a), e = function (a) {
                if ("string" !== typeof a)return a;
                a = a.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, "");
                c.stripHtml && (a = a.replace(/<[^>]*>/g, ""));
                c.trim && (a = a.replace(/^\s+|\s+$/g, ""));
                c.stripNewlines && (a = a.replace(/\n/g, " "));
                c.decodeEntities && (v.innerHTML = a, a = v.value);
                return a
            }, a = b.columns(c.columns).indexes().map(function (a) {
                var d = b.column(a).header();
                return c.format.header(d.innerHTML, a, d)
            }).toArray(), h = b.table().footer() ?
                b.columns(c.columns).indexes().map(function (a) {
                    var d = b.column(a).footer();
                    return c.format.footer(d ? d.innerHTML : "", a, d)
                }).toArray() : null, g = d.extend({}, c.modifier);
            b.select && "function" === typeof b.select.info && g.selected === l && b.rows(c.rows, d.extend({selected: !0}, g)).any() && d.extend(g, {selected: !0});
            for (var g = b.rows(c.rows, g).indexes().toArray(), f = b.cells(g, c.columns), g = f.render(c.orthogonal).toArray(), f = f.nodes().toArray(), j = a.length, k = 0 < j ? g.length / j : 0, m = [k], o = 0, n = 0; n < k; n++) {
                for (var r = [j], s = 0; s < j; s++)r[s] =
                    c.format.body(g[o], n, s, f[o]), o++;
                m[n] = r
            }
            return {header: a, footer: h, body: m}
        }
    });
    i.Api.register("buttons.exportInfo()", function (a) {
        a || (a = {});
        var b;
        var c = a;
        b = "*" === c.filename && "*" !== c.title && c.title !== l && null !== c.title && "" !== c.title ? c.title : c.filename;
        "function" === typeof b && (b = b());
        b === l || null === b ? b = null : (-1 !== b.indexOf("*") && (b = d.trim(b.replace("*", d("head > title").text()))), b = b.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, ""), (c = t(c.extension)) || (c = ""), b += c);
        c = t(a.title);
        c = null === c ? null : -1 !== c.indexOf("*") ?
            c.replace("*", d("head > title").text() || "Exported data") : c;
        return {
            filename: b,
            title: c,
            messageTop: w(this, a.message || a.messageTop, "top"),
            messageBottom: w(this, a.messageBottom, "bottom")
        }
    });
    var t = function (a) {
        return null === a || a === l ? null : "function" === typeof a ? a() : a
    }, w = function (a, b, c) {
        b = t(b);
        if (null === b)return null;
        a = d("caption", a.table().container()).eq(0);
        return "*" === b ? a.css("caption-side") !== c ? null : a.length ? a.text() : "" : b
    }, v = d("<textarea/>")[0];
    d.fn.dataTable.Buttons = m;
    d.fn.DataTable.Buttons = m;
    d(n).on("init.dt plugin-init.dt",
        function (a, b) {
            if ("dt" === a.namespace) {
                var c = b.oInit.buttons || i.defaults.buttons;
                c && !b._buttons && (new m(b, c)).container()
            }
        });
    i.ext.feature.push({
        fnInit: function (a) {
            var a = new i.Api(a), b = a.init().buttons || i.defaults.buttons;
            return (new m(a, b)).container()
        }, cFeature: "B"
    });
    return m
});


(function (g) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net", "datatables.net-buttons"], function (d) {
        return g(d, window, document)
    }) : "object" === typeof exports ? module.exports = function (d, e) {
        d || (d = window);
        if (!e || !e.fn.dataTable)e = require("datatables.net")(d, e).$;
        e.fn.dataTable.Buttons || require("datatables.net-buttons")(d, e);
        return g(e, d, d.document)
    } : g(jQuery, window, document)
})(function (g, d, e, h) {
    d = g.fn.dataTable;
    g.extend(d.ext.buttons, {
        colvis: function (b, a) {
            return {
                extend: "collection",
                text: function (a) {
                    return a.i18n("buttons.colvis", "Column visibility")
                },
                className: "buttons-colvis",
                buttons: [{extend: "columnsToggle", columns: a.columns, columnText: a.columnText}]
            }
        }, columnsToggle: function (b, a) {
            return b.columns(a.columns).indexes().map(function (b) {
                return {extend: "columnToggle", columns: b, columnText: a.columnText}
            }).toArray()
        }, columnToggle: function (b, a) {
            return {extend: "columnVisibility", columns: a.columns, columnText: a.columnText}
        }, columnsVisibility: function (b, a) {
            return b.columns(a.columns).indexes().map(function (b) {
                return {
                    extend: "columnVisibility",
                    columns: b, visibility: a.visibility, columnText: a.columnText
                }
            }).toArray()
        }, columnVisibility: {
            columns: h, text: function (b, a, c) {
                return c._columnText(b, c)
            }, className: "buttons-columnVisibility", action: function (b, a, c, f) {
                b = a.columns(f.columns);
                a = b.visible();
                b.visible(f.visibility !== h ? f.visibility : !(a.length && a[0]))
            }, init: function (b, a, c) {
                var f = this;
                b.on("column-visibility.dt" + c.namespace, function (a, d) {
                    !d.bDestroying && d.nTable == b.settings()[0].nTable && f.active(b.column(c.columns).visible())
                }).on("column-reorder.dt" +
                    c.namespace, function (a, d, e) {
                    1 === b.columns(c.columns).count() && ("number" === typeof c.columns && (c.columns = e.mapping[c.columns]), a = b.column(c.columns), f.text(c._columnText(b, c)), f.active(a.visible()))
                });
                this.active(b.column(c.columns).visible())
            }, destroy: function (b, a, c) {
                b.off("column-visibility.dt" + c.namespace).off("column-reorder.dt" + c.namespace)
            }, _columnText: function (b, a) {
                var c = b.column(a.columns).index(), f = b.settings()[0].aoColumns[c].sTitle.replace(/\n/g, " ").replace(/<br\s*\/?>/gi, " ").replace(/<select(.*?)<\/select>/g,
                    "").replace(/<.*?>/g, "").replace(/^\s+|\s+$/g, "");
                return a.columnText ? a.columnText(b, c, f) : f
            }
        }, colvisRestore: {
            className: "buttons-colvisRestore", text: function (b) {
                return b.i18n("buttons.colvisRestore", "Restore visibility")
            }, init: function (b, a, c) {
                c._visOriginal = b.columns().indexes().map(function (a) {
                    return b.column(a).visible()
                }).toArray()
            }, action: function (b, a, c, d) {
                a.columns().every(function (b) {
                    b = a.colReorder && a.colReorder.transpose ? a.colReorder.transpose(b, "toOriginal") : b;
                    this.visible(d._visOriginal[b])
                })
            }
        },
        colvisGroup: {
            className: "buttons-colvisGroup", action: function (b, a, c, d) {
                a.columns(d.show).visible(!0, !1);
                a.columns(d.hide).visible(!1, !1);
                a.columns.adjust()
            }, show: [], hide: []
        }
    });
    return d.Buttons
});


(function (g) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net", "datatables.net-buttons"], function (k) {
        return g(k, window, document)
    }) : "object" === typeof exports ? module.exports = function (k, l) {
        k || (k = window);
        if (!l || !l.fn.dataTable)l = require("datatables.net")(k, l).$;
        l.fn.dataTable.Buttons || require("datatables.net-buttons")(k, l);
        return g(l, k, k.document)
    } : g(jQuery, window, document)
})(function (g, k, l, q) {
    function v(a) {
        for (var b = ""; 0 <= a;)b = String.fromCharCode(a % 26 + 65) + b, a = Math.floor(a / 26) -
            1;
        return b
    }

    function n(a, b, d) {
        var c = a.createElement(b);
        d && (d.attr && g(c).attr(d.attr), d.children && g.each(d.children, function (a, b) {
            c.appendChild(b)
        }), null !== d.text && d.text !== q && c.appendChild(a.createTextNode(d.text)));
        return c
    }

    function B(a, b) {
        var d = a.header[b].length, c;
        a.footer && a.footer[b].length > d && (d = a.footer[b].length);
        for (var e = 0, f = a.body.length; e < f; e++)if (c = a.body[e][b], c = null !== c && c !== q ? c.toString() : "", -1 !== c.indexOf("\n") ? (c = c.split("\n"), c.sort(function (a, b) {
                return b.length - a.length
            }), c = c[0].length) :
                c = c.length, c > d && (d = c), 40 < d)return 52;
        d *= 1.3;
        return 6 < d ? d : 6
    }

    function w(a) {
        o === q && (o = -1 === u.serializeToString(g.parseXML(p["xl/worksheets/sheet1.xml"])).indexOf("xmlns:r"));
        g.each(a, function (b, d) {
            if (g.isPlainObject(d))w(d); else {
                if (o) {
                    var c = d.childNodes[0], e, f, i = [];
                    for (e = c.attributes.length - 1; 0 <= e; e--) {
                        f = c.attributes[e].nodeName;
                        var j = c.attributes[e].nodeValue;
                        -1 !== f.indexOf(":") && (i.push({name: f, value: j}), c.removeAttribute(f))
                    }
                    e = 0;
                    for (f = i.length; e < f; e++)j = d.createAttribute(i[e].name.replace(":", "_dt_b_namespace_token_")),
                        j.value = i[e].value, c.setAttributeNode(j)
                }
                c = u.serializeToString(d);
                o && (-1 === c.indexOf("<?xml") && (c = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' + c), c = c.replace(/_dt_b_namespace_token_/g, ":"));
                c = c.replace(/<([^<>]*?) xmlns=""([^<>]*?)>/g, "<$1 $2>");
                a[b] = c
            }
        })
    }

    var h = g.fn.dataTable, i = {
        version: "1.0.4-TableTools2", clients: {}, moviePath: "", nextId: 1, $: function (a) {
            "string" == typeof a && (a = l.getElementById(a));
            a.addClass || (a.hide = function () {
                this.style.display = "none"
            }, a.show = function () {
                this.style.display =
                    ""
            }, a.addClass = function (a) {
                this.removeClass(a);
                this.className += " " + a
            }, a.removeClass = function (a) {
                this.className = this.className.replace(RegExp("\\s*" + a + "\\s*"), " ").replace(/^\s+/, "").replace(/\s+$/, "")
            }, a.hasClass = function (a) {
                return !!this.className.match(RegExp("\\s*" + a + "\\s*"))
            });
            return a
        }, setMoviePath: function (a) {
            this.moviePath = a
        }, dispatch: function (a, b, d) {
            (a = this.clients[a]) && a.receiveEvent(b, d)
        }, log: function (a) {
            console.log("Flash: " + a)
        }, register: function (a, b) {
            this.clients[a] = b
        }, getDOMObjectPosition: function (a) {
            var b =
            {left: 0, top: 0, width: a.width ? a.width : a.offsetWidth, height: a.height ? a.height : a.offsetHeight};
            "" !== a.style.width && (b.width = a.style.width.replace("px", ""));
            "" !== a.style.height && (b.height = a.style.height.replace("px", ""));
            for (; a;)b.left += a.offsetLeft, b.top += a.offsetTop, a = a.offsetParent;
            return b
        }, Client: function (a) {
            this.handlers = {};
            this.id = i.nextId++;
            this.movieId = "ZeroClipboard_TableToolsMovie_" + this.id;
            i.register(this.id, this);
            a && this.glue(a)
        }
    };
    i.Client.prototype = {
        id: 0,
        ready: !1,
        movie: null,
        clipText: "",
        fileName: "",
        action: "copy",
        handCursorEnabled: !0,
        cssEffects: !0,
        handlers: null,
        sized: !1,
        sheetName: "",
        glue: function (a, b) {
            this.domElement = i.$(a);
            var d = 99;
            this.domElement.style.zIndex && (d = parseInt(this.domElement.style.zIndex, 10) + 1);
            var c = i.getDOMObjectPosition(this.domElement);
            this.div = l.createElement("div");
            var e = this.div.style;
            e.position = "absolute";
            e.left = "0px";
            e.top = "0px";
            e.width = c.width + "px";
            e.height = c.height + "px";
            e.zIndex = d;
            "undefined" != typeof b && "" !== b && (this.div.title = b);
            0 !== c.width && 0 !== c.height && (this.sized = !0);
            this.domElement && (this.domElement.appendChild(this.div), this.div.innerHTML = this.getHTML(c.width, c.height).replace(/&/g, "&amp;"))
        },
        positionElement: function () {
            var a = i.getDOMObjectPosition(this.domElement), b = this.div.style;
            b.position = "absolute";
            b.width = a.width + "px";
            b.height = a.height + "px";
            0 !== a.width && 0 !== a.height && (this.sized = !0, b = this.div.childNodes[0], b.width = a.width, b.height = a.height)
        },
        getHTML: function (a, b) {
            var d = "", c = "id=" + this.id + "&width=" + a + "&height=" + b;
            if (navigator.userAgent.match(/MSIE/))var e =
                location.href.match(/^https/i) ? "https://" : "http://", d = d + ('<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="' + e + 'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,0,0" width="' + a + '" height="' + b + '" id="' + this.movieId + '" align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="' + i.moviePath + '" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="' +
                c + '"/><param name="wmode" value="transparent"/></object>'); else d += '<embed id="' + this.movieId + '" src="' + i.moviePath + '" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="' + a + '" height="' + b + '" name="' + this.movieId + '" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="' + c + '" wmode="transparent" />';
            return d
        },
        hide: function () {
            this.div && (this.div.style.left = "-2000px")
        },
        show: function () {
            this.reposition()
        },
        destroy: function () {
            var a = this;
            this.domElement && this.div && (g(this.div).remove(), this.div = this.domElement = null, g.each(i.clients, function (b, d) {
                d === a && delete i.clients[b]
            }))
        },
        reposition: function (a) {
            a && ((this.domElement = i.$(a)) || this.hide());
            if (this.domElement && this.div) {
                var a = i.getDOMObjectPosition(this.domElement), b = this.div.style;
                b.left = "" + a.left + "px";
                b.top = "" + a.top + "px"
            }
        },
        clearText: function () {
            this.clipText = "";
            this.ready && this.movie.clearText()
        },
        appendText: function (a) {
            this.clipText +=
                a;
            this.ready && this.movie.appendText(a)
        },
        setText: function (a) {
            this.clipText = a;
            this.ready && this.movie.setText(a)
        },
        setFileName: function (a) {
            this.fileName = a;
            this.ready && this.movie.setFileName(a)
        },
        setSheetData: function (a) {
            this.ready && this.movie.setSheetData(JSON.stringify(a))
        },
        setAction: function (a) {
            this.action = a;
            this.ready && this.movie.setAction(a)
        },
        addEventListener: function (a, b) {
            a = a.toString().toLowerCase().replace(/^on/, "");
            this.handlers[a] || (this.handlers[a] = []);
            this.handlers[a].push(b)
        },
        setHandCursor: function (a) {
            this.handCursorEnabled =
                a;
            this.ready && this.movie.setHandCursor(a)
        },
        setCSSEffects: function (a) {
            this.cssEffects = !!a
        },
        receiveEvent: function (a, b) {
            var d, a = a.toString().toLowerCase().replace(/^on/, "");
            switch (a) {
                case "load":
                    this.movie = l.getElementById(this.movieId);
                    if (!this.movie) {
                        d = this;
                        setTimeout(function () {
                            d.receiveEvent("load", null)
                        }, 1);
                        return
                    }
                    if (!this.ready && navigator.userAgent.match(/Firefox/) && navigator.userAgent.match(/Windows/)) {
                        d = this;
                        setTimeout(function () {
                            d.receiveEvent("load", null)
                        }, 100);
                        this.ready = !0;
                        return
                    }
                    this.ready = !0;
                    this.movie.clearText();
                    this.movie.appendText(this.clipText);
                    this.movie.setFileName(this.fileName);
                    this.movie.setAction(this.action);
                    this.movie.setHandCursor(this.handCursorEnabled);
                    break;
                case "mouseover":
                    this.domElement && this.cssEffects && this.recoverActive && this.domElement.addClass("active");
                    break;
                case "mouseout":
                    this.domElement && this.cssEffects && (this.recoverActive = !1, this.domElement.hasClass("active") && (this.domElement.removeClass("active"), this.recoverActive = !0));
                    break;
                case "mousedown":
                    this.domElement &&
                    this.cssEffects && this.domElement.addClass("active");
                    break;
                case "mouseup":
                    this.domElement && this.cssEffects && (this.domElement.removeClass("active"), this.recoverActive = !1)
            }
            if (this.handlers[a])for (var c = 0, e = this.handlers[a].length; c < e; c++) {
                var f = this.handlers[a][c];
                if ("function" == typeof f)f(this, b); else if ("object" == typeof f && 2 == f.length)f[0][f[1]](this, b); else if ("string" == typeof f)k[f](this, b)
            }
        }
    };
    i.hasFlash = function () {
        try {
            if (new ActiveXObject("ShockwaveFlash.ShockwaveFlash"))return !0
        } catch (a) {
            if (navigator.mimeTypes &&
                navigator.mimeTypes["application/x-shockwave-flash"] !== q && navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin)return !0
        }
        return !1
    };
    k.ZeroClipboard_TableTools = i;
    var x = function (a, b) {
            b.attr("id");
            b.parents("html").length ? a.glue(b[0], "") : setTimeout(function () {
                x(a, b)
            }, 500)
        }, C = function (a) {
            var b = "Sheet1";
            a.sheetName && (b = a.sheetName.replace(/[\[\]\*\/\\\?\:]/g, ""));
            return b
        }, s = function (a, b) {
            var d = b.match(/[\s\S]{1,8192}/g) || [];
            a.clearText();
            for (var c = 0, e = d.length; c < e; c++)a.appendText(d[c])
        },
        y = function (a) {
            return a.newline ? a.newline : navigator.userAgent.match(/Windows/) ? "\r\n" : "\n"
        }, z = function (a, b) {
            for (var d = y(b), c = a.buttons.exportData(b.exportOptions), e = b.fieldBoundary, f = b.fieldSeparator, g = RegExp(e, "g"), i = b.escapeChar !== q ? b.escapeChar : "\\", k = function (a) {
                for (var b = "", c = 0, d = a.length; c < d; c++)0 < c && (b += f), b += e ? e + ("" + a[c]).replace(g, i + e) + e : a[c];
                return b
            }, l = b.header ? k(c.header) + d : "", n = b.footer && c.footer ? d + k(c.footer) : "", m = [], h = 0, p = c.body.length; h < p; h++)m.push(k(c.body[h]));
            return {
                str: l + m.join(d) +
                n, rows: m.length
            }
        }, t = {
            available: function () {
                return i.hasFlash()
            },
            init: function (a, b, d) {
                i.moviePath = h.Buttons.swfPath;
                var c = new i.Client;
                c.setHandCursor(!0);
                c.addEventListener("mouseDown", function () {
                    d._fromFlash = !0;
                    a.button(b[0]).trigger();
                    d._fromFlash = !1
                });
                x(c, b);
                d._flash = c
            },
            destroy: function (a, b, d) {
                d._flash.destroy()
            },
            fieldSeparator: ",",
            fieldBoundary: '"',
            exportOptions: {},
            title: "*",
            messageTop: "*",
            messageBottom: "*",
            filename: "*",
            extension: ".csv",
            header: !0,
            footer: !1
        }, u = "", u = "undefined" === typeof k.XMLSerializer ?
            new function () {
                this.serializeToString = function (a) {
                    return a.xml
                }
            } : new XMLSerializer, o, p = {
            "_rels/.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',
            "xl/_rels/workbook.xml.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',
            "[Content_Types].xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
            "xl/workbook.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="" sheetId="1" r:id="rId1"/></sheets></workbook>',
            "xl/worksheets/sheet1.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/><mergeCells count="0"/></worksheet>',
            "xl/styles.xml": '<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><numFmts count="6"><numFmt numFmtId="164" formatCode="#,##0.00_- [$$-45C]"/><numFmt numFmtId="165" formatCode="&quot;£&quot;#,##0.00"/><numFmt numFmtId="166" formatCode="[$€-2] #,##0.00"/><numFmt numFmtId="167" formatCode="0.0%"/><numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/><numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/></numFmts><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="61"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf><xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'
        },
        A = [{
            match: /^\-?\d+\.\d%$/, style: 60, fmt: function (a) {
                return a / 100
            }
        }, {
            match: /^\-?\d+\.?\d*%$/, style: 56, fmt: function (a) {
                return a / 100
            }
        }, {match: /^\-?\$[\d,]+.?\d*$/, style: 57}, {
            match: /^\-?£[\d,]+.?\d*$/,
            style: 58
        }, {match: /^\-?€[\d,]+.?\d*$/, style: 59}, {
            match: /^\([\d,]+\)$/, style: 61, fmt: function (a) {
                return -1 * a.replace(/[\(\)]/g, "")
            }
        }, {
            match: /^\([\d,]+\.\d{2}\)$/, style: 62, fmt: function (a) {
                return -1 * a.replace(/[\(\)]/g, "")
            }
        }, {match: /^[\d,]+$/, style: 63}, {match: /^[\d,]+\.\d{2}$/, style: 64}];
    h.Buttons.swfPath = "//cdn.datatables.net/buttons/" +
        h.Buttons.version + "/swf/flashExport.swf";
    h.Api.register("buttons.resize()", function () {
        g.each(i.clients, function (a, b) {
            b.domElement !== q && b.domElement.parentNode && b.positionElement()
        })
    });
    h.ext.buttons.copyFlash = g.extend({}, t, {
        className: "buttons-copy buttons-flash", text: function (a) {
            return a.i18n("buttons.copy", "Copy")
        }, action: function (a, b, d, c) {
            if (c._fromFlash) {
                this.processing(!0);
                var a = c._flash, e = z(b, c), d = b.buttons.exportInfo(c), f = y(c), e = e.str;
                d.title && (e = d.title + f + f + e);
                d.messageTop && (e = d.messageTop +
                    f + f + e);
                d.messageBottom && (e = e + f + f + d.messageBottom);
                c.customize && (e = c.customize(e, c));
                a.setAction("copy");
                s(a, e);
                this.processing(!1);
                b.buttons.info(b.i18n("buttons.copyTitle", "Copy to clipboard"), b.i18n("buttons.copySuccess", {
                    _: "Copied %d rows to clipboard",
                    1: "Copied 1 row to clipboard"
                }, data.rows), 3E3)
            }
        }, fieldSeparator: "\t", fieldBoundary: ""
    });
    h.ext.buttons.csvFlash = g.extend({}, t, {
        className: "buttons-csv buttons-flash", text: function (a) {
            return a.i18n("buttons.csv", "CSV")
        }, action: function (a, b, d, c) {
            a = c._flash;
            b = z(b, c);
            b = c.customize ? c.customize(b.str, c) : b.str;
            a.setAction("csv");
            a.setFileName(_filename(c));
            s(a, b)
        }, escapeChar: '"'
    });
    h.ext.buttons.excelFlash = g.extend({}, t, {
        className: "buttons-excel buttons-flash", text: function (a) {
            return a.i18n("buttons.excel", "Excel")
        }, action: function (a, b, d, c) {
            this.processing(!0);
            var a = c._flash, e = 0, f = g.parseXML(p["xl/worksheets/sheet1.xml"]), i = f.getElementsByTagName("sheetData")[0], d = {
                _rels: {".rels": g.parseXML(p["_rels/.rels"])}, xl: {
                    _rels: {"workbook.xml.rels": g.parseXML(p["xl/_rels/workbook.xml.rels"])},
                    "workbook.xml": g.parseXML(p["xl/workbook.xml"]),
                    "styles.xml": g.parseXML(p["xl/styles.xml"]),
                    worksheets: {"sheet1.xml": f}
                }, "[Content_Types].xml": g.parseXML(p["[Content_Types].xml"])
            }, j = b.buttons.exportData(c.exportOptions), k, l, h = function (a) {
                k = e + 1;
                l = n(f, "row", {attr: {r: k}});
                for (var b = 0, d = a.length; b < d; b++) {
                    var h = v(b) + "" + k, j = null;
                    if (null === a[b] || a[b] === q || "" === a[b])if (!0 === c.createEmptyCells)a[b] = ""; else continue;
                    a[b] = g.trim(a[b]);
                    for (var m = 0, p = A.length; m < p; m++) {
                        var o = A[m];
                        if (a[b].match && !a[b].match(/^0\d+/) &&
                            a[b].match(o.match)) {
                            j = a[b].replace(/[^\d\.\-]/g, "");
                            o.fmt && (j = o.fmt(j));
                            j = n(f, "c", {attr: {r: h, s: o.style}, children: [n(f, "v", {text: j})]});
                            break
                        }
                    }
                    j || ("number" === typeof a[b] || a[b].match && a[b].match(/^-?\d+(\.\d+)?$/) && !a[b].match(/^0\d+/) ? j = n(f, "c", {
                        attr: {
                            t: "n",
                            r: h
                        }, children: [n(f, "v", {text: a[b]})]
                    }) : (o = !a[b].replace ? a[b] : a[b].replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g, ""), j = n(f, "c", {
                        attr: {
                            t: "inlineStr",
                            r: h
                        }, children: {row: n(f, "is", {children: {row: n(f, "t", {text: o})}})}
                    })));
                    l.appendChild(j)
                }
                i.appendChild(l);
                e++
            };
            g("sheets sheet", d.xl["workbook.xml"]).attr("name", C(c));
            c.customizeData && c.customizeData(j);
            var m = function (a, b) {
                var c = g("mergeCells", f);
                c[0].appendChild(n(f, "mergeCell", {attr: {ref: "A" + a + ":" + v(b) + a}}));
                c.attr("count", c.attr("count") + 1);
                g("row:eq(" + (a - 1) + ") c", f).attr("s", "51")
            }, b = b.buttons.exportInfo(c);
            b.title && (h([b.title], e), m(e, j.header.length - 1));
            b.messageTop && (h([b.messageTop], e), m(e, j.header.length - 1));
            c.header && (h(j.header, e), g("row:last c", f).attr("s", "2"));
            for (var r = 0, o = j.body.length; r <
            o; r++)h(j.body[r], e);
            c.footer && j.footer && (h(j.footer, e), g("row:last c", f).attr("s", "2"));
            b.messageBottom && (h([b.messageBottom], e), m(e, j.header.length - 1));
            h = n(f, "cols");
            g("worksheet", f).prepend(h);
            m = 0;
            for (r = j.header.length; m < r; m++)h.appendChild(n(f, "col", {
                attr: {
                    min: m + 1,
                    max: m + 1,
                    width: B(j, m),
                    customWidth: 1
                }
            }));
            c.customize && c.customize(d);
            w(d);
            a.setAction("excel");
            a.setFileName(b.filename);
            a.setSheetData(d);
            s(a, "");
            this.processing(!1)
        }, extension: ".xlsx", createEmptyCells: !1
    });
    h.ext.buttons.pdfFlash = g.extend({},
        t, {
            className: "buttons-pdf buttons-flash", text: function (a) {
                return a.i18n("buttons.pdf", "PDF")
            }, action: function (a, b, d, c) {
                this.processing(!0);
                var a = c._flash, d = b.buttons.exportData(c.exportOptions), e = b.buttons.exportInfo(c), f = b.table().node().offsetWidth, g = b.columns(c.columns).indexes().map(function (a) {
                    return b.column(a).header().offsetWidth / f
                });
                a.setAction("pdf");
                a.setFileName(e.filename);
                s(a, JSON.stringify({
                    title: e.title || "",
                    messageTop: e.messageTop || "",
                    messageBottom: e.messageBottom || "",
                    colWidth: g.toArray(),
                    orientation: c.orientation,
                    size: c.pageSize,
                    header: c.header ? d.header : null,
                    footer: c.footer ? d.footer : null,
                    body: d.body
                }));
                this.processing(!1)
            }, extension: ".pdf", orientation: "portrait", pageSize: "A4", newline: "\n"
        });
    return h.Buttons
});


(function (e) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net", "datatables.net-buttons"], function (i) {
        return e(i, window, document)
    }) : "object" === typeof exports ? module.exports = function (i, l, t, s) {
        i || (i = window);
        if (!l || !l.fn.dataTable)l = require("datatables.net")(i, l).$;
        l.fn.dataTable.Buttons || require("datatables.net-buttons")(i, l);
        return e(l, i, i.document, t, s)
    } : e(jQuery, window, document)
})(function (e, i, l, t, s, q) {
    function y(a) {
        for (var b = ""; 0 <= a;)b = String.fromCharCode(a % 26 + 65) + b, a = Math.floor(a /
                26) - 1;
        return b
    }

    function z(a, b) {
        u === q && (u = -1 === x.serializeToString(e.parseXML(A["xl/worksheets/sheet1.xml"])).indexOf("xmlns:r"));
        e.each(b, function (d, c) {
            if (e.isPlainObject(c)) {
                var b = a.folder(d);
                z(b, c)
            } else {
                if (u) {
                    var b = c.childNodes[0], h, g, v = [];
                    for (h = b.attributes.length - 1; 0 <= h; h--) {
                        g = b.attributes[h].nodeName;
                        var f = b.attributes[h].nodeValue;
                        -1 !== g.indexOf(":") && (v.push({name: g, value: f}), b.removeAttribute(g))
                    }
                    h = 0;
                    for (g = v.length; h < g; h++)f = c.createAttribute(v[h].name.replace(":", "_dt_b_namespace_token_")),
                        f.value = v[h].value, b.setAttributeNode(f)
                }
                b = x.serializeToString(c);
                u && (-1 === b.indexOf("<?xml") && (b = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' + b), b = b.replace(/_dt_b_namespace_token_/g, ":"));
                b = b.replace(/<([^<>]*?) xmlns=""([^<>]*?)>/g, "<$1 $2>");
                a.file(d, b)
            }
        })
    }

    function o(a, b, d) {
        var c = a.createElement(b);
        d && (d.attr && e(c).attr(d.attr), d.children && e.each(d.children, function (a, b) {
            c.appendChild(b)
        }), null !== d.text && d.text !== q && c.appendChild(a.createTextNode(d.text)));
        return c
    }

    function J(a, b) {
        var d =
            a.header[b].length, c;
        a.footer && a.footer[b].length > d && (d = a.footer[b].length);
        for (var e = 0, h = a.body.length; e < h; e++)if (c = a.body[e][b], c = null !== c && c !== q ? c.toString() : "", -1 !== c.indexOf("\n") ? (c = c.split("\n"), c.sort(function (a, b) {
                return b.length - a.length
            }), c = c[0].length) : c = c.length, c > d && (d = c), 40 < d)return 52;
        d *= 1.3;
        return 6 < d ? d : 6
    }

    var p = e.fn.dataTable, r;
    var f = "undefined" !== typeof self && self || "undefined" !== typeof i && i || this.content;
    if ("undefined" === typeof f || "undefined" !== typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))r = void 0; else {
        var w = f.document.createElementNS("http://www.w3.org/1999/xhtml", "a"), K = "download" in w, L = /constructor/i.test(f.HTMLElement) || f.safari, B = /CriOS\/[\d]+/.test(navigator.userAgent), M = function (a) {
            (f.setImmediate || f.setTimeout)(function () {
                throw a;
            }, 0)
        }, C = function (a) {
            setTimeout(function () {
                "string" === typeof a ? (f.URL || f.webkitURL || f).revokeObjectURL(a) : a.remove()
            }, 4E4)
        }, D = function (a) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type) ? new Blob([String.fromCharCode(65279),
                a], {type: a.type}) : a
        }, E = function (a, b, d) {
            d || (a = D(a));
            var c = this, d = "application/octet-stream" === a.type, e, h = function () {
                for (var a = ["writestart", "progress", "write", "writeend"], a = [].concat(a), b = a.length; b--;) {
                    var d = c["on" + a[b]];
                    if ("function" === typeof d)try {
                        d.call(c, c)
                    } catch (g) {
                        M(g)
                    }
                }
            };
            c.readyState = c.INIT;
            if (K)e = (f.URL || f.webkitURL || f).createObjectURL(a), setTimeout(function () {
                w.href = e;
                w.download = b;
                var a = new MouseEvent("click");
                w.dispatchEvent(a);
                h();
                C(e);
                c.readyState = c.DONE
            }); else if ((B || d && L) && f.FileReader) {
                var g =
                    new FileReader;
                g.onloadend = function () {
                    var a = B ? g.result : g.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                    f.open(a, "_blank") || (f.location.href = a);
                    c.readyState = c.DONE;
                    h()
                };
                g.readAsDataURL(a);
                c.readyState = c.INIT
            } else e || (e = (f.URL || f.webkitURL || f).createObjectURL(a)), d ? f.location.href = e : f.open(e, "_blank") || (f.location.href = e), c.readyState = c.DONE, h(), C(e)
        }, k = E.prototype;
        "undefined" !== typeof navigator && navigator.msSaveOrOpenBlob ? r = function (a, b, d) {
            b = b || a.name || "download";
            d || (a = D(a));
            return navigator.msSaveOrOpenBlob(a,
                b)
        } : (k.abort = function () {
        }, k.readyState = k.INIT = 0, k.WRITING = 1, k.DONE = 2, k.error = k.onwritestart = k.onprogress = k.onwrite = k.onabort = k.onerror = k.onwriteend = null, r = function (a, b, d) {
            return new E(a, b || a.name || "download", d)
        })
    }
    p.fileSave = r;
    var N = function (a) {
        var b = "Sheet1";
        a.sheetName && (b = a.sheetName.replace(/[\[\]\*\/\\\?\:]/g, ""));
        return b
    }, F = function (a) {
        return a.newline ? a.newline : navigator.userAgent.match(/Windows/) ? "\r\n" : "\n"
    }, G = function (a, b) {
        for (var d = F(b), c = a.buttons.exportData(b.exportOptions), e = b.fieldBoundary,
                 h = b.fieldSeparator, g = RegExp(e, "g"), f = b.escapeChar !== q ? b.escapeChar : "\\", i = function (a) {
                for (var b = "", c = 0, d = a.length; c < d; c++)0 < c && (b += h), b += e ? e + ("" + a[c]).replace(g, f + e) + e : a[c];
                return b
            }, l = b.header ? i(c.header) + d : "", j = b.footer && c.footer ? d + i(c.footer) : "", n = [], m = 0, k = c.body.length; m < k; m++)n.push(i(c.body[m]));
        return {str: l + n.join(d) + j, rows: n.length}
    }, H = function () {
        if (!(-1 !== navigator.userAgent.indexOf("Safari") && -1 === navigator.userAgent.indexOf("Chrome") && -1 === navigator.userAgent.indexOf("Opera")))return !1;
        var a = navigator.userAgent.match(/AppleWebKit\/(\d+\.\d+)/);
        return a && 1 < a.length && 603.1 > 1 * a[1] ? !0 : !1
    };
    try {
        var x = new XMLSerializer, u
    } catch (O) {
    }
    var A = {
            "_rels/.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',
            "xl/_rels/workbook.xml.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',
            "[Content_Types].xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
            "xl/workbook.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="" sheetId="1" r:id="rId1"/></sheets></workbook>',
            "xl/worksheets/sheet1.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/><mergeCells count="0"/></worksheet>',
            "xl/styles.xml": '<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><numFmts count="6"><numFmt numFmtId="164" formatCode="#,##0.00_- [$$-45C]"/><numFmt numFmtId="165" formatCode="&quot;£&quot;#,##0.00"/><numFmt numFmtId="166" formatCode="[$€-2] #,##0.00"/><numFmt numFmtId="167" formatCode="0.0%"/><numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/><numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/></numFmts><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="67"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf><xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'
        },
        I = [{
            match: /^\-?\d+\.\d%$/, style: 60, fmt: function (a) {
                return a / 100
            }
        }, {
            match: /^\-?\d+\.?\d*%$/, style: 56, fmt: function (a) {
                return a / 100
            }
        }, {match: /^\-?\$[\d,]+.?\d*$/, style: 57}, {
            match: /^\-?£[\d,]+.?\d*$/,
            style: 58
        }, {match: /^\-?€[\d,]+.?\d*$/, style: 59}, {match: /^\-?\d+$/, style: 65}, {
            match: /^\-?\d+\.\d{2}$/,
            style: 66
        }, {
            match: /^\([\d,]+\)$/, style: 61, fmt: function (a) {
                return -1 * a.replace(/[\(\)]/g, "")
            }
        }, {
            match: /^\([\d,]+\.\d{2}\)$/, style: 62, fmt: function (a) {
                return -1 * a.replace(/[\(\)]/g, "")
            }
        }, {match: /^\-?[\d,]+$/, style: 63},
            {match: /^\-?[\d,]+\.\d{2}$/, style: 64}];
    p.ext.buttons.copyHtml5 = {
        className: "buttons-copy buttons-html5", text: function (a) {
            return a.i18n("buttons.copy", "Copy")
        }, action: function (a, b, d, c) {
            this.processing(!0);
            var f = this, a = G(b, c), h = b.buttons.exportInfo(c), g = F(c), i = a.str, d = e("<div/>").css({
                height: 1,
                width: 1,
                overflow: "hidden",
                position: "fixed",
                top: 0,
                left: 0
            });
            h.title && (i = h.title + g + g + i);
            h.messageTop && (i = h.messageTop + g + g + i);
            h.messageBottom && (i = i + g + g + h.messageBottom);
            c.customize && (i = c.customize(i, c));
            c = e("<textarea readonly/>").val(i).appendTo(d);
            if (l.queryCommandSupported("copy")) {
                d.appendTo(b.table().container());
                c[0].focus();
                c[0].select();
                try {
                    var k = l.execCommand("copy");
                    d.remove();
                    if (k) {
                        b.buttons.info(b.i18n("buttons.copyTitle", "Copy to clipboard"), b.i18n("buttons.copySuccess", {
                            1: "Copied one row to clipboard",
                            _: "Copied %d rows to clipboard"
                        }, a.rows), 2E3);
                        this.processing(!1);
                        return
                    }
                } catch (o) {
                }
            }
            k = e("<span>" + b.i18n("buttons.copyKeys", "Press <i>ctrl</i> or <i>⌘</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape.") +
                "</span>").append(d);
            b.buttons.info(b.i18n("buttons.copyTitle", "Copy to clipboard"), k, 0);
            c[0].focus();
            c[0].select();
            var j = e(k).closest(".dt-button-info"), n = function () {
                j.off("click.buttons-copy");
                e(l).off(".buttons-copy");
                b.buttons.info(!1)
            };
            j.on("click.buttons-copy", n);
            e(l).on("keydown.buttons-copy", function (a) {
                27 === a.keyCode && (n(), f.processing(!1))
            }).on("copy.buttons-copy cut.buttons-copy", function () {
                n();
                f.processing(!1)
            })
        }, exportOptions: {}, fieldSeparator: "\t", fieldBoundary: "", header: !0, footer: !1,
        title: "*", messageTop: "*", messageBottom: "*"
    };
    p.ext.buttons.csvHtml5 = {
        bom: !1,
        className: "buttons-csv buttons-html5",
        available: function () {
            return i.FileReader !== q && i.Blob
        },
        text: function (a) {
            return a.i18n("buttons.csv", "CSV")
        },
        action: function (a, b, d, c) {
            this.processing(!0);
            a = G(b, c).str;
            b = b.buttons.exportInfo(c);
            d = c.charset;
            c.customize && (a = c.customize(a, c));
            !1 !== d ? (d || (d = l.characterSet || l.charset), d && (d = ";charset=" + d)) : d = "";
            c.bom && (a = "﻿" + a);
            r(new Blob([a], {type: "text/csv" + d}), b.filename, !0);
            this.processing(!1)
        },
        filename: "*",
        extension: ".csv",
        exportOptions: {},
        fieldSeparator: ",",
        fieldBoundary: '"',
        escapeChar: '"',
        charset: null,
        header: !0,
        footer: !1
    };
    p.ext.buttons.excelHtml5 = {
        className: "buttons-excel buttons-html5",
        available: function () {
            return i.FileReader !== q && (t || i.JSZip) !== q && !H() && x
        },
        text: function (a) {
            return a.i18n("buttons.excel", "Excel")
        },
        action: function (a, b, d, c) {
            this.processing(!0);
            var f = this, h = 0, a = function (a) {
                    return e.parseXML(A[a])
                }, g = a("xl/worksheets/sheet1.xml"), k = g.getElementsByTagName("sheetData")[0],
                a = {
                    _rels: {".rels": a("_rels/.rels")},
                    xl: {
                        _rels: {"workbook.xml.rels": a("xl/_rels/workbook.xml.rels")},
                        "workbook.xml": a("xl/workbook.xml"),
                        "styles.xml": a("xl/styles.xml"),
                        worksheets: {"sheet1.xml": g}
                    },
                    "[Content_Types].xml": a("[Content_Types].xml")
                }, d = b.buttons.exportData(c.exportOptions), l, p, j = function (a) {
                    l = h + 1;
                    p = o(g, "row", {attr: {r: l}});
                    for (var b = 0, d = a.length; b < d; b++) {
                        var i = y(b) + "" + l, f = null;
                        if (null === a[b] || a[b] === q || "" === a[b])if (!0 === c.createEmptyCells)a[b] = ""; else continue;
                        a[b] = e.trim(a[b]);
                        for (var j =
                            0, n = I.length; j < n; j++) {
                            var m = I[j];
                            if (a[b].match && !a[b].match(/^0\d+/) && a[b].match(m.match)) {
                                f = a[b].replace(/[^\d\.\-]/g, "");
                                m.fmt && (f = m.fmt(f));
                                f = o(g, "c", {attr: {r: i, s: m.style}, children: [o(g, "v", {text: f})]});
                                break
                            }
                        }
                        f || ("number" === typeof a[b] || a[b].match && a[b].match(/^-?\d+(\.\d+)?$/) && !a[b].match(/^0\d+/) ? f = o(g, "c", {
                            attr: {
                                t: "n",
                                r: i
                            }, children: [o(g, "v", {text: a[b]})]
                        }) : (m = !a[b].replace ? a[b] : a[b].replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g, ""), f = o(g, "c", {
                            attr: {t: "inlineStr", r: i}, children: {
                                row: o(g,
                                    "is", {children: {row: o(g, "t", {text: m})}})
                            }
                        })));
                        p.appendChild(f)
                    }
                    k.appendChild(p);
                    h++
                };
            e("sheets sheet", a.xl["workbook.xml"]).attr("name", N(c));
            c.customizeData && c.customizeData(d);
            var n = function (a, b) {
                var c = e("mergeCells", g);
                c[0].appendChild(o(g, "mergeCell", {attr: {ref: "A" + a + ":" + y(b) + a}}));
                c.attr("count", parseFloat(c.attr("count")) + 1);
                e("row:eq(" + (a - 1) + ") c", g).attr("s", "51")
            }, m = b.buttons.exportInfo(c);
            m.title && (j([m.title], h), n(h, d.header.length - 1));
            m.messageTop && (j([m.messageTop], h), n(h, d.header.length -
                1));
            c.header && (j(d.header, h), e("row:last c", g).attr("s", "2"));
            for (var b = 0, s = d.body.length; b < s; b++)j(d.body[b], h);
            c.footer && d.footer && (j(d.footer, h), e("row:last c", g).attr("s", "2"));
            m.messageBottom && (j([m.messageBottom], h), n(h, d.header.length - 1));
            b = o(g, "cols");
            e("worksheet", g).prepend(b);
            j = 0;
            for (n = d.header.length; j < n; j++)b.appendChild(o(g, "col", {
                attr: {
                    min: j + 1,
                    max: j + 1,
                    width: J(d, j),
                    customWidth: 1
                }
            }));
            c.customize && c.customize(a);
            0 === e("mergeCells", g).children().length && e("mergeCells", g).remove();
            d = new (t ||
            i.JSZip);
            b = {type: "blob", mimeType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"};
            z(d, a);
            d.generateAsync ? d.generateAsync(b).then(function (a) {
                r(a, m.filename);
                f.processing(false)
            }) : (r(d.generate(b), m.filename), this.processing(!1))
        },
        filename: "*",
        extension: ".xlsx",
        exportOptions: {},
        header: !0,
        footer: !1,
        title: "*",
        messageTop: "*",
        messageBottom: "*",
        createEmptyCells: !1
    };
    p.ext.buttons.pdfHtml5 = {
        className: "buttons-pdf buttons-html5",
        available: function () {
            return i.FileReader !== q && (s || i.pdfMake)
        },
        text: function (a) {
            return a.i18n("buttons.pdf", "PDF")
        },
        action: function (a, b, d, c) {
            this.processing(!0);
            a = b.buttons.exportData(c.exportOptions);
            b = b.buttons.exportInfo(c);
            d = [];
            c.header && d.push(e.map(a.header, function (a) {
                return {text: "string" === typeof a ? a : a + "", style: "tableHeader"}
            }));
            for (var f = 0, h = a.body.length; f < h; f++)d.push(e.map(a.body[f], function (a) {
                return {text: "string" === typeof a ? a : a + "", style: f % 2 ? "tableBodyEven" : "tableBodyOdd"}
            }));
            c.footer && a.footer && d.push(e.map(a.footer, function (a) {
                return {
                    text: "string" === typeof a ? a : a + "", style: "tableFooter"
                }
            }));
            a = {
                pageSize: c.pageSize,
                pageOrientation: c.orientation,
                content: [{table: {headerRows: 1, body: d}, layout: "noBorders"}],
                styles: {
                    tableHeader: {
                        bold: !0,
                        fontSize: 11,
                        color: "white",
                        fillColor: "#2d4154",
                        alignment: "center"
                    },
                    tableBodyEven: {},
                    tableBodyOdd: {fillColor: "#f3f3f3"},
                    tableFooter: {bold: !0, fontSize: 11, color: "white", fillColor: "#2d4154"},
                    title: {alignment: "center", fontSize: 15},
                    message: {}
                },
                defaultStyle: {fontSize: 10}
            };
            b.messageTop && a.content.unshift({
                text: b.messageTop, style: "message",
                margin: [0, 0, 0, 12]
            });
            b.messageBottom && a.content.push({text: b.messageBottom, style: "message", margin: [0, 0, 0, 12]});
            b.title && a.content.unshift({text: b.title, style: "title", margin: [0, 0, 0, 12]});
            c.customize && c.customize(a, c);
            a = (s || i.pdfMake).createPdf(a);
            "open" === c.download && !H() ? a.open() : a.download(b.filename);
            this.processing(!1)
        },
        title: "*",
        filename: "*",
        extension: ".pdf",
        exportOptions: {},
        orientation: "portrait",
        pageSize: "A4",
        header: !0,
        footer: !1,
        messageTop: "*",
        messageBottom: "*",
        customize: null,
        download: "download"
    };
    return p.Buttons
});


(function (d) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net", "datatables.net-buttons"], function (e) {
        return d(e, window, document)
    }) : "object" === typeof exports ? module.exports = function (e, c) {
        e || (e = window);
        if (!c || !c.fn.dataTable)c = require("datatables.net")(e, c).$;
        c.fn.dataTable.Buttons || require("datatables.net-buttons")(e, c);
        return d(c, e, e.document)
    } : d(jQuery, window, document)
})(function (d, e, c) {
    var i = d.fn.dataTable, f = c.createElement("a"), l = function (a) {
        f.href = a;
        a = f.host;
        -1 === a.indexOf("/") &&
        0 !== f.pathname.indexOf("/") && (a += "/");
        return f.protocol + "//" + a + f.pathname + f.search
    };
    i.ext.buttons.print = {
        className: "buttons-print",
        text: function (a) {
            return a.i18n("buttons.print", "Print")
        },
        action: function (a, b, c, h) {
            var a = b.buttons.exportData(d.extend({decodeEntities: !1}, h.exportOptions)), c = b.buttons.exportInfo(h), f = function (b, c) {
                for (var a = "<tr>", d = 0, e = b.length; d < e; d++)a += "<" + c + ">" + b[d] + "</" + c + ">";
                return a + "</tr>"
            }, b = '<table class="' + b.table().node().className + '">';
            h.header && (b += "<thead>" + f(a.header,
                    "th") + "</thead>");
            for (var b = b + "<tbody>", k = 0, i = a.body.length; k < i; k++)b += f(a.body[k], "td");
            b += "</tbody>";
            h.footer && a.footer && (b += "<tfoot>" + f(a.footer, "th") + "</tfoot>");
            var b = b + "</table>", g = e.open("", "");
            g.document.close();
            var j = "<title>" + c.title + "</title>";
            d("style, link").each(function () {
                var b = j, a = d(this).clone()[0];
                "link" === a.nodeName.toLowerCase() && (a.href = l(a.href));
                j = b + a.outerHTML
            });
            try {
                g.document.head.innerHTML = j
            } catch (m) {
                d(g.document.head).html(j)
            }
            g.document.body.innerHTML = "<h1>" + c.title + "</h1><div>" +
                (c.messageTop || "") + "</div>" + b + "<div>" + (c.messageBottom || "") + "</div>";
            d(g.document.body).addClass("dt-print-view");
            d("img", g.document.body).each(function (a, b) {
                b.setAttribute("src", l(b.getAttribute("src")))
            });
            h.customize && h.customize(g);
            setTimeout(function () {
                h.autoPrint && (g.print(), g.close())
            }, 1E3)
        },
        title: "*",
        messageTop: "*",
        messageBottom: "*",
        exportOptions: {},
        header: !0,
        footer: !1,
        autoPrint: !0,
        customize: null
    };
    return i.Buttons
});


/*!
 ColReorder 1.4.1
 ©2010-2017 SpryMedia Ltd - datatables.net/license
 */
(function (f) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (o) {
        return f(o, window, document)
    }) : "object" === typeof exports ? module.exports = function (o, l) {
        o || (o = window);
        if (!l || !l.fn.dataTable)l = require("datatables.net")(o, l).$;
        return f(l, o, o.document)
    } : f(jQuery, window, document)
})(function (f, o, l, r) {
    function q(a) {
        for (var b = [], c = 0, e = a.length; c < e; c++)b[a[c]] = c;
        return b
    }

    function p(a, b, c) {
        b = a.splice(b, 1)[0];
        a.splice(c, 0, b)
    }

    function s(a, b, c) {
        for (var e = [], f = 0, d = a.childNodes.length; f <
        d; f++)1 == a.childNodes[f].nodeType && e.push(a.childNodes[f]);
        b = e[b];
        null !== c ? a.insertBefore(b, e[c]) : a.appendChild(b)
    }

    var t = f.fn.dataTable;
    f.fn.dataTableExt.oApi.fnColReorder = function (a, b, c, e, g) {
        var d, h, j, m, i, l = a.aoColumns.length, k;
        i = function (a, b, d) {
            if (a[b] && "function" !== typeof a[b]) {
                var c = a[b].split("."), e = c.shift();
                isNaN(1 * e) || (a[b] = d[1 * e] + "." + c.join("."))
            }
        };
        if (b != c)if (0 > b || b >= l)this.oApi._fnLog(a, 1, "ColReorder 'from' index is out of bounds: " + b); else if (0 > c || c >= l)this.oApi._fnLog(a, 1, "ColReorder 'to' index is out of bounds: " +
            c); else {
            j = [];
            d = 0;
            for (h = l; d < h; d++)j[d] = d;
            p(j, b, c);
            var n = q(j);
            d = 0;
            for (h = a.aaSorting.length; d < h; d++)a.aaSorting[d][0] = n[a.aaSorting[d][0]];
            if (null !== a.aaSortingFixed) {
                d = 0;
                for (h = a.aaSortingFixed.length; d < h; d++)a.aaSortingFixed[d][0] = n[a.aaSortingFixed[d][0]]
            }
            d = 0;
            for (h = l; d < h; d++) {
                k = a.aoColumns[d];
                j = 0;
                for (m = k.aDataSort.length; j < m; j++)k.aDataSort[j] = n[k.aDataSort[j]];
                k.idx = n[k.idx]
            }
            f.each(a.aLastSort, function (b, c) {
                a.aLastSort[b].src = n[c.src]
            });
            d = 0;
            for (h = l; d < h; d++)k = a.aoColumns[d], "number" == typeof k.mData ?
                k.mData = n[k.mData] : f.isPlainObject(k.mData) && (i(k.mData, "_", n), i(k.mData, "filter", n), i(k.mData, "sort", n), i(k.mData, "type", n));
            if (a.aoColumns[b].bVisible) {
                i = this.oApi._fnColumnIndexToVisible(a, b);
                m = null;
                for (d = c < b ? c : c + 1; null === m && d < l;)m = this.oApi._fnColumnIndexToVisible(a, d), d++;
                j = a.nTHead.getElementsByTagName("tr");
                d = 0;
                for (h = j.length; d < h; d++)s(j[d], i, m);
                if (null !== a.nTFoot) {
                    j = a.nTFoot.getElementsByTagName("tr");
                    d = 0;
                    for (h = j.length; d < h; d++)s(j[d], i, m)
                }
                d = 0;
                for (h = a.aoData.length; d < h; d++)null !== a.aoData[d].nTr &&
                s(a.aoData[d].nTr, i, m)
            }
            p(a.aoColumns, b, c);
            d = 0;
            for (h = l; d < h; d++)a.oApi._fnColumnOptions(a, d, {});
            p(a.aoPreSearchCols, b, c);
            d = 0;
            for (h = a.aoData.length; d < h; d++) {
                m = a.aoData[d];
                if (k = m.anCells) {
                    p(k, b, c);
                    j = 0;
                    for (i = k.length; j < i; j++)k[j] && k[j]._DT_CellIndex && (k[j]._DT_CellIndex.column = j)
                }
                "dom" !== m.src && f.isArray(m._aData) && p(m._aData, b, c)
            }
            d = 0;
            for (h = a.aoHeader.length; d < h; d++)p(a.aoHeader[d], b, c);
            if (null !== a.aoFooter) {
                d = 0;
                for (h = a.aoFooter.length; d < h; d++)p(a.aoFooter[d], b, c)
            }
            (g || g === r) && f.fn.dataTable.Api(a).rows().invalidate();
            d = 0;
            for (h = l; d < h; d++)f(a.aoColumns[d].nTh).off("click.DT"), this.oApi._fnSortAttachListener(a, a.aoColumns[d].nTh, d);
            f(a.oInstance).trigger("column-reorder.dt", [a, {
                from: b,
                to: c,
                mapping: n,
                drop: e,
                iFrom: b,
                iTo: c,
                aiInvertMapping: n
            }])
        }
    };
    var i = function (a, b) {
        var c = (new f.fn.dataTable.Api(a)).settings()[0];
        if (c._colReorder)return c._colReorder;
        !0 === b && (b = {});
        var e = f.fn.dataTable.camelToHungarian;
        e && (e(i.defaults, i.defaults, !0), e(i.defaults, b || {}));
        this.s = {
            dt: null,
            init: f.extend(!0, {}, i.defaults, b),
            fixed: 0,
            fixedRight: 0,
            reorderCallback: null,
            mouse: {startX: -1, startY: -1, offsetX: -1, offsetY: -1, target: -1, targetIndex: -1, fromIndex: -1},
            aoTargets: []
        };
        this.dom = {drag: null, pointer: null};
        this.s.dt = c;
        this.s.dt._colReorder = this;
        this._fnConstruct();
        return this
    };
    f.extend(i.prototype, {
        fnReset: function () {
            this._fnOrderColumns(this.fnOrder());
            return this
        }, fnGetCurrentOrder: function () {
            return this.fnOrder()
        }, fnOrder: function (a, b) {
            var c = [], e, g, d = this.s.dt.aoColumns;
            if (a === r) {
                e = 0;
                for (g = d.length; e < g; e++)c.push(d[e]._ColReorder_iOrigCol);
                return c
            }
            if (b) {
                d =
                    this.fnOrder();
                e = 0;
                for (g = a.length; e < g; e++)c.push(f.inArray(a[e], d));
                a = c
            }
            this._fnOrderColumns(q(a));
            return this
        }, fnTranspose: function (a, b) {
            b || (b = "toCurrent");
            var c = this.fnOrder(), e = this.s.dt.aoColumns;
            return "toCurrent" === b ? !f.isArray(a) ? f.inArray(a, c) : f.map(a, function (a) {
                return f.inArray(a, c)
            }) : !f.isArray(a) ? e[a]._ColReorder_iOrigCol : f.map(a, function (a) {
                return e[a]._ColReorder_iOrigCol
            })
        }, _fnConstruct: function () {
            var a = this, b = this.s.dt.aoColumns.length, c = this.s.dt.nTable, e;
            this.s.init.iFixedColumns &&
            (this.s.fixed = this.s.init.iFixedColumns);
            this.s.init.iFixedColumnsLeft && (this.s.fixed = this.s.init.iFixedColumnsLeft);
            this.s.fixedRight = this.s.init.iFixedColumnsRight ? this.s.init.iFixedColumnsRight : 0;
            this.s.init.fnReorderCallback && (this.s.reorderCallback = this.s.init.fnReorderCallback);
            for (e = 0; e < b; e++)e > this.s.fixed - 1 && e < b - this.s.fixedRight && this._fnMouseListener(e, this.s.dt.aoColumns[e].nTh), this.s.dt.aoColumns[e]._ColReorder_iOrigCol = e;
            this.s.dt.oApi._fnCallbackReg(this.s.dt, "aoStateSaveParams", function (b,
                                                                                    c) {
                a._fnStateSave.call(a, c)
            }, "ColReorder_State");
            var g = null;
            this.s.init.aiOrder && (g = this.s.init.aiOrder.slice());
            this.s.dt.oLoadedState && ("undefined" != typeof this.s.dt.oLoadedState.ColReorder && this.s.dt.oLoadedState.ColReorder.length == this.s.dt.aoColumns.length) && (g = this.s.dt.oLoadedState.ColReorder);
            if (g)if (a.s.dt._bInitComplete)b = q(g), a._fnOrderColumns.call(a, b); else {
                var d = !1;
                f(c).on("draw.dt.colReorder", function () {
                    if (!a.s.dt._bInitComplete && !d) {
                        d = true;
                        var b = q(g);
                        a._fnOrderColumns.call(a, b)
                    }
                })
            } else this._fnSetColumnIndexes();
            f(c).on("destroy.dt.colReorder", function () {
                f(c).off("destroy.dt.colReorder draw.dt.colReorder");
                f(a.s.dt.nTHead).find("*").off(".ColReorder");
                f.each(a.s.dt.aoColumns, function (a, b) {
                    f(b.nTh).removeAttr("data-column-index")
                });
                a.s.dt._colReorder = null;
                a.s = null
            })
        }, _fnOrderColumns: function (a) {
            var b = !1;
            if (a.length != this.s.dt.aoColumns.length)this.s.dt.oInstance.oApi._fnLog(this.s.dt, 1, "ColReorder - array reorder does not match known number of columns. Skipping."); else {
                for (var c = 0, e = a.length; c < e; c++) {
                    var g =
                        f.inArray(c, a);
                    c != g && (p(a, g, c), this.s.dt.oInstance.fnColReorder(g, c, !0, !1), b = !0)
                }
                f.fn.dataTable.Api(this.s.dt).rows().invalidate();
                this._fnSetColumnIndexes();
                b && (("" !== this.s.dt.oScroll.sX || "" !== this.s.dt.oScroll.sY) && this.s.dt.oInstance.fnAdjustColumnSizing(!1), this.s.dt.oInstance.oApi._fnSaveState(this.s.dt), null !== this.s.reorderCallback && this.s.reorderCallback.call(this))
            }
        }, _fnStateSave: function (a) {
            var b, c, e, g = this.s.dt.aoColumns;
            a.ColReorder = [];
            if (a.aaSorting) {
                for (b = 0; b < a.aaSorting.length; b++)a.aaSorting[b][0] =
                    g[a.aaSorting[b][0]]._ColReorder_iOrigCol;
                var d = f.extend(!0, [], a.aoSearchCols);
                b = 0;
                for (c = g.length; b < c; b++)e = g[b]._ColReorder_iOrigCol, a.aoSearchCols[e] = d[b], a.abVisCols[e] = g[b].bVisible, a.ColReorder.push(e)
            } else if (a.order) {
                for (b = 0; b < a.order.length; b++)a.order[b][0] = g[a.order[b][0]]._ColReorder_iOrigCol;
                d = f.extend(!0, [], a.columns);
                b = 0;
                for (c = g.length; b < c; b++)e = g[b]._ColReorder_iOrigCol, a.columns[e] = d[b], a.ColReorder.push(e)
            }
        }, _fnMouseListener: function (a, b) {
            var c = this;
            f(b).on("mousedown.ColReorder",
                function (a) {
                    c._fnMouseDown.call(c, a, b)
                }).on("touchstart.ColReorder", function (a) {
                c._fnMouseDown.call(c, a, b)
            })
        }, _fnMouseDown: function (a, b) {
            var c = this, e = f(a.target).closest("th, td").offset(), g = parseInt(f(b).attr("data-column-index"), 10);
            g !== r && (this.s.mouse.startX = this._fnCursorPosition(a, "pageX"), this.s.mouse.startY = this._fnCursorPosition(a, "pageY"), this.s.mouse.offsetX = this._fnCursorPosition(a, "pageX") - e.left, this.s.mouse.offsetY = this._fnCursorPosition(a, "pageY") - e.top, this.s.mouse.target = this.s.dt.aoColumns[g].nTh,
                this.s.mouse.targetIndex = g, this.s.mouse.fromIndex = g, this._fnRegions(), f(l).on("mousemove.ColReorder touchmove.ColReorder", function (a) {
                c._fnMouseMove.call(c, a)
            }).on("mouseup.ColReorder touchend.ColReorder", function (a) {
                c._fnMouseUp.call(c, a)
            }))
        }, _fnMouseMove: function (a) {
            if (null === this.dom.drag) {
                if (5 > Math.pow(Math.pow(this._fnCursorPosition(a, "pageX") - this.s.mouse.startX, 2) + Math.pow(this._fnCursorPosition(a, "pageY") - this.s.mouse.startY, 2), 0.5))return;
                this._fnCreateDragNode()
            }
            this.dom.drag.css({
                left: this._fnCursorPosition(a,
                    "pageX") - this.s.mouse.offsetX, top: this._fnCursorPosition(a, "pageY") - this.s.mouse.offsetY
            });
            for (var b = !1, c = this.s.mouse.toIndex, e = 1, f = this.s.aoTargets.length; e < f; e++)if (this._fnCursorPosition(a, "pageX") < this.s.aoTargets[e - 1].x + (this.s.aoTargets[e].x - this.s.aoTargets[e - 1].x) / 2) {
                this.dom.pointer.css("left", this.s.aoTargets[e - 1].x);
                this.s.mouse.toIndex = this.s.aoTargets[e - 1].to;
                b = !0;
                break
            }
            b || (this.dom.pointer.css("left", this.s.aoTargets[this.s.aoTargets.length - 1].x), this.s.mouse.toIndex = this.s.aoTargets[this.s.aoTargets.length -
            1].to);
            this.s.init.bRealtime && c !== this.s.mouse.toIndex && (this.s.dt.oInstance.fnColReorder(this.s.mouse.fromIndex, this.s.mouse.toIndex, !1), this.s.mouse.fromIndex = this.s.mouse.toIndex, this._fnRegions())
        }, _fnMouseUp: function () {
            f(l).off(".ColReorder");
            null !== this.dom.drag && (this.dom.drag.remove(), this.dom.pointer.remove(), this.dom.drag = null, this.dom.pointer = null, this.s.dt.oInstance.fnColReorder(this.s.mouse.fromIndex, this.s.mouse.toIndex, !0), this._fnSetColumnIndexes(), ("" !== this.s.dt.oScroll.sX || "" !==
            this.s.dt.oScroll.sY) && this.s.dt.oInstance.fnAdjustColumnSizing(!1), this.s.dt.oInstance.oApi._fnSaveState(this.s.dt), null !== this.s.reorderCallback && this.s.reorderCallback.call(this))
        }, _fnRegions: function () {
            var a = this.s.dt.aoColumns;
            this.s.aoTargets.splice(0, this.s.aoTargets.length);
            this.s.aoTargets.push({x: f(this.s.dt.nTable).offset().left, to: 0});
            for (var b = 0, c = this.s.aoTargets[0].x, e = 0, g = a.length; e < g; e++)e != this.s.mouse.fromIndex && b++, a[e].bVisible && "none" !== a[e].nTh.style.display && (c += f(a[e].nTh).outerWidth(),
                this.s.aoTargets.push({x: c, to: b}));
            0 !== this.s.fixedRight && this.s.aoTargets.splice(this.s.aoTargets.length - this.s.fixedRight);
            0 !== this.s.fixed && this.s.aoTargets.splice(0, this.s.fixed)
        }, _fnCreateDragNode: function () {
            var a = "" !== this.s.dt.oScroll.sX || "" !== this.s.dt.oScroll.sY, b = this.s.dt.aoColumns[this.s.mouse.targetIndex].nTh, c = b.parentNode, e = c.parentNode, g = e.parentNode, d = f(b).clone();
            this.dom.drag = f(g.cloneNode(!1)).addClass("DTCR_clonedTable").append(f(e.cloneNode(!1)).append(f(c.cloneNode(!1)).append(d[0]))).css({
                position: "absolute",
                top: 0, left: 0, width: f(b).outerWidth(), height: f(b).outerHeight()
            }).appendTo("body");
            this.dom.pointer = f("<div></div>").addClass("DTCR_pointer").css({
                position: "absolute",
                top: a ? f("div.dataTables_scroll", this.s.dt.nTableWrapper).offset().top : f(this.s.dt.nTable).offset().top,
                height: a ? f("div.dataTables_scroll", this.s.dt.nTableWrapper).height() : f(this.s.dt.nTable).height()
            }).appendTo("body")
        }, _fnSetColumnIndexes: function () {
            f.each(this.s.dt.aoColumns, function (a, b) {
                f(b.nTh).attr("data-column-index", a)
            })
        }, _fnCursorPosition: function (a,
                                        b) {
            return -1 !== a.type.indexOf("touch") ? a.originalEvent.touches[0][b] : a[b]
        }
    });
    i.defaults = {aiOrder: null, bRealtime: !0, iFixedColumnsLeft: 0, iFixedColumnsRight: 0, fnReorderCallback: null};
    i.version = "1.4.1";
    f.fn.dataTable.ColReorder = i;
    f.fn.DataTable.ColReorder = i;
    "function" == typeof f.fn.dataTable && "function" == typeof f.fn.dataTableExt.fnVersionCheck && f.fn.dataTableExt.fnVersionCheck("1.10.8") ? f.fn.dataTableExt.aoFeatures.push({
        fnInit: function (a) {
            var b = a.oInstance;
            a._colReorder ? b.oApi._fnLog(a, 1, "ColReorder attempted to initialise twice. Ignoring second") :
                (b = a.oInit, new i(a, b.colReorder || b.oColReorder || {}));
            return null
        }, cFeature: "R", sFeature: "ColReorder"
    }) : alert("Warning: ColReorder requires DataTables 1.10.8 or greater - www.datatables.net/download");
    f(l).on("preInit.dt.colReorder", function (a, b) {
        if ("dt" === a.namespace) {
            var c = b.oInit.colReorder, e = t.defaults.colReorder;
            if (c || e)e = f.extend({}, c, e), !1 !== c && new i(b, e)
        }
    });
    f.fn.dataTable.Api.register("colReorder.reset()", function () {
        return this.iterator("table", function (a) {
            a._colReorder.fnReset()
        })
    });
    f.fn.dataTable.Api.register("colReorder.order()",
        function (a, b) {
            return a ? this.iterator("table", function (c) {
                c._colReorder.fnOrder(a, b)
            }) : this.context.length ? this.context[0]._colReorder.fnOrder() : null
        });
    f.fn.dataTable.Api.register("colReorder.transpose()", function (a, b) {
        return this.context.length && this.context[0]._colReorder ? this.context[0]._colReorder.fnTranspose(a, b) : a
    });
    f.fn.dataTable.Api.register("colReorder.move()", function (a, b, c, e) {
        this.context.length && this.context[0]._colReorder.s.dt.oInstance.fnColReorder(a, b, c, e);
        return this
    });
    return i
});


/*!
 FixedColumns 3.2.4
 ©2010-2017 SpryMedia Ltd - datatables.net/license
 */
(function (d) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (p) {
        return d(p, window, document)
    }) : "object" === typeof exports ? module.exports = function (p, r) {
        p || (p = window);
        if (!r || !r.fn.dataTable)r = require("datatables.net")(p, r).$;
        return d(r, p, p.document)
    } : d(jQuery, window, document)
})(function (d, p, r, t) {
    var s = d.fn.dataTable, u, m = function (a, b) {
        var c = this;
        if (this instanceof m) {
            if (b === t || !0 === b)b = {};
            var e = d.fn.dataTable.camelToHungarian;
            e && (e(m.defaults, m.defaults, !0), e(m.defaults,
                b));
            e = (new d.fn.dataTable.Api(a)).settings()[0];
            this.s = {
                dt: e,
                iTableColumns: e.aoColumns.length,
                aiOuterWidths: [],
                aiInnerWidths: [],
                rtl: "rtl" === d(e.nTable).css("direction")
            };
            this.dom = {
                scroller: null,
                header: null,
                body: null,
                footer: null,
                grid: {
                    wrapper: null,
                    dt: null,
                    left: {wrapper: null, head: null, body: null, foot: null},
                    right: {wrapper: null, head: null, body: null, foot: null}
                },
                clone: {left: {header: null, body: null, footer: null}, right: {header: null, body: null, footer: null}}
            };
            if (e._oFixedColumns)throw"FixedColumns already initialised on this table";
            e._oFixedColumns = this;
            e._bInitComplete ? this._fnConstruct(b) : e.oApi._fnCallbackReg(e, "aoInitComplete", function () {
                c._fnConstruct(b)
            }, "FixedColumns")
        } else alert("FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.")
    };
    d.extend(m.prototype, {
        fnUpdate: function () {
            this._fnDraw(!0)
        }, fnRedrawLayout: function () {
            this._fnColCalc();
            this._fnGridLayout();
            this.fnUpdate()
        }, fnRecalculateHeight: function (a) {
            delete a._DTTC_iHeight;
            a.style.height = "auto"
        }, fnSetRowHeight: function (a, b) {
            a.style.height =
                b + "px"
        }, fnGetPosition: function (a) {
            var b = this.s.dt.oInstance;
            if (d(a).parents(".DTFC_Cloned").length) {
                if ("tr" === a.nodeName.toLowerCase())return a = d(a).index(), b.fnGetPosition(d("tr", this.s.dt.nTBody)[a]);
                var c = d(a).index(), a = d(a.parentNode).index();
                return [b.fnGetPosition(d("tr", this.s.dt.nTBody)[a]), c, b.oApi._fnVisibleToColumnIndex(this.s.dt, c)]
            }
            return b.fnGetPosition(a)
        }, _fnConstruct: function (a) {
            var b = this;
            if ("function" != typeof this.s.dt.oInstance.fnVersionCheck || !0 !== this.s.dt.oInstance.fnVersionCheck("1.8.0"))alert("FixedColumns " +
                m.VERSION + " required DataTables 1.8.0 or later. Please upgrade your DataTables installation"); else if ("" === this.s.dt.oScroll.sX)this.s.dt.oInstance.oApi._fnLog(this.s.dt, 1, "FixedColumns is not needed (no x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for column fixing when scrolling is not enabled"); else {
                this.s = d.extend(!0, this.s, m.defaults, a);
                a = this.s.dt.oClasses;
                this.dom.grid.dt = d(this.s.dt.nTable).parents("div." + a.sScrollWrapper)[0];
                this.dom.scroller = d("div." +
                    a.sScrollBody, this.dom.grid.dt)[0];
                this._fnColCalc();
                this._fnGridSetup();
                var c, e = !1;
                d(this.s.dt.nTableWrapper).on("mousedown.DTFC", function (a) {
                    0 === a.button && (e = !0, d(r).one("mouseup", function () {
                        e = !1
                    }))
                });
                d(this.dom.scroller).on("mouseover.DTFC touchstart.DTFC", function () {
                    e || (c = "main")
                }).on("scroll.DTFC", function (a) {
                    !c && a.originalEvent && (c = "main");
                    if ("main" === c && (0 < b.s.iLeftColumns && (b.dom.grid.left.liner.scrollTop = b.dom.scroller.scrollTop), 0 < b.s.iRightColumns))b.dom.grid.right.liner.scrollTop = b.dom.scroller.scrollTop
                });
                var f = "onwheel" in r.createElement("div") ? "wheel.DTFC" : "mousewheel.DTFC";
                if (0 < b.s.iLeftColumns)d(b.dom.grid.left.liner).on("mouseover.DTFC touchstart.DTFC", function () {
                    e || (c = "left")
                }).on("scroll.DTFC", function (a) {
                    !c && a.originalEvent && (c = "left");
                    "left" === c && (b.dom.scroller.scrollTop = b.dom.grid.left.liner.scrollTop, 0 < b.s.iRightColumns && (b.dom.grid.right.liner.scrollTop = b.dom.grid.left.liner.scrollTop))
                }).on(f, function (a) {
                    b.dom.scroller.scrollLeft -= "wheel" === a.type ? -a.originalEvent.deltaX : a.originalEvent.wheelDeltaX
                });
                if (0 < b.s.iRightColumns)d(b.dom.grid.right.liner).on("mouseover.DTFC touchstart.DTFC", function () {
                    e || (c = "right")
                }).on("scroll.DTFC", function (a) {
                    !c && a.originalEvent && (c = "right");
                    "right" === c && (b.dom.scroller.scrollTop = b.dom.grid.right.liner.scrollTop, 0 < b.s.iLeftColumns && (b.dom.grid.left.liner.scrollTop = b.dom.grid.right.liner.scrollTop))
                }).on(f, function (a) {
                    b.dom.scroller.scrollLeft -= "wheel" === a.type ? -a.originalEvent.deltaX : a.originalEvent.wheelDeltaX
                });
                d(p).on("resize.DTFC", function () {
                    b._fnGridLayout.call(b)
                });
                var g = !0, h = d(this.s.dt.nTable);
                h.on("draw.dt.DTFC", function () {
                    b._fnColCalc();
                    b._fnDraw.call(b, g);
                    g = !1
                }).on("column-sizing.dt.DTFC", function () {
                    b._fnColCalc();
                    b._fnGridLayout(b)
                }).on("column-visibility.dt.DTFC", function (a, c, d, e, f) {
                    if (f === t || f)b._fnColCalc(), b._fnGridLayout(b), b._fnDraw(!0)
                }).on("select.dt.DTFC deselect.dt.DTFC", function (a) {
                    "dt" === a.namespace && b._fnDraw(!1)
                }).on("destroy.dt.DTFC", function () {
                    h.off(".DTFC");
                    d(b.dom.scroller).off(".DTFC");
                    d(p).off(".DTFC");
                    d(b.s.dt.nTableWrapper).off(".DTFC");
                    d(b.dom.grid.left.liner).off(".DTFC " + f);
                    d(b.dom.grid.left.wrapper).remove();
                    d(b.dom.grid.right.liner).off(".DTFC " + f);
                    d(b.dom.grid.right.wrapper).remove()
                });
                this._fnGridLayout();
                this.s.dt.oInstance.fnDraw(!1)
            }
        }, _fnColCalc: function () {
            var a = this, b = 0, c = 0;
            this.s.aiInnerWidths = [];
            this.s.aiOuterWidths = [];
            d.each(this.s.dt.aoColumns, function (e, f) {
                var g = d(f.nTh), h;
                if (g.filter(":visible").length) {
                    var i = g.outerWidth();
                    0 === a.s.aiOuterWidths.length && (h = d(a.s.dt.nTable).css("border-left-width"), i += "string" === typeof h && -1 === h.indexOf("px") ? 1 : parseInt(h, 10));
                    a.s.aiOuterWidths.length === a.s.dt.aoColumns.length - 1 && (h = d(a.s.dt.nTable).css("border-right-width"), i += "string" === typeof h && -1 === h.indexOf("px") ? 1 : parseInt(h, 10));
                    a.s.aiOuterWidths.push(i);
                    a.s.aiInnerWidths.push(g.width());
                    e < a.s.iLeftColumns && (b += i);
                    a.s.iTableColumns - a.s.iRightColumns <= e && (c += i)
                } else a.s.aiInnerWidths.push(0), a.s.aiOuterWidths.push(0)
            });
            this.s.iLeftWidth = b;
            this.s.iRightWidth = c
        }, _fnGridSetup: function () {
            var a = this._fnDTOverflow(), b;
            this.dom.body =
                this.s.dt.nTable;
            this.dom.header = this.s.dt.nTHead.parentNode;
            this.dom.header.parentNode.parentNode.style.position = "relative";
            var c = d('<div class="DTFC_ScrollWrapper" style="position:relative; clear:both;"><div class="DTFC_LeftWrapper" style="position:absolute; top:0; left:0;" aria-hidden="true"><div class="DTFC_LeftHeadWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div><div class="DTFC_LeftBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_LeftBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_LeftFootWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_RightWrapper" style="position:absolute; top:0; right:0;" aria-hidden="true"><div class="DTFC_RightHeadWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightHeadBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div><div class="DTFC_RightBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_RightBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_RightFootWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightFootBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div></div></div>')[0],
                e = c.childNodes[0], f = c.childNodes[1];
            this.dom.grid.dt.parentNode.insertBefore(c, this.dom.grid.dt);
            c.appendChild(this.dom.grid.dt);
            this.dom.grid.wrapper = c;
            0 < this.s.iLeftColumns && (this.dom.grid.left.wrapper = e, this.dom.grid.left.head = e.childNodes[0], this.dom.grid.left.body = e.childNodes[1], this.dom.grid.left.liner = d("div.DTFC_LeftBodyLiner", c)[0], c.appendChild(e));
            0 < this.s.iRightColumns && (this.dom.grid.right.wrapper = f, this.dom.grid.right.head = f.childNodes[0], this.dom.grid.right.body = f.childNodes[1], this.dom.grid.right.liner =
                d("div.DTFC_RightBodyLiner", c)[0], f.style.right = a.bar + "px", b = d("div.DTFC_RightHeadBlocker", c)[0], b.style.width = a.bar + "px", b.style.right = -a.bar + "px", this.dom.grid.right.headBlock = b, b = d("div.DTFC_RightFootBlocker", c)[0], b.style.width = a.bar + "px", b.style.right = -a.bar + "px", this.dom.grid.right.footBlock = b, c.appendChild(f));
            if (this.s.dt.nTFoot && (this.dom.footer = this.s.dt.nTFoot.parentNode, 0 < this.s.iLeftColumns && (this.dom.grid.left.foot = e.childNodes[2]), 0 < this.s.iRightColumns))this.dom.grid.right.foot = f.childNodes[2];
            this.s.rtl && d("div.DTFC_RightHeadBlocker", c).css({left: -a.bar + "px", right: ""})
        }, _fnGridLayout: function () {
            var a = this, b = this.dom.grid;
            d(b.wrapper).width();
            var c = this.s.dt.nTable.parentNode.offsetHeight, e = this.s.dt.nTable.parentNode.parentNode.offsetHeight, f = this._fnDTOverflow(), g = this.s.iLeftWidth, h = this.s.iRightWidth, i = "rtl" === d(this.dom.body).css("direction"), k = function (b, c) {
                f.bar ? a._firefoxScrollError() ? 34 < d(b).height() && (b.style.width = c + f.bar + "px") : b.style.width = c + f.bar + "px" : (b.style.width = c + 20 +
                    "px", b.style.paddingRight = "20px", b.style.boxSizing = "border-box")
            };
            f.x && (c -= f.bar);
            b.wrapper.style.height = e + "px";
            0 < this.s.iLeftColumns && (e = b.left.wrapper, e.style.width = g + "px", e.style.height = "1px", i ? (e.style.left = "", e.style.right = 0) : (e.style.left = 0, e.style.right = ""), b.left.body.style.height = c + "px", b.left.foot && (b.left.foot.style.top = (f.x ? f.bar : 0) + "px"), k(b.left.liner, g), b.left.liner.style.height = c + "px", b.left.liner.style.maxHeight = c + "px");
            0 < this.s.iRightColumns && (e = b.right.wrapper, e.style.width = h + "px",
                e.style.height = "1px", this.s.rtl ? (e.style.left = f.y ? f.bar + "px" : 0, e.style.right = "") : (e.style.left = "", e.style.right = f.y ? f.bar + "px" : 0), b.right.body.style.height = c + "px", b.right.foot && (b.right.foot.style.top = (f.x ? f.bar : 0) + "px"), k(b.right.liner, h), b.right.liner.style.height = c + "px", b.right.liner.style.maxHeight = c + "px", b.right.headBlock.style.display = f.y ? "block" : "none", b.right.footBlock.style.display = f.y ? "block" : "none")
        }, _fnDTOverflow: function () {
            var a = this.s.dt.nTable, b = a.parentNode, c = {x: !1, y: !1, bar: this.s.dt.oScroll.iBarWidth};
            a.offsetWidth > b.clientWidth && (c.x = !0);
            a.offsetHeight > b.clientHeight && (c.y = !0);
            return c
        }, _fnDraw: function (a) {
            this._fnGridLayout();
            this._fnCloneLeft(a);
            this._fnCloneRight(a);
            null !== this.s.fnDrawCallback && this.s.fnDrawCallback.call(this, this.dom.clone.left, this.dom.clone.right);
            d(this).trigger("draw.dtfc", {leftClone: this.dom.clone.left, rightClone: this.dom.clone.right})
        }, _fnCloneRight: function (a) {
            if (!(0 >= this.s.iRightColumns)) {
                var b, c = [];
                for (b = this.s.iTableColumns - this.s.iRightColumns; b < this.s.iTableColumns; b++)this.s.dt.aoColumns[b].bVisible &&
                c.push(b);
                this._fnClone(this.dom.clone.right, this.dom.grid.right, c, a)
            }
        }, _fnCloneLeft: function (a) {
            if (!(0 >= this.s.iLeftColumns)) {
                var b, c = [];
                for (b = 0; b < this.s.iLeftColumns; b++)this.s.dt.aoColumns[b].bVisible && c.push(b);
                this._fnClone(this.dom.clone.left, this.dom.grid.left, c, a)
            }
        }, _fnCopyLayout: function (a, b, c) {
            for (var e = [], f = [], g = [], h = 0, i = a.length; h < i; h++) {
                var k = [];
                k.nTr = d(a[h].nTr).clone(c, !1)[0];
                for (var l = 0, o = this.s.iTableColumns; l < o; l++)if (-1 !== d.inArray(l, b)) {
                    var q = d.inArray(a[h][l].cell, g);
                    -1 === q ? (q =
                        d(a[h][l].cell).clone(c, !1)[0], f.push(q), g.push(a[h][l].cell), k.push({
                        cell: q,
                        unique: a[h][l].unique
                    })) : k.push({cell: f[q], unique: a[h][l].unique})
                }
                e.push(k)
            }
            return e
        }, _fnClone: function (a, b, c, e) {
            var f = this, g, h, i, k, l, o, q, n, m, j = this.s.dt;
            if (e) {
                d(a.header).remove();
                a.header = d(this.dom.header).clone(!0, !1)[0];
                a.header.className += " DTFC_Cloned";
                a.header.style.width = "100%";
                b.head.appendChild(a.header);
                n = this._fnCopyLayout(j.aoHeader, c, !0);
                k = d(">thead", a.header);
                k.empty();
                g = 0;
                for (h = n.length; g < h; g++)k[0].appendChild(n[g].nTr);
                j.oApi._fnDrawHead(j, n, !0)
            } else {
                n = this._fnCopyLayout(j.aoHeader, c, !1);
                m = [];
                j.oApi._fnDetectHeader(m, d(">thead", a.header)[0]);
                g = 0;
                for (h = n.length; g < h; g++) {
                    i = 0;
                    for (k = n[g].length; i < k; i++)m[g][i].cell.className = n[g][i].cell.className, d("span.DataTables_sort_icon", m[g][i].cell).each(function () {
                        this.className = d("span.DataTables_sort_icon", n[g][i].cell)[0].className
                    })
                }
            }
            this._fnEqualiseHeights("thead", this.dom.header, a.header);
            "auto" == this.s.sHeightMatch && d(">tbody>tr", f.dom.body).css("height", "auto");
            null !==
            a.body && (d(a.body).remove(), a.body = null);
            a.body = d(this.dom.body).clone(!0)[0];
            a.body.className += " DTFC_Cloned";
            a.body.style.paddingBottom = j.oScroll.iBarWidth + "px";
            a.body.style.marginBottom = 2 * j.oScroll.iBarWidth + "px";
            null !== a.body.getAttribute("id") && a.body.removeAttribute("id");
            d(">thead>tr", a.body).empty();
            d(">tfoot", a.body).remove();
            var p = d("tbody", a.body)[0];
            d(p).empty();
            if (0 < j.aiDisplay.length) {
                h = d(">thead>tr", a.body)[0];
                for (q = 0; q < c.length; q++)l = c[q], o = d(j.aoColumns[l].nTh).clone(!0)[0], o.innerHTML =
                    "", k = o.style, k.paddingTop = "0", k.paddingBottom = "0", k.borderTopWidth = "0", k.borderBottomWidth = "0", k.height = 0, k.width = f.s.aiInnerWidths[l] + "px", h.appendChild(o);
                d(">tbody>tr", f.dom.body).each(function (a) {
                    var a = f.s.dt.oFeatures.bServerSide === false ? f.s.dt.aiDisplay[f.s.dt._iDisplayStart + a] : a, b = f.s.dt.aoData[a].anCells || d(this).children("td, th"), e = this.cloneNode(false);
                    e.removeAttribute("id");
                    e.setAttribute("data-dt-row", a);
                    for (q = 0; q < c.length; q++) {
                        l = c[q];
                        if (b.length > 0) {
                            o = d(b[l]).clone(true, true)[0];
                            o.removeAttribute("id");
                            o.setAttribute("data-dt-row", a);
                            o.setAttribute("data-dt-column", j.oApi._fnVisibleToColumnIndex(j, l));
                            e.appendChild(o)
                        }
                    }
                    p.appendChild(e)
                })
            } else d(">tbody>tr", f.dom.body).each(function () {
                o = this.cloneNode(true);
                o.className = o.className + " DTFC_NoData";
                d("td", o).html("");
                p.appendChild(o)
            });
            a.body.style.width = "100%";
            a.body.style.margin = "0";
            a.body.style.padding = "0";
            j.oScroller !== t && (h = j.oScroller.dom.force, b.forcer ? b.forcer.style.height = h.style.height : (b.forcer = h.cloneNode(!0), b.liner.appendChild(b.forcer)));
            b.liner.appendChild(a.body);
            this._fnEqualiseHeights("tbody", f.dom.body, a.body);
            if (null !== j.nTFoot) {
                if (e) {
                    null !== a.footer && a.footer.parentNode.removeChild(a.footer);
                    a.footer = d(this.dom.footer).clone(!0, !0)[0];
                    a.footer.className += " DTFC_Cloned";
                    a.footer.style.width = "100%";
                    b.foot.appendChild(a.footer);
                    n = this._fnCopyLayout(j.aoFooter, c, !0);
                    b = d(">tfoot", a.footer);
                    b.empty();
                    g = 0;
                    for (h = n.length; g < h; g++)b[0].appendChild(n[g].nTr);
                    j.oApi._fnDrawHead(j, n, !0)
                } else {
                    n = this._fnCopyLayout(j.aoFooter, c, !1);
                    b = [];
                    j.oApi._fnDetectHeader(b,
                        d(">tfoot", a.footer)[0]);
                    g = 0;
                    for (h = n.length; g < h; g++) {
                        i = 0;
                        for (k = n[g].length; i < k; i++)b[g][i].cell.className = n[g][i].cell.className
                    }
                }
                this._fnEqualiseHeights("tfoot", this.dom.footer, a.footer)
            }
            b = j.oApi._fnGetUniqueThs(j, d(">thead", a.header)[0]);
            d(b).each(function (a) {
                l = c[a];
                this.style.width = f.s.aiInnerWidths[l] + "px"
            });
            null !== f.s.dt.nTFoot && (b = j.oApi._fnGetUniqueThs(j, d(">tfoot", a.footer)[0]), d(b).each(function (a) {
                l = c[a];
                this.style.width = f.s.aiInnerWidths[l] + "px"
            }))
        }, _fnGetTrNodes: function (a) {
            for (var b =
                [], c = 0, d = a.childNodes.length; c < d; c++)"TR" == a.childNodes[c].nodeName.toUpperCase() && b.push(a.childNodes[c]);
            return b
        }, _fnEqualiseHeights: function (a, b, c) {
            if (!("none" == this.s.sHeightMatch && "thead" !== a && "tfoot" !== a)) {
                var e, f, g = b.getElementsByTagName(a)[0], c = c.getElementsByTagName(a)[0], a = d(">" + a + ">tr:eq(0)", b).children(":first");
                a.outerHeight();
                a.height();
                for (var g = this._fnGetTrNodes(g), b = this._fnGetTrNodes(c), h = [], c = 0, a = b.length; c < a; c++)e = g[c].offsetHeight, f = b[c].offsetHeight, e = f > e ? f : e, "semiauto" == this.s.sHeightMatch &&
                (g[c]._DTTC_iHeight = e), h.push(e);
                c = 0;
                for (a = b.length; c < a; c++)b[c].style.height = h[c] + "px", g[c].style.height = h[c] + "px"
            }
        }, _firefoxScrollError: function () {
            if (u === t) {
                var a = d("<div/>").css({
                    position: "absolute",
                    top: 0,
                    left: 0,
                    height: 10,
                    width: 50,
                    overflow: "scroll"
                }).appendTo("body");
                u = a[0].clientWidth === a[0].offsetWidth && 0 !== this._fnDTOverflow().bar;
                a.remove()
            }
            return u
        }
    });
    m.defaults = {iLeftColumns: 1, iRightColumns: 0, fnDrawCallback: null, sHeightMatch: "semiauto"};
    m.version = "3.2.4";
    s.Api.register("fixedColumns()", function () {
        return this
    });
    s.Api.register("fixedColumns().update()", function () {
        return this.iterator("table", function (a) {
            a._oFixedColumns && a._oFixedColumns.fnUpdate()
        })
    });
    s.Api.register("fixedColumns().relayout()", function () {
        return this.iterator("table", function (a) {
            a._oFixedColumns && a._oFixedColumns.fnRedrawLayout()
        })
    });
    s.Api.register("rows().recalcHeight()", function () {
        return this.iterator("row", function (a, b) {
            a._oFixedColumns && a._oFixedColumns.fnRecalculateHeight(this.row(b).node())
        })
    });
    s.Api.register("fixedColumns().rowIndex()",
        function (a) {
            a = d(a);
            return a.parents(".DTFC_Cloned").length ? this.rows({page: "current"}).indexes()[a.index()] : this.row(a).index()
        });
    s.Api.register("fixedColumns().cellIndex()", function (a) {
        a = d(a);
        if (a.parents(".DTFC_Cloned").length) {
            var b = a.parent().index(), b = this.rows({page: "current"}).indexes()[b], a = a.parents(".DTFC_LeftWrapper").length ? a.index() : this.columns().flatten().length - this.context[0]._oFixedColumns.s.iRightColumns + a.index();
            return {row: b, column: this.column.index("toData", a), columnVisible: a}
        }
        return this.cell(a).index()
    });
    d(r).on("init.dt.fixedColumns", function (a, b) {
        if ("dt" === a.namespace) {
            var c = b.oInit.fixedColumns, e = s.defaults.fixedColumns;
            if (c || e)e = d.extend({}, c, e), !1 !== c && new m(b, e)
        }
    });
    d.fn.dataTable.FixedColumns = m;
    return d.fn.DataTable.FixedColumns = m
});


/*!
 FixedHeader 3.1.3
 ©2009-2017 SpryMedia Ltd - datatables.net/license
 */
(function (d) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (g) {
        return d(g, window, document)
    }) : "object" === typeof exports ? module.exports = function (g, h) {
        g || (g = window);
        if (!h || !h.fn.dataTable)h = require("datatables.net")(g, h).$;
        return d(h, g, g.document)
    } : d(jQuery, window, document)
})(function (d, g, h, k) {
    var j = d.fn.dataTable, l = 0, i = function (b, a) {
        if (!(this instanceof i))throw"FixedHeader must be initialised with the 'new' keyword.";
        !0 === a && (a = {});
        b = new j.Api(b);
        this.c = d.extend(!0,
            {}, i.defaults, a);
        this.s = {
            dt: b,
            position: {
                theadTop: 0,
                tbodyTop: 0,
                tfootTop: 0,
                tfootBottom: 0,
                width: 0,
                left: 0,
                tfootHeight: 0,
                theadHeight: 0,
                windowHeight: d(g).height(),
                visible: !0
            },
            headerMode: null,
            footerMode: null,
            autoWidth: b.settings()[0].oFeatures.bAutoWidth,
            namespace: ".dtfc" + l++,
            scrollLeft: {header: -1, footer: -1},
            enable: !0
        };
        this.dom = {
            floatingHeader: null,
            thead: d(b.table().header()),
            tbody: d(b.table().body()),
            tfoot: d(b.table().footer()),
            header: {host: null, floating: null, placeholder: null},
            footer: {
                host: null, floating: null,
                placeholder: null
            }
        };
        this.dom.header.host = this.dom.thead.parent();
        this.dom.footer.host = this.dom.tfoot.parent();
        var e = b.settings()[0];
        if (e._fixedHeader)throw"FixedHeader already initialised on table " + e.nTable.id;
        e._fixedHeader = this;
        this._constructor()
    };
    d.extend(i.prototype, {
        enable: function (b) {
            this.s.enable = b;
            this.c.header && this._modeChange("in-place", "header", !0);
            this.c.footer && this.dom.tfoot.length && this._modeChange("in-place", "footer", !0);
            this.update()
        }, headerOffset: function (b) {
            b !== k && (this.c.headerOffset =
                b, this.update());
            return this.c.headerOffset
        }, footerOffset: function (b) {
            b !== k && (this.c.footerOffset = b, this.update());
            return this.c.footerOffset
        }, update: function () {
            this._positions();
            this._scroll(!0)
        }, _constructor: function () {
            var b = this, a = this.s.dt;
            d(g).on("scroll" + this.s.namespace, function () {
                b._scroll()
            }).on("resize" + this.s.namespace, function () {
                b.s.position.windowHeight = d(g).height();
                b.update()
            });
            var e = d(".fh-fixedHeader");
            !this.c.headerOffset && e.length && (this.c.headerOffset = e.outerHeight());
            e = d(".fh-fixedFooter");
            !this.c.footerOffset && e.length && (this.c.footerOffset = e.outerHeight());
            a.on("column-reorder.dt.dtfc column-visibility.dt.dtfc draw.dt.dtfc column-sizing.dt.dtfc", function () {
                b.update()
            });
            a.on("destroy.dtfc", function () {
                a.off(".dtfc");
                d(g).off(b.s.namespace)
            });
            this._positions();
            this._scroll()
        }, _clone: function (b, a) {
            var e = this.s.dt, c = this.dom[b], f = "header" === b ? this.dom.thead : this.dom.tfoot;
            !a && c.floating ? c.floating.removeClass("fixedHeader-floating fixedHeader-locked") : (c.floating && (c.placeholder.remove(),
                this._unsize(b), c.floating.children().detach(), c.floating.remove()), c.floating = d(e.table().node().cloneNode(!1)).css("table-layout", "fixed").removeAttr("id").append(f).appendTo("body"), c.placeholder = f.clone(!1), c.placeholder.find("*[id]").removeAttr("id"), c.host.prepend(c.placeholder), this._matchWidths(c.placeholder, c.floating))
        }, _matchWidths: function (b, a) {
            var e = function (a) {
                return d(a, b).map(function () {
                    return d(this).width()
                }).toArray()
            }, c = function (b, c) {
                d(b, a).each(function (a) {
                    d(this).css({
                        width: c[a],
                        minWidth: c[a]
                    })
                })
            }, f = e("th"), e = e("td");
            c("th", f);
            c("td", e)
        }, _unsize: function (b) {
            var a = this.dom[b].floating;
            a && ("footer" === b || "header" === b && !this.s.autoWidth) ? d("th, td", a).css({
                width: "",
                minWidth: ""
            }) : a && "header" === b && d("th, td", a).css("min-width", "")
        }, _horizontal: function (b, a) {
            var e = this.dom[b], c = this.s.position, d = this.s.scrollLeft;
            e.floating && d[b] !== a && (e.floating.css("left", c.left - a), d[b] = a)
        }, _modeChange: function (b, a, e) {
            var c = this.dom[a], f = this.s.position, g = d.contains(this.dom["footer" === a ? "tfoot" :
                "thead"][0], h.activeElement) ? h.activeElement : null;
            if ("in-place" === b) {
                if (c.placeholder && (c.placeholder.remove(), c.placeholder = null), this._unsize(a), "header" === a ? c.host.prepend(this.dom.thead) : c.host.append(this.dom.tfoot), c.floating)c.floating.remove(), c.floating = null
            } else"in" === b ? (this._clone(a, e), c.floating.addClass("fixedHeader-floating").css("header" === a ? "top" : "bottom", this.c[a + "Offset"]).css("left", f.left + "px").css("width", f.width + "px"), "footer" === a && c.floating.css("top", "")) : "below" === b ? (this._clone(a,
                e), c.floating.addClass("fixedHeader-locked").css("top", f.tfootTop - f.theadHeight).css("left", f.left + "px").css("width", f.width + "px")) : "above" === b && (this._clone(a, e), c.floating.addClass("fixedHeader-locked").css("top", f.tbodyTop).css("left", f.left + "px").css("width", f.width + "px"));
            g && g !== h.activeElement && g.focus();
            this.s.scrollLeft.header = -1;
            this.s.scrollLeft.footer = -1;
            this.s[a + "Mode"] = b
        }, _positions: function () {
            var b = this.s.dt.table(), a = this.s.position, e = this.dom, b = d(b.node()), c = b.children("thead"), f =
                b.children("tfoot"), e = e.tbody;
            a.visible = b.is(":visible");
            a.width = b.outerWidth();
            a.left = b.offset().left;
            a.theadTop = c.offset().top;
            a.tbodyTop = e.offset().top;
            a.theadHeight = a.tbodyTop - a.theadTop;
            f.length ? (a.tfootTop = f.offset().top, a.tfootBottom = a.tfootTop + f.outerHeight(), a.tfootHeight = a.tfootBottom - a.tfootTop) : (a.tfootTop = a.tbodyTop + e.outerHeight(), a.tfootBottom = a.tfootTop, a.tfootHeight = a.tfootTop)
        }, _scroll: function (b) {
            var a = d(h).scrollTop(), e = d(h).scrollLeft(), c = this.s.position, f;
            if (this.s.enable && (this.c.header &&
                (f = !c.visible || a <= c.theadTop - this.c.headerOffset ? "in-place" : a <= c.tfootTop - c.theadHeight - this.c.headerOffset ? "in" : "below", (b || f !== this.s.headerMode) && this._modeChange(f, "header", b), this._horizontal("header", e)), this.c.footer && this.dom.tfoot.length))a = !c.visible || a + c.windowHeight >= c.tfootBottom + this.c.footerOffset ? "in-place" : c.windowHeight + a > c.tbodyTop + c.tfootHeight + this.c.footerOffset ? "in" : "above", (b || a !== this.s.footerMode) && this._modeChange(a, "footer", b), this._horizontal("footer", e)
        }
    });
    i.version =
        "3.1.3";
    i.defaults = {header: !0, footer: !1, headerOffset: 0, footerOffset: 0};
    d.fn.dataTable.FixedHeader = i;
    d.fn.DataTable.FixedHeader = i;
    d(h).on("init.dt.dtfh", function (b, a) {
        if ("dt" === b.namespace) {
            var e = a.oInit.fixedHeader, c = j.defaults.fixedHeader;
            if ((e || c) && !a._fixedHeader)c = d.extend({}, c, e), !1 !== e && new i(a, c)
        }
    });
    j.Api.register("fixedHeader()", function () {
    });
    j.Api.register("fixedHeader.adjust()", function () {
        return this.iterator("table", function (b) {
            (b = b._fixedHeader) && b.update()
        })
    });
    j.Api.register("fixedHeader.enable()",
        function (b) {
            return this.iterator("table", function (a) {
                a = a._fixedHeader;
                b = b !== k ? b : !0;
                a && b !== a.s.enable && a.enable(b)
            })
        });
    j.Api.register("fixedHeader.disable()", function () {
        return this.iterator("table", function (b) {
            (b = b._fixedHeader) && b.s.enable && b.enable(!1)
        })
    });
    d.each(["header", "footer"], function (b, a) {
        j.Api.register("fixedHeader." + a + "Offset()", function (b) {
            var c = this.context;
            return b === k ? c.length && c[0]._fixedHeader ? c[0]._fixedHeader[a + "Offset"]() : k : this.iterator("table", function (c) {
                if (c = c._fixedHeader)c[a +
                "Offset"](b)
            })
        })
    });
    return i
});


/*!
 KeyTable 2.3.2
 ©2009-2017 SpryMedia Ltd - datatables.net/license
 */
(function (f) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (k) {
        return f(k, window, document)
    }) : "object" === typeof exports ? module.exports = function (k, h) {
        k || (k = window);
        if (!h || !h.fn.dataTable)h = require("datatables.net")(k, h).$;
        return f(h, k, k.document)
    } : f(jQuery, window, document)
})(function (f, k, h, o) {
    var l = f.fn.dataTable, n = function (a, b) {
        if (!l.versionCheck || !l.versionCheck("1.10.8"))throw"KeyTable requires DataTables 1.10.8 or newer";
        this.c = f.extend(!0, {}, l.defaults.keyTable,
            n.defaults, b);
        this.s = {dt: new l.Api(a), enable: !0, focusDraw: !1, waitingForDraw: !1, lastFocus: null};
        this.dom = {};
        var c = this.s.dt.settings()[0], d = c.keytable;
        if (d)return d;
        c.keytable = this;
        this._constructor()
    };
    f.extend(n.prototype, {
        blur: function () {
            this._blur()
        }, enable: function (a) {
            this.s.enable = a
        }, focus: function (a, b) {
            this._focus(this.s.dt.cell(a, b))
        }, focused: function (a) {
            if (!this.s.lastFocus)return !1;
            var b = this.s.lastFocus.cell.index();
            return a.row === b.row && a.column === b.column
        }, _constructor: function () {
            this._tabInput();
            var a = this, b = this.s.dt, c = f(b.table().node());
            "static" === c.css("position") && c.css("position", "relative");
            f(b.table().body()).on("click.keyTable", "th, td", function (c) {
                if (!1 !== a.s.enable) {
                    var d = b.cell(this);
                    d.any() && a._focus(d, null, !1, c)
                }
            });
            f(h).on("keydown.keyTable", function (b) {
                a._key(b)
            });
            if (this.c.blurable)f(h).on("mousedown.keyTable", function (c) {
                f(c.target).parents(".dataTables_filter").length && a._blur();
                f(c.target).parents().filter(b.table().container()).length || f(c.target).parents("div.DTE").length ||
                f(c.target).parents("div.editor-datetime").length || f(c.target).parents().filter(".DTFC_Cloned").length || a._blur()
            });
            if (this.c.editor) {
                var d = this.c.editor;
                d.on("open.keyTableMain", function (b, c) {
                    "inline" !== c && a.s.enable && (a.enable(!1), d.one("close.keyTable", function () {
                        a.enable(!0)
                    }))
                });
                if (this.c.editOnFocus)b.on("key-focus.keyTable key-refocus.keyTable", function (b, c, d, e) {
                    a._editor(null, e)
                });
                b.on("key.keyTable", function (b, c, d, e, f) {
                    a._editor(d, f)
                })
            }
            if (b.settings()[0].oFeatures.bStateSave)b.on("stateSaveParams.keyTable",
                function (b, c, d) {
                    d.keyTable = a.s.lastFocus ? a.s.lastFocus.cell.index() : null
                });
            b.on("draw.keyTable", function (c) {
                if (!a.s.focusDraw) {
                    var d = a.s.lastFocus;
                    if (d && d.node && f(d.node).closest("body") === h.body) {
                        var d = a.s.lastFocus.relative, e = b.page.info(), j = d.row + e.start;
                        0 !== e.recordsDisplay && (j >= e.recordsDisplay && (j = e.recordsDisplay - 1), a._focus(j, d.column, !0, c))
                    }
                }
            });
            b.on("destroy.keyTable", function () {
                b.off(".keyTable");
                f(b.table().body()).off("click.keyTable", "th, td");
                f(h.body).off("keydown.keyTable").off("click.keyTable")
            });
            var e = b.state.loaded();
            if (e && e.keyTable)b.one("init", function () {
                var a = b.cell(e.keyTable);
                a.any() && a.focus()
            }); else this.c.focus && b.cell(this.c.focus).focus()
        }, _blur: function () {
            if (this.s.enable && this.s.lastFocus) {
                var a = this.s.lastFocus.cell;
                f(a.node()).removeClass(this.c.className);
                this.s.lastFocus = null;
                this._updateFixedColumns(a.index().column);
                this._emitEvent("key-blur", [this.s.dt, a])
            }
        }, _clipboardCopy: function () {
            var a = this.s.dt;
            if (this.s.lastFocus && k.getSelection && !k.getSelection().toString()) {
                var b =
                    this.s.lastFocus.cell.render("display"), c = f("<div/>").css({
                    height: 1,
                    width: 1,
                    overflow: "hidden",
                    position: "fixed",
                    top: 0,
                    left: 0
                }), b = f("<textarea readonly/>").val(b).appendTo(c);
                try {
                    c.appendTo(a.table().container()), b[0].focus(), b[0].select(), h.execCommand("copy")
                } catch (d) {
                }
                c.remove()
            }
        }, _columns: function () {
            var a = this.s.dt, b = a.columns(this.c.columns).indexes(), c = [];
            a.columns(":visible").every(function (a) {
                -1 !== b.indexOf(a) && c.push(a)
            });
            return c
        }, _editor: function (a, b) {
            var c = this, d = this.s.dt, e = this.c.editor;
            !f("div.DTE", this.s.lastFocus.cell.node()).length && 16 !== a && (b.stopPropagation(), 13 === a && b.preventDefault(), e.one("open.keyTable", function () {
                e.off("cancelOpen.keyTable");
                c.c.editAutoSelect && f("div.DTE_Field_InputControl input, div.DTE_Field_InputControl textarea").select();
                d.keys.enable(c.c.editorKeys);
                d.one("key-blur.editor", function () {
                    e.displayed() && e.submit()
                });
                e.one("close", function () {
                    d.keys.enable(!0);
                    d.off("key-blur.editor")
                })
            }).one("cancelOpen.keyTable", function () {
                e.off("open.keyTable")
            }).inline(this.s.lastFocus.cell.index()))
        },
        _emitEvent: function (a, b) {
            this.s.dt.iterator("table", function (c) {
                f(c.nTable).triggerHandler(a, b)
            })
        }, _focus: function (a, b, c, d) {
            var e = this, m = this.s.dt, g = m.page.info(), i = this.s.lastFocus;
            d || (d = null);
            if (this.s.enable) {
                if ("number" !== typeof a) {
                    var j = a.index(), b = j.column, a = m.rows({
                        filter: "applied",
                        order: "applied"
                    }).indexes().indexOf(j.row);
                    g.serverSide && (a += g.start)
                }
                if (-1 !== g.length && (a < g.start || a >= g.start + g.length))this.s.focusDraw = !0, this.s.waitingForDraw = !0, m.one("draw", function () {
                    e.s.focusDraw = !1;
                    e.s.waitingForDraw = !1;
                    e._focus(a, b, o, d)
                }).page(Math.floor(a / g.length)).draw(!1); else if (-1 !== f.inArray(b, this._columns())) {
                    g.serverSide && (a -= g.start);
                    g = m.cells(null, b, {search: "applied", order: "applied"}).flatten();
                    g = m.cell(g[a]);
                    if (i) {
                        if (i.node === g.node()) {
                            this._emitEvent("key-refocus", [this.s.dt, g, d || null]);
                            return
                        }
                        this._blur()
                    }
                    i = f(g.node());
                    i.addClass(this.c.className);
                    this._updateFixedColumns(b);
                    if (c === o || !0 === c)this._scroll(f(k), f(h.body), i, "offset"), c = m.table().body().parentNode, c !== m.table().header().parentNode &&
                    (c = f(c.parentNode), this._scroll(c, c, i, "position"));
                    this.s.lastFocus = {
                        cell: g,
                        node: g.node(),
                        relative: {
                            row: m.rows({page: "current"}).indexes().indexOf(g.index().row),
                            column: g.index().column
                        }
                    };
                    this._emitEvent("key-focus", [this.s.dt, g, d || null]);
                    m.state.save()
                }
            }
        }, _key: function (a) {
            if (this.s.waitingForDraw)a.preventDefault(); else {
                var b = this.s.enable, c = !0 === b || "navigation-only" === b;
                if (b)if (a.ctrlKey && 67 === a.keyCode)this._clipboardCopy(); else if (!(0 === a.keyCode || a.ctrlKey || a.metaKey || a.altKey) && this.s.lastFocus) {
                    var d =
                        this.s.dt;
                    if (!(this.c.keys && -1 === f.inArray(a.keyCode, this.c.keys)))switch (a.keyCode) {
                        case 9:
                            this._shift(a, a.shiftKey ? "left" : "right", !0);
                            break;
                        case 27:
                            this.s.blurable && !0 === b && this._blur();
                            break;
                        case 33:
                        case 34:
                            c && (a.preventDefault(), d.page(33 === a.keyCode ? "previous" : "next").draw(!1));
                            break;
                        case 35:
                        case 36:
                            c && (a.preventDefault(), b = d.cells({page: "current"}).indexes(), c = this._columns(), this._focus(d.cell(b[35 === a.keyCode ? b.length - 1 : c[0]]), null, !0, a));
                            break;
                        case 37:
                            c && this._shift(a, "left");
                            break;
                        case 38:
                            c &&
                            this._shift(a, "up");
                            break;
                        case 39:
                            c && this._shift(a, "right");
                            break;
                        case 40:
                            c && this._shift(a, "down");
                            break;
                        default:
                            !0 === b && this._emitEvent("key", [d, a.keyCode, this.s.lastFocus.cell, a])
                    }
                }
            }
        }, _scroll: function (a, b, c, d) {
            var e = c[d](), f = c.outerHeight(), g = c.outerWidth(), i = b.scrollTop(), j = b.scrollLeft(), h = a.height(), a = a.width();
            "position" === d && (e.top += parseInt(c.closest("table").css("top"), 10));
            e.top < i && b.scrollTop(e.top);
            e.left < j && b.scrollLeft(e.left);
            e.top + f > i + h && f < h && b.scrollTop(e.top + f - h);
            e.left + g > j + a && g <
            a && b.scrollLeft(e.left + g - a)
        }, _shift: function (a, b, c) {
            var d = this.s.dt, e = d.page.info(), h = e.recordsDisplay, g = this.s.lastFocus.cell, i = this._columns();
            if (g) {
                var j = d.rows({filter: "applied", order: "applied"}).indexes().indexOf(g.index().row);
                e.serverSide && (j += e.start);
                d = d.columns(i).indexes().indexOf(g.index().column);
                e = i[d];
                "right" === b ? d >= i.length - 1 ? (j++, e = i[0]) : e = i[d + 1] : "left" === b ? 0 === d ? (j--, e = i[i.length - 1]) : e = i[d - 1] : "up" === b ? j-- : "down" === b && j++;
                0 <= j && j < h && -1 !== f.inArray(e, i) ? (a.preventDefault(), this._focus(j,
                    e, !0, a)) : !c || !this.c.blurable ? a.preventDefault() : this._blur()
            }
        }, _tabInput: function () {
            var a = this, b = this.s.dt, c = null !== this.c.tabIndex ? this.c.tabIndex : b.settings()[0].iTabIndex;
            if (-1 != c)f('<div><input type="text" tabindex="' + c + '"/></div>').css({
                position: "absolute",
                height: 1,
                width: 0,
                overflow: "hidden"
            }).insertBefore(b.table().node()).children().on("focus", function (c) {
                b.cell(":eq(0)", {page: "current"}).any() && a._focus(b.cell(":eq(0)", "0:visible", {page: "current"}), null, !0, c)
            })
        }, _updateFixedColumns: function (a) {
            var b =
                this.s.dt, c = b.settings()[0];
            if (c._oFixedColumns) {
                var d = c.aoColumns.length - c._oFixedColumns.s.iRightColumns;
                (a < c._oFixedColumns.s.iLeftColumns || a >= d) && b.fixedColumns().update()
            }
        }
    });
    n.defaults = {
        blurable: !0,
        className: "focus",
        columns: "",
        editor: null,
        editorKeys: "navigation-only",
        editAutoSelect: !0,
        editOnFocus: !1,
        focus: null,
        keys: null,
        tabIndex: null
    };
    n.version = "2.3.2";
    f.fn.dataTable.KeyTable = n;
    f.fn.DataTable.KeyTable = n;
    l.Api.register("cell.blur()", function () {
        return this.iterator("table", function (a) {
            a.keytable &&
            a.keytable.blur()
        })
    });
    l.Api.register("cell().focus()", function () {
        return this.iterator("cell", function (a, b, c) {
            a.keytable && a.keytable.focus(b, c)
        })
    });
    l.Api.register("keys.disable()", function () {
        return this.iterator("table", function (a) {
            a.keytable && a.keytable.enable(!1)
        })
    });
    l.Api.register("keys.enable()", function (a) {
        return this.iterator("table", function (b) {
            b.keytable && b.keytable.enable(a === o ? !0 : a)
        })
    });
    l.ext.selector.cell.push(function (a, b, c) {
        var b = b.focused, a = a.keytable, d = [];
        if (!a || b === o)return c;
        for (var e =
            0, f = c.length; e < f; e++)(!0 === b && a.focused(c[e]) || !1 === b && !a.focused(c[e])) && d.push(c[e]);
        return d
    });
    f(h).on("preInit.dt.dtk", function (a, b) {
        if ("dt" === a.namespace) {
            var c = b.oInit.keys, d = l.defaults.keys;
            if (c || d)d = f.extend({}, d, c), !1 !== c && new n(b, d)
        }
    });
    return n
});


/*!
 Responsive 2.2.1
 2014-2017 SpryMedia Ltd - datatables.net/license
 */
(function (c) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (l) {
        return c(l, window, document)
    }) : "object" === typeof exports ? module.exports = function (l, k) {
        l || (l = window);
        if (!k || !k.fn.dataTable)k = require("datatables.net")(l, k).$;
        return c(k, l, l.document)
    } : c(jQuery, window, document)
})(function (c, l, k, q) {
    function s(b, a, c) {
        var e = a + "-" + c;
        if (m[e])return m[e];
        for (var f = [], b = b.cell(a, c).node().childNodes, a = 0, c = b.length; a < c; a++)f.push(b[a]);
        return m[e] = f
    }

    function r(b, a, c) {
        var e = a +
            "-" + c;
        if (m[e]) {
            for (var b = b.cell(a, c).node(), c = m[e][0].parentNode.childNodes, a = [], f = 0, g = c.length; f < g; f++)a.push(c[f]);
            c = 0;
            for (f = a.length; c < f; c++)b.appendChild(a[c]);
            m[e] = q
        }
    }

    var o = c.fn.dataTable, j = function (b, a) {
        if (!o.versionCheck || !o.versionCheck("1.10.10"))throw"DataTables Responsive requires DataTables 1.10.10 or newer";
        this.s = {dt: new o.Api(b), columns: [], current: []};
        this.s.dt.settings()[0].responsive || (a && "string" === typeof a.details ? a.details = {type: a.details} : a && !1 === a.details ? a.details = {type: !1} :
        a && !0 === a.details && (a.details = {type: "inline"}), this.c = c.extend(!0, {}, j.defaults, o.defaults.responsive, a), b.responsive = this, this._constructor())
    };
    c.extend(j.prototype, {
        _constructor: function () {
            var b = this, a = this.s.dt, d = a.settings()[0], e = c(l).width();
            a.settings()[0]._responsive = this;
            c(l).on("resize.dtr orientationchange.dtr", o.util.throttle(function () {
                var a = c(l).width();
                a !== e && (b._resize(), e = a)
            }));
            d.oApi._fnCallbackReg(d, "aoRowCreatedCallback", function (e) {
                -1 !== c.inArray(!1, b.s.current) && c(">td, >th",
                    e).each(function (e) {
                    e = a.column.index("toData", e);
                    !1 === b.s.current[e] && c(this).css("display", "none")
                })
            });
            a.on("destroy.dtr", function () {
                a.off(".dtr");
                c(a.table().body()).off(".dtr");
                c(l).off("resize.dtr orientationchange.dtr");
                c.each(b.s.current, function (a, c) {
                    !1 === c && b._setColumnVis(a, !0)
                })
            });
            this.c.breakpoints.sort(function (a, b) {
                return a.width < b.width ? 1 : a.width > b.width ? -1 : 0
            });
            this._classLogic();
            this._resizeAuto();
            d = this.c.details;
            !1 !== d.type && (b._detailsInit(), a.on("column-visibility.dtr", function (a,
                                                                                        c, e, d, h) {
                h && (b._classLogic(), b._resizeAuto(), b._resize())
            }), a.on("draw.dtr", function () {
                b._redrawChildren()
            }), c(a.table().node()).addClass("dtr-" + d.type));
            a.on("column-reorder.dtr", function () {
                b._classLogic();
                b._resizeAuto();
                b._resize()
            });
            a.on("column-sizing.dtr", function () {
                b._resizeAuto();
                b._resize()
            });
            a.on("preXhr.dtr", function () {
                var c = [];
                a.rows().every(function () {
                    this.child.isShown() && c.push(this.id(true))
                });
                a.one("draw.dtr", function () {
                    b._resizeAuto();
                    b._resize();
                    a.rows(c).every(function () {
                        b._detailsDisplay(this,
                            false)
                    })
                })
            });
            a.on("init.dtr", function () {
                b._resizeAuto();
                b._resize();
                c.inArray(false, b.s.current) && a.columns.adjust()
            });
            this._resize()
        }, _columnsVisiblity: function (b) {
            var a = this.s.dt, d = this.s.columns, e, f, g = d.map(function (a, b) {
                return {columnIdx: b, priority: a.priority}
            }).sort(function (a, b) {
                return a.priority !== b.priority ? a.priority - b.priority : a.columnIdx - b.columnIdx
            }), i = c.map(d, function (a) {
                return a.auto && null === a.minWidth ? !1 : !0 === a.auto ? "-" : -1 !== c.inArray(b, a.includeIn)
            }), n = 0;
            e = 0;
            for (f = i.length; e < f; e++)!0 ===
            i[e] && (n += d[e].minWidth);
            e = a.settings()[0].oScroll;
            e = e.sY || e.sX ? e.iBarWidth : 0;
            a = a.table().container().offsetWidth - e - n;
            e = 0;
            for (f = i.length; e < f; e++)d[e].control && (a -= d[e].minWidth);
            n = !1;
            e = 0;
            for (f = g.length; e < f; e++) {
                var h = g[e].columnIdx;
                "-" === i[h] && (!d[h].control && d[h].minWidth) && (n || 0 > a - d[h].minWidth ? (n = !0, i[h] = !1) : i[h] = !0, a -= d[h].minWidth)
            }
            g = !1;
            e = 0;
            for (f = d.length; e < f; e++)if (!d[e].control && !d[e].never && !i[e]) {
                g = !0;
                break
            }
            e = 0;
            for (f = d.length; e < f; e++)d[e].control && (i[e] = g);
            -1 === c.inArray(!0, i) && (i[0] = !0);
            return i
        }, _classLogic: function () {
            var b = this, a = this.c.breakpoints, d = this.s.dt, e = d.columns().eq(0).map(function (a) {
                var b = this.column(a), e = b.header().className, a = d.settings()[0].aoColumns[a].responsivePriority;
                a === q && (b = c(b.header()).data("priority"), a = b !== q ? 1 * b : 1E4);
                return {
                    className: e,
                    includeIn: [],
                    auto: !1,
                    control: !1,
                    never: e.match(/\bnever\b/) ? !0 : !1,
                    priority: a
                }
            }), f = function (a, b) {
                var d = e[a].includeIn;
                -1 === c.inArray(b, d) && d.push(b)
            }, g = function (c, d, h, g) {
                if (h)if ("max-" === h) {
                    g = b._find(d).width;
                    d = 0;
                    for (h =
                             a.length; d < h; d++)a[d].width <= g && f(c, a[d].name)
                } else if ("min-" === h) {
                    g = b._find(d).width;
                    d = 0;
                    for (h = a.length; d < h; d++)a[d].width >= g && f(c, a[d].name)
                } else {
                    if ("not-" === h) {
                        d = 0;
                        for (h = a.length; d < h; d++)-1 === a[d].name.indexOf(g) && f(c, a[d].name)
                    }
                } else e[c].includeIn.push(d)
            };
            e.each(function (b, e) {
                for (var d = b.className.split(" "), f = !1, j = 0, l = d.length; j < l; j++) {
                    var k = c.trim(d[j]);
                    if ("all" === k) {
                        f = !0;
                        b.includeIn = c.map(a, function (a) {
                            return a.name
                        });
                        return
                    }
                    if ("none" === k || b.never) {
                        f = !0;
                        return
                    }
                    if ("control" === k) {
                        f = !0;
                        b.control = !0;
                        return
                    }
                    c.each(a, function (a, b) {
                        var c = b.name.split("-"), d = k.match(RegExp("(min\\-|max\\-|not\\-)?(" + c[0] + ")(\\-[_a-zA-Z0-9])?"));
                        d && (f = !0, d[2] === c[0] && d[3] === "-" + c[1] ? g(e, b.name, d[1], d[2] + d[3]) : d[2] === c[0] && !d[3] && g(e, b.name, d[1], d[2]))
                    })
                }
                f || (b.auto = !0)
            });
            this.s.columns = e
        }, _detailsDisplay: function (b, a) {
            var d = this, e = this.s.dt, f = this.c.details;
            if (f && !1 !== f.type) {
                var g = f.display(b, a, function () {
                    return f.renderer(e, b[0], d._detailsObj(b[0]))
                });
                (!0 === g || !1 === g) && c(e.table().node()).triggerHandler("responsive-display.dt",
                    [e, b, g, a])
            }
        }, _detailsInit: function () {
            var b = this, a = this.s.dt, d = this.c.details;
            "inline" === d.type && (d.target = "td:first-child, th:first-child");
            a.on("draw.dtr", function () {
                b._tabIndexes()
            });
            b._tabIndexes();
            c(a.table().body()).on("keyup.dtr", "td, th", function (a) {
                a.keyCode === 13 && c(this).data("dtr-keyboard") && c(this).click()
            });
            var e = d.target;
            c(a.table().body()).on("click.dtr mousedown.dtr mouseup.dtr", "string" === typeof e ? e : "td, th", function (d) {
                if (c(a.table().node()).hasClass("collapsed") && c.inArray(c(this).closest("tr").get(0),
                        a.rows().nodes().toArray()) !== -1) {
                    if (typeof e === "number") {
                        var g = e < 0 ? a.columns().eq(0).length + e : e;
                        if (a.cell(this).index().column !== g)return
                    }
                    g = a.row(c(this).closest("tr"));
                    d.type === "click" ? b._detailsDisplay(g, false) : d.type === "mousedown" ? c(this).css("outline", "none") : d.type === "mouseup" && c(this).blur().css("outline", "")
                }
            })
        }, _detailsObj: function (b) {
            var a = this, d = this.s.dt;
            return c.map(this.s.columns, function (c, f) {
                if (!c.never && !c.control)return {
                    title: d.settings()[0].aoColumns[f].sTitle, data: d.cell(b, f).render(a.c.orthogonal),
                    hidden: d.column(f).visible() && !a.s.current[f], columnIndex: f, rowIndex: b
                }
            })
        }, _find: function (b) {
            for (var a = this.c.breakpoints, c = 0, e = a.length; c < e; c++)if (a[c].name === b)return a[c]
        }, _redrawChildren: function () {
            var b = this, a = this.s.dt;
            a.rows({page: "current"}).iterator("row", function (c, e) {
                a.row(e);
                b._detailsDisplay(a.row(e), !0)
            })
        }, _resize: function () {
            var b = this, a = this.s.dt, d = c(l).width(), e = this.c.breakpoints, f = e[0].name, g = this.s.columns, i, n = this.s.current.slice();
            for (i = e.length - 1; 0 <= i; i--)if (d <= e[i].width) {
                f =
                    e[i].name;
                break
            }
            var h = this._columnsVisiblity(f);
            this.s.current = h;
            e = !1;
            i = 0;
            for (d = g.length; i < d; i++)if (!1 === h[i] && !g[i].never && !g[i].control) {
                e = !0;
                break
            }
            c(a.table().node()).toggleClass("collapsed", e);
            var j = !1, k = 0;
            a.columns().eq(0).each(function (a, c) {
                !0 === h[c] && k++;
                h[c] !== n[c] && (j = !0, b._setColumnVis(a, h[c]))
            });
            j && (this._redrawChildren(), c(a.table().node()).trigger("responsive-resize.dt", [a, this.s.current]), 0 === a.page.info().recordsDisplay && c("td", a.table().body()).eq(0).attr("colspan", k))
        }, _resizeAuto: function () {
            var b =
                this.s.dt, a = this.s.columns;
            if (this.c.auto && -1 !== c.inArray(!0, c.map(a, function (a) {
                    return a.auto
                }))) {
                c.isEmptyObject(m) || c.each(m, function (a) {
                    a = a.split("-");
                    r(b, 1 * a[0], 1 * a[1])
                });
                b.table().node();
                var d = b.table().node().cloneNode(!1), e = c(b.table().header().cloneNode(!1)).appendTo(d), f = c(b.table().body()).clone(!1, !1).empty().appendTo(d), g = b.columns().header().filter(function (a) {
                    return b.column(a).visible()
                }).to$().clone(!1).css("display", "table-cell").css("min-width", 0);
                c(f).append(c(b.rows({page: "current"}).nodes()).clone(!1)).find("th, td").css("display",
                    "");
                if (f = b.table().footer()) {
                    var f = c(f.cloneNode(!1)).appendTo(d), i = b.columns().footer().filter(function (a) {
                        return b.column(a).visible()
                    }).to$().clone(!1).css("display", "table-cell");
                    c("<tr/>").append(i).appendTo(f)
                }
                c("<tr/>").append(g).appendTo(e);
                "inline" === this.c.details.type && c(d).addClass("dtr-inline collapsed");
                c(d).find("[name]").removeAttr("name");
                d = c("<div/>").css({width: 1, height: 1, overflow: "hidden", clear: "both"}).append(d);
                d.insertBefore(b.table().node());
                g.each(function (c) {
                    c = b.column.index("fromVisible",
                        c);
                    a[c].minWidth = this.offsetWidth || 0
                });
                d.remove()
            }
        }, _setColumnVis: function (b, a) {
            var d = this.s.dt, e = a ? "" : "none";
            c(d.column(b).header()).css("display", e);
            c(d.column(b).footer()).css("display", e);
            d.column(b).nodes().to$().css("display", e);
            c.isEmptyObject(m) || d.cells(null, b).indexes().each(function (a) {
                r(d, a.row, a.column)
            })
        }, _tabIndexes: function () {
            var b = this.s.dt, a = b.cells({page: "current"}).nodes().to$(), d = b.settings()[0], e = this.c.details.target;
            a.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");
            a = "number" === typeof e ? ":eq(" + e + ")" : e;
            "td:first-child, th:first-child" === a && (a = ">td:first-child, >th:first-child");
            c(a, b.rows({page: "current"}).nodes()).attr("tabIndex", d.iTabIndex).data("dtr-keyboard", 1)
        }
    });
    j.breakpoints = [{name: "desktop", width: Infinity}, {name: "tablet-l", width: 1024}, {
        name: "tablet-p",
        width: 768
    }, {name: "mobile-l", width: 480}, {name: "mobile-p", width: 320}];
    j.display = {
        childRow: function (b, a, d) {
            if (a) {
                if (c(b.node()).hasClass("parent"))return b.child(d(), "child").show(), !0
            } else {
                if (b.child.isShown())return b.child(!1),
                    c(b.node()).removeClass("parent"), !1;
                b.child(d(), "child").show();
                c(b.node()).addClass("parent");
                return !0
            }
        }, childRowImmediate: function (b, a, d) {
            if (!a && b.child.isShown() || !b.responsive.hasHidden())return b.child(!1), c(b.node()).removeClass("parent"), !1;
            b.child(d(), "child").show();
            c(b.node()).addClass("parent");
            return !0
        }, modal: function (b) {
            return function (a, d, e) {
                if (d)c("div.dtr-modal-content").empty().append(e()); else {
                    var f = function () {
                        g.remove();
                        c(k).off("keypress.dtr")
                    }, g = c('<div class="dtr-modal"/>').append(c('<div class="dtr-modal-display"/>').append(c('<div class="dtr-modal-content"/>').append(e())).append(c('<div class="dtr-modal-close">&times;</div>').click(function () {
                        f()
                    }))).append(c('<div class="dtr-modal-background"/>').click(function () {
                        f()
                    })).appendTo("body");
                    c(k).on("keyup.dtr", function (a) {
                        27 === a.keyCode && (a.stopPropagation(), f())
                    })
                }
                b && b.header && c("div.dtr-modal-content").prepend("<h2>" + b.header(a) + "</h2>")
            }
        }
    };
    var m = {};
    j.renderer = {
        listHiddenNodes: function () {
            return function (b, a, d) {
                var e = c('<ul data-dtr-index="' + a + '" class="dtr-details"/>'), f = !1;
                c.each(d, function (a, d) {
                    d.hidden && (c('<li data-dtr-index="' + d.columnIndex + '" data-dt-row="' + d.rowIndex + '" data-dt-column="' + d.columnIndex + '"><span class="dtr-title">' + d.title + "</span> </li>").append(c('<span class="dtr-data"/>').append(s(b,
                        d.rowIndex, d.columnIndex))).appendTo(e), f = !0)
                });
                return f ? e : !1
            }
        }, listHidden: function () {
            return function (b, a, d) {
                return (b = c.map(d, function (a) {
                    return a.hidden ? '<li data-dtr-index="' + a.columnIndex + '" data-dt-row="' + a.rowIndex + '" data-dt-column="' + a.columnIndex + '"><span class="dtr-title">' + a.title + '</span> <span class="dtr-data">' + a.data + "</span></li>" : ""
                }).join("")) ? c('<ul data-dtr-index="' + a + '" class="dtr-details"/>').append(b) : !1
            }
        }, tableAll: function (b) {
            b = c.extend({tableClass: ""}, b);
            return function (a,
                             d, e) {
                a = c.map(e, function (a) {
                    return '<tr data-dt-row="' + a.rowIndex + '" data-dt-column="' + a.columnIndex + '"><td>' + a.title + ":</td> <td>" + a.data + "</td></tr>"
                }).join("");
                return c('<table class="' + b.tableClass + ' dtr-details" width="100%"/>').append(a)
            }
        }
    };
    j.defaults = {
        breakpoints: j.breakpoints,
        auto: !0,
        details: {display: j.display.childRow, renderer: j.renderer.listHidden(), target: 0, type: "inline"},
        orthogonal: "display"
    };
    var p = c.fn.dataTable.Api;
    p.register("responsive()", function () {
        return this
    });
    p.register("responsive.index()",
        function (b) {
            b = c(b);
            return {column: b.data("dtr-index"), row: b.parent().data("dtr-index")}
        });
    p.register("responsive.rebuild()", function () {
        return this.iterator("table", function (b) {
            b._responsive && b._responsive._classLogic()
        })
    });
    p.register("responsive.recalc()", function () {
        return this.iterator("table", function (b) {
            b._responsive && (b._responsive._resizeAuto(), b._responsive._resize())
        })
    });
    p.register("responsive.hasHidden()", function () {
        var b = this.context[0];
        return b._responsive ? -1 !== c.inArray(!1, b._responsive.s.current) :
            !1
    });
    p.registerPlural("columns().responsiveHidden()", "column().responsiveHidden()", function () {
        return this.iterator("column", function (b, a) {
            return b._responsive ? b._responsive.s.current[a] : !1
        }, 1)
    });
    j.version = "2.2.1";
    c.fn.dataTable.Responsive = j;
    c.fn.DataTable.Responsive = j;
    c(k).on("preInit.dt.dtr", function (b, a) {
        if ("dt" === b.namespace && (c(a.nTable).hasClass("responsive") || c(a.nTable).hasClass("dt-responsive") || a.oInit.responsive || o.defaults.responsive)) {
            var d = a.oInit.responsive;
            !1 !== d && new j(a, c.isPlainObject(d) ?
                d : {})
        }
    });
    return j
});


/*!
 RowGroup 1.0.2
 ©2017 SpryMedia Ltd - datatables.net/license
 */
(function (c) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (d) {
        return c(d, window, document)
    }) : "object" === typeof exports ? module.exports = function (d, f) {
        d || (d = window);
        if (!f || !f.fn.dataTable)f = require("datatables.net")(d, f).$;
        return c(f, d, d.document)
    } : c(jQuery, window, document)
})(function (c, d, f, i) {
    var e = c.fn.dataTable, g = function (a, b) {
        if (!e.versionCheck || !e.versionCheck("1.10.8"))throw"RowGroup requires DataTables 1.10.8 or newer";
        this.c = c.extend(!0, {}, e.defaults.rowGroup,
            g.defaults, b);
        this.s = {dt: new e.Api(a), dataFn: e.ext.oApi._fnGetObjectDataFn(this.c.dataSrc)};
        this.dom = {};
        var j = this.s.dt.settings()[0], k = j.rowGroup;
        if (k)return k;
        j.rowGroup = this;
        this._constructor()
    };
    c.extend(g.prototype, {
        dataSrc: function (a) {
            if (a === i)return this.c.dataSrc;
            var b = this.s.dt;
            this.c.dataSrc = a;
            this.s.dataFn = e.ext.oApi._fnGetObjectDataFn(this.c.dataSrc);
            c(b.table().node()).triggerHandler("rowgroup-datasrc.dt", [b, a]);
            return this
        }, disable: function () {
            this.c.enable = !1;
            return this
        }, enable: function (a) {
            if (!1 ===
                a)return this.disable();
            this.c.enable = !0;
            return this
        }, _constructor: function () {
            var a = this, b = this.s.dt;
            b.on("draw.dtrg", function () {
                a.c.enable && a._draw()
            });
            b.on("column-visibility.dt.dtrg responsive-resize.dt.dtrg", function () {
                a._adjustColspan()
            });
            b.on("destroy", function () {
                b.off(".dtrg")
            })
        }, _adjustColspan: function () {
            c("tr." + this.c.className, this.s.dt.table().body()).attr("colspan", this._colspan())
        }, _colspan: function () {
            return this.s.dt.columns().visible().reduce(function (a, b) {
                return a + b
            }, 0)
        }, _draw: function () {
            var a =
                this, b = this.s.dt, c = [], e, d;
            b.rows({page: "current"}).every(function () {
                var b = this.data(), b = a.s.dataFn(b);
                if (e === i || b !== e)c.push([]), e = b;
                c[c.length - 1].push(this.index())
            });
            for (var g = 0, f = c.length; g < f; g++) {
                var h = c[g], l = b.row(h[0]), m = this.s.dataFn(l.data());
                this.c.startRender && (d = this.c.startRender.call(this, b.rows(h), m), this._rowWrap(d, this.c.startClassName).insertBefore(l.node()));
                this.c.endRender && (d = this.c.endRender.call(this, b.rows(h), m), this._rowWrap(d, this.c.endClassName).insertAfter(b.row(h[h.length -
                1]).node()))
            }
        }, _rowWrap: function (a, b) {
            return ("object" === typeof a && a.nodeName && "tr" === a.nodeName.toLowerCase() ? c(a) : a instanceof c && a.length && "tr" === a[0].nodeName.toLowerCase() ? a : c("<tr/>").append(c("<td/>").attr("colspan", this._colspan()).append(a))).addClass(this.c.className).addClass(b)
        }
    });
    g.defaults = {
        className: "group",
        dataSrc: 0,
        enable: !0,
        endClassName: "group-end",
        endRender: null,
        startClassName: "group-start",
        startRender: function (a, b) {
            return b
        }
    };
    g.version = "1.0.2";
    c.fn.dataTable.RowGroup = g;
    c.fn.DataTable.RowGroup =
        g;
    e.Api.register("rowGroup()", function () {
        return this
    });
    e.Api.register("rowGroup().disable()", function () {
        return this.iterator("table", function (a) {
            a.rowGroup && a.rowGroup.enable(!1)
        })
    });
    e.Api.register("rowGroup().enable()", function (a) {
        return this.iterator("table", function (b) {
            b.rowGroup && b.rowGroup.enable(a === i ? !0 : a)
        })
    });
    e.Api.register("rowGroup().dataSrc()", function (a) {
        return a === i ? this.context[0].rowGroup.dataSrc() : this.iterator("table", function (b) {
            b.rowGroup && b.rowGroup.dataSrc(a)
        })
    });
    c(f).on("preInit.dt.dtrg",
        function (a, b) {
            if ("dt" === a.namespace) {
                var d = b.oInit.rowGroup, f = e.defaults.rowGroup;
                if (d || f)f = c.extend({}, f, d), !1 !== d && new g(b, f)
            }
        });
    return g
});


/*!
 RowReorder 1.2.3
 2015-2017 SpryMedia Ltd - datatables.net/license
 */
(function (d) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (f) {
        return d(f, window, document)
    }) : "object" === typeof exports ? module.exports = function (f, g) {
        f || (f = window);
        if (!g || !g.fn.dataTable)g = require("datatables.net")(f, g).$;
        return d(g, f, f.document)
    } : d(jQuery, window, document)
})(function (d, f, g, m) {
    var h = d.fn.dataTable, k = function (c, b) {
        if (!h.versionCheck || !h.versionCheck("1.10.8"))throw"DataTables RowReorder requires DataTables 1.10.8 or newer";
        this.c = d.extend(!0, {}, h.defaults.rowReorder,
            k.defaults, b);
        this.s = {
            bodyTop: null,
            dt: new h.Api(c),
            getDataFn: h.ext.oApi._fnGetObjectDataFn(this.c.dataSrc),
            middles: null,
            scroll: {},
            scrollInterval: null,
            setDataFn: h.ext.oApi._fnSetObjectDataFn(this.c.dataSrc),
            start: {top: 0, left: 0, offsetTop: 0, offsetLeft: 0, nodes: []},
            windowHeight: 0,
            documentOuterHeight: 0,
            domCloneOuterHeight: 0
        };
        this.dom = {clone: null, dtScroll: d("div.dataTables_scrollBody", this.s.dt.table().container())};
        var a = this.s.dt.settings()[0], e = a.rowreorder;
        if (e)return e;
        a.rowreorder = this;
        this._constructor()
    };
    d.extend(k.prototype, {
        _constructor: function () {
            var c = this, b = this.s.dt, a = d(b.table().node());
            "static" === a.css("position") && a.css("position", "relative");
            d(b.table().container()).on("mousedown.rowReorder touchstart.rowReorder", this.c.selector, function (a) {
                if (c.c.enable) {
                    var i = d(this).closest("tr"), j = b.row(i);
                    if (j.any())return c._emitEvent("pre-row-reorder", {
                        node: j.node(),
                        index: j.index()
                    }), c._mouseDown(a, i), !1
                }
            });
            b.on("destroy.rowReorder", function () {
                d(b.table().container()).off(".rowReorder");
                b.off(".rowReorder")
            })
        },
        _cachePositions: function () {
            var c = this.s.dt, b = d(c.table().node()).find("thead").outerHeight(), a = d.unique(c.rows({page: "current"}).nodes().toArray()), e = d.map(a, function (a) {
                return d(a).position().top - b
            }), a = d.map(e, function (a, b) {
                return e.length < b - 1 ? (a + e[b + 1]) / 2 : (a + a + d(c.row(":last-child").node()).outerHeight()) / 2
            });
            this.s.middles = a;
            this.s.bodyTop = d(c.table().body()).offset().top;
            this.s.windowHeight = d(f).height();
            this.s.documentOuterHeight = d(g).outerHeight()
        }, _clone: function (c) {
            var b = d(this.s.dt.table().node().cloneNode(!1)).addClass("dt-rowReorder-float").append("<tbody/>").append(c.clone(!1)),
                a = c.outerWidth(), e = c.outerHeight(), i = c.children().map(function () {
                    return d(this).width()
                });
            b.width(a).height(e).find("tr").children().each(function (a) {
                this.style.width = i[a] + "px"
            });
            b.appendTo("body");
            this.dom.clone = b;
            this.s.domCloneOuterHeight = b.outerHeight()
        }, _clonePosition: function (c) {
            var b = this.s.start, a = this._eventToPage(c, "Y") - b.top, c = this._eventToPage(c, "X") - b.left, e = this.c.snapX, a = a + b.offsetTop, b = !0 === e ? b.offsetLeft : "number" === typeof e ? b.offsetLeft + e : c + b.offsetLeft;
            0 > a ? a = 0 : a + this.s.domCloneOuterHeight >
            this.s.documentOuterHeight && (a = this.s.documentOuterHeight - this.s.domCloneOuterHeight);
            this.dom.clone.css({top: a, left: b})
        }, _emitEvent: function (c, b) {
            this.s.dt.iterator("table", function (a) {
                d(a.nTable).triggerHandler(c + ".dt", b)
            })
        }, _eventToPage: function (c, b) {
            return -1 !== c.type.indexOf("touch") ? c.originalEvent.touches[0]["page" + b] : c["page" + b]
        }, _mouseDown: function (c, b) {
            var a = this, e = this.s.dt, i = this.s.start, j = b.offset();
            i.top = this._eventToPage(c, "Y");
            i.left = this._eventToPage(c, "X");
            i.offsetTop = j.top;
            i.offsetLeft =
                j.left;
            i.nodes = d.unique(e.rows({page: "current"}).nodes().toArray());
            this._cachePositions();
            this._clone(b);
            this._clonePosition(c);
            this.dom.target = b;
            b.addClass("dt-rowReorder-moving");
            d(g).on("mouseup.rowReorder touchend.rowReorder", function (b) {
                a._mouseUp(b)
            }).on("mousemove.rowReorder touchmove.rowReorder", function (b) {
                a._mouseMove(b)
            });
            d(f).width() === d(g).width() && d(g.body).addClass("dt-rowReorder-noOverflow");
            e = this.dom.dtScroll;
            this.s.scroll = {
                windowHeight: d(f).height(),
                windowWidth: d(f).width(),
                dtTop: e.length ?
                    e.offset().top : null,
                dtLeft: e.length ? e.offset().left : null,
                dtHeight: e.length ? e.outerHeight() : null,
                dtWidth: e.length ? e.outerWidth() : null
            }
        }, _mouseMove: function (c) {
            this._clonePosition(c);
            for (var b = this._eventToPage(c, "Y") - this.s.bodyTop, a = this.s.middles, e = null, i = this.s.dt, j = i.table().body(), g = 0, f = a.length; g < f; g++)if (b < a[g]) {
                e = g;
                break
            }
            null === e && (e = a.length);
            if (null === this.s.lastInsert || this.s.lastInsert !== e)0 === e ? this.dom.target.prependTo(j) : (b = d.unique(i.rows({page: "current"}).nodes().toArray()), e > this.s.lastInsert ?
                this.dom.target.insertAfter(b[e - 1]) : this.dom.target.insertBefore(b[e])), this._cachePositions(), this.s.lastInsert = e;
            this._shiftScroll(c)
        }, _mouseUp: function () {
            var c = this, b = this.s.dt, a, e, i = this.c.dataSrc;
            this.dom.clone.remove();
            this.dom.clone = null;
            this.dom.target.removeClass("dt-rowReorder-moving");
            d(g).off(".rowReorder");
            d(g.body).removeClass("dt-rowReorder-noOverflow");
            clearInterval(this.s.scrollInterval);
            this.s.scrollInterval = null;
            var j = this.s.start.nodes, f = d.unique(b.rows({page: "current"}).nodes().toArray()),
                k = {}, h = [], l = [], n = this.s.getDataFn, m = this.s.setDataFn;
            a = 0;
            for (e = j.length; a < e; a++)if (j[a] !== f[a]) {
                var o = b.row(f[a]).id(), s = b.row(f[a]).data(), p = b.row(j[a]).data();
                o && (k[o] = n(p));
                h.push({node: f[a], oldData: n(s), newData: n(p), newPosition: a, oldPosition: d.inArray(f[a], j)});
                l.push(f[a])
            }
            var q = [h, {dataSrc: i, nodes: l, values: k, triggerRow: b.row(this.dom.target)}];
            this._emitEvent("row-reorder", q);
            var r = function () {
                if (c.c.update) {
                    a = 0;
                    for (e = h.length; a < e; a++) {
                        var d = b.row(h[a].node).data();
                        m(d, h[a].newData);
                        b.columns().every(function () {
                            this.dataSrc() ===
                            i && b.cell(h[a].node, this.index()).invalidate("data")
                        })
                    }
                    c._emitEvent("row-reordered", q);
                    b.draw(!1)
                }
            };
            this.c.editor ? (this.c.enable = !1, this.c.editor.edit(l, !1, d.extend({submit: "changed"}, this.c.formOptions)).multiSet(i, k).one("submitUnsuccessful.rowReorder", function () {
                b.draw(!1)
            }).one("submitSuccess.rowReorder", function () {
                r()
            }).one("submitComplete", function () {
                c.c.enable = !0;
                c.c.editor.off(".rowReorder")
            }).submit()) : r()
        }, _shiftScroll: function (c) {
            var b = this, a = this.s.scroll, e = !1, d = c.pageY - g.body.scrollTop,
                f, h;
            65 > d ? f = -5 : d > a.windowHeight - 65 && (f = 5);
            null !== a.dtTop && c.pageY < a.dtTop + 65 ? h = -5 : null !== a.dtTop && c.pageY > a.dtTop + a.dtHeight - 65 && (h = 5);
            f || h ? (a.windowVert = f, a.dtVert = h, e = !0) : this.s.scrollInterval && (clearInterval(this.s.scrollInterval), this.s.scrollInterval = null);
            !this.s.scrollInterval && e && (this.s.scrollInterval = setInterval(function () {
                if (a.windowVert)g.body.scrollTop = g.body.scrollTop + a.windowVert;
                if (a.dtVert) {
                    var c = b.dom.dtScroll[0];
                    if (a.dtVert)c.scrollTop = c.scrollTop + a.dtVert
                }
            }, 20))
        }
    });
    k.defaults = {
        dataSrc: 0,
        editor: null, enable: !0, formOptions: {}, selector: "td:first-child", snapX: !1, update: !0
    };
    var l = d.fn.dataTable.Api;
    l.register("rowReorder()", function () {
        return this
    });
    l.register("rowReorder.enable()", function (c) {
        c === m && (c = !0);
        return this.iterator("table", function (b) {
            b.rowreorder && (b.rowreorder.c.enable = c)
        })
    });
    l.register("rowReorder.disable()", function () {
        return this.iterator("table", function (c) {
            c.rowreorder && (c.rowreorder.c.enable = !1)
        })
    });
    k.version = "1.2.3";
    d.fn.dataTable.RowReorder = k;
    d.fn.DataTable.RowReorder =
        k;
    d(g).on("init.dt.dtr", function (c, b) {
        if ("dt" === c.namespace) {
            var a = b.oInit.rowReorder, e = h.defaults.rowReorder;
            if (a || e)e = d.extend({}, a, e), !1 !== a && new k(b, e)
        }
    });
    return k
});


/*!
 Scroller 1.4.4
 ©2011-2018 SpryMedia Ltd - datatables.net/license
 */
(function (e) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (g) {
        return e(g, window, document)
    }) : "object" === typeof exports ? module.exports = function (g, j) {
        g || (g = window);
        if (!j || !j.fn.dataTable)j = require("datatables.net")(g, j).$;
        return e(j, g, g.document)
    } : e(jQuery, window, document)
})(function (e, g, j, l) {
    var m = e.fn.dataTable, h = function (a, b) {
        this instanceof h ? (b === l && (b = {}), this.s = {
            dt: e.fn.dataTable.Api(a).settings()[0],
            tableTop: 0,
            tableBottom: 0,
            redrawTop: 0,
            redrawBottom: 0,
            autoHeight: !0,
            viewportRows: 0,
            stateTO: null,
            drawTO: null,
            heights: {jump: null, page: null, virtual: null, scroll: null, row: null, viewport: null},
            topRowFloat: 0,
            scrollDrawDiff: null,
            loaderVisible: !1,
            forceReposition: !1
        }, this.s = e.extend(this.s, h.oDefaults, b), this.s.heights.row = this.s.rowHeight, this.dom = {
            force: j.createElement("div"),
            scroller: null,
            table: null,
            loader: null
        }, this.s.dt.oScroller || (this.s.dt.oScroller = this, this._fnConstruct())) : alert("Scroller warning: Scroller must be initialised with the 'new' keyword.")
    };
    e.extend(h.prototype,
        {
            fnRowToPixels: function (a, b, c) {
                a = c ? this._domain("virtualToPhysical", a * this.s.heights.row) : this.s.baseScrollTop + (a - this.s.baseRowTop) * this.s.heights.row;
                return b || b === l ? parseInt(a, 10) : a
            }, fnPixelsToRow: function (a, b, c) {
            var d = a - this.s.baseScrollTop, a = c ? this._domain("physicalToVirtual", a) / this.s.heights.row : d / this.s.heights.row + this.s.baseRowTop;
            return b || b === l ? parseInt(a, 10) : a
        }, fnScrollToRow: function (a, b) {
            var c = this, d = !1, f = this.fnRowToPixels(a), i = a - (this.s.displayBuffer - 1) / 2 * this.s.viewportRows;
            0 > i &&
            (i = 0);
            if ((f > this.s.redrawBottom || f < this.s.redrawTop) && this.s.dt._iDisplayStart !== i)d = !0, f = this.fnRowToPixels(a, !1, !0), this.s.redrawTop < f && f < this.s.redrawBottom && (this.s.forceReposition = !0, b = !1);
            "undefined" == typeof b || b ? (this.s.ani = d, e(this.dom.scroller).animate({scrollTop: f}, function () {
                setTimeout(function () {
                    c.s.ani = !1
                }, 25)
            })) : e(this.dom.scroller).scrollTop(f)
        }, fnMeasure: function (a) {
            this.s.autoHeight && this._fnCalcRowHeight();
            var b = this.s.heights;
            b.row && (b.viewport = e.contains(j, this.dom.scroller) ? e(this.dom.scroller).height() :
                this._parseHeight(e(this.dom.scroller).css("height")), b.viewport || (b.viewport = this._parseHeight(e(this.dom.scroller).css("max-height"))), this.s.viewportRows = parseInt(b.viewport / b.row, 10) + 1, this.s.dt._iDisplayLength = this.s.viewportRows * this.s.displayBuffer);
            (a === l || a) && this.s.dt.oInstance.fnDraw(!1)
        }, fnPageInfo: function () {
            var a = this.dom.scroller.scrollTop, b = this.s.dt.fnRecordsDisplay(), c = Math.ceil(this.fnPixelsToRow(a + this.s.heights.viewport, !1, this.s.ani));
            return {
                start: Math.floor(this.fnPixelsToRow(a,
                    !1, this.s.ani)), end: b < c ? b - 1 : c - 1
            }
        }, _fnConstruct: function () {
            var a = this;
            if (this.s.dt.oFeatures.bPaginate) {
                this.dom.force.style.position = "relative";
                this.dom.force.style.top = "0px";
                this.dom.force.style.left = "0px";
                this.dom.force.style.width = "1px";
                this.dom.scroller = e("div." + this.s.dt.oClasses.sScrollBody, this.s.dt.nTableWrapper)[0];
                this.dom.scroller.appendChild(this.dom.force);
                this.dom.scroller.style.position = "relative";
                this.dom.table = e(">table", this.dom.scroller)[0];
                this.dom.table.style.position = "absolute";
                this.dom.table.style.top = "0px";
                this.dom.table.style.left = "0px";
                e(this.s.dt.nTableWrapper).addClass("DTS");
                this.s.loadingIndicator && (this.dom.loader = e('<div class="dataTables_processing DTS_Loading">' + this.s.dt.oLanguage.sLoadingRecords + "</div>").css("display", "none"), e(this.dom.scroller.parentNode).css("position", "relative").append(this.dom.loader));
                this.s.heights.row && "auto" != this.s.heights.row && (this.s.autoHeight = !1);
                this.fnMeasure(!1);
                this.s.ingnoreScroll = !0;
                this.s.stateSaveThrottle = this.s.dt.oApi._fnThrottle(function () {
                        a.s.dt.oApi._fnSaveState(a.s.dt)
                    },
                    500);
                e(this.dom.scroller).on("scroll.DTS", function () {
                    a._fnScroll.call(a)
                });
                e(this.dom.scroller).on("touchstart.DTS", function () {
                    a._fnScroll.call(a)
                });
                this.s.dt.aoDrawCallback.push({
                    fn: function () {
                        a.s.dt.bInitialised && a._fnDrawCallback.call(a)
                    }, sName: "Scroller"
                });
                e(g).on("resize.DTS", function () {
                    a.fnMeasure(false);
                    a._fnInfo()
                });
                var b = !0;
                this.s.dt.oApi._fnCallbackReg(this.s.dt, "aoStateSaveParams", function (c, d) {
                    if (b && a.s.dt.oLoadedState) {
                        d.iScroller = a.s.dt.oLoadedState.iScroller;
                        d.iScrollerTopRow = a.s.dt.oLoadedState.iScrollerTopRow;
                        b = false
                    } else {
                        d.iScroller = a.dom.scroller.scrollTop;
                        d.iScrollerTopRow = a.s.topRowFloat
                    }
                }, "Scroller_State");
                this.s.dt.oLoadedState && (this.s.topRowFloat = this.s.dt.oLoadedState.iScrollerTopRow || 0);
                e(this.s.dt.nTable).one("init.dt", function () {
                    a.fnMeasure()
                });
                this.s.dt.aoDestroyCallback.push({
                    sName: "Scroller", fn: function () {
                        e(g).off("resize.DTS");
                        e(a.dom.scroller).off("touchstart.DTS scroll.DTS");
                        e(a.s.dt.nTableWrapper).removeClass("DTS");
                        e("div.DTS_Loading", a.dom.scroller.parentNode).remove();
                        e(a.s.dt.nTable).off("init.dt");
                        a.dom.table.style.position = "";
                        a.dom.table.style.top = "";
                        a.dom.table.style.left = ""
                    }
                })
            } else this.s.dt.oApi._fnLog(this.s.dt, 0, "Pagination must be enabled for Scroller")
        }, _fnScroll: function () {
            var a = this, b = this.s.heights, c = this.dom.scroller.scrollTop, d;
            if (!this.s.skip && !this.s.ingnoreScroll)if (this.s.dt.bFiltered || this.s.dt.bSorted)this.s.lastScrollTop = 0; else {
                this._fnInfo();
                clearTimeout(this.s.stateTO);
                this.s.stateTO = setTimeout(function () {
                    a.s.dt.oApi._fnSaveState(a.s.dt)
                }, 250);
                if (this.s.forceReposition ||
                    c < this.s.redrawTop || c > this.s.redrawBottom) {
                    var f = Math.ceil((this.s.displayBuffer - 1) / 2 * this.s.viewportRows);
                    Math.abs(c - this.s.lastScrollTop) > b.viewport || this.s.ani || this.s.forceReposition ? (d = parseInt(this._domain("physicalToVirtual", c) / b.row, 10) - f, this.s.topRowFloat = this._domain("physicalToVirtual", c) / b.row) : (d = this.fnPixelsToRow(c) - f, this.s.topRowFloat = this.fnPixelsToRow(c, !1));
                    this.s.forceReposition = !1;
                    0 >= d ? d = 0 : d + this.s.dt._iDisplayLength > this.s.dt.fnRecordsDisplay() ? (d = this.s.dt.fnRecordsDisplay() -
                        this.s.dt._iDisplayLength, 0 > d && (d = 0)) : 0 !== d % 2 && d++;
                    if (d != this.s.dt._iDisplayStart && (this.s.tableTop = e(this.s.dt.nTable).offset().top, this.s.tableBottom = e(this.s.dt.nTable).height() + this.s.tableTop, b = function () {
                            if (a.s.scrollDrawReq === null)a.s.scrollDrawReq = c;
                            a.s.dt._iDisplayStart = d;
                            a.s.dt.oApi._fnDraw(a.s.dt)
                        }, this.s.dt.oFeatures.bServerSide ? (clearTimeout(this.s.drawTO), this.s.drawTO = setTimeout(b, this.s.serverWait)) : b(), this.dom.loader && !this.s.loaderVisible))this.dom.loader.css("display", "block"),
                        this.s.loaderVisible = !0
                } else this.s.topRowFloat = this._domain("physicalToVirtual", c) / b.row;
                this.s.lastScrollTop = c;
                this.s.stateSaveThrottle()
            }
        }, _domain: function (a, b) {
            var c = this.s.heights, d;
            if (c.virtual === c.scroll)return b;
            var e = (c.scroll - c.viewport) / 2, i = (c.virtual - c.viewport) / 2;
            d = i / (e * e);
            if ("virtualToPhysical" === a) {
                if (b < i)return Math.pow(b / d, 0.5);
                b = 2 * i - b;
                return 0 > b ? c.scroll : 2 * e - Math.pow(b / d, 0.5)
            }
            if ("physicalToVirtual" === a) {
                if (b < e)return b * b * d;
                b = 2 * e - b;
                return 0 > b ? c.virtual : 2 * i - b * b * d
            }
        }, _parseHeight: function (a) {
            var b,
                c = /^([+-]?(?:\d+(?:\.\d+)?|\.\d+))(px|em|rem|vh)$/.exec(a);
            if (null === c)return 0;
            a = parseFloat(c[1]);
            c = c[2];
            "px" === c ? b = a : "vh" === c ? b = a / 100 * e(g).height() : "rem" === c ? b = a * parseFloat(e(":root").css("font-size")) : "em" === c && (b = a * parseFloat(e("body").css("font-size")));
            return b ? b : 0
        }, _fnDrawCallback: function () {
            var a = this, b = this.s.heights, c = this.dom.scroller.scrollTop, d = e(this.s.dt.nTable).height(), f = this.s.dt._iDisplayStart, i = this.s.dt._iDisplayLength, h = this.s.dt.fnRecordsDisplay();
            this.s.skip = !0;
            this._fnScrollForce();
            c = 0 === f ? this.s.topRowFloat * b.row : f + i >= h ? b.scroll - (h - this.s.topRowFloat) * b.row : this._domain("virtualToPhysical", this.s.topRowFloat * b.row);
            this.dom.scroller.scrollTop = c;
            this.s.baseScrollTop = c;
            this.s.baseRowTop = this.s.topRowFloat;
            var g = c - (this.s.topRowFloat - f) * b.row;
            0 === f ? g = 0 : f + i >= h && (g = b.scroll - d);
            this.dom.table.style.top = g + "px";
            this.s.tableTop = g;
            this.s.tableBottom = d + this.s.tableTop;
            d = (c - this.s.tableTop) * this.s.boundaryScale;
            this.s.redrawTop = c - d;
            this.s.redrawBottom = c + d > b.scroll - b.viewport - b.row ? b.scroll -
            b.viewport - b.row : c + d;
            this.s.skip = !1;
            this.s.dt.oFeatures.bStateSave && null !== this.s.dt.oLoadedState && "undefined" != typeof this.s.dt.oLoadedState.iScroller ? ((c = (this.s.dt.sAjaxSource || a.s.dt.ajax) && !this.s.dt.oFeatures.bServerSide ? !0 : !1) && 2 == this.s.dt.iDraw || !c && 1 == this.s.dt.iDraw) && setTimeout(function () {
                e(a.dom.scroller).scrollTop(a.s.dt.oLoadedState.iScroller);
                a.s.redrawTop = a.s.dt.oLoadedState.iScroller - b.viewport / 2;
                setTimeout(function () {
                    a.s.ingnoreScroll = !1
                }, 0)
            }, 0) : a.s.ingnoreScroll = !1;
            this.s.dt.oFeatures.bInfo &&
            setTimeout(function () {
                a._fnInfo.call(a)
            }, 0);
            this.dom.loader && this.s.loaderVisible && (this.dom.loader.css("display", "none"), this.s.loaderVisible = !1)
        }, _fnScrollForce: function () {
            var a = this.s.heights;
            a.virtual = a.row * this.s.dt.fnRecordsDisplay();
            a.scroll = a.virtual;
            1E6 < a.scroll && (a.scroll = 1E6);
            this.dom.force.style.height = a.scroll > this.s.heights.row ? a.scroll + "px" : this.s.heights.row + "px"
        }, _fnCalcRowHeight: function () {
            var a = this.s.dt, b = a.nTable, c = b.cloneNode(!1), d = e("<tbody/>").appendTo(c), f = e('<div class="' +
                a.oClasses.sWrapper + ' DTS"><div class="' + a.oClasses.sScrollWrapper + '"><div class="' + a.oClasses.sScrollBody + '"></div></div></div>');
            for (e("tbody tr:lt(4)", b).clone().appendTo(d); 3 > e("tr", d).length;)d.append("<tr><td>&nbsp;</td></tr>");
            e("div." + a.oClasses.sScrollBody, f).append(c);
            a = this.s.dt.nHolding || b.parentNode;
            e(a).is(":visible") || (a = "body");
            f.appendTo(a);
            this.s.heights.row = e("tr", d).eq(1).outerHeight();
            f.remove()
        }, _fnInfo: function () {
            if (this.s.dt.oFeatures.bInfo) {
                var a = this.s.dt, b = a.oLanguage, c =
                    this.dom.scroller.scrollTop, d = Math.floor(this.fnPixelsToRow(c, !1, this.s.ani) + 1), f = a.fnRecordsTotal(), i = a.fnRecordsDisplay(), c = Math.ceil(this.fnPixelsToRow(c + this.s.heights.viewport, !1, this.s.ani)), c = i < c ? i : c, g = a.fnFormatNumber(d), h = a.fnFormatNumber(c), j = a.fnFormatNumber(f), k = a.fnFormatNumber(i), g = 0 === a.fnRecordsDisplay() && a.fnRecordsDisplay() == a.fnRecordsTotal() ? b.sInfoEmpty + b.sInfoPostFix : 0 === a.fnRecordsDisplay() ? b.sInfoEmpty + " " + b.sInfoFiltered.replace("_MAX_", j) + b.sInfoPostFix : a.fnRecordsDisplay() ==
                a.fnRecordsTotal() ? b.sInfo.replace("_START_", g).replace("_END_", h).replace("_MAX_", j).replace("_TOTAL_", k) + b.sInfoPostFix : b.sInfo.replace("_START_", g).replace("_END_", h).replace("_MAX_", j).replace("_TOTAL_", k) + " " + b.sInfoFiltered.replace("_MAX_", a.fnFormatNumber(a.fnRecordsTotal())) + b.sInfoPostFix;
                (b = b.fnInfoCallback) && (g = b.call(a.oInstance, a, d, c, f, i, g));
                d = a.aanFeatures.i;
                if ("undefined" != typeof d) {
                    f = 0;
                    for (i = d.length; f < i; f++)e(d[f]).html(g)
                }
                e(a.nTable).triggerHandler("info.dt")
            }
        }
        });
    h.defaults = {
        trace: !1,
        rowHeight: "auto", serverWait: 200, displayBuffer: 9, boundaryScale: 0.5, loadingIndicator: !1
    };
    h.oDefaults = h.defaults;
    h.version = "1.4.4";
    "function" == typeof e.fn.dataTable && "function" == typeof e.fn.dataTableExt.fnVersionCheck && e.fn.dataTableExt.fnVersionCheck("1.10.0") ? e.fn.dataTableExt.aoFeatures.push({
        fnInit: function (a) {
            var b = a.oInit;
            new h(a, b.scroller || b.oScroller || {})
        }, cFeature: "S", sFeature: "Scroller"
    }) : alert("Warning: Scroller requires DataTables 1.10.0 or greater - www.datatables.net/download");
    e(j).on("preInit.dt.dtscroller",
        function (a, b) {
            if ("dt" === a.namespace) {
                var c = b.oInit.scroller, d = m.defaults.scroller;
                if (c || d)d = e.extend({}, c, d), !1 !== c && new h(b, d)
            }
        });
    e.fn.dataTable.Scroller = h;
    e.fn.DataTable.Scroller = h;
    var k = e.fn.dataTable.Api;
    k.register("scroller()", function () {
        return this
    });
    k.register("scroller().rowToPixels()", function (a, b, c) {
        var d = this.context;
        if (d.length && d[0].oScroller)return d[0].oScroller.fnRowToPixels(a, b, c)
    });
    k.register("scroller().pixelsToRow()", function (a, b, c) {
        var d = this.context;
        if (d.length && d[0].oScroller)return d[0].oScroller.fnPixelsToRow(a,
            b, c)
    });
    k.register("scroller().scrollToRow()", function (a, b) {
        this.iterator("table", function (c) {
            c.oScroller && c.oScroller.fnScrollToRow(a, b)
        });
        return this
    });
    k.register("row().scrollTo()", function (a) {
        var b = this;
        this.iterator("row", function (c, d) {
            if (c.oScroller) {
                var e = b.rows({order: "applied", search: "applied"}).indexes().indexOf(d);
                c.oScroller.fnScrollToRow(e, a)
            }
        });
        return this
    });
    k.register("scroller.measure()", function (a) {
        this.iterator("table", function (b) {
            b.oScroller && b.oScroller.fnMeasure(a)
        });
        return this
    });
    k.register("scroller.page()", function () {
        var a = this.context;
        if (a.length && a[0].oScroller)return a[0].oScroller.fnPageInfo()
    });
    return h
});


/*!
 Select for DataTables 1.2.5
 2015-2018 SpryMedia Ltd - datatables.net/license/mit
 */
(function (e) {
    "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (j) {
        return e(j, window, document)
    }) : "object" === typeof exports ? module.exports = function (j, m) {
        j || (j = window);
        if (!m || !m.fn.dataTable)m = require("datatables.net")(j, m).$;
        return e(m, j, j.document)
    } : e(jQuery, window, document)
})(function (e, j, m, h) {
    function v(a, c, b) {
        var d;
        d = function (b, c) {
            if (b > c)var d = c, c = b, b = d;
            var f = !1;
            return a.columns(":visible").indexes().filter(function (a) {
                a === b && (f = !0);
                return a === c ? (f = !1, !0) : f
            })
        };
        var f =
            function (b, c) {
                var d = a.rows({search: "applied"}).indexes();
                if (d.indexOf(b) > d.indexOf(c))var f = c, c = b, b = f;
                var e = !1;
                return d.filter(function (a) {
                    a === b && (e = !0);
                    return a === c ? (e = !1, !0) : e
                })
            };
        !a.cells({selected: !0}).any() && !b ? (d = d(0, c.column), b = f(0, c.row)) : (d = d(b.column, c.column), b = f(b.row, c.row));
        b = a.cells(b, d).flatten();
        a.cells(c, {selected: !0}).any() ? a.cells(b).deselect() : a.cells(b).select()
    }

    function r(a) {
        var c = a.settings()[0]._select.selector;
        e(a.table().container()).off("mousedown.dtSelect", c).off("mouseup.dtSelect",
            c).off("click.dtSelect", c);
        e("body").off("click.dtSelect" + a.table().node().id)
    }

    function x(a) {
        var c = e(a.table().container()), b = a.settings()[0], d = b._select.selector;
        c.on("mousedown.dtSelect", d, function (b) {
            if (b.shiftKey || b.metaKey || b.ctrlKey)c.css("-moz-user-select", "none").one("selectstart.dtSelect", d, function () {
                return !1
            })
        }).on("mouseup.dtSelect", d, function () {
            c.css("-moz-user-select", "")
        }).on("click.dtSelect", d, function (b) {
            var c = a.select.items();
            if (j.getSelection) {
                var d = j.getSelection();
                if ((!d.anchorNode ||
                    e(d.anchorNode).closest("table")[0] === a.table().node()) && "" !== e.trim(d.toString()))return
            }
            d = a.settings()[0];
            if (e(b.target).closest("div.dataTables_wrapper")[0] == a.table().container()) {
                var k = a.cell(e(b.target).closest("td, th"));
                if (k.any()) {
                    var g = e.Event("user-select.dt");
                    i(a, g, [c, k, b]);
                    g.isDefaultPrevented() || (g = k.index(), "row" === c ? (c = g.row, s(b, a, d, "row", c)) : "column" === c ? (c = k.index().column, s(b, a, d, "column", c)) : "cell" === c && (c = k.index(), s(b, a, d, "cell", c)), d._select_lastCell = g)
                }
            }
        });
        e("body").on("click.dtSelect" +
            a.table().node().id, function (c) {
            b._select.blurable && !e(c.target).parents().filter(a.table().container()).length && (0 !== e(c.target).parents("html").length && !e(c.target).parents("div.DTE").length) && p(b, !0)
        })
    }

    function i(a, c, b, d) {
        if (!d || a.flatten().length)"string" === typeof c && (c += ".dt"), b.unshift(a), e(a.table().node()).trigger(c, b)
    }

    function y(a) {
        var c = a.settings()[0];
        if (c._select.info && c.aanFeatures.i && "api" !== a.select.style()) {
            var b = a.rows({selected: !0}).flatten().length, d = a.columns({selected: !0}).flatten().length,
                f = a.cells({selected: !0}).flatten().length, l = function (b, c, d) {
                    b.append(e('<span class="select-item"/>').append(a.i18n("select." + c + "s", {
                        _: "%d " + c + "s selected",
                        "0": "",
                        1: "1 " + c + " selected"
                    }, d)))
                };
            e.each(c.aanFeatures.i, function (c, a) {
                var a = e(a), g = e('<span class="select-info"/>');
                l(g, "row", b);
                l(g, "column", d);
                l(g, "cell", f);
                var h = a.children("span.select-info");
                h.length && h.remove();
                "" !== g.text() && a.append(g)
            })
        }
    }

    function z(a, c, b, d) {
        var f = a[c + "s"]({search: "applied"}).indexes(), d = e.inArray(d, f), l = e.inArray(b,
            f);
        if (!a[c + "s"]({selected: !0}).any() && -1 === d)f.splice(e.inArray(b, f) + 1, f.length); else {
            if (d > l)var g = l, l = d, d = g;
            f.splice(l + 1, f.length);
            f.splice(0, d)
        }
        a[c](b, {selected: !0}).any() ? (f.splice(e.inArray(b, f), 1), a[c + "s"](f).deselect()) : a[c + "s"](f).select()
    }

    function p(a, c) {
        if (c || "single" === a._select.style) {
            var b = new g.Api(a);
            b.rows({selected: !0}).deselect();
            b.columns({selected: !0}).deselect();
            b.cells({selected: !0}).deselect()
        }
    }

    function s(a, c, b, d, f) {
        var e = c.select.style(), g = c[d](f, {selected: !0}).any();
        "os" ===
        e ? a.ctrlKey || a.metaKey ? c[d](f).select(!g) : a.shiftKey ? "cell" === d ? v(c, f, b._select_lastCell || null) : z(c, d, f, b._select_lastCell ? b._select_lastCell[d] : null) : (a = c[d + "s"]({selected: !0}), g && 1 === a.flatten().length ? c[d](f).deselect() : (a.deselect(), c[d](f).select())) : "multi+shift" == e ? a.shiftKey ? "cell" === d ? v(c, f, b._select_lastCell || null) : z(c, d, f, b._select_lastCell ? b._select_lastCell[d] : null) : c[d](f).select(!g) : c[d](f).select(!g)
    }

    function q(a, c) {
        return function (b) {
            return b.i18n("buttons." + a, c)
        }
    }

    function t(a) {
        a =
            a._eventNamespace;
        return "draw.dt.DT" + a + " select.dt.DT" + a + " deselect.dt.DT" + a
    }

    var g = e.fn.dataTable;
    g.select = {};
    g.select.version = "1.2.5";
    g.select.init = function (a) {
        var c = a.settings()[0], b = c.oInit.select, d = g.defaults.select, b = b === h ? d : b, d = "row", f = "api", l = !1, w = !0, k = "td, th", j = "selected", i = !1;
        c._select = {};
        if (!0 === b)f = "os", i = !0; else if ("string" === typeof b)f = b, i = !0; else if (e.isPlainObject(b) && (b.blurable !== h && (l = b.blurable), b.info !== h && (w = b.info), b.items !== h && (d = b.items), b.style !== h && (f = b.style, i = !0), b.selector !==
            h && (k = b.selector), b.className !== h))j = b.className;
        a.select.selector(k);
        a.select.items(d);
        a.select.style(f);
        a.select.blurable(l);
        a.select.info(w);
        c._select.className = j;
        e.fn.dataTable.ext.order["select-checkbox"] = function (b, c) {
            return this.api().column(c, {order: "index"}).nodes().map(function (c) {
                return "row" === b._select.items ? e(c).parent().hasClass(b._select.className) : "cell" === b._select.items ? e(c).hasClass(b._select.className) : !1
            })
        };
        !i && e(a.table().node()).hasClass("selectable") && a.select.style("os")
    };
    e.each([{type: "row", prop: "aoData"}, {type: "column", prop: "aoColumns"}], function (a, c) {
        g.ext.selector[c.type].push(function (b, a, f) {
            var a = a.selected, e, g = [];
            if (!0 !== a && !1 !== a)return f;
            for (var k = 0, h = f.length; k < h; k++)e = b[c.prop][f[k]], (!0 === a && !0 === e._select_selected || !1 === a && !e._select_selected) && g.push(f[k]);
            return g
        })
    });
    g.ext.selector.cell.push(function (a, c, b) {
        var c = c.selected, d, f = [];
        if (c === h)return b;
        for (var e = 0, g = b.length; e < g; e++)d = a.aoData[b[e].row], (!0 === c && d._selected_cells && !0 === d._selected_cells[b[e].column] ||
        !1 === c && (!d._selected_cells || !d._selected_cells[b[e].column])) && f.push(b[e]);
        return f
    });
    var n = g.Api.register, o = g.Api.registerPlural;
    n("select()", function () {
        return this.iterator("table", function (a) {
            g.select.init(new g.Api(a))
        })
    });
    n("select.blurable()", function (a) {
        return a === h ? this.context[0]._select.blurable : this.iterator("table", function (c) {
            c._select.blurable = a
        })
    });
    n("select.info()", function (a) {
        return y === h ? this.context[0]._select.info : this.iterator("table", function (c) {
            c._select.info = a
        })
    });
    n("select.items()",
        function (a) {
            return a === h ? this.context[0]._select.items : this.iterator("table", function (c) {
                c._select.items = a;
                i(new g.Api(c), "selectItems", [a])
            })
        });
    n("select.style()", function (a) {
        return a === h ? this.context[0]._select.style : this.iterator("table", function (c) {
            c._select.style = a;
            if (!c._select_init) {
                var b = new g.Api(c);
                c.aoRowCreatedCallback.push({
                    fn: function (b, a, d) {
                        a = c.aoData[d];
                        a._select_selected && e(b).addClass(c._select.className);
                        b = 0;
                        for (d = c.aoColumns.length; b < d; b++)(c.aoColumns[b]._select_selected || a._selected_cells &&
                        a._selected_cells[b]) && e(a.anCells[b]).addClass(c._select.className)
                    }, sName: "select-deferRender"
                });
                b.on("preXhr.dt.dtSelect", function () {
                    var c = b.rows({selected: !0}).ids(!0).filter(function (b) {
                        return b !== h
                    }), a = b.cells({selected: !0}).eq(0).map(function (a) {
                        var c = b.row(a.row).id(!0);
                        return c ? {row: c, column: a.column} : h
                    }).filter(function (b) {
                        return b !== h
                    });
                    b.one("draw.dt.dtSelect", function () {
                        b.rows(c).select();
                        a.any() && a.each(function (a) {
                            b.cells(a.row, a.column).select()
                        })
                    })
                });
                b.on("draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt",
                    function () {
                        y(b)
                    });
                b.on("destroy.dtSelect", function () {
                    r(b);
                    b.off(".dtSelect")
                })
            }
            var d = new g.Api(c);
            r(d);
            "api" !== a && x(d);
            i(new g.Api(c), "selectStyle", [a])
        })
    });
    n("select.selector()", function (a) {
        return a === h ? this.context[0]._select.selector : this.iterator("table", function (c) {
            r(new g.Api(c));
            c._select.selector = a;
            "api" !== c._select.style && x(new g.Api(c))
        })
    });
    o("rows().select()", "row().select()", function (a) {
        var c = this;
        if (!1 === a)return this.deselect();
        this.iterator("row", function (b, a) {
            p(b);
            b.aoData[a]._select_selected = !0;
            e(b.aoData[a].nTr).addClass(b._select.className)
        });
        this.iterator("table", function (b, a) {
            i(c, "select", ["row", c[a]], !0)
        });
        return this
    });
    o("columns().select()", "column().select()", function (a) {
        var c = this;
        if (!1 === a)return this.deselect();
        this.iterator("column", function (b, a) {
            p(b);
            b.aoColumns[a]._select_selected = !0;
            var c = (new g.Api(b)).column(a);
            e(c.header()).addClass(b._select.className);
            e(c.footer()).addClass(b._select.className);
            c.nodes().to$().addClass(b._select.className)
        });
        this.iterator("table",
            function (b, a) {
                i(c, "select", ["column", c[a]], !0)
            });
        return this
    });
    o("cells().select()", "cell().select()", function (a) {
        var c = this;
        if (!1 === a)return this.deselect();
        this.iterator("cell", function (b, a, c) {
            p(b);
            a = b.aoData[a];
            a._selected_cells === h && (a._selected_cells = []);
            a._selected_cells[c] = !0;
            a.anCells && e(a.anCells[c]).addClass(b._select.className)
        });
        this.iterator("table", function (a, d) {
            i(c, "select", ["cell", c[d]], !0)
        });
        return this
    });
    o("rows().deselect()", "row().deselect()", function () {
        var a = this;
        this.iterator("row",
            function (a, b) {
                a.aoData[b]._select_selected = !1;
                e(a.aoData[b].nTr).removeClass(a._select.className)
            });
        this.iterator("table", function (c, b) {
            i(a, "deselect", ["row", a[b]], !0)
        });
        return this
    });
    o("columns().deselect()", "column().deselect()", function () {
        var a = this;
        this.iterator("column", function (a, b) {
            a.aoColumns[b]._select_selected = !1;
            var d = new g.Api(a), f = d.column(b);
            e(f.header()).removeClass(a._select.className);
            e(f.footer()).removeClass(a._select.className);
            d.cells(null, b).indexes().each(function (b) {
                var d =
                    a.aoData[b.row], f = d._selected_cells;
                d.anCells && (!f || !f[b.column]) && e(d.anCells[b.column]).removeClass(a._select.className)
            })
        });
        this.iterator("table", function (c, b) {
            i(a, "deselect", ["column", a[b]], !0)
        });
        return this
    });
    o("cells().deselect()", "cell().deselect()", function () {
        var a = this;
        this.iterator("cell", function (a, b, d) {
            b = a.aoData[b];
            b._selected_cells[d] = !1;
            b.anCells && !a.aoColumns[d]._select_selected && e(b.anCells[d]).removeClass(a._select.className)
        });
        this.iterator("table", function (c, b) {
            i(a, "deselect",
                ["cell", a[b]], !0)
        });
        return this
    });
    var u = 0;
    e.extend(g.ext.buttons, {
        selected: {
            text: q("selected", "Selected"),
            className: "buttons-selected",
            limitTo: ["rows", "columns", "cells"],
            init: function (a, c, b) {
                var d = this;
                b._eventNamespace = ".select" + u++;
                a.on(t(b), function () {
                    d.enable(-1 !== e.inArray("rows", b.limitTo) && a.rows({selected: !0}).any() || -1 !== e.inArray("columns", b.limitTo) && a.columns({selected: !0}).any() || -1 !== e.inArray("cells", b.limitTo) && a.cells({selected: !0}).any() ? !0 : !1)
                });
                this.disable()
            },
            destroy: function (a,
                               c, b) {
                a.off(b._eventNamespace)
            }
        },
        selectedSingle: {
            text: q("selectedSingle", "Selected single"),
            className: "buttons-selected-single",
            init: function (a, c, b) {
                var d = this;
                b._eventNamespace = ".select" + u++;
                a.on(t(b), function () {
                    var b = a.rows({selected: !0}).flatten().length + a.columns({selected: !0}).flatten().length + a.cells({selected: !0}).flatten().length;
                    d.enable(1 === b)
                });
                this.disable()
            },
            destroy: function (a, c, b) {
                a.off(b._eventNamespace)
            }
        },
        selectAll: {
            text: q("selectAll", "Select all"), className: "buttons-select-all", action: function () {
                this[this.select.items() +
                "s"]().select()
            }
        },
        selectNone: {
            text: q("selectNone", "Deselect all"), className: "buttons-select-none", action: function () {
                p(this.settings()[0], !0)
            }, init: function (a, c, b) {
                var d = this;
                b._eventNamespace = ".select" + u++;
                a.on(t(b), function () {
                    var b = a.rows({selected: !0}).flatten().length + a.columns({selected: !0}).flatten().length + a.cells({selected: !0}).flatten().length;
                    d.enable(0 < b)
                });
                this.disable()
            }, destroy: function (a, c, b) {
                a.off(b._eventNamespace)
            }
        }
    });
    e.each(["Row", "Column", "Cell"], function (a, c) {
        var b = c.toLowerCase();
        g.ext.buttons["select" + c + "s"] = {
            text: q("select" + c + "s", "Select " + b + "s"),
            className: "buttons-select-" + b + "s",
            action: function () {
                this.select.items(b)
            },
            init: function (a) {
                var c = this;
                a.on("selectItems.dt.DT", function (a, d, e) {
                    c.active(e === b)
                })
            }
        }
    });
    e(m).on("preInit.dt.dtSelect", function (a, c) {
        "dt" === a.namespace && g.select.init(new g.Api(c))
    });
    return g.select
});


